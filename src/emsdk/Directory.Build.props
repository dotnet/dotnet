<?xml version="1.0" encoding="utf-8"?>
<Project>
  <Import Project="Sdk.props" Sdk="Microsoft.DotNet.Arcade.Sdk" />

  <PropertyGroup>
    <!-- Emsdk doesn't support Arcade-driven target framework filtering. -->
    <NoTargetFrameworkFiltering>true</NoTargetFrameworkFiltering>
  </PropertyGroup>

  <PropertyGroup Condition="'$(DotNetFinalVersionKind)' == 'release'">
    <StableVersion>$(VersionPrefix)</StableVersion>
  </PropertyGroup>

  <PropertyGroup>
    <_hostArch>$([System.Runtime.InteropServices.RuntimeInformation]::ProcessArchitecture.ToString().ToLowerInvariant)</_hostArch>
    <BuildArchitecture>$(_hostArch)</BuildArchitecture>
  </PropertyGroup>

    <!-- Common properties -->
  <PropertyGroup>

    <__ProjectDir Condition="'$(__ProjectDir)'==''">$(MSBuildThisFileDirectory)</__ProjectDir>
    <ProjectDir>$(__ProjectDir)\</ProjectDir>
    <RootRepoDir>$(ProjectDir)</RootRepoDir>
    <ProjectDir Condition="'$(__ProjectDir)'==''">$(MSBuildThisFileDirectory)</ProjectDir>

    <BaseIntermediateOutputPath>$(RootRepoDir)artifacts\obj\$(PlatformConfigPathPart)\</BaseIntermediateOutputPath>

    <SourceDir>$(__SourceDir)\</SourceDir>
    <SourceDir Condition="'$(__SourceDir)'==''">$(ProjectDir)src\</SourceDir>

    <RootBinDir>$(__RootBinDir)\</RootBinDir>
    <RootBinDir Condition="'$(__RootBinDir)'==''">$(RootRepoDir)artifacts\</RootBinDir>

    <BinDir>$(__BinDir)\</BinDir>
    <BinDir Condition="'$(__BinDir)'==''">$(RootBinDir)bin\$(PlatformConfigPathPart)\</BinDir>
  </PropertyGroup>

  <PropertyGroup>
    <PackageHostOS Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">linux</PackageHostOS>
    <PackageHostOS Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">osx</PackageHostOS>
    <PackageHostOS Condition="'$(OS)' == 'Windows_NT'">win</PackageHostOS>
    <PackageTargetOS Condition="'$(AssetManifestOS)' != ''">$(AssetManifestOS)</PackageTargetOS>
    <PackageTargetOS Condition="'$(PackageTargetOS)' == ''">$(PackageHostOS)</PackageTargetOS>
  </PropertyGroup>

  <PropertyGroup>
    <!-- we're using major.minor.0 version here instead of VersionPrefix so we don't need to bump the versions in emsdk_manifest.json in servicing all the time -->
    <BinaryenDir>$(ProjectDir)\binaryen\$(MajorVersion).$(MinorVersion).0</BinaryenDir>
    <HostBinaryenDir Condition="'$(BuildArchitecture)' == '$(TargetArchitecture)'">$(BinaryenDir)</HostBinaryenDir>
    <HostBinaryenDir Condition="'$(BuildArchitecture)' != '$(TargetArchitecture)' or '$(PackageTargetOS)' != '$(PackageHostOS)'">$(BaseIntermediateOutputPath)\host\binaryen\$(BuildArchitecture)</HostBinaryenDir>
    <NodeDir>$(ProjectDir)\node\$(MajorVersion).$(MinorVersion).0</NodeDir>
    <HostNodeDir Condition="'$(BuildArchitecture)' == '$(TargetArchitecture)'">$(NodeDir)</HostNodeDir>
    <HostNodeDir Condition="'$(BuildArchitecture)' != '$(TargetArchitecture)' or '$(PackageTargetOS)' != '$(PackageHostOS)'">$(BaseIntermediateOutputPath)\host\node\$(BuildArchitecture)</HostNodeDir>
    <PythonDir>$(ProjectDir)\python\$(MajorVersion).$(MinorVersion).0</PythonDir>
    <HostPythonDir Condition="'$(BuildArchitecture)' == '$(TargetArchitecture)'">$(PythonDir)</HostPythonDir>
    <HostPythonDir Condition="'$(BuildArchitecture)' != '$(TargetArchitecture)' or '$(PackageTargetOS)' != '$(PackageHostOS)'">$(BaseIntermediateOutputPath)\host\python\$(BuildArchitecture)</HostPythonDir>
    <LLVMDir>$(ProjectDir)\llvm\$(MajorVersion).$(MinorVersion).0</LLVMDir>
    <HostLLVMDir Condition="'$(BuildArchitecture)' == '$(TargetArchitecture)'">$(LLVMDir)</HostLLVMDir>
    <HostLLVMDir Condition="'$(BuildArchitecture)' != '$(TargetArchitecture)' or '$(PackageTargetOS)' != '$(PackageHostOS)'">$(BaseIntermediateOutputPath)\host\llvm\$(BuildArchitecture)</HostLLVMDir>
    <EmscriptenDir>$(ProjectDir)\emscripten\$(MajorVersion).$(MinorVersion).0</EmscriptenDir>
  </PropertyGroup>
</Project>
