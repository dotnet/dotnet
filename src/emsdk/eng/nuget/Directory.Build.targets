<Project>
  <Target Name="GenerateUnixPermissionsFile" Condition="!$([MSBuild]::IsOSPlatform('windows'))">
    <PropertyGroup>
      <UnixFilePermissionsOutFile>$(ArtifactsObjDir)\$(MSBuildProjectName).UnixFilePermissions.xml</UnixFilePermissionsOutFile>

      <!-- don't pipe to another command, as we want this to fail if `find` fails -->
      <FindExecutableFilesCommand Condition="$([MSBuild]::IsOsPlatform('osx'))"  >find . -type f -perm +111 -exec sh -c "echo '{}' | sed 's,^\.\/,,'" \;</FindExecutableFilesCommand>
      <FindExecutableFilesCommand Condition="$([MSBuild]::IsOsPlatform('linux'))">find . -type f -perm /111 -printf '%P\n'</FindExecutableFilesCommand>
    </PropertyGroup>

    <Exec Command="$(FindExecutableFilesCommand)" WorkingDirectory="$(ArtifactsDirToPackage)" ConsoleToMsBuild="true" StandardOutputImportance="Low">
      <Output TaskParameter="ConsoleOutput" ItemName="_ExecFile" />
    </Exec>

    <ItemGroup>
      <Lines Include="&lt;FileList&gt;" />
      <Lines Include="  &lt;File Path=&quot;tools\%(_ExecFile.Identity)&quot; Permission=&quot;755&quot; /&gt;" />
      <Lines Include="&lt;/FileList&gt;" />
    </ItemGroup>
    <WriteLinesToFile Lines="@(Lines)" File="$(UnixFilePermissionsOutFile)" Overwrite="true" />

    <ItemGroup>
      <File Condition="!$([MSBuild]::IsOsPlatform('Windows'))" Include="$(UnixFilePermissionsOutFile)" TargetPath="data\UnixFilePermissions.xml" SkipPackageFileCheck="true" />
    </ItemGroup>
  </Target>

  <Target Name="SanityCheckUnixFilePermissionsFile" AfterTargets="Deploy" Condition="!$([MSBuild]::IsOSPlatform('windows'))">
    <!-- $(PackageOutputPath)$(Id).$(PackageVersion).nupkg -->
    <PropertyGroup>
      <_UnpackedNuGetPath>$(ArtifactsObjDir)unpacked.$(Id)\</_UnpackedNuGetPath>
      <_PermsFile>$(_UnpackedNuGetPath)data\UnixFilePermissions.xml</_PermsFile>
    </PropertyGroup>

    <RemoveDir Directories="$(_UnpackedNuGetPath)" />
    <Unzip SourceFiles="$(PackageOutputPath)$(Id).$(PackageVersion).nupkg" DestinationFolder="$(_UnpackedNuGetPath)" />

    <Error Text="Could not find $(_PermsFile)" Condition="!Exists($(_PermsFile))" />

    <XmlPeek XmlInputPath="$(_PermsFile)" Query="//FileList/File/@Path">
      <Output TaskParameter="Result" ItemName="_FilePath" />
    </XmlPeek>

    <Error Condition="@(_FilePath->Count()) == 0" Text="No entries found in $(_PermsFile)" />
    <Error Condition="!Exists('$(_UnpackedNuGetPath)%(_FilePath.Identity)')"
           Text="Could not find %(_FilePath.Identity) at $(_UnpackedNuGetPath)%(_FilePath.Identity) referenced in $(_PermsFile)" />

    <RemoveDir Directories="$(_UnpackedNuGetPath)" />
  </Target>

  <Import Project="$(RepoRoot)\Directory.Build.targets" />
</Project>
