trigger:
  batch: true
  branches:
    include:
    - main
    - release/*

pr: none

variables:
- template: /eng/common-variables.yml@self
- template: /eng/common/templates-official/variables/pool-providers.yml@self
- name: LinuxImage
  value: build.ubuntu.2204.amd64
- name: WindowsImage
  value: windows.vs2022.amd64
- name: MacImage
  value: macOS-13
- name: CheckNuGetSizesScript
  value: >-
    $nupkgs_large=(Get-ChildItem artifacts/packages/$(_BuildConfig)/Shipping -recurse -include "*.nupkg" | Select-Object Name,Length | Where-Object { $_.Length -gt 250*1MB });
    if ($nupkgs_large.Length -gt 0) { Write-Error "NuGet size exceeds 250MiB: $($nupkgs_large | Format-Table | Out-String)"; exit 1 }

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    sdl:
      tsa:
        enabled: true
      policheck:
        enabled: true
      binskim:
        scanOutputDirectoryOnly: true
      sourceAnalysisPool:
        name: $(DncEngInternalBuildPool)
        image: $(WindowsImage)
        os: windows
    stages:
    - stage: build
      displayName: Build
      jobs:
      - template: /eng/common/templates-official/jobs/jobs.yml@self
        parameters:
          enablePublishBuildArtifacts: true

          jobs:
          ############ macOS BUILD ############
          - job: Build_macOS_x64
            displayName: macOS_x64
            timeoutInMinutes: 120
            pool:
              name: Azure Pipelines
              image: $(MacImage)
              os: macOS
            steps:
            - bash: ./build.sh
                --ci
                --prepareMachine
                --configuration $(_BuildConfig)
                --pack
                --publish
                /p:TargetArchitecture=x64
                /p:TargetRid=osx-x64
                /p:AssetManifestOS=osx
                $(_InternalBuildArgs)
              displayName: Build and Publish
            - bash: |
                rm -rf binaryen node python llvm emscripten
              displayName: Remove temporary artifacts
            - powershell: $(CheckNuGetSizesScript)
              displayName: Check NuGet sizes

          - job: Build_macOS_arm64
            displayName: macOS_arm64
            timeoutInMinutes: 120
            pool:
              name: Azure Pipelines
              image: $(MacImage)
              os: macOS
            steps:
            - bash: ./build.sh
                --ci
                --prepareMachine
                --configuration $(_BuildConfig)
                --pack
                --publish
                /p:TargetArchitecture=arm64
                /p:TargetRid=osx-arm64
                /p:AssetManifestOS=osx
                $(_InternalBuildArgs)
              displayName: Build and Publish
            - bash: |
                rm -rf binaryen node python llvm emscripten
              displayName: Remove temporary artifacts
            - powershell: $(CheckNuGetSizesScript)
              displayName: Check NuGet sizes
          
          ############ Linux BUILD ############
          - job: Build_linux_x64
            displayName: Linux_x64
            timeoutInMinutes: 120
            pool:
              name: $(DncEngInternalBuildPool)
              image: $(LinuxImage)
              os: linux
            steps:
            - bash: ./build.sh
                --ci
                --prepareMachine
                --configuration $(_BuildConfig)
                --pack
                --publish
                /p:TargetArchitecture=x64
                /p:TargetRid=linux-x64
                /p:AssetManifestOS=linux
                $(_InternalBuildArgs)
              displayName: Build and Publish
            - bash: |
                rm -rf binaryen node python llvm emscripten
              displayName: Remove temporary artifacts
            - powershell: $(CheckNuGetSizesScript)
              displayName: Check NuGet sizes
          
          - job: Build_linux_arm64
            displayName: Linux_arm64
            timeoutInMinutes: 120
            pool:
              name: $(DncEngInternalBuildPool)
              image: $(LinuxImage)
              os: linux
            steps:
            - bash: ./build.sh
                --ci
                --prepareMachine
                --configuration $(_BuildConfig)
                --pack
                --publish
                /p:TargetArchitecture=arm64
                /p:TargetRid=linux-arm64
                /p:AssetManifestOS=linux
                $(_InternalBuildArgs)
              displayName: Build and Publish
            - bash: |
                rm -rf binaryen node python llvm emscripten
              displayName: Remove temporary artifacts
            - powershell: $(CheckNuGetSizesScript)
              displayName: Check NuGet sizes

          - job: Build_linux_musl_x64
            displayName: Linux_musl_x64
            timeoutInMinutes: 120
            pool:
              name: $(DncEngInternalBuildPool)
              image: $(LinuxImage)
              os: linux
            steps:
            - bash: ./build.sh
                --ci
                --prepareMachine
                --configuration $(_BuildConfig)
                --pack
                --publish
                /p:TargetArchitecture=x64
                /p:TargetRid=linux-musl-x64
                /p:AssetManifestOS=linux-musl
                $(_InternalBuildArgs)
              displayName: Build and Publish
            - bash: |
                rm -rf binaryen node python llvm emscripten
              displayName: Remove temporary artifacts
            - powershell: $(CheckNuGetSizesScript)
              displayName: Check NuGet sizes
          
          - job: Build_linux_musl_arm64
            displayName: Linux_musl_arm64
            timeoutInMinutes: 120
            pool:
              name: $(DncEngInternalBuildPool)
              image: $(LinuxImage)
              os: linux
            steps:
            - bash: ./build.sh
                --ci
                --prepareMachine
                --configuration $(_BuildConfig)
                --pack
                --publish
                /p:TargetArchitecture=arm64
                /p:TargetRid=linux-musl-arm64
                /p:AssetManifestOS=linux-musl
                $(_InternalBuildArgs)
              displayName: Build and Publish
            - bash: |
                rm -rf binaryen node python llvm emscripten
              displayName: Remove temporary artifacts
            - powershell: $(CheckNuGetSizesScript)
              displayName: Check NuGet sizes
  
          ############ Windows BUILD ############
          - job: Build_win_x64
            displayName: Windows_x64
            timeoutInMinutes: 240
            pool:
              name: $(DncEngInternalBuildPool)
              image: $(WindowsImage)
              os: windows
            steps:
            - script: build.cmd
                -ci
                -prepareMachine
                -configuration $(_BuildConfig)
                -pack
                -publish
                /p:TargetArchitecture=x64
                /p:TargetRid=win-x64
                /p:AssetManifestOS=win
                $(_InternalBuildArgs)
              displayName: Build and Publish
            - script: |
                rmdir /s /q binaryen node python llvm emscripten
              displayName: Remove temporary artifacts
            - powershell: $(CheckNuGetSizesScript)
              displayName: Check NuGet sizes

          - job: Build_win_arm64
            displayName: Windows_arm64
            timeoutInMinutes: 240
            pool:
              name: $(DncEngInternalBuildPool)
              image: $(WindowsImage)
              os: windows
            steps:
            - script: build.cmd
                -ci
                -prepareMachine
                -configuration $(_BuildConfig)
                -pack
                -publish
                /p:TargetArchitecture=arm64
                /p:TargetRid=win-arm64
                /p:AssetManifestOS=win
                $(_InternalBuildArgs)
              displayName: Build and Publish
            - script: |
                rmdir /s /q binaryen node python llvm emscripten
              displayName: Remove temporary artifacts
            - powershell: $(CheckNuGetSizesScript)
              displayName: Check NuGet sizes

    - stage: Publish
      displayName: Publish
      dependsOn: []
      jobs:
      - template: /eng/common/templates-official/jobs/jobs.yml@self
        parameters:
          isAssetlessBuild: true