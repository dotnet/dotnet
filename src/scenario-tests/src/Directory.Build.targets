<Project>

  <Import Project="Sdk.targets" Sdk="Microsoft.DotNet.Arcade.Sdk" />

  <!-- Override the test target to run the test harness as a separate executable against dotnet SDK used to run these tests. -->
  <Target Name="Test">
    <PropertyGroup>
      <TestRoot Condition="'$(TestRoot)' == ''">$([MSBuild]::NormalizeDirectory('$(ArtifactsObjDir)', 'generatedtests'))</TestRoot>
      <TestBinlogDir Condition="'$(TestBinlogDir)' == ''">$(ArtifactsTestResultsDir)</TestBinlogDir>

      <TestDotNetRoot Condition="'$(TestDotNetRoot)' == ''">$(DotNetRoot)</TestDotNetRoot>
      <TestDotNetTool Condition="'$(OS)' == 'Windows_NT'">$([MSBuild]::NormalizePath('$(TestDotNetRoot)', 'dotnet.exe'))</TestDotNetTool>
      <TestDotNetTool Condition="'$(OS)' != 'Windows_NT'">$([MSBuild]::NormalizePath('$(TestDotNetRoot)', 'dotnet'))</TestDotNetTool>

      <TestArgs>--dotnet-root "$(TestDotNetRoot.TrimEnd('\'))"</TestArgs>
      <TestArgs>$(TestArgs) --test-root "$(TestRoot.TrimEnd('\'))"</TestArgs>
      <TestArgs>$(TestArgs) --binlog-dir "$(TestBinlogDir.TrimEnd('\'))"</TestArgs>
      <TestArgs Condition="'$(TestSdkVersion)' != ''">$(TestArgs) --sdk-version $(TestSdkVersion)</TestArgs>
      <TestArgs>$(TestArgs) $(AdditionalTestArgs)</TestArgs>

      <!-- Allow executing the test host with a specific shared framework version (i.e. 10.0.0-ci).
           This is necessary as i.e. in the VMR, the live built shared framework has a `-dev` or `-ci`
           suffix which could be determined as "lower" than the toolset SDK's shared framework that the repo
           builds with. As an example `10.0.0-ci` and `10.0.0-dev` are considered lower than `10.0.0-preview.1`
           by the host (in accordance with semver2). -->
      <TestFxVersionCLI Condition="'$(TestFxVersion)' != ''">--fx-version $(TestFxVersion) </TestFxVersionCLI>
    </PropertyGroup>

    <ItemGroup>
      <TestEnvironmentVariable Include="RestoreConfigFile=$(TestRestoreConfigFile)" Condition="'$(TestRestoreConfigFile)' != ''" />
    </ItemGroup>

    <!-- Clean the test root to avoid dirty content from a previous run -->
    <RemoveDir Directories="$(TestRoot)" />

    <Exec Command='"$(TestDotNetTool)" exec $(TestFxVersionCLI)"$(TargetPath)" $(TestArgs)'
          EnvironmentVariables="@(TestEnvironmentVariable)" />
  </Target>

</Project>
