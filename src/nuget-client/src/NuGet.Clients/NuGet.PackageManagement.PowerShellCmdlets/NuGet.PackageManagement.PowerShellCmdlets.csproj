<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Shipping>true</Shipping>
    <IncludeInVSIX>true</IncludeInVSIX>
    <Description>Package Manager Console PowerShell host implementation and NuGet's PowerShell cmdlets for the Visual Studio client.</Description>
    <TargetFramework>$(NETFXTargetFramework)</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\NuGet.Console\NuGet.Console.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.VisualStudio.Sdk" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Resources.Designer.cs">
      <AutoGen>true</AutoGen>
      <DesignTime>true</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup Label="NuGet Shared">
    <Compile Include="$(SharedDirectory)\DeconstructionExtensions.cs" />
    <Compile Include="$(SharedDirectory)\TaskResult.cs" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      <SubType>Designer</SubType>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <None Include="Scripts\about_NuGet.Cmdlets.help.txt">
      <CopyToOutputDirectory Condition="$(IsVsixBuild) != 'true'">PreserveNewest</CopyToOutputDirectory>
    </None>
    <!-- We copy this xml file to output directory so the CI can pick it for localization from the artifacts directory.
    However, we condition it to only be copied when building the project itself and not the vsix to prevent the VSIX
    from including this file -->
    <None Include="Scripts\NuGet.PackageManagement.PowerShellCmdlets.dll-Help.xml">
      <CopyToOutputDirectory Condition="$(IsVsixBuild) != 'true'">PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="DynamicProxyGenAssembly2" />
    <InternalsVisibleTo Include="NuGetConsole.Host.PowerShell.Test" />
  </ItemGroup>

  <Target Name="PowerShellCmdletsAfterBuild" AfterTargets="AfterBuild">
    <ItemGroup>
      <PowerShellScripts Include="$(MSBuildProjectDirectory)\Scripts\*.ps*" Exclude="$(MSBuildProjectDirectory)\Scripts\NuGet.psd1" />
    </ItemGroup>
    <Copy SourceFiles="@(PowerShellScripts)" DestinationFolder="$(ArtifactsDirectory)Scripts" />
    <Exec Command="powershell.exe -ExecutionPolicy Bypass &quot;$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'NuGet.sln'))\build\UpdateNuGetModuleManifest.ps1&quot; -NuGetPackageManagementPowerShellCmdletsFilePath &quot;$(OutDir)NuGet.PackageManagement.PowerShellCmdlets.dll&quot; -ManifestModuleSourceFilePath &quot;$(MSBuildProjectDirectory)\Scripts\NuGet.psd1&quot; -ManifestModuleDestinationFilePath &quot;$(ArtifactsDirectory)Scripts\NuGet.psd1&quot;" />
  </Target>

</Project>
