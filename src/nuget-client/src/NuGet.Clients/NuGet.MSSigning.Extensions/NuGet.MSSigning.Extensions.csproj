<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="ilmerge.props" />

  <PropertyGroup>
    <TargetFramework>$(NETFXTargetFramework)</TargetFramework>
    <Description>NuGet Command Line Interface for repository signing.</Description>
    <Shipping>true</Shipping>
    <PackProject>false</PackProject>
    <IncludeInVsix>false</IncludeInVsix>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <GetSymbolsToIndexDependsOn>GetSymbolsToIndexCustom</GetSymbolsToIndexDependsOn>
    <SignWithMicrosoftKey>true</SignWithMicrosoftKey>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="ILRepack" PrivateAssets="All" />
    <None Include="$(BuildCommonDirectory)NOTICES.txt" Pack="true" PackagePath="\" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\NuGet.CommandLine\NuGet.CommandLine.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="NuGetMSSignCommand.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>NuGetMSSignCommand.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="NuGetMSSignCommand.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>NuGetMSSignCommand.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <Target Name="DetermineILMergeNuGetMssignExeInputsOutputs">
    <PropertyGroup>
      <PathToBuiltNuGetExe>$(OutputPath)NuGet.exe</PathToBuiltNuGetExe>
      <PathToMergedNuGetExe>$(ArtifactsDirectory)$(VsixOutputDirName)\NuGet.Mssign.exe</PathToMergedNuGetExe>
    </PropertyGroup>
    <ItemGroup>
      <BuildArtifacts Include="$(OutputPath)\*.dll" Exclude="@(MergeExclude);$(OutputPath)\NuGet.Core.dll" />
      <BuildArtifacts Include="$(OutputPath)\NuGet.Core.dll" />
    </ItemGroup>
    <Message Text="$(MSBuildProjectName) -&gt; $(PathToMergedNuGetExe)" Importance="High" />
  </Target>

  <Target Name="ILMergeNuGetMssignExe"
          AfterTargets="Build"
          DependsOnTargets="DetermineILMergeNuGetMssignExeInputsOutputs"
          Inputs="$(PathToBuiltNuGetExe);@(BuildArtifacts)"
          Outputs="$(PathToMergedNuGetExe)"
          Condition="'$(BuildingInsideVisualStudio)' != 'true'">
    <Error Text="Build dependencies are inconsistent with mergeinclude specified in ilmerge.props" Condition="'@(BuildArtifacts-&gt;Count())' != '@(MergeInclude-&gt;Count())'" />
    <PropertyGroup>
      <IlmergeCommand>$(ILRepack) $(PathToBuiltNuGetExe) /lib:$(OutputPath) @(BuildArtifacts->'%(fullpath)', ' ') /out:$(PathToMergedNuGetExe) @(MergeAllowDup -> '/allowdup:%(Identity)', ' ') /log:$(OutputPath)IlMergeLog.txt /allowduplicateresources</IlmergeCommand>
      <IlmergeCommand Condition="'$(SkipSigning)' != 'true' And Exists($(AssemblyOriginatorKeyFile))">$(IlmergeCommand) /delaysign /keyfile:$(AssemblyOriginatorKeyFile)</IlmergeCommand>
    </PropertyGroup>
    <Error Condition="'$(ILRepack)' == ''" Text="ILRepack not found" />
    <MakeDir Directories="$([System.IO.Path]::GetDirectoryName($(PathToMergedNuGetExe)))" />
    <Exec Command="$(IlmergeCommand)" ContinueOnError="false" />
  </Target>

  <Target Name="GetSymbolsToIndexCustom" Returns="@(SymbolsToIndex)">
    <ItemGroup>
      <SymbolsToIndex Include="$(ArtifactsDirectory)$(VsixOutputDirName)\NuGet.Mssign.exe" />
      <SymbolsToIndex Include="$(ArtifactsDirectory)$(VsixOutputDirName)\NuGet.Mssign.pdb" />
    </ItemGroup>
  </Target>
</Project>
