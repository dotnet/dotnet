
//  Microsoft (R) .NET IL Disassembler.  Version 5.0.0


// ----- DOS Header:
// Magic:                      0x5a4d
// Bytes on last page:         0x0090
// Pages in file:              0x0003
// Relocations:                0x0000
// Size of header (paragraphs):0x0004
// Min extra paragraphs:       0x0000
// Max extra paragraphs:       0xffff
// Initial (relative) SS:      0x0000
// Initial SP:                 0x00b8
// Checksum:                   0x0000
// Initial IP:                 0x0000
// Initial (relative) CS:      0x0000
// File addr. of reloc table:  0x0040
// Overlay number:             0x0000
// OEM identifier:             0x0000
// OEM info:                   0x0000
// File addr. of COFF header:  0x0080
// ----- COFF/PE Headers:
// Signature:                  0x00004550
// ----- COFF Header:
// Machine:                    0x014c
// Number of sections:         0x0003
// Time-date stamp:            0x5a2ec705
// Ptr to symbol table:        0x00000000
// Number of symbols:          0x00000000
// Size of optional header:    0x00e0
// Characteristics:            0x2022
// ----- PE Optional Header (32 bit):
// Magic:                          0x010b
// Major linker version:           0x30
// Minor linker version:           0x00
// Size of code:                   0x00006800
// Size of init.data:              0x00000e00
// Size of uninit.data:            0x00000000
// Addr. of entry point:           0x00008742
// Base of code:                   0x00002000
// Base of data:                   0x0000a000
// Image base:                     0x10000000
// Section alignment:              0x00002000
// File alignment:                 0x00000200
// Major OS version:               0x0004
// Minor OS version:               0x0000
// Major image version:            0x0000
// Minor image version:            0x0000
// Major subsystem version:        0x0004
// Minor subsystem version:        0x0000
// Size of image:                  0x0000e000
// Size of headers:                0x00000200
// Checksum:                       0x0000c288
// Subsystem:                      0x0003
// DLL characteristics:            0x8540
// Size of stack reserve:          0x00100000
// Size of stack commit:           0x00001000
// Size of heap reserve:           0x00100000
// Size of heap commit:            0x00001000
// Loader flags:                   0x00000000
// Directories:                    0x00000010
// 0x00000000 [0x00000000] address [size] of Export Directory:          
// 0x000086ed [0x0000004f] address [size] of Import Directory:          
// 0x0000a000 [0x00000a38] address [size] of Resource Directory:        
// 0x00000000 [0x00000000] address [size] of Exception Directory:       
// 0x00007800 [0x00003fa8] address [size] of Security Directory:        
// 0x0000c000 [0x0000000c] address [size] of Base Relocation Table:     
// 0x00008624 [0x0000001c] address [size] of Debug Directory:           
// 0x00000000 [0x00000000] address [size] of Architecture Specific:     
// 0x00000000 [0x00000000] address [size] of Global Pointer:            
// 0x00000000 [0x00000000] address [size] of TLS Directory:             
// 0x00000000 [0x00000000] address [size] of Load Config Directory:     
// 0x00000000 [0x00000000] address [size] of Bound Import Directory:    
// 0x00002000 [0x00000008] address [size] of Import Address Table:      
// 0x00000000 [0x00000000] address [size] of Delay Load IAT:            
// 0x00002008 [0x00000048] address [size] of CLR Header:                


// Image sections:
//              .text
//              0x00006748 Virtual Size
//              0x00002000 Virtual Address
//              0x00006800 Size of Raw Data
//              0x00000200 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x60000020 Characteristics
//                         CNT_CODE
//                         MEM_EXECUTE
//                         MEM_READ

//              .rsrc
//              0x00000a38 Virtual Size
//              0x0000a000 Virtual Address
//              0x00000c00 Size of Raw Data
//              0x00006a00 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x40000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_READ

//              .reloc
//              0x0000000c Virtual Size
//              0x0000c000 Virtual Address
//              0x00000200 Size of Raw Data
//              0x00007600 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x42000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_DISCARDABLE
//                         MEM_READ

// Base Relocation Table
//              0x00008000 Page RVA
//              0x0000000c Block Size
//              0x00000002 Number of Entries
//              Entry 1: Type 0x3 Offset 0x00000744
//              Entry 2: Type 0x0 Offset 0x00000000

// Import Address Table
//     DLL : mscoree.dll
//              0x00002000 Import Address Table
//              0x0000872f Import Name Table
//              0          Time Date Stamp
//              0          Index of First Forwarder Reference
//
//              0x0000  _CorDllMain

// Delay Load Import Address Table
// No data.

// Entry point code:
//FF 25 00 20 00 10 


// ----- CLR Header:
// Header size:                        0x00000048
// Major runtime version:              0x0002
// Minor runtime version:              0x0005
// 0x00002750 [0x000038d4] address [size] of Metadata Directory:        
// Flags:                              0x00000009
// Entry point token:                  0x00000000
// 0x00006024 [0x00002580] address [size] of Resources Directory:       
// 0x000085a4 [0x00000080] address [size] of Strong Name Signature:     
// 0x00000000 [0x00000000] address [size] of CodeManager Table:         
// 0x00000000 [0x00000000] address [size] of VTableFixups Directory:    
// 0x00000000 [0x00000000] address [size] of Export Address Table:      
// 0x00000000 [0x00000000] address [size] of Precompile Header:         

// Metadata Header
//    Storage Signature:
//              0x424a5342 Signature
//                  0x0001 Major Version
//                  0x0001 Minor Version
//              0x00000000 Extra Data Offset
//              0x0000000c Version String Length
//              'v4.0.30319' Version String
//    Storage Header:
//                    0x00 Flags
//                  0x0005 Number of Streams
//    Stream 1:
//              0x0000006c Offset
//              0x00000f64 Size
//              '#~' Name
//    Stream 2:
//              0x00000fd0 Offset
//              0x000013d4 Size
//              '#Strings' Name
//    Stream 3:
//              0x000023a4 Offset
//              0x000010cc Size
//              '#US' Name
//    Stream 4:
//              0x00003470 Offset
//              0x00000010 Size
//              '#GUID' Name
//    Stream 5:
//              0x00003480 Offset
//              0x00000454 Size
//              '#Blob' Name

//    Metadata Stream Header:
//              0x00000000 Reserved
//                    0x02 Major
//                    0x00 Minor
//                    0x00 Heaps
//                    0x01 Rid
//      0x0000098909a25f57 MaskValid
//      0x000016003301fa00 Sorted

// Code Manager Table:
//  default


// Export Address Table Jumps:
// No data.

// File size            : 47016
// PE header size       : 512 (496 used)    ( 1.09%)
// PE additional info   : 19111             (40.65%)
// Num.of PE sections   : 3
// CLR header size     : 72                 ( 0.15%)
// CLR meta-data size  : 14548              (30.94%)
// CLR additional info : 9728               (20.69%)
// CLR method headers  : 151                ( 0.32%)
// Managed code         : 1633              ( 3.47%)
// Data                 : 3584              ( 7.62%)
// Unaccounted          : -2323             (-4.94%)

// Num.of PE sections   : 3
//   .text    - 26624
//   .rsrc    - 3072
//   .reloc   - 512

// CLR meta-data size  : 14548
//   Module        -    1 (10 bytes)
//   TypeDef       -    4 (56 bytes)      0 interfaces, 0 explicit layout
//   TypeRef       -   50 (300 bytes)
//   MethodDef     -   80 (1120 bytes)    0 abstract, 0 native, 80 bodies
//   FieldDef      -    7 (42 bytes)      0 constant
//   MemberRef     -   63 (378 bytes)
//   ParamDef      -   25 (150 bytes)
//   Constant      -    2 (12 bytes)
//   CustomAttribute-   18 (108 bytes)
//   StandAloneSig -    2 (4 bytes)
//   InterfaceImpl -    1 (4 bytes)
//   PropertyMap   -    2 (8 bytes)
//   Property      -   65 (390 bytes)
//   MethodSemantic-   65 (390 bytes)
//   Security      -    1 (6 bytes)
//   TypeSpec      -    2 (4 bytes)
//   Assembly      -    1 (22 bytes)
//   AssemblyRef   -    2 (40 bytes)
//   ExportedType  -   55 (770 bytes)
//   ManifestResource-    1 (12 bytes)
//   MethodSpec    -    1 (4 bytes)
//   Strings       -  5076 bytes
//   Blobs         -  1108 bytes
//   UserStrings   -  4300 bytes
//   Guids         -    16 bytes
//   Uncategorized -   218 bytes

// CLR additional info : 9728
//   Resources         - 9600

// CLR method headers : 151
//   Num.of method bodies  - 80
//   Num.of fat headers    - 5
//   Num.of tiny headers   - 75
//   Num.of fat sections   - 0
//   Num.of small sections - 1

// Managed code : 1633
//   Ave method size - 20
// Classes defined in this module:
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Class SR                             (abstract) (auto) (ansi) (sealed) 
// Class SR                             (abstract) (auto) (ansi) (sealed) 
// Class IncrementalHash                (public) (auto) (ansi) (sealed) 
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


// Metadata version: v4.0.30319
.assembly extern /*23000001*/ mscorlib
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 4:0:0:0
}
.assembly extern /*23000002*/ System.Core
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 4:0:0:0
}
.assembly /*20000001*/ System.Security.Cryptography.Algorithms
{
  .custom instance void [mscorlib/*23000001*/]System.Reflection.AssemblyMetadataAttribute::.ctor(string,
                                                                                        string) = ( 01 00 06 73 6F 75 72 63 65 1F 73 6F 75 72 63 65   // ...source.source
                                                                                                    2D 62 75 69 6C 64 2D 72 65 66 65 72 65 6E 63 65   // -build-reference
                                                                                                    2D 70 61 63 6B 61 67 65 73 00 00 )                // -packages..
  .custom /*0C000002:0A00002E*/ instance void [mscorlib/*23000001*/]System.Runtime.CompilerServices.CompilationRelaxationsAttribute/*0100001F*/::.ctor(int32) /* 0A00002E */ = ( 01 00 08 00 00 00 00 00 ) 
  .custom /*0C000003:0A00002F*/ instance void [mscorlib/*23000001*/]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute/*01000020*/::.ctor() /* 0A00002F */ = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx
                                                                                                                                                                          63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.

  // --- The following custom attribute is added automatically, do not uncomment -------
  //  .custom /*0C000004:0A000030*/ instance void [mscorlib/*23000001*/]System.Diagnostics.DebuggableAttribute/*01000021*/::.ctor(valuetype [mscorlib/*23000001*/]System.Diagnostics.DebuggableAttribute/*01000021*//DebuggingModes/*01000022*/) /* 0A000030 */ = ( 01 00 02 00 00 00 00 00 ) 

  .custom /*0C000005:0A000031*/ instance void [mscorlib/*23000001*/]System.Resources.NeutralResourcesLanguageAttribute/*01000023*/::.ctor(string) /* 0A000031 */ = ( 01 00 05 65 6E 2D 55 53 00 00 )                   // ...en-US..
  .custom /*0C000006:0A000032*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyTitleAttribute/*01000024*/::.ctor(string) /* 0A000032 */ = ( 01 00 27 53 79 73 74 65 6D 2E 53 65 63 75 72 69   // ..'System.Securi
                                                                                                                                                           74 79 2E 43 72 79 70 74 6F 67 72 61 70 68 79 2E   // ty.Cryptography.
                                                                                                                                                           41 6C 67 6F 72 69 74 68 6D 73 00 00 )             // Algorithms..
  .custom /*0C000007:0A000033*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyDescriptionAttribute/*01000025*/::.ctor(string) /* 0A000033 */ = ( 01 00 27 53 79 73 74 65 6D 2E 53 65 63 75 72 69   // ..'System.Securi
                                                                                                                                                                 74 79 2E 43 72 79 70 74 6F 67 72 61 70 68 79 2E   // ty.Cryptography.
                                                                                                                                                                 41 6C 67 6F 72 69 74 68 6D 73 00 00 )             // Algorithms..
  .custom /*0C000008:0A000034*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyDefaultAliasAttribute/*01000026*/::.ctor(string) /* 0A000034 */ = ( 01 00 27 53 79 73 74 65 6D 2E 53 65 63 75 72 69   // ..'System.Securi
                                                                                                                                                                  74 79 2E 43 72 79 70 74 6F 67 72 61 70 68 79 2E   // ty.Cryptography.
                                                                                                                                                                  41 6C 67 6F 72 69 74 68 6D 73 00 00 )             // Algorithms..
  .custom /*0C000009:0A000035*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyCompanyAttribute/*01000027*/::.ctor(string) /* 0A000035 */ = ( 01 00 15 4D 69 63 72 6F 73 6F 66 74 20 43 6F 72   // ...Microsoft Cor
                                                                                                                                                             70 6F 72 61 74 69 6F 6E 00 00 )                   // poration..
  .custom /*0C00000A:0A000036*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyProductAttribute/*01000028*/::.ctor(string) /* 0A000036 */ = ( 01 00 1A 4D 69 63 72 6F 73 6F 66 74 C2 AE 20 2E   // ...Microsoft.. .
                                                                                                                                                             4E 45 54 20 46 72 61 6D 65 77 6F 72 6B 00 00 )    // NET Framework..
  .custom /*0C00000B:0A000037*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyCopyrightAttribute/*01000029*/::.ctor(string) /* 0A000037 */ = ( 01 00 2F C2 A9 20 4D 69 63 72 6F 73 6F 66 74 20   // ../.. Microsoft 
                                                                                                                                                               43 6F 72 70 6F 72 61 74 69 6F 6E 2E 20 20 41 6C   // Corporation.  Al
                                                                                                                                                               6C 20 72 69 67 68 74 73 20 72 65 73 65 72 76 65   // l rights reserve
                                                                                                                                                               64 2E 00 00 )                                     // d...
  .custom /*0C00000C:0A000038*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyFileVersionAttribute/*0100002A*/::.ctor(string) /* 0A000038 */ = ( 01 00 0C 34 2E 36 2E 32 36 30 31 31 2E 30 31 00   // ...4.6.26011.01.
                                                                                                                                                                 00 ) 
  .custom /*0C00000D:0A000039*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyInformationalVersionAttribute/*0100002B*/::.ctor(string) /* 0A000039 */ = ( 01 00 2C 34 2E 36 2E 32 36 30 31 31 2E 30 31 20   // ..,4.6.26011.01 
                                                                                                                                                                          62 75 69 6C 74 20 62 79 3A 20 64 6C 61 62 2D 44   // built by: dlab-D
                                                                                                                                                                          44 56 53 4F 57 49 4E 41 47 45 30 32 36 2E 20 00   // DVSOWINAGE026. .
                                                                                                                                                                          00 ) 
  .custom /*0C00000E:0A00003A*/ instance void [mscorlib/*23000001*/]System.CLSCompliantAttribute/*0100002C*/::.ctor(bool) /* 0A00003A */ = ( 01 00 01 00 00 ) 
  .custom /*0C00000F:0A00003B*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyMetadataAttribute/*0100002D*/::.ctor(string,
                                                                                                                                   string) /* 0A00003B */ = ( 01 00 15 2E 4E 45 54 46 72 61 6D 65 77 6F 72 6B   // ....NETFramework
                                                                                                                                                              41 73 73 65 6D 62 6C 79 00 00 00 )                // Assembly...
  .custom /*0C000010:0A00003B*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyMetadataAttribute/*0100002D*/::.ctor(string,
                                                                                                                                   string) /* 0A00003B */ = ( 01 00 0B 53 65 72 76 69 63 65 61 62 6C 65 04 54   // ...Serviceable.T
                                                                                                                                                              72 75 65 00 00 )                                  // rue..
  .custom /*0C000011:0A00003B*/ instance void [mscorlib/*23000001*/]System.Reflection.AssemblyMetadataAttribute/*0100002D*/::.ctor(string,
                                                                                                                                   string) /* 0A00003B */ = ( 01 00 0B 50 72 65 66 65 72 49 6E 62 6F 78 04 54   // ...PreferInbox.T
                                                                                                                                                              72 75 65 00 00 )                                  // rue..
  .permissionset reqmin
             = {[mscorlib/*23000001*/]System.Security.Permissions.SecurityPermissionAttribute/*01000001*/ = {property bool 'SkipVerification' = bool(true)}}
  .publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00   // .$..............
                00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00   // .$..RSA1........
                07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D   // ...W............
                E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E   // ...j.....vl.L...
                B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90   // .;.........6.!..
                0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F   // .r<......w....wO
                29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1   // ).2.......!.....
                64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D   // d\L.....(]b,.e,.
                FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D   // ..=t]o-..~^....=
                26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 ) // &...Ce. m..4MZ..
  .hash algorithm 0x00008004
  .ver 4:3:0:0
}
.class extern /*27000001*/ forwarder System.Security.Cryptography.Aes
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000002*/ forwarder System.Security.Cryptography.AesManaged
{
  .assembly extern System.Core /*23000002*/ 
}
.class extern /*27000003*/ forwarder System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000004*/ forwarder System.Security.Cryptography.AsymmetricKeyExchangeFormatter
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000005*/ forwarder System.Security.Cryptography.AsymmetricSignatureDeformatter
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000006*/ forwarder System.Security.Cryptography.AsymmetricSignatureFormatter
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000007*/ forwarder System.Security.Cryptography.CryptoConfig
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000008*/ forwarder System.Security.Cryptography.DeriveBytes
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000009*/ forwarder System.Security.Cryptography.DES
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*2700000A*/ forwarder System.Security.Cryptography.DSA
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*2700000B*/ forwarder System.Security.Cryptography.DSAParameters
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*2700000C*/ forwarder System.Security.Cryptography.DSASignatureDeformatter
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*2700000D*/ forwarder System.Security.Cryptography.DSASignatureFormatter
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*2700000E*/ forwarder System.Security.Cryptography.ECCurve
{
  .assembly extern System.Core /*23000002*/ 
}
.class extern /*2700000F*/ ECCurveType
{
  .class extern System.Security.Cryptography.ECCurve /*2700000E*/ 
}
.class extern /*27000010*/ NamedCurves
{
  .class extern System.Security.Cryptography.ECCurve /*2700000E*/ 
}
.class extern /*27000011*/ forwarder System.Security.Cryptography.ECDiffieHellmanPublicKey
{
  .assembly extern System.Core /*23000002*/ 
}
.class extern /*27000012*/ forwarder System.Security.Cryptography.ECDsa
{
  .assembly extern System.Core /*23000002*/ 
}
.class extern /*27000013*/ forwarder System.Security.Cryptography.ECParameters
{
  .assembly extern System.Core /*23000002*/ 
}
.class extern /*27000014*/ forwarder System.Security.Cryptography.ECPoint
{
  .assembly extern System.Core /*23000002*/ 
}
.class extern /*27000015*/ forwarder System.Security.Cryptography.HMACMD5
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000016*/ forwarder System.Security.Cryptography.HMACSHA1
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000017*/ forwarder System.Security.Cryptography.HMACSHA256
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000018*/ forwarder System.Security.Cryptography.HMACSHA384
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000019*/ forwarder System.Security.Cryptography.HMACSHA512
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*2700001A*/ forwarder System.Security.Cryptography.MaskGenerationMethod
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*2700001B*/ forwarder System.Security.Cryptography.MD5
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*2700001C*/ forwarder System.Security.Cryptography.PKCS1MaskGenerationMethod
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*2700001D*/ forwarder System.Security.Cryptography.RandomNumberGenerator
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*2700001E*/ forwarder System.Security.Cryptography.RC2
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*2700001F*/ forwarder System.Security.Cryptography.Rfc2898DeriveBytes
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000020*/ forwarder System.Security.Cryptography.Rijndael
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000021*/ forwarder System.Security.Cryptography.RijndaelManaged
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000022*/ forwarder System.Security.Cryptography.RSA
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000023*/ forwarder System.Security.Cryptography.RSAEncryptionPadding
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000024*/ forwarder System.Security.Cryptography.RSAEncryptionPaddingMode
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000025*/ forwarder System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000026*/ forwarder System.Security.Cryptography.RSAOAEPKeyExchangeFormatter
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000027*/ forwarder System.Security.Cryptography.RSAParameters
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000028*/ forwarder System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000029*/ forwarder System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*2700002A*/ forwarder System.Security.Cryptography.RSAPKCS1SignatureDeformatter
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*2700002B*/ forwarder System.Security.Cryptography.RSAPKCS1SignatureFormatter
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*2700002C*/ forwarder System.Security.Cryptography.RSASignaturePadding
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*2700002D*/ forwarder System.Security.Cryptography.RSASignaturePaddingMode
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*2700002E*/ forwarder System.Security.Cryptography.SHA1
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*2700002F*/ forwarder System.Security.Cryptography.SHA1Managed
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000030*/ forwarder System.Security.Cryptography.SHA256
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000031*/ forwarder System.Security.Cryptography.SHA256Managed
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000032*/ forwarder System.Security.Cryptography.SHA384
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000033*/ forwarder System.Security.Cryptography.SHA384Managed
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000034*/ forwarder System.Security.Cryptography.SHA512
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000035*/ forwarder System.Security.Cryptography.SHA512Managed
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000036*/ forwarder System.Security.Cryptography.SignatureDescription
{
  .assembly extern mscorlib /*23000001*/ 
}
.class extern /*27000037*/ forwarder System.Security.Cryptography.TripleDES
{
  .assembly extern mscorlib /*23000001*/ 
}
.module System.Security.Cryptography.Algorithms.dll
// MVID: {457e0373-46ca-4f3e-b880-0b33e786cbce}
.custom /*0C000001:0A00003F*/ instance void [mscorlib/*23000001*/]System.Security.UnverifiableCodeAttribute/*01000032*/::.ctor() /* 0A00003F */ = ( 01 00 00 00 ) 
.imagebase 0x10000000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00000009    //  ILONLY
// Image base: 0x00007F6C4F51E000


// =============== CLASS MEMBERS DECLARATION ===================

.class /*02000002*/ private abstract auto ansi sealed beforefieldinit FxResources.System.Security.Cryptography.Algorithms.SR
       extends [mscorlib/*23000001*/]System.Object/*01000003*/
{
} // end of class FxResources.System.Security.Cryptography.Algorithms.SR

.class /*02000003*/ private abstract auto ansi sealed beforefieldinit System.SR
       extends [mscorlib/*23000001*/]System.Object/*01000003*/
{
  .field /*04000001*/ private static class [mscorlib/*23000001*/]System.Resources.ResourceManager/*01000004*/ s_resourceManager
  .field /*04000002*/ private static literal string s_resourcesName = "FxResources.System.Security.Cryptography.Algorithm"
  + "s.SR"
  .method /*06000001*/ private hidebysig specialname static 
          class [mscorlib/*23000001*/]System.Resources.ResourceManager/*01000004*/ 
          get_ResourceManager() cil managed
  // SIG: 00 00 12 11
  {
    // Method begins at RVA 0x2050
    // Code size       26 (0x1a)
    .maxstack  8
    IL_0000:  /* 7E   | (04)000001       */ ldsfld     class [mscorlib/*23000001*/]System.Resources.ResourceManager/*01000004*/ System.SR/*02000003*/::s_resourceManager /* 04000001 */
    IL_0005:  /* 25   |                  */ dup
    IL_0006:  /* 2D   | 11               */ brtrue.s   IL_0019

    IL_0008:  /* 26   |                  */ pop
    IL_0009:  /* 28   | (06)000046       */ call       class [mscorlib/*23000001*/]System.Type/*01000005*/ System.SR/*02000003*/::get_ResourceType() /* 06000046 */
    IL_000e:  /* 73   | (0A)000002       */ newobj     instance void [mscorlib/*23000001*/]System.Resources.ResourceManager/*01000004*/::.ctor(class [mscorlib/*23000001*/]System.Type/*01000005*/) /* 0A000002 */
    IL_0013:  /* 25   |                  */ dup
    IL_0014:  /* 80   | (04)000001       */ stsfld     class [mscorlib/*23000001*/]System.Resources.ResourceManager/*01000004*/ System.SR/*02000003*/::s_resourceManager /* 04000001 */
    IL_0019:  /* 2A   |                  */ ret
  } // end of method SR::get_ResourceManager

  .method /*06000002*/ private hidebysig static 
          bool  UsingResourceKeys() cil managed noinlining
  // SIG: 00 00 02
  {
    // Method begins at RVA 0x206b
    // Code size       2 (0x2)
    .maxstack  8
    IL_0000:  /* 16   |                  */ ldc.i4.0
    IL_0001:  /* 2A   |                  */ ret
  } // end of method SR::UsingResourceKeys

  .method /*06000003*/ assembly hidebysig static 
          string  GetResourceString(string resourceKey,
                                    string defaultString) cil managed
  // SIG: 00 02 0E 0E 0E
  {
    // Method begins at RVA 0x2070
    // Code size       36 (0x24)
    .maxstack  3
    .locals /*11000001*/ init (string V_0)
    IL_0000:  /* 14   |                  */ ldnull
    IL_0001:  /* 0A   |                  */ stloc.0
    .try
    {
      IL_0002:  /* 28   | (06)000001       */ call       class [mscorlib/*23000001*/]System.Resources.ResourceManager/*01000004*/ System.SR/*02000003*/::get_ResourceManager() /* 06000001 */
      IL_0007:  /* 02   |                  */ ldarg.0
      IL_0008:  /* 6F   | (0A)000003       */ callvirt   instance string [mscorlib/*23000001*/]System.Resources.ResourceManager/*01000004*/::GetString(string) /* 0A000003 */
      IL_000d:  /* 0A   |                  */ stloc.0
      IL_000e:  /* DE   | 03               */ leave.s    IL_0013

    }  // end .try
    catch [mscorlib/*23000001*/]System.Resources.MissingManifestResourceException/*01000008*/ 
    {
      IL_0010:  /* 26   |                  */ pop
      IL_0011:  /* DE   | 00               */ leave.s    IL_0013

    }  // end handler
    // HEX: 00 00 02 00 0E 10 00 03 08 00 00 01
    IL_0013:  /* 03   |                  */ ldarg.1
    IL_0014:  /* 2C   | 0C               */ brfalse.s  IL_0022

    IL_0016:  /* 02   |                  */ ldarg.0
    IL_0017:  /* 06   |                  */ ldloc.0
    IL_0018:  /* 1A   |                  */ ldc.i4.4
    IL_0019:  /* 6F   | (0A)000004       */ callvirt   instance bool [mscorlib/*23000001*/]System.String/*01000006*/::Equals(string,
                                                                                                                             valuetype [mscorlib/*23000001*/]System.StringComparison/*01000007*/) /* 0A000004 */
    IL_001e:  /* 2C   | 02               */ brfalse.s  IL_0022

    IL_0020:  /* 03   |                  */ ldarg.1
    IL_0021:  /* 2A   |                  */ ret

    IL_0022:  /* 06   |                  */ ldloc.0
    IL_0023:  /* 2A   |                  */ ret
  } // end of method SR::GetResourceString

  .method /*06000004*/ assembly hidebysig static 
          string  Format(string resourceFormat,
                         object[] args) cil managed
  // SIG: 00 02 0E 0E 1D 1C
  {
    .param [2]/*08000004*/ 
    .custom /*0C000012:0A000005*/ instance void [mscorlib/*23000001*/]System.ParamArrayAttribute/*01000009*/::.ctor() /* 0A000005 */ = ( 01 00 00 00 ) 
    // Method begins at RVA 0x20b0
    // Code size       38 (0x26)
    .maxstack  8
    IL_0000:  /* 03   |                  */ ldarg.1
    IL_0001:  /* 2C   | 21               */ brfalse.s  IL_0024

    IL_0003:  /* 28   | (06)000002       */ call       bool System.SR/*02000003*/::UsingResourceKeys() /* 06000002 */
    IL_0008:  /* 2C   | 12               */ brfalse.s  IL_001c

    IL_000a:  /* 02   |                  */ ldarg.0
    IL_000b:  /* 72   | (70)000001       */ ldstr      ", " /* 70000001 */
    IL_0010:  /* 03   |                  */ ldarg.1
    IL_0011:  /* 28   | (0A)000006       */ call       string [mscorlib/*23000001*/]System.String/*01000006*/::Join(string,
                                                                                                                    object[]) /* 0A000006 */
    IL_0016:  /* 28   | (0A)000007       */ call       string [mscorlib/*23000001*/]System.String/*01000006*/::Concat(string,
                                                                                                                      string) /* 0A000007 */
    IL_001b:  /* 2A   |                  */ ret

    IL_001c:  /* 02   |                  */ ldarg.0
    IL_001d:  /* 03   |                  */ ldarg.1
    IL_001e:  /* 28   | (0A)000008       */ call       string [mscorlib/*23000001*/]System.String/*01000006*/::Format(string,
                                                                                                                      object[]) /* 0A000008 */
    IL_0023:  /* 2A   |                  */ ret

    IL_0024:  /* 02   |                  */ ldarg.0
    IL_0025:  /* 2A   |                  */ ret
  } // end of method SR::Format

  .method /*06000005*/ assembly hidebysig static 
          string  Format(string resourceFormat,
                         object p1) cil managed
  // SIG: 00 02 0E 0E 1C
  {
    // Method begins at RVA 0x20d7
    // Code size       40 (0x28)
    .maxstack  8
    IL_0000:  /* 28   | (06)000002       */ call       bool System.SR/*02000003*/::UsingResourceKeys() /* 06000002 */
    IL_0005:  /* 2C   | 19               */ brfalse.s  IL_0020

    IL_0007:  /* 72   | (70)000001       */ ldstr      ", " /* 70000001 */
    IL_000c:  /* 18   |                  */ ldc.i4.2
    IL_000d:  /* 8D   | (01)000003       */ newarr     [mscorlib/*23000001*/]System.Object/*01000003*/
    IL_0012:  /* 25   |                  */ dup
    IL_0013:  /* 16   |                  */ ldc.i4.0
    IL_0014:  /* 02   |                  */ ldarg.0
    IL_0015:  /* A2   |                  */ stelem.ref
    IL_0016:  /* 25   |                  */ dup
    IL_0017:  /* 17   |                  */ ldc.i4.1
    IL_0018:  /* 03   |                  */ ldarg.1
    IL_0019:  /* A2   |                  */ stelem.ref
    IL_001a:  /* 28   | (0A)000006       */ call       string [mscorlib/*23000001*/]System.String/*01000006*/::Join(string,
                                                                                                                    object[]) /* 0A000006 */
    IL_001f:  /* 2A   |                  */ ret

    IL_0020:  /* 02   |                  */ ldarg.0
    IL_0021:  /* 03   |                  */ ldarg.1
    IL_0022:  /* 28   | (0A)000009       */ call       string [mscorlib/*23000001*/]System.String/*01000006*/::Format(string,
                                                                                                                      object) /* 0A000009 */
    IL_0027:  /* 2A   |                  */ ret
  } // end of method SR::Format

  .method /*06000006*/ assembly hidebysig static 
          string  Format(string resourceFormat,
                         object p1,
                         object p2) cil managed
  // SIG: 00 03 0E 0E 1C 1C
  {
    // Method begins at RVA 0x2100
    // Code size       45 (0x2d)
    .maxstack  8
    IL_0000:  /* 28   | (06)000002       */ call       bool System.SR/*02000003*/::UsingResourceKeys() /* 06000002 */
    IL_0005:  /* 2C   | 1D               */ brfalse.s  IL_0024

    IL_0007:  /* 72   | (70)000001       */ ldstr      ", " /* 70000001 */
    IL_000c:  /* 19   |                  */ ldc.i4.3
    IL_000d:  /* 8D   | (01)000003       */ newarr     [mscorlib/*23000001*/]System.Object/*01000003*/
    IL_0012:  /* 25   |                  */ dup
    IL_0013:  /* 16   |                  */ ldc.i4.0
    IL_0014:  /* 02   |                  */ ldarg.0
    IL_0015:  /* A2   |                  */ stelem.ref
    IL_0016:  /* 25   |                  */ dup
    IL_0017:  /* 17   |                  */ ldc.i4.1
    IL_0018:  /* 03   |                  */ ldarg.1
    IL_0019:  /* A2   |                  */ stelem.ref
    IL_001a:  /* 25   |                  */ dup
    IL_001b:  /* 18   |                  */ ldc.i4.2
    IL_001c:  /* 04   |                  */ ldarg.2
    IL_001d:  /* A2   |                  */ stelem.ref
    IL_001e:  /* 28   | (0A)000006       */ call       string [mscorlib/*23000001*/]System.String/*01000006*/::Join(string,
                                                                                                                    object[]) /* 0A000006 */
    IL_0023:  /* 2A   |                  */ ret

    IL_0024:  /* 02   |                  */ ldarg.0
    IL_0025:  /* 03   |                  */ ldarg.1
    IL_0026:  /* 04   |                  */ ldarg.2
    IL_0027:  /* 28   | (0A)00000A       */ call       string [mscorlib/*23000001*/]System.String/*01000006*/::Format(string,
                                                                                                                      object,
                                                                                                                      object) /* 0A00000A */
    IL_002c:  /* 2A   |                  */ ret
  } // end of method SR::Format

  .method /*06000007*/ assembly hidebysig static 
          string  Format(string resourceFormat,
                         object p1,
                         object p2,
                         object p3) cil managed
  // SIG: 00 04 0E 0E 1C 1C 1C
  {
    // Method begins at RVA 0x212e
    // Code size       50 (0x32)
    .maxstack  8
    IL_0000:  /* 28   | (06)000002       */ call       bool System.SR/*02000003*/::UsingResourceKeys() /* 06000002 */
    IL_0005:  /* 2C   | 21               */ brfalse.s  IL_0028

    IL_0007:  /* 72   | (70)000001       */ ldstr      ", " /* 70000001 */
    IL_000c:  /* 1A   |                  */ ldc.i4.4
    IL_000d:  /* 8D   | (01)000003       */ newarr     [mscorlib/*23000001*/]System.Object/*01000003*/
    IL_0012:  /* 25   |                  */ dup
    IL_0013:  /* 16   |                  */ ldc.i4.0
    IL_0014:  /* 02   |                  */ ldarg.0
    IL_0015:  /* A2   |                  */ stelem.ref
    IL_0016:  /* 25   |                  */ dup
    IL_0017:  /* 17   |                  */ ldc.i4.1
    IL_0018:  /* 03   |                  */ ldarg.1
    IL_0019:  /* A2   |                  */ stelem.ref
    IL_001a:  /* 25   |                  */ dup
    IL_001b:  /* 18   |                  */ ldc.i4.2
    IL_001c:  /* 04   |                  */ ldarg.2
    IL_001d:  /* A2   |                  */ stelem.ref
    IL_001e:  /* 25   |                  */ dup
    IL_001f:  /* 19   |                  */ ldc.i4.3
    IL_0020:  /* 05   |                  */ ldarg.3
    IL_0021:  /* A2   |                  */ stelem.ref
    IL_0022:  /* 28   | (0A)000006       */ call       string [mscorlib/*23000001*/]System.String/*01000006*/::Join(string,
                                                                                                                    object[]) /* 0A000006 */
    IL_0027:  /* 2A   |                  */ ret

    IL_0028:  /* 02   |                  */ ldarg.0
    IL_0029:  /* 03   |                  */ ldarg.1
    IL_002a:  /* 04   |                  */ ldarg.2
    IL_002b:  /* 05   |                  */ ldarg.3
    IL_002c:  /* 28   | (0A)00000B       */ call       string [mscorlib/*23000001*/]System.String/*01000006*/::Format(string,
                                                                                                                      object,
                                                                                                                      object,
                                                                                                                      object) /* 0A00000B */
    IL_0031:  /* 2A   |                  */ ret
  } // end of method SR::Format

  .method /*06000008*/ assembly hidebysig specialname static 
          string  get_ArgumentOutOfRange_NeedNonNegNum() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2161
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000007       */ ldstr      "ArgumentOutOfRange_NeedNonNegNum" /* 70000007 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_ArgumentOutOfRange_NeedNonNegNum

  .method /*06000009*/ assembly hidebysig specialname static 
          string  get_ArgumentOutOfRange_NeedPosNum() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x216e
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000049       */ ldstr      "ArgumentOutOfRange_NeedPosNum" /* 70000049 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_ArgumentOutOfRange_NeedPosNum

  .method /*0600000A*/ assembly hidebysig specialname static 
          string  get_Argument_InvalidOffLen() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x217b
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000085       */ ldstr      "Argument_InvalidOffLen" /* 70000085 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Argument_InvalidOffLen

  .method /*0600000B*/ assembly hidebysig specialname static 
          string  get_Argument_InvalidOidValue() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2188
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)0000B3       */ ldstr      "Argument_InvalidOidValue" /* 700000B3 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Argument_InvalidOidValue

  .method /*0600000C*/ assembly hidebysig specialname static 
          string  get_Argument_InvalidValue() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2195
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)0000E5       */ ldstr      "Argument_InvalidValue" /* 700000E5 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Argument_InvalidValue

  .method /*0600000D*/ assembly hidebysig specialname static 
          string  get_ArgumentNull_Buffer() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x21a2
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000111       */ ldstr      "ArgumentNull_Buffer" /* 70000111 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_ArgumentNull_Buffer

  .method /*0600000E*/ assembly hidebysig specialname static 
          string  get_Arg_CryptographyException() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x21af
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000139       */ ldstr      "Arg_CryptographyException" /* 70000139 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Arg_CryptographyException

  .method /*0600000F*/ assembly hidebysig specialname static 
          string  get_Cryptography_BadHashSize_ForAlgorithm() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x21bc
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)00016D       */ ldstr      "Cryptography_BadHashSize_ForAlgorithm" /* 7000016D */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_BadHashSize_ForAlgorithm

  .method /*06000010*/ assembly hidebysig specialname static 
          string  get_Cryptography_Config_EncodedOIDError() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x21c9
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)0001B9       */ ldstr      "Cryptography_Config_EncodedOIDError" /* 700001B9 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_Config_EncodedOIDError

  .method /*06000011*/ assembly hidebysig specialname static 
          string  get_Cryptography_CSP_NoPrivateKey() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x21d6
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000201       */ ldstr      "Cryptography_CSP_NoPrivateKey" /* 70000201 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_CSP_NoPrivateKey

  .method /*06000012*/ assembly hidebysig specialname static 
          string  get_Cryptography_Der_Invalid_Encoding() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x21e3
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)00023D       */ ldstr      "Cryptography_Der_Invalid_Encoding" /* 7000023D */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_Der_Invalid_Encoding

  .method /*06000013*/ assembly hidebysig specialname static 
          string  get_Cryptography_DSA_KeyGenNotSupported() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x21f0
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000281       */ ldstr      "Cryptography_DSA_KeyGenNotSupported" /* 70000281 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_DSA_KeyGenNotSupported

  .method /*06000014*/ assembly hidebysig specialname static 
          string  get_Cryptography_ECXmlSerializationFormatRequired() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x21fd
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)0002C9       */ ldstr      "Cryptography_ECXmlSerializationFormatRequired" /* 700002C9 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_ECXmlSerializationFormatRequired

  .method /*06000015*/ assembly hidebysig specialname static 
          string  get_Cryptography_ECC_NamedCurvesOnly() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x220a
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000325       */ ldstr      "Cryptography_ECC_NamedCurvesOnly" /* 70000325 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_ECC_NamedCurvesOnly

  .method /*06000016*/ assembly hidebysig specialname static 
          string  get_Cryptography_HashAlgorithmNameNullOrEmpty() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2217
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000367       */ ldstr      "Cryptography_HashAlgorithmNameNullOrEmpty" /* 70000367 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_HashAlgorithmNameNullOrEmpty

  .method /*06000017*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidOID() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2224
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)0003BB       */ ldstr      "Cryptography_InvalidOID" /* 700003BB */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidOID

  .method /*06000018*/ assembly hidebysig specialname static 
          string  get_Cryptography_CurveNotSupported() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2231
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)0003EB       */ ldstr      "Cryptography_CurveNotSupported" /* 700003EB */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_CurveNotSupported

  .method /*06000019*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidCurveOid() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x223e
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000429       */ ldstr      "Cryptography_InvalidCurveOid" /* 70000429 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidCurveOid

  .method /*0600001A*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidCurveKeyParameters() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x224b
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000463       */ ldstr      "Cryptography_InvalidCurveKeyParameters" /* 70000463 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidCurveKeyParameters

  .method /*0600001B*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidDsaParameters_MissingFields() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2258
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)0004B1       */ ldstr      "Cryptography_InvalidDsaParameters_MissingFields" /* 700004B1 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidDsaParameters_MissingFields

  .method /*0600001C*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidDsaParameters_MismatchedPGY() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2265
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000511       */ ldstr      "Cryptography_InvalidDsaParameters_MismatchedPGY" /* 70000511 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidDsaParameters_MismatchedPGY

  .method /*0600001D*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidDsaParameters_MismatchedQX() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2272
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000571       */ ldstr      "Cryptography_InvalidDsaParameters_MismatchedQX" /* 70000571 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidDsaParameters_MismatchedQX

  .method /*0600001E*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidDsaParameters_MismatchedPJ() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x227f
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)0005CF       */ ldstr      "Cryptography_InvalidDsaParameters_MismatchedPJ" /* 700005CF */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidDsaParameters_MismatchedPJ

  .method /*0600001F*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidDsaParameters_SeedRestriction_ShortKey() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x228c
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)00062D       */ ldstr      "Cryptography_InvalidDsaParameters_SeedRestriction_"
    + "ShortKey" /* 7000062D */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidDsaParameters_SeedRestriction_ShortKey

  .method /*06000020*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidDsaParameters_QRestriction_ShortKey() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2299
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)0006A3       */ ldstr      "Cryptography_InvalidDsaParameters_QRestriction_Sho"
    + "rtKey" /* 700006A3 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidDsaParameters_QRestriction_ShortKey

  .method /*06000021*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidDsaParameters_QRestriction_LargeKey() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x22a6
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000713       */ ldstr      "Cryptography_InvalidDsaParameters_QRestriction_Lar"
    + "geKey" /* 70000713 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidDsaParameters_QRestriction_LargeKey

  .method /*06000022*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidECCharacteristic2Curve() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x22b3
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000783       */ ldstr      "Cryptography_InvalidECCharacteristic2Curve" /* 70000783 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidECCharacteristic2Curve

  .method /*06000023*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidECPrimeCurve() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x22c0
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)0007D9       */ ldstr      "Cryptography_InvalidECPrimeCurve" /* 700007D9 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidECPrimeCurve

  .method /*06000024*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidECNamedCurve() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x22cd
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)00081B       */ ldstr      "Cryptography_InvalidECNamedCurve" /* 7000081B */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidECNamedCurve

  .method /*06000025*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidKeySize() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x22da
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)00085D       */ ldstr      "Cryptography_InvalidKeySize" /* 7000085D */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidKeySize

  .method /*06000026*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidKey_SemiWeak() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x22e7
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000895       */ ldstr      "Cryptography_InvalidKey_SemiWeak" /* 70000895 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidKey_SemiWeak

  .method /*06000027*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidKey_Weak() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x22f4
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)0008D7       */ ldstr      "Cryptography_InvalidKey_Weak" /* 700008D7 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidKey_Weak

  .method /*06000028*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidIVSize() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2301
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000911       */ ldstr      "Cryptography_InvalidIVSize" /* 70000911 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidIVSize

  .method /*06000029*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidOperation() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x230e
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000947       */ ldstr      "Cryptography_InvalidOperation" /* 70000947 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidOperation

  .method /*0600002A*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidPadding() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x231b
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000983       */ ldstr      "Cryptography_InvalidPadding" /* 70000983 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidPadding

  .method /*0600002B*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidRsaParameters() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2328
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)0009BB       */ ldstr      "Cryptography_InvalidRsaParameters" /* 700009BB */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidRsaParameters

  .method /*0600002C*/ assembly hidebysig specialname static 
          string  get_Cryptography_InvalidPaddingMode() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2335
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)0009FF       */ ldstr      "Cryptography_InvalidPaddingMode" /* 700009FF */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_InvalidPaddingMode

  .method /*0600002D*/ assembly hidebysig specialname static 
          string  get_Cryptography_Invalid_IA5String() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2342
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000A3F       */ ldstr      "Cryptography_Invalid_IA5String" /* 70000A3F */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_Invalid_IA5String

  .method /*0600002E*/ assembly hidebysig specialname static 
          string  get_Cryptography_MissingIV() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x234f
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000A7D       */ ldstr      "Cryptography_MissingIV" /* 70000A7D */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_MissingIV

  .method /*0600002F*/ assembly hidebysig specialname static 
          string  get_Cryptography_MissingKey() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x235c
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000AAB       */ ldstr      "Cryptography_MissingKey" /* 70000AAB */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_MissingKey

  .method /*06000030*/ assembly hidebysig specialname static 
          string  get_Cryptography_MissingOID() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2369
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000ADB       */ ldstr      "Cryptography_MissingOID" /* 70000ADB */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_MissingOID

  .method /*06000031*/ assembly hidebysig specialname static 
          string  get_Cryptography_MustTransformWholeBlock() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2376
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000B0B       */ ldstr      "Cryptography_MustTransformWholeBlock" /* 70000B0B */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_MustTransformWholeBlock

  .method /*06000032*/ assembly hidebysig specialname static 
          string  get_Cryptography_NotValidPrivateKey() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2383
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000B55       */ ldstr      "Cryptography_NotValidPrivateKey" /* 70000B55 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_NotValidPrivateKey

  .method /*06000033*/ assembly hidebysig specialname static 
          string  get_Cryptography_NotValidPublicOrPrivateKey() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2390
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000B95       */ ldstr      "Cryptography_NotValidPublicOrPrivateKey" /* 70000B95 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_NotValidPublicOrPrivateKey

  .method /*06000034*/ assembly hidebysig specialname static 
          string  get_Cryptography_OpenInvalidHandle() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x239d
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000BE5       */ ldstr      "Cryptography_OpenInvalidHandle" /* 70000BE5 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_OpenInvalidHandle

  .method /*06000035*/ assembly hidebysig specialname static 
          string  get_Cryptography_PartialBlock() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x23aa
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000C23       */ ldstr      "Cryptography_PartialBlock" /* 70000C23 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_PartialBlock

  .method /*06000036*/ assembly hidebysig specialname static 
          string  get_Cryptography_PasswordDerivedBytes_FewBytesSalt() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x23b7
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000C57       */ ldstr      "Cryptography_PasswordDerivedBytes_FewBytesSalt" /* 70000C57 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_PasswordDerivedBytes_FewBytesSalt

  .method /*06000037*/ assembly hidebysig specialname static 
          string  get_Cryptography_RC2_EKS40() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x23c4
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000CB5       */ ldstr      "Cryptography_RC2_EKS40" /* 70000CB5 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_RC2_EKS40

  .method /*06000038*/ assembly hidebysig specialname static 
          string  get_Cryptography_RC2_EKSKS() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x23d1
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000CE3       */ ldstr      "Cryptography_RC2_EKSKS" /* 70000CE3 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_RC2_EKSKS

  .method /*06000039*/ assembly hidebysig specialname static 
          string  get_Cryptography_RC2_EKSKS2() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x23de
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000D11       */ ldstr      "Cryptography_RC2_EKSKS2" /* 70000D11 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_RC2_EKSKS2

  .method /*0600003A*/ assembly hidebysig specialname static 
          string  get_Cryptography_Rijndael_BlockSize() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x23eb
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000D41       */ ldstr      "Cryptography_Rijndael_BlockSize" /* 70000D41 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_Rijndael_BlockSize

  .method /*0600003B*/ assembly hidebysig specialname static 
          string  get_Cryptography_TransformBeyondEndOfBuffer() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x23f8
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000D81       */ ldstr      "Cryptography_TransformBeyondEndOfBuffer" /* 70000D81 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_TransformBeyondEndOfBuffer

  .method /*0600003C*/ assembly hidebysig specialname static 
          string  get_Cryptography_CipherModeNotSupported() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2405
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000DD1       */ ldstr      "Cryptography_CipherModeNotSupported" /* 70000DD1 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_CipherModeNotSupported

  .method /*0600003D*/ assembly hidebysig specialname static 
          string  get_Cryptography_UnknownHashAlgorithm() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2412
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000E19       */ ldstr      "Cryptography_UnknownHashAlgorithm" /* 70000E19 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_UnknownHashAlgorithm

  .method /*0600003E*/ assembly hidebysig specialname static 
          string  get_Cryptography_UnknownPaddingMode() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x241f
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000E5D       */ ldstr      "Cryptography_UnknownPaddingMode" /* 70000E5D */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_UnknownPaddingMode

  .method /*0600003F*/ assembly hidebysig specialname static 
          string  get_Cryptography_UnexpectedTransformTruncation() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x242c
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000E9D       */ ldstr      "Cryptography_UnexpectedTransformTruncation" /* 70000E9D */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_UnexpectedTransformTruncation

  .method /*06000040*/ assembly hidebysig specialname static 
          string  get_Cryptography_Unmapped_System_Typed_Error() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2439
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000EF3       */ ldstr      "Cryptography_Unmapped_System_Typed_Error" /* 70000EF3 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_Unmapped_System_Typed_Error

  .method /*06000041*/ assembly hidebysig specialname static 
          string  get_Cryptography_UnsupportedPaddingMode() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2446
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000F45       */ ldstr      "Cryptography_UnsupportedPaddingMode" /* 70000F45 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_UnsupportedPaddingMode

  .method /*06000042*/ assembly hidebysig specialname static 
          string  get_NotSupported_Method() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2453
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000F8D       */ ldstr      "NotSupported_Method" /* 70000F8D */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_NotSupported_Method

  .method /*06000043*/ assembly hidebysig specialname static 
          string  get_NotSupported_SubclassOverride() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x2460
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000FB5       */ ldstr      "NotSupported_SubclassOverride" /* 70000FB5 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_NotSupported_SubclassOverride

  .method /*06000044*/ assembly hidebysig specialname static 
          string  get_Cryptography_AlgorithmTypesMustBeVisible() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x246d
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)000FF1       */ ldstr      "Cryptography_AlgorithmTypesMustBeVisible" /* 70000FF1 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_AlgorithmTypesMustBeVisible

  .method /*06000045*/ assembly hidebysig specialname static 
          string  get_Cryptography_AddNullOrEmptyName() cil managed
  // SIG: 00 00 0E
  {
    // Method begins at RVA 0x247a
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  /* 72   | (70)001043       */ ldstr      "Cryptography_AddNullOrEmptyName" /* 70001043 */
    IL_0005:  /* 14   |                  */ ldnull
    IL_0006:  /* 28   | (06)000003       */ call       string System.SR/*02000003*/::GetResourceString(string,
                                                                                                       string) /* 06000003 */
    IL_000b:  /* 2A   |                  */ ret
  } // end of method SR::get_Cryptography_AddNullOrEmptyName

  .method /*06000046*/ assembly hidebysig specialname static 
          class [mscorlib/*23000001*/]System.Type/*01000005*/ 
          get_ResourceType() cil managed
  // SIG: 00 00 12 15
  {
    // Method begins at RVA 0x2487
    // Code size       11 (0xb)
    .maxstack  8
    IL_0000:  /* D0   | (02)000002       */ ldtoken    FxResources.System.Security.Cryptography.Algorithms.SR/*02000002*/
    IL_0005:  /* 28   | (0A)00000C       */ call       class [mscorlib/*23000001*/]System.Type/*01000005*/ [mscorlib/*23000001*/]System.Type/*01000005*/::GetTypeFromHandle(valuetype [mscorlib/*23000001*/]System.RuntimeTypeHandle/*0100000A*/) /* 0A00000C */
    IL_000a:  /* 2A   |                  */ ret
  } // end of method SR::get_ResourceType

  .property /*17000001*/ callconv(8) class [mscorlib/*23000001*/]System.Resources.ResourceManager/*01000004*/
          ResourceManager()
  {
    .get class [mscorlib/*23000001*/]System.Resources.ResourceManager/*01000004*/ System.SR/*02000003*/::get_ResourceManager() /* 06000001 */
  } // end of property SR::ResourceManager
  .property /*17000002*/ callconv(8) string
          ArgumentOutOfRange_NeedNonNegNum()
  {
    .get string System.SR/*02000003*/::get_ArgumentOutOfRange_NeedNonNegNum() /* 06000008 */
  } // end of property SR::ArgumentOutOfRange_NeedNonNegNum
  .property /*17000003*/ callconv(8) string
          ArgumentOutOfRange_NeedPosNum()
  {
    .get string System.SR/*02000003*/::get_ArgumentOutOfRange_NeedPosNum() /* 06000009 */
  } // end of property SR::ArgumentOutOfRange_NeedPosNum
  .property /*17000004*/ callconv(8) string
          Argument_InvalidOffLen()
  {
    .get string System.SR/*02000003*/::get_Argument_InvalidOffLen() /* 0600000A */
  } // end of property SR::Argument_InvalidOffLen
  .property /*17000005*/ callconv(8) string
          Argument_InvalidOidValue()
  {
    .get string System.SR/*02000003*/::get_Argument_InvalidOidValue() /* 0600000B */
  } // end of property SR::Argument_InvalidOidValue
  .property /*17000006*/ callconv(8) string
          Argument_InvalidValue()
  {
    .get string System.SR/*02000003*/::get_Argument_InvalidValue() /* 0600000C */
  } // end of property SR::Argument_InvalidValue
  .property /*17000007*/ callconv(8) string
          ArgumentNull_Buffer()
  {
    .get string System.SR/*02000003*/::get_ArgumentNull_Buffer() /* 0600000D */
  } // end of property SR::ArgumentNull_Buffer
  .property /*17000008*/ callconv(8) string
          Arg_CryptographyException()
  {
    .get string System.SR/*02000003*/::get_Arg_CryptographyException() /* 0600000E */
  } // end of property SR::Arg_CryptographyException
  .property /*17000009*/ callconv(8) string
          Cryptography_BadHashSize_ForAlgorithm()
  {
    .get string System.SR/*02000003*/::get_Cryptography_BadHashSize_ForAlgorithm() /* 0600000F */
  } // end of property SR::Cryptography_BadHashSize_ForAlgorithm
  .property /*1700000A*/ callconv(8) string
          Cryptography_Config_EncodedOIDError()
  {
    .get string System.SR/*02000003*/::get_Cryptography_Config_EncodedOIDError() /* 06000010 */
  } // end of property SR::Cryptography_Config_EncodedOIDError
  .property /*1700000B*/ callconv(8) string
          Cryptography_CSP_NoPrivateKey()
  {
    .get string System.SR/*02000003*/::get_Cryptography_CSP_NoPrivateKey() /* 06000011 */
  } // end of property SR::Cryptography_CSP_NoPrivateKey
  .property /*1700000C*/ callconv(8) string
          Cryptography_Der_Invalid_Encoding()
  {
    .get string System.SR/*02000003*/::get_Cryptography_Der_Invalid_Encoding() /* 06000012 */
  } // end of property SR::Cryptography_Der_Invalid_Encoding
  .property /*1700000D*/ callconv(8) string
          Cryptography_DSA_KeyGenNotSupported()
  {
    .get string System.SR/*02000003*/::get_Cryptography_DSA_KeyGenNotSupported() /* 06000013 */
  } // end of property SR::Cryptography_DSA_KeyGenNotSupported
  .property /*1700000E*/ callconv(8) string
          Cryptography_ECXmlSerializationFormatRequired()
  {
    .get string System.SR/*02000003*/::get_Cryptography_ECXmlSerializationFormatRequired() /* 06000014 */
  } // end of property SR::Cryptography_ECXmlSerializationFormatRequired
  .property /*1700000F*/ callconv(8) string
          Cryptography_ECC_NamedCurvesOnly()
  {
    .get string System.SR/*02000003*/::get_Cryptography_ECC_NamedCurvesOnly() /* 06000015 */
  } // end of property SR::Cryptography_ECC_NamedCurvesOnly
  .property /*17000010*/ callconv(8) string
          Cryptography_HashAlgorithmNameNullOrEmpty()
  {
    .get string System.SR/*02000003*/::get_Cryptography_HashAlgorithmNameNullOrEmpty() /* 06000016 */
  } // end of property SR::Cryptography_HashAlgorithmNameNullOrEmpty
  .property /*17000011*/ callconv(8) string
          Cryptography_InvalidOID()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidOID() /* 06000017 */
  } // end of property SR::Cryptography_InvalidOID
  .property /*17000012*/ callconv(8) string
          Cryptography_CurveNotSupported()
  {
    .get string System.SR/*02000003*/::get_Cryptography_CurveNotSupported() /* 06000018 */
  } // end of property SR::Cryptography_CurveNotSupported
  .property /*17000013*/ callconv(8) string
          Cryptography_InvalidCurveOid()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidCurveOid() /* 06000019 */
  } // end of property SR::Cryptography_InvalidCurveOid
  .property /*17000014*/ callconv(8) string
          Cryptography_InvalidCurveKeyParameters()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidCurveKeyParameters() /* 0600001A */
  } // end of property SR::Cryptography_InvalidCurveKeyParameters
  .property /*17000015*/ callconv(8) string
          Cryptography_InvalidDsaParameters_MissingFields()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidDsaParameters_MissingFields() /* 0600001B */
  } // end of property SR::Cryptography_InvalidDsaParameters_MissingFields
  .property /*17000016*/ callconv(8) string
          Cryptography_InvalidDsaParameters_MismatchedPGY()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidDsaParameters_MismatchedPGY() /* 0600001C */
  } // end of property SR::Cryptography_InvalidDsaParameters_MismatchedPGY
  .property /*17000017*/ callconv(8) string
          Cryptography_InvalidDsaParameters_MismatchedQX()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidDsaParameters_MismatchedQX() /* 0600001D */
  } // end of property SR::Cryptography_InvalidDsaParameters_MismatchedQX
  .property /*17000018*/ callconv(8) string
          Cryptography_InvalidDsaParameters_MismatchedPJ()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidDsaParameters_MismatchedPJ() /* 0600001E */
  } // end of property SR::Cryptography_InvalidDsaParameters_MismatchedPJ
  .property /*17000019*/ callconv(8) string
          Cryptography_InvalidDsaParameters_SeedRestriction_ShortKey()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidDsaParameters_SeedRestriction_ShortKey() /* 0600001F */
  } // end of property SR::Cryptography_InvalidDsaParameters_SeedRestriction_ShortKey
  .property /*1700001A*/ callconv(8) string
          Cryptography_InvalidDsaParameters_QRestriction_ShortKey()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidDsaParameters_QRestriction_ShortKey() /* 06000020 */
  } // end of property SR::Cryptography_InvalidDsaParameters_QRestriction_ShortKey
  .property /*1700001B*/ callconv(8) string
          Cryptography_InvalidDsaParameters_QRestriction_LargeKey()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidDsaParameters_QRestriction_LargeKey() /* 06000021 */
  } // end of property SR::Cryptography_InvalidDsaParameters_QRestriction_LargeKey
  .property /*1700001C*/ callconv(8) string
          Cryptography_InvalidECCharacteristic2Curve()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidECCharacteristic2Curve() /* 06000022 */
  } // end of property SR::Cryptography_InvalidECCharacteristic2Curve
  .property /*1700001D*/ callconv(8) string
          Cryptography_InvalidECPrimeCurve()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidECPrimeCurve() /* 06000023 */
  } // end of property SR::Cryptography_InvalidECPrimeCurve
  .property /*1700001E*/ callconv(8) string
          Cryptography_InvalidECNamedCurve()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidECNamedCurve() /* 06000024 */
  } // end of property SR::Cryptography_InvalidECNamedCurve
  .property /*1700001F*/ callconv(8) string
          Cryptography_InvalidKeySize()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidKeySize() /* 06000025 */
  } // end of property SR::Cryptography_InvalidKeySize
  .property /*17000020*/ callconv(8) string
          Cryptography_InvalidKey_SemiWeak()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidKey_SemiWeak() /* 06000026 */
  } // end of property SR::Cryptography_InvalidKey_SemiWeak
  .property /*17000021*/ callconv(8) string
          Cryptography_InvalidKey_Weak()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidKey_Weak() /* 06000027 */
  } // end of property SR::Cryptography_InvalidKey_Weak
  .property /*17000022*/ callconv(8) string
          Cryptography_InvalidIVSize()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidIVSize() /* 06000028 */
  } // end of property SR::Cryptography_InvalidIVSize
  .property /*17000023*/ callconv(8) string
          Cryptography_InvalidOperation()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidOperation() /* 06000029 */
  } // end of property SR::Cryptography_InvalidOperation
  .property /*17000024*/ callconv(8) string
          Cryptography_InvalidPadding()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidPadding() /* 0600002A */
  } // end of property SR::Cryptography_InvalidPadding
  .property /*17000025*/ callconv(8) string
          Cryptography_InvalidRsaParameters()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidRsaParameters() /* 0600002B */
  } // end of property SR::Cryptography_InvalidRsaParameters
  .property /*17000026*/ callconv(8) string
          Cryptography_InvalidPaddingMode()
  {
    .get string System.SR/*02000003*/::get_Cryptography_InvalidPaddingMode() /* 0600002C */
  } // end of property SR::Cryptography_InvalidPaddingMode
  .property /*17000027*/ callconv(8) string
          Cryptography_Invalid_IA5String()
  {
    .get string System.SR/*02000003*/::get_Cryptography_Invalid_IA5String() /* 0600002D */
  } // end of property SR::Cryptography_Invalid_IA5String
  .property /*17000028*/ callconv(8) string
          Cryptography_MissingIV()
  {
    .get string System.SR/*02000003*/::get_Cryptography_MissingIV() /* 0600002E */
  } // end of property SR::Cryptography_MissingIV
  .property /*17000029*/ callconv(8) string
          Cryptography_MissingKey()
  {
    .get string System.SR/*02000003*/::get_Cryptography_MissingKey() /* 0600002F */
  } // end of property SR::Cryptography_MissingKey
  .property /*1700002A*/ callconv(8) string
          Cryptography_MissingOID()
  {
    .get string System.SR/*02000003*/::get_Cryptography_MissingOID() /* 06000030 */
  } // end of property SR::Cryptography_MissingOID
  .property /*1700002B*/ callconv(8) string
          Cryptography_MustTransformWholeBlock()
  {
    .get string System.SR/*02000003*/::get_Cryptography_MustTransformWholeBlock() /* 06000031 */
  } // end of property SR::Cryptography_MustTransformWholeBlock
  .property /*1700002C*/ callconv(8) string
          Cryptography_NotValidPrivateKey()
  {
    .get string System.SR/*02000003*/::get_Cryptography_NotValidPrivateKey() /* 06000032 */
  } // end of property SR::Cryptography_NotValidPrivateKey
  .property /*1700002D*/ callconv(8) string
          Cryptography_NotValidPublicOrPrivateKey()
  {
    .get string System.SR/*02000003*/::get_Cryptography_NotValidPublicOrPrivateKey() /* 06000033 */
  } // end of property SR::Cryptography_NotValidPublicOrPrivateKey
  .property /*1700002E*/ callconv(8) string
          Cryptography_OpenInvalidHandle()
  {
    .get string System.SR/*02000003*/::get_Cryptography_OpenInvalidHandle() /* 06000034 */
  } // end of property SR::Cryptography_OpenInvalidHandle
  .property /*1700002F*/ callconv(8) string
          Cryptography_PartialBlock()
  {
    .get string System.SR/*02000003*/::get_Cryptography_PartialBlock() /* 06000035 */
  } // end of property SR::Cryptography_PartialBlock
  .property /*17000030*/ callconv(8) string
          Cryptography_PasswordDerivedBytes_FewBytesSalt()
  {
    .get string System.SR/*02000003*/::get_Cryptography_PasswordDerivedBytes_FewBytesSalt() /* 06000036 */
  } // end of property SR::Cryptography_PasswordDerivedBytes_FewBytesSalt
  .property /*17000031*/ callconv(8) string
          Cryptography_RC2_EKS40()
  {
    .get string System.SR/*02000003*/::get_Cryptography_RC2_EKS40() /* 06000037 */
  } // end of property SR::Cryptography_RC2_EKS40
  .property /*17000032*/ callconv(8) string
          Cryptography_RC2_EKSKS()
  {
    .get string System.SR/*02000003*/::get_Cryptography_RC2_EKSKS() /* 06000038 */
  } // end of property SR::Cryptography_RC2_EKSKS
  .property /*17000033*/ callconv(8) string
          Cryptography_RC2_EKSKS2()
  {
    .get string System.SR/*02000003*/::get_Cryptography_RC2_EKSKS2() /* 06000039 */
  } // end of property SR::Cryptography_RC2_EKSKS2
  .property /*17000034*/ callconv(8) string
          Cryptography_Rijndael_BlockSize()
  {
    .get string System.SR/*02000003*/::get_Cryptography_Rijndael_BlockSize() /* 0600003A */
  } // end of property SR::Cryptography_Rijndael_BlockSize
  .property /*17000035*/ callconv(8) string
          Cryptography_TransformBeyondEndOfBuffer()
  {
    .get string System.SR/*02000003*/::get_Cryptography_TransformBeyondEndOfBuffer() /* 0600003B */
  } // end of property SR::Cryptography_TransformBeyondEndOfBuffer
  .property /*17000036*/ callconv(8) string
          Cryptography_CipherModeNotSupported()
  {
    .get string System.SR/*02000003*/::get_Cryptography_CipherModeNotSupported() /* 0600003C */
  } // end of property SR::Cryptography_CipherModeNotSupported
  .property /*17000037*/ callconv(8) string
          Cryptography_UnknownHashAlgorithm()
  {
    .get string System.SR/*02000003*/::get_Cryptography_UnknownHashAlgorithm() /* 0600003D */
  } // end of property SR::Cryptography_UnknownHashAlgorithm
  .property /*17000038*/ callconv(8) string
          Cryptography_UnknownPaddingMode()
  {
    .get string System.SR/*02000003*/::get_Cryptography_UnknownPaddingMode() /* 0600003E */
  } // end of property SR::Cryptography_UnknownPaddingMode
  .property /*17000039*/ callconv(8) string
          Cryptography_UnexpectedTransformTruncation()
  {
    .get string System.SR/*02000003*/::get_Cryptography_UnexpectedTransformTruncation() /* 0600003F */
  } // end of property SR::Cryptography_UnexpectedTransformTruncation
  .property /*1700003A*/ callconv(8) string
          Cryptography_Unmapped_System_Typed_Error()
  {
    .get string System.SR/*02000003*/::get_Cryptography_Unmapped_System_Typed_Error() /* 06000040 */
  } // end of property SR::Cryptography_Unmapped_System_Typed_Error
  .property /*1700003B*/ callconv(8) string
          Cryptography_UnsupportedPaddingMode()
  {
    .get string System.SR/*02000003*/::get_Cryptography_UnsupportedPaddingMode() /* 06000041 */
  } // end of property SR::Cryptography_UnsupportedPaddingMode
  .property /*1700003C*/ callconv(8) string
          NotSupported_Method()
  {
    .get string System.SR/*02000003*/::get_NotSupported_Method() /* 06000042 */
  } // end of property SR::NotSupported_Method
  .property /*1700003D*/ callconv(8) string
          NotSupported_SubclassOverride()
  {
    .get string System.SR/*02000003*/::get_NotSupported_SubclassOverride() /* 06000043 */
  } // end of property SR::NotSupported_SubclassOverride
  .property /*1700003E*/ callconv(8) string
          Cryptography_AlgorithmTypesMustBeVisible()
  {
    .get string System.SR/*02000003*/::get_Cryptography_AlgorithmTypesMustBeVisible() /* 06000044 */
  } // end of property SR::Cryptography_AlgorithmTypesMustBeVisible
  .property /*1700003F*/ callconv(8) string
          Cryptography_AddNullOrEmptyName()
  {
    .get string System.SR/*02000003*/::get_Cryptography_AddNullOrEmptyName() /* 06000045 */
  } // end of property SR::Cryptography_AddNullOrEmptyName
  .property /*17000040*/ callconv(8) class [mscorlib/*23000001*/]System.Type/*01000005*/
          ResourceType()
  {
    .get class [mscorlib/*23000001*/]System.Type/*01000005*/ System.SR/*02000003*/::get_ResourceType() /* 06000046 */
  } // end of property SR::ResourceType
} // end of class System.SR

.class /*02000004*/ public auto ansi sealed beforefieldinit System.Security.Cryptography.IncrementalHash
       extends [mscorlib/*23000001*/]System.Object/*01000003*/
       implements [mscorlib/*23000001*/]System.IDisposable/*0100000B*/
{
  .field /*04000003*/ private static literal int32 NTE_BAD_ALGID = int32(0x80090008)
  .field /*04000004*/ private initonly valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ _algorithmName
  .field /*04000005*/ private class [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/ _hash
  .field /*04000006*/ private bool _disposed
  .field /*04000007*/ private bool _resetPending
  .method /*06000047*/ private hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ name,
                               class [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/ hash) cil managed
  // SIG: 20 02 01 11 31 12 35
  {
    // Method begins at RVA 0x2493
    // Code size       21 (0x15)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)00000D       */ call       instance void [mscorlib/*23000001*/]System.Object/*01000003*/::.ctor() /* 0A00000D */
    IL_0006:  /* 02   |                  */ ldarg.0
    IL_0007:  /* 03   |                  */ ldarg.1
    IL_0008:  /* 7D   | (04)000004       */ stfld      valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ System.Security.Cryptography.IncrementalHash/*02000004*/::_algorithmName /* 04000004 */
    IL_000d:  /* 02   |                  */ ldarg.0
    IL_000e:  /* 04   |                  */ ldarg.2
    IL_000f:  /* 7D   | (04)000005       */ stfld      class [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/ System.Security.Cryptography.IncrementalHash/*02000004*/::_hash /* 04000005 */
    IL_0014:  /* 2A   |                  */ ret
  } // end of method IncrementalHash::.ctor

  .method /*06000048*/ public hidebysig specialname 
          instance valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ 
          get_AlgorithmName() cil managed
  // SIG: 20 00 11 31
  {
    // Method begins at RVA 0x24a9
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 7B   | (04)000004       */ ldfld      valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ System.Security.Cryptography.IncrementalHash/*02000004*/::_algorithmName /* 04000004 */
    IL_0006:  /* 2A   |                  */ ret
  } // end of method IncrementalHash::get_AlgorithmName

  .method /*06000049*/ public hidebysig instance void 
          AppendData(uint8[] data) cil managed
  // SIG: 20 01 01 1D 05
  {
    // Method begins at RVA 0x24b1
    // Code size       26 (0x1a)
    .maxstack  8
    IL_0000:  /* 03   |                  */ ldarg.1
    IL_0001:  /* 2D   | 0B               */ brtrue.s   IL_000e

    IL_0003:  /* 72   | (70)001083       */ ldstr      "data" /* 70001083 */
    IL_0008:  /* 73   | (0A)00000E       */ newobj     instance void [mscorlib/*23000001*/]System.ArgumentNullException/*0100000E*/::.ctor(string) /* 0A00000E */
    IL_000d:  /* 7A   |                  */ throw

    IL_000e:  /* 02   |                  */ ldarg.0
    IL_000f:  /* 03   |                  */ ldarg.1
    IL_0010:  /* 16   |                  */ ldc.i4.0
    IL_0011:  /* 03   |                  */ ldarg.1
    IL_0012:  /* 8E   |                  */ ldlen
    IL_0013:  /* 69   |                  */ conv.i4
    IL_0014:  /* 28   | (06)00004A       */ call       instance void System.Security.Cryptography.IncrementalHash/*02000004*/::AppendData(uint8[],
                                                                                                                                          int32,
                                                                                                                                          int32) /* 0600004A */
    IL_0019:  /* 2A   |                  */ ret
  } // end of method IncrementalHash::AppendData

  .method /*0600004A*/ public hidebysig instance void 
          AppendData(uint8[] data,
                     int32 offset,
                     int32 count) cil managed
  // SIG: 20 03 01 1D 05 08 08
  {
    // Method begins at RVA 0x24cc
    // Code size       147 (0x93)
    .maxstack  6
    IL_0000:  /* 03   |                  */ ldarg.1
    IL_0001:  /* 2D   | 0B               */ brtrue.s   IL_000e

    IL_0003:  /* 72   | (70)001083       */ ldstr      "data" /* 70001083 */
    IL_0008:  /* 73   | (0A)00000E       */ newobj     instance void [mscorlib/*23000001*/]System.ArgumentNullException/*0100000E*/::.ctor(string) /* 0A00000E */
    IL_000d:  /* 7A   |                  */ throw

    IL_000e:  /* 04   |                  */ ldarg.2
    IL_000f:  /* 16   |                  */ ldc.i4.0
    IL_0010:  /* 2F   | 10               */ bge.s      IL_0022

    IL_0012:  /* 72   | (70)00108D       */ ldstr      "offset" /* 7000108D */
    IL_0017:  /* 28   | (06)000008       */ call       string System.SR/*02000003*/::get_ArgumentOutOfRange_NeedNonNegNum() /* 06000008 */
    IL_001c:  /* 73   | (0A)00000F       */ newobj     instance void [mscorlib/*23000001*/]System.ArgumentOutOfRangeException/*0100000F*/::.ctor(string,
                                                                                                                                                 string) /* 0A00000F */
    IL_0021:  /* 7A   |                  */ throw

    IL_0022:  /* 05   |                  */ ldarg.3
    IL_0023:  /* 16   |                  */ ldc.i4.0
    IL_0024:  /* 32   | 06               */ blt.s      IL_002c

    IL_0026:  /* 05   |                  */ ldarg.3
    IL_0027:  /* 03   |                  */ ldarg.1
    IL_0028:  /* 8E   |                  */ ldlen
    IL_0029:  /* 69   |                  */ conv.i4
    IL_002a:  /* 31   | 0B               */ ble.s      IL_0037

    IL_002c:  /* 72   | (70)00109B       */ ldstr      "count" /* 7000109B */
    IL_0031:  /* 73   | (0A)000010       */ newobj     instance void [mscorlib/*23000001*/]System.ArgumentOutOfRangeException/*0100000F*/::.ctor(string) /* 0A000010 */
    IL_0036:  /* 7A   |                  */ throw

    IL_0037:  /* 03   |                  */ ldarg.1
    IL_0038:  /* 8E   |                  */ ldlen
    IL_0039:  /* 69   |                  */ conv.i4
    IL_003a:  /* 05   |                  */ ldarg.3
    IL_003b:  /* 59   |                  */ sub
    IL_003c:  /* 04   |                  */ ldarg.2
    IL_003d:  /* 2F   | 0B               */ bge.s      IL_004a

    IL_003f:  /* 28   | (06)00000A       */ call       string System.SR/*02000003*/::get_Argument_InvalidOffLen() /* 0600000A */
    IL_0044:  /* 73   | (0A)000011       */ newobj     instance void [mscorlib/*23000001*/]System.ArgumentException/*01000010*/::.ctor(string) /* 0A000011 */
    IL_0049:  /* 7A   |                  */ throw

    IL_004a:  /* 02   |                  */ ldarg.0
    IL_004b:  /* 7B   | (04)000006       */ ldfld      bool System.Security.Cryptography.IncrementalHash/*02000004*/::_disposed /* 04000006 */
    IL_0050:  /* 2C   | 15               */ brfalse.s  IL_0067

    IL_0052:  /* D0   | (02)000004       */ ldtoken    System.Security.Cryptography.IncrementalHash/*02000004*/
    IL_0057:  /* 28   | (0A)00000C       */ call       class [mscorlib/*23000001*/]System.Type/*01000005*/ [mscorlib/*23000001*/]System.Type/*01000005*/::GetTypeFromHandle(valuetype [mscorlib/*23000001*/]System.RuntimeTypeHandle/*0100000A*/) /* 0A00000C */
    IL_005c:  /* 6F   | (0A)000012       */ callvirt   instance string [mscorlib/*23000001*/]System.Reflection.MemberInfo/*01000011*/::get_Name() /* 0A000012 */
    IL_0061:  /* 73   | (0A)000013       */ newobj     instance void [mscorlib/*23000001*/]System.ObjectDisposedException/*01000012*/::.ctor(string) /* 0A000013 */
    IL_0066:  /* 7A   |                  */ throw

    IL_0067:  /* 02   |                  */ ldarg.0
    IL_0068:  /* 7B   | (04)000007       */ ldfld      bool System.Security.Cryptography.IncrementalHash/*02000004*/::_resetPending /* 04000007 */
    IL_006d:  /* 2C   | 12               */ brfalse.s  IL_0081

    IL_006f:  /* 02   |                  */ ldarg.0
    IL_0070:  /* 7B   | (04)000005       */ ldfld      class [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/ System.Security.Cryptography.IncrementalHash/*02000004*/::_hash /* 04000005 */
    IL_0075:  /* 6F   | (0A)000014       */ callvirt   instance void [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/::Initialize() /* 0A000014 */
    IL_007a:  /* 02   |                  */ ldarg.0
    IL_007b:  /* 16   |                  */ ldc.i4.0
    IL_007c:  /* 7D   | (04)000007       */ stfld      bool System.Security.Cryptography.IncrementalHash/*02000004*/::_resetPending /* 04000007 */
    IL_0081:  /* 02   |                  */ ldarg.0
    IL_0082:  /* 7B   | (04)000005       */ ldfld      class [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/ System.Security.Cryptography.IncrementalHash/*02000004*/::_hash /* 04000005 */
    IL_0087:  /* 03   |                  */ ldarg.1
    IL_0088:  /* 04   |                  */ ldarg.2
    IL_0089:  /* 05   |                  */ ldarg.3
    IL_008a:  /* 14   |                  */ ldnull
    IL_008b:  /* 16   |                  */ ldc.i4.0
    IL_008c:  /* 6F   | (0A)000015       */ callvirt   instance int32 [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/::TransformBlock(uint8[],
                                                                                                                                                                   int32,
                                                                                                                                                                   int32,
                                                                                                                                                                   uint8[],
                                                                                                                                                                   int32) /* 0A000015 */
    IL_0091:  /* 26   |                  */ pop
    IL_0092:  /* 2A   |                  */ ret
  } // end of method IncrementalHash::AppendData

  .method /*0600004B*/ public hidebysig instance uint8[] 
          GetHashAndReset() cil managed
  // SIG: 20 00 1D 05
  {
    // Method begins at RVA 0x256c
    // Code size       88 (0x58)
    .maxstack  4
    .locals /*11000002*/ init (uint8[] V_0)
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 7B   | (04)000006       */ ldfld      bool System.Security.Cryptography.IncrementalHash/*02000004*/::_disposed /* 04000006 */
    IL_0006:  /* 2C   | 15               */ brfalse.s  IL_001d

    IL_0008:  /* D0   | (02)000004       */ ldtoken    System.Security.Cryptography.IncrementalHash/*02000004*/
    IL_000d:  /* 28   | (0A)00000C       */ call       class [mscorlib/*23000001*/]System.Type/*01000005*/ [mscorlib/*23000001*/]System.Type/*01000005*/::GetTypeFromHandle(valuetype [mscorlib/*23000001*/]System.RuntimeTypeHandle/*0100000A*/) /* 0A00000C */
    IL_0012:  /* 6F   | (0A)000012       */ callvirt   instance string [mscorlib/*23000001*/]System.Reflection.MemberInfo/*01000011*/::get_Name() /* 0A000012 */
    IL_0017:  /* 73   | (0A)000013       */ newobj     instance void [mscorlib/*23000001*/]System.ObjectDisposedException/*01000012*/::.ctor(string) /* 0A000013 */
    IL_001c:  /* 7A   |                  */ throw

    IL_001d:  /* 02   |                  */ ldarg.0
    IL_001e:  /* 7B   | (04)000007       */ ldfld      bool System.Security.Cryptography.IncrementalHash/*02000004*/::_resetPending /* 04000007 */
    IL_0023:  /* 2C   | 0B               */ brfalse.s  IL_0030

    IL_0025:  /* 02   |                  */ ldarg.0
    IL_0026:  /* 7B   | (04)000005       */ ldfld      class [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/ System.Security.Cryptography.IncrementalHash/*02000004*/::_hash /* 04000005 */
    IL_002b:  /* 6F   | (0A)000014       */ callvirt   instance void [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/::Initialize() /* 0A000014 */
    IL_0030:  /* 02   |                  */ ldarg.0
    IL_0031:  /* 7B   | (04)000005       */ ldfld      class [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/ System.Security.Cryptography.IncrementalHash/*02000004*/::_hash /* 04000005 */
    IL_0036:  /* 28   | (2B)000001       */ call       !!0[] [mscorlib/*23000001*/]System.Array/*01000013*/::Empty<uint8>() /* 2B000001 */
    IL_003b:  /* 16   |                  */ ldc.i4.0
    IL_003c:  /* 16   |                  */ ldc.i4.0
    IL_003d:  /* 6F   | (0A)000017       */ callvirt   instance uint8[] [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/::TransformFinalBlock(uint8[],
                                                                                                                                                                          int32,
                                                                                                                                                                          int32) /* 0A000017 */
    IL_0042:  /* 26   |                  */ pop
    IL_0043:  /* 02   |                  */ ldarg.0
    IL_0044:  /* 7B   | (04)000005       */ ldfld      class [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/ System.Security.Cryptography.IncrementalHash/*02000004*/::_hash /* 04000005 */
    IL_0049:  /* 6F   | (0A)000018       */ callvirt   instance uint8[] [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/::get_Hash() /* 0A000018 */
    IL_004e:  /* 0A   |                  */ stloc.0
    IL_004f:  /* 02   |                  */ ldarg.0
    IL_0050:  /* 17   |                  */ ldc.i4.1
    IL_0051:  /* 7D   | (04)000007       */ stfld      bool System.Security.Cryptography.IncrementalHash/*02000004*/::_resetPending /* 04000007 */
    IL_0056:  /* 06   |                  */ ldloc.0
    IL_0057:  /* 2A   |                  */ ret
  } // end of method IncrementalHash::GetHashAndReset

  .method /*0600004C*/ public hidebysig newslot virtual final 
          instance void  Dispose() cil managed
  // SIG: 20 00 01
  {
    // Method begins at RVA 0x25d0
    // Code size       34 (0x22)
    .maxstack  8
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 17   |                  */ ldc.i4.1
    IL_0002:  /* 7D   | (04)000006       */ stfld      bool System.Security.Cryptography.IncrementalHash/*02000004*/::_disposed /* 04000006 */
    IL_0007:  /* 02   |                  */ ldarg.0
    IL_0008:  /* 7B   | (04)000005       */ ldfld      class [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/ System.Security.Cryptography.IncrementalHash/*02000004*/::_hash /* 04000005 */
    IL_000d:  /* 2C   | 12               */ brfalse.s  IL_0021

    IL_000f:  /* 02   |                  */ ldarg.0
    IL_0010:  /* 7B   | (04)000005       */ ldfld      class [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/ System.Security.Cryptography.IncrementalHash/*02000004*/::_hash /* 04000005 */
    IL_0015:  /* 6F   | (0A)000019       */ callvirt   instance void [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/::Dispose() /* 0A000019 */
    IL_001a:  /* 02   |                  */ ldarg.0
    IL_001b:  /* 14   |                  */ ldnull
    IL_001c:  /* 7D   | (04)000005       */ stfld      class [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/ System.Security.Cryptography.IncrementalHash/*02000004*/::_hash /* 04000005 */
    IL_0021:  /* 2A   |                  */ ret
  } // end of method IncrementalHash::Dispose

  .method /*0600004D*/ public hidebysig static 
          class System.Security.Cryptography.IncrementalHash/*02000004*/ 
          CreateHash(valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ hashAlgorithm) cil managed
  // SIG: 00 01 12 10 11 31
  {
    // Method begins at RVA 0x25f3
    // Code size       43 (0x2b)
    .maxstack  8
    IL_0000:  /* 0F   | 00               */ ldarga.s   hashAlgorithm
    IL_0002:  /* 28   | (0A)00001A       */ call       instance string [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::get_Name() /* 0A00001A */
    IL_0007:  /* 28   | (0A)00001B       */ call       bool [mscorlib/*23000001*/]System.String/*01000006*/::IsNullOrEmpty(string) /* 0A00001B */
    IL_000c:  /* 2C   | 10               */ brfalse.s  IL_001e

    IL_000e:  /* 28   | (06)000016       */ call       string System.SR/*02000003*/::get_Cryptography_HashAlgorithmNameNullOrEmpty() /* 06000016 */
    IL_0013:  /* 72   | (70)0010A7       */ ldstr      "hashAlgorithm" /* 700010A7 */
    IL_0018:  /* 73   | (0A)00001C       */ newobj     instance void [mscorlib/*23000001*/]System.ArgumentException/*01000010*/::.ctor(string,
                                                                                                                                       string) /* 0A00001C */
    IL_001d:  /* 7A   |                  */ throw

    IL_001e:  /* 02   |                  */ ldarg.0
    IL_001f:  /* 02   |                  */ ldarg.0
    IL_0020:  /* 28   | (06)00004F       */ call       class [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/ System.Security.Cryptography.IncrementalHash/*02000004*/::GetHashAlgorithm(valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/) /* 0600004F */
    IL_0025:  /* 73   | (06)000047       */ newobj     instance void System.Security.Cryptography.IncrementalHash/*02000004*/::.ctor(valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/,
                                                                                                                                     class [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/) /* 06000047 */
    IL_002a:  /* 2A   |                  */ ret
  } // end of method IncrementalHash::CreateHash

  .method /*0600004E*/ public hidebysig static 
          class System.Security.Cryptography.IncrementalHash/*02000004*/ 
          CreateHMAC(valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ hashAlgorithm,
                     uint8[] key) cil managed
  // SIG: 00 02 12 10 11 31 1D 05
  {
    // Method begins at RVA 0x261f
    // Code size       58 (0x3a)
    .maxstack  8
    IL_0000:  /* 03   |                  */ ldarg.1
    IL_0001:  /* 2D   | 0B               */ brtrue.s   IL_000e

    IL_0003:  /* 72   | (70)0010C3       */ ldstr      "key" /* 700010C3 */
    IL_0008:  /* 73   | (0A)00000E       */ newobj     instance void [mscorlib/*23000001*/]System.ArgumentNullException/*0100000E*/::.ctor(string) /* 0A00000E */
    IL_000d:  /* 7A   |                  */ throw

    IL_000e:  /* 0F   | 00               */ ldarga.s   hashAlgorithm
    IL_0010:  /* 28   | (0A)00001A       */ call       instance string [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::get_Name() /* 0A00001A */
    IL_0015:  /* 28   | (0A)00001B       */ call       bool [mscorlib/*23000001*/]System.String/*01000006*/::IsNullOrEmpty(string) /* 0A00001B */
    IL_001a:  /* 2C   | 10               */ brfalse.s  IL_002c

    IL_001c:  /* 28   | (06)000016       */ call       string System.SR/*02000003*/::get_Cryptography_HashAlgorithmNameNullOrEmpty() /* 06000016 */
    IL_0021:  /* 72   | (70)0010A7       */ ldstr      "hashAlgorithm" /* 700010A7 */
    IL_0026:  /* 73   | (0A)00001C       */ newobj     instance void [mscorlib/*23000001*/]System.ArgumentException/*01000010*/::.ctor(string,
                                                                                                                                       string) /* 0A00001C */
    IL_002b:  /* 7A   |                  */ throw

    IL_002c:  /* 02   |                  */ ldarg.0
    IL_002d:  /* 02   |                  */ ldarg.0
    IL_002e:  /* 03   |                  */ ldarg.1
    IL_002f:  /* 28   | (06)000050       */ call       class [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/ System.Security.Cryptography.IncrementalHash/*02000004*/::GetHMAC(valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/,
                                                                                                                                                                                                            uint8[]) /* 06000050 */
    IL_0034:  /* 73   | (06)000047       */ newobj     instance void System.Security.Cryptography.IncrementalHash/*02000004*/::.ctor(valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/,
                                                                                                                                     class [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/) /* 06000047 */
    IL_0039:  /* 2A   |                  */ ret
  } // end of method IncrementalHash::CreateHMAC

  .method /*0600004F*/ private hidebysig static 
          class [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/ 
          GetHashAlgorithm(valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ hashAlgorithm) cil managed
  // SIG: 00 01 12 35 11 31
  {
    // Method begins at RVA 0x265c
    // Code size       106 (0x6a)
    .maxstack  2
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)00001D       */ call       valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::get_MD5() /* 0A00001D */
    IL_0006:  /* 28   | (0A)00001E       */ call       bool [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::op_Equality(valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/,
                                                                                                                                                          valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/) /* 0A00001E */
    IL_000b:  /* 2C   | 06               */ brfalse.s  IL_0013

    IL_000d:  /* 73   | (0A)00001F       */ newobj     instance void [mscorlib/*23000001*/]System.Security.Cryptography.MD5CryptoServiceProvider/*01000014*/::.ctor() /* 0A00001F */
    IL_0012:  /* 2A   |                  */ ret

    IL_0013:  /* 02   |                  */ ldarg.0
    IL_0014:  /* 28   | (0A)000020       */ call       valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::get_SHA1() /* 0A000020 */
    IL_0019:  /* 28   | (0A)00001E       */ call       bool [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::op_Equality(valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/,
                                                                                                                                                          valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/) /* 0A00001E */
    IL_001e:  /* 2C   | 06               */ brfalse.s  IL_0026

    IL_0020:  /* 73   | (0A)000021       */ newobj     instance void [mscorlib/*23000001*/]System.Security.Cryptography.SHA1CryptoServiceProvider/*01000015*/::.ctor() /* 0A000021 */
    IL_0025:  /* 2A   |                  */ ret

    IL_0026:  /* 02   |                  */ ldarg.0
    IL_0027:  /* 28   | (0A)000022       */ call       valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::get_SHA256() /* 0A000022 */
    IL_002c:  /* 28   | (0A)00001E       */ call       bool [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::op_Equality(valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/,
                                                                                                                                                          valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/) /* 0A00001E */
    IL_0031:  /* 2C   | 06               */ brfalse.s  IL_0039

    IL_0033:  /* 73   | (0A)000023       */ newobj     instance void [System.Core/*23000002*/]System.Security.Cryptography.SHA256CryptoServiceProvider/*01000016*/::.ctor() /* 0A000023 */
    IL_0038:  /* 2A   |                  */ ret

    IL_0039:  /* 02   |                  */ ldarg.0
    IL_003a:  /* 28   | (0A)000024       */ call       valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::get_SHA384() /* 0A000024 */
    IL_003f:  /* 28   | (0A)00001E       */ call       bool [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::op_Equality(valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/,
                                                                                                                                                          valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/) /* 0A00001E */
    IL_0044:  /* 2C   | 06               */ brfalse.s  IL_004c

    IL_0046:  /* 73   | (0A)000025       */ newobj     instance void [System.Core/*23000002*/]System.Security.Cryptography.SHA384CryptoServiceProvider/*01000017*/::.ctor() /* 0A000025 */
    IL_004b:  /* 2A   |                  */ ret

    IL_004c:  /* 02   |                  */ ldarg.0
    IL_004d:  /* 28   | (0A)000026       */ call       valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::get_SHA512() /* 0A000026 */
    IL_0052:  /* 28   | (0A)00001E       */ call       bool [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::op_Equality(valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/,
                                                                                                                                                          valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/) /* 0A00001E */
    IL_0057:  /* 2C   | 06               */ brfalse.s  IL_005f

    IL_0059:  /* 73   | (0A)000027       */ newobj     instance void [System.Core/*23000002*/]System.Security.Cryptography.SHA512CryptoServiceProvider/*01000018*/::.ctor() /* 0A000027 */
    IL_005e:  /* 2A   |                  */ ret

    IL_005f:  /* 20   | 08000980         */ ldc.i4     0x80090008
    IL_0064:  /* 73   | (0A)000028       */ newobj     instance void [mscorlib/*23000001*/]System.Security.Cryptography.CryptographicException/*01000019*/::.ctor(int32) /* 0A000028 */
    IL_0069:  /* 7A   |                  */ throw
  } // end of method IncrementalHash::GetHashAlgorithm

  .method /*06000050*/ private hidebysig static 
          class [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithm/*0100000D*/ 
          GetHMAC(valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ hashAlgorithm,
                  uint8[] key) cil managed
  // SIG: 00 02 12 35 11 31 1D 05
  {
    // Method begins at RVA 0x26d4
    // Code size       111 (0x6f)
    .maxstack  2
    IL_0000:  /* 02   |                  */ ldarg.0
    IL_0001:  /* 28   | (0A)00001D       */ call       valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::get_MD5() /* 0A00001D */
    IL_0006:  /* 28   | (0A)00001E       */ call       bool [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::op_Equality(valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/,
                                                                                                                                                          valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/) /* 0A00001E */
    IL_000b:  /* 2C   | 07               */ brfalse.s  IL_0014

    IL_000d:  /* 03   |                  */ ldarg.1
    IL_000e:  /* 73   | (0A)000029       */ newobj     instance void [mscorlib/*23000001*/]System.Security.Cryptography.HMACMD5/*0100001A*/::.ctor(uint8[]) /* 0A000029 */
    IL_0013:  /* 2A   |                  */ ret

    IL_0014:  /* 02   |                  */ ldarg.0
    IL_0015:  /* 28   | (0A)000020       */ call       valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::get_SHA1() /* 0A000020 */
    IL_001a:  /* 28   | (0A)00001E       */ call       bool [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::op_Equality(valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/,
                                                                                                                                                          valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/) /* 0A00001E */
    IL_001f:  /* 2C   | 07               */ brfalse.s  IL_0028

    IL_0021:  /* 03   |                  */ ldarg.1
    IL_0022:  /* 73   | (0A)00002A       */ newobj     instance void [mscorlib/*23000001*/]System.Security.Cryptography.HMACSHA1/*0100001B*/::.ctor(uint8[]) /* 0A00002A */
    IL_0027:  /* 2A   |                  */ ret

    IL_0028:  /* 02   |                  */ ldarg.0
    IL_0029:  /* 28   | (0A)000022       */ call       valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::get_SHA256() /* 0A000022 */
    IL_002e:  /* 28   | (0A)00001E       */ call       bool [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::op_Equality(valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/,
                                                                                                                                                          valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/) /* 0A00001E */
    IL_0033:  /* 2C   | 07               */ brfalse.s  IL_003c

    IL_0035:  /* 03   |                  */ ldarg.1
    IL_0036:  /* 73   | (0A)00002B       */ newobj     instance void [mscorlib/*23000001*/]System.Security.Cryptography.HMACSHA256/*0100001C*/::.ctor(uint8[]) /* 0A00002B */
    IL_003b:  /* 2A   |                  */ ret

    IL_003c:  /* 02   |                  */ ldarg.0
    IL_003d:  /* 28   | (0A)000024       */ call       valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::get_SHA384() /* 0A000024 */
    IL_0042:  /* 28   | (0A)00001E       */ call       bool [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::op_Equality(valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/,
                                                                                                                                                          valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/) /* 0A00001E */
    IL_0047:  /* 2C   | 07               */ brfalse.s  IL_0050

    IL_0049:  /* 03   |                  */ ldarg.1
    IL_004a:  /* 73   | (0A)00002C       */ newobj     instance void [mscorlib/*23000001*/]System.Security.Cryptography.HMACSHA384/*0100001D*/::.ctor(uint8[]) /* 0A00002C */
    IL_004f:  /* 2A   |                  */ ret

    IL_0050:  /* 02   |                  */ ldarg.0
    IL_0051:  /* 28   | (0A)000026       */ call       valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::get_SHA512() /* 0A000026 */
    IL_0056:  /* 28   | (0A)00001E       */ call       bool [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/::op_Equality(valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/,
                                                                                                                                                          valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/) /* 0A00001E */
    IL_005b:  /* 2C   | 07               */ brfalse.s  IL_0064

    IL_005d:  /* 03   |                  */ ldarg.1
    IL_005e:  /* 73   | (0A)00002D       */ newobj     instance void [mscorlib/*23000001*/]System.Security.Cryptography.HMACSHA512/*0100001E*/::.ctor(uint8[]) /* 0A00002D */
    IL_0063:  /* 2A   |                  */ ret

    IL_0064:  /* 20   | 08000980         */ ldc.i4     0x80090008
    IL_0069:  /* 73   | (0A)000028       */ newobj     instance void [mscorlib/*23000001*/]System.Security.Cryptography.CryptographicException/*01000019*/::.ctor(int32) /* 0A000028 */
    IL_006e:  /* 7A   |                  */ throw
  } // end of method IncrementalHash::GetHMAC

  .property /*17000041*/ instance callconv(8) valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/
          AlgorithmName()
  {
    .get instance valuetype [mscorlib/*23000001*/]System.Security.Cryptography.HashAlgorithmName/*0100000C*/ System.Security.Cryptography.IncrementalHash/*02000004*/::get_AlgorithmName() /* 06000048 */
  } // end of property IncrementalHash::AlgorithmName
} // end of class System.Security.Cryptography.IncrementalHash


// =============================================================

// *********** DISASSEMBLY COMPLETE ***********************
