<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.Hosting</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.Hosting.BackgroundServiceExceptionBehavior">
      <summary>
            Specifies a behavior that the <see cref="T:Microsoft.Extensions.Hosting.IHost" /> will honor if an
            unhandled exception occurs in one of its <see cref="T:Microsoft.Extensions.Hosting.BackgroundService" /> instances.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Hosting.BackgroundServiceExceptionBehavior.Ignore">
      <summary>
            Ignore exceptions thrown in <see cref="T:Microsoft.Extensions.Hosting.BackgroundService" />.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Hosting.BackgroundServiceExceptionBehavior.StopHost">
      <summary>
            Stops the <see cref="T:Microsoft.Extensions.Hosting.IHost" /> instance.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.ConsoleLifetimeOptions">
      <summary>
            Provides option flags for <see cref="T:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.ConsoleLifetimeOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.ConsoleLifetimeOptions" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.ConsoleLifetimeOptions.SuppressStatusMessages">
      <summary>
            Gets or sets a value that indicates if host lifetime status messages should be suppressed, such as on startup.</summary>
      <returns>
        <see langword="true" /> if host lifetime status messages should be suppressed.
            The default is <see langword="false" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.Host">
      <summary>
            Provides convenience methods for creating instances of <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> with pre-configured defaults.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Host.CreateApplicationBuilder">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" /> class with pre-configured defaults.</summary>
      <returns>The initialized <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Host.CreateApplicationBuilder(Microsoft.Extensions.Hosting.HostApplicationBuilderSettings)">
      <summary>Initializes a new instance of the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.Hosting.HostApplicationBuilder" /> class with preconfigured defaults.</summary>
      <param name="settings">Controls the initial configuration and other settings for constructing the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" />.</param>
      <returns>A new <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.Hosting.HostApplicationBuilder"></xref> instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Host.CreateApplicationBuilder(System.String[])">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" /> class with pre-configured defaults.</summary>
      <param name="args">The command line args.</param>
      <returns>The initialized <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Host.CreateDefaultBuilder">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.HostBuilder" /> class with pre-configured defaults.</summary>
      <returns>The initialized <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Host.CreateDefaultBuilder(System.String[])">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.HostBuilder" /> class with pre-configured defaults.</summary>
      <param name="args">The command line args.</param>
      <returns>The initialized <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Host.CreateEmptyApplicationBuilder(Microsoft.Extensions.Hosting.HostApplicationBuilderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" /> class with no pre-configured defaults.</summary>
      <param name="settings">Controls the initial configuration and other settings for constructing the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" />.</param>
      <returns>The initialized <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.HostApplicationBuilder">
      <summary>
            Represents a hosted applications and services builder that helps manage configuration, logging, lifetime, and more.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostApplicationBuilder.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" /> class with preconfigured defaults.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostApplicationBuilder.#ctor(Microsoft.Extensions.Hosting.HostApplicationBuilderSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" />.</summary>
      <param name="settings">Settings controlling initial configuration and whether default settings should be used.</param>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostApplicationBuilder.#ctor(System.String[])">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" /> class with preconfigured defaults.</summary>
      <param name="args">The command line args.</param>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostApplicationBuilder.Build">
      <summary>
            Builds the host. This method can only be called once.</summary>
      <returns>An initialized <see cref="T:Microsoft.Extensions.Hosting.IHost" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostApplicationBuilder.ConfigureContainer``1(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0},System.Action{``0})">
      <summary>Registers a <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1" /> instance to be used to create the <xref data-throw-if-not-resolved="true" uid="System.IServiceProvider" />.</summary>
      <param name="factory">The <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1"></xref>.</param>
      <param name="configure">A delegate used to configure the . This delegate can be used to configure services using APIs that are specific to the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1"></xref> implementation.</param>
      <typeparam name="TContainerBuilder">The type of builder provided by the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1"></xref>.</typeparam>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Configuration">
      <summary>
            Gets the set of key/value configuration properties.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Environment">
      <summary>Gets information about the hosting environment an application is running in.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Logging">
      <summary>Gets a collection of logging providers for the application to compose. This property is useful for adding new logging providers.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Metrics">
      <summary>Allows enabling metrics and directing their output.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Microsoft#Extensions#Hosting#IHostApplicationBuilder#Configuration">
      <summary>Gets the set of key/value configuration properties.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Microsoft#Extensions#Hosting#IHostApplicationBuilder#Properties">
      <summary>Gets a central location for sharing state between components during the host building process.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Services">
      <summary>Gets a collection of services for the application to compose. This property is useful for adding user-provided or framework-provided services.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings">
      <summary>
            Settings for constructing an <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.#ctor">
      <summary>
            Initializes an instance of the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.ApplicationName">
      <summary>
            Gets or sets the application name.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.Args">
      <summary>
            Gets or sets the command-line arguments to add to the <see cref="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Configuration" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.Configuration">
      <summary>
            Gets or sets the initial configuration sources to be added to the <see cref="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Configuration" />. These sources can influence
            the <see cref="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Environment" /> through the use of <see cref="T:Microsoft.Extensions.Hosting.HostDefaults" /> keys. Disposing the built
            <see cref="T:Microsoft.Extensions.Hosting.IHost" /> disposes the <see cref="T:Microsoft.Extensions.Configuration.ConfigurationManager" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.ContentRootPath">
      <summary>
            Gets or sets the content root path.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.DisableDefaults">
      <summary>
            Gets or sets a value that indicates whether the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" /> instance is configured with pre-configured defaults.</summary>
      <returns>
        <see langword="false" /> if the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" /> instance is configured with pre-configured defaults.
            This has a similar effect to calling <see cref="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureDefaults(Microsoft.Extensions.Hosting.IHostBuilder,System.String[])" />.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.EnvironmentName">
      <summary>
            Gets or sets the environment name.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.HostBuilder">
      <summary>
            A program initialization utility.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostBuilder.#ctor">
      <summary>
            Initializes a new instance of <see cref="T:Microsoft.Extensions.Hosting.HostBuilder" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostBuilder.Build">
      <summary>
            Run the given actions to initialize the host. This can only be called once.</summary>
      <returns>An initialized <see cref="T:Microsoft.Extensions.Hosting.IHost" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostBuilder.ConfigureAppConfiguration(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Configuration.IConfigurationBuilder})">
      <summary>
            Sets up the configuration for the remainder of the build process and application. This can be called multiple times and
            the results will be additive. The results will be available at <see cref="P:Microsoft.Extensions.Hosting.HostBuilderContext.Configuration" /> for
            subsequent operations, as well as in <see cref="P:Microsoft.Extensions.Hosting.IHost.Services" />.</summary>
      <param name="configureDelegate">The delegate for configuring the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> that will be used
            to construct the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> for the host.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostBuilder.ConfigureContainer``1(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,``0})">
      <summary>
            Enables configuring the instantiated dependency container. This can be called multiple times and
            the results will be additive.</summary>
      <param name="configureDelegate">The delegate for configuring the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> that will be used
            to construct the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> for the host.</param>
      <typeparam name="TContainerBuilder">The type of the builder to create.</typeparam>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostBuilder.ConfigureHostConfiguration(System.Action{Microsoft.Extensions.Configuration.IConfigurationBuilder})">
      <summary>
            Set up the configuration for the builder itself. This will be used to initialize the <see cref="T:Microsoft.Extensions.Hosting.IHostEnvironment" />
            for use later in the build process. This can be called multiple times and the results will be additive.</summary>
      <param name="configureDelegate">The delegate for configuring the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> that will be used
            to construct the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> for the host.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostBuilder.ConfigureServices(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection})">
      <summary>
            Adds services to the container. This can be called multiple times and the results will be additive.</summary>
      <param name="configureDelegate">The delegate for configuring the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> that will be used
            to construct the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> for the host.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostBuilder.UseServiceProviderFactory``1(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0})">
      <summary>
            Overrides the factory used to create the service provider.</summary>
      <param name="factory">A factory used for creating service providers.</param>
      <typeparam name="TContainerBuilder">The type of the builder to create.</typeparam>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostBuilder.UseServiceProviderFactory``1(System.Func{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0}})">
      <summary>
            Overrides the factory used to create the service provider.</summary>
      <param name="factory">A factory used for creating service providers.</param>
      <typeparam name="TContainerBuilder">The type of the builder to create.</typeparam>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostBuilder.Properties">
      <summary>
            Gets a central location for sharing state between components during the host building process.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions">
      <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> from the hosting package.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureAppConfiguration(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Configuration.IConfigurationBuilder})">
      <summary>
            Sets up the configuration for the remainder of the build process and application. This can be called multiple times and
            the results will be additive. The results will be available at <see cref="P:Microsoft.Extensions.Hosting.HostBuilderContext.Configuration" /> for
            subsequent operations, as well as in <see cref="P:Microsoft.Extensions.Hosting.IHost.Services" />.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureDelegate">The delegate for configuring the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> that will be used
            to construct the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> for the host.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureContainer``1(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{``0})">
      <summary>
            Enables configuring the instantiated dependency container. This can be called multiple times and
            the results will be additive.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureDelegate">The delegate for configuring the <typeparamref name="TContainerBuilder" />.</param>
      <typeparam name="TContainerBuilder">The type of builder.</typeparam>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureDefaults(Microsoft.Extensions.Hosting.IHostBuilder,System.String[])">
      <summary>
            Configures an existing <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> instance with pre-configured defaults. This will overwrite
            previously configured values and is intended to be called before additional configuration calls.</summary>
      <param name="builder">The existing builder to configure.</param>
      <param name="args">The command line args.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureHostOptions(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Hosting.HostOptions})">
      <summary>
            Adds a delegate for configuring the <see cref="T:Microsoft.Extensions.Hosting.HostOptions" /> of the <see cref="T:Microsoft.Extensions.Hosting.IHost" />.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureOptions">The delegate for configuring the <see cref="T:Microsoft.Extensions.Hosting.HostOptions" />.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureHostOptions(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.HostOptions})">
      <summary>
            Adds a delegate for configuring the <see cref="T:Microsoft.Extensions.Hosting.HostOptions" /> of the <see cref="T:Microsoft.Extensions.Hosting.IHost" />.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureOptions">The delegate for configuring the <see cref="T:Microsoft.Extensions.Hosting.HostOptions" />.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureLogging(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Logging.ILoggingBuilder})">
      <summary>
            Adds a delegate for configuring the provided <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />. This can be called multiple times.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureLogging">The delegate that configures the <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureLogging(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Logging.ILoggingBuilder})">
      <summary>
            Adds a delegate for configuring the provided <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />. This can be called multiple times.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureLogging">The delegate that configures the <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureMetrics(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Diagnostics.Metrics.IMetricsBuilder})">
      <summary>
            Adds a delegate for configuring the provided <see cref="T:Microsoft.Extensions.Diagnostics.Metrics.IMetricsBuilder" />. This can be called multiple times.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureMetrics">The delegate that configures the <see cref="T:Microsoft.Extensions.Diagnostics.Metrics.IMetricsBuilder" />.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureMetrics(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Diagnostics.Metrics.IMetricsBuilder})">
      <summary>
            Adds a delegate for configuring the provided <see cref="T:Microsoft.Extensions.Diagnostics.Metrics.IMetricsBuilder" />. This can be called multiple times.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureMetrics">The delegate that configures the <see cref="T:Microsoft.Extensions.Diagnostics.Metrics.IMetricsBuilder" />.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureServices(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})">
      <summary>
            Adds services to the container. This can be called multiple times and the results will be additive.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureDelegate">The delegate for configuring the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.RunConsoleAsync(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.ConsoleLifetimeOptions},System.Threading.CancellationToken)">
      <summary>
            Enables console support, builds and starts the host, and waits for Ctrl+C or SIGTERM to shut down.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureOptions">The delegate for configuring the <see cref="T:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime" />.</param>
      <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can be used to cancel the console.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that only completes when the token is triggered or shutdown is triggered.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.RunConsoleAsync(Microsoft.Extensions.Hosting.IHostBuilder,System.Threading.CancellationToken)">
      <summary>
            Enables console support, builds and starts the host, and waits for Ctrl+C or SIGTERM to shut down.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can be used to cancel the console.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that only completes when the token is triggered or shutdown is triggered.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.UseConsoleLifetime(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.ConsoleLifetimeOptions})">
      <summary>
            Listens for Ctrl+C or SIGTERM and calls <see cref="M:Microsoft.Extensions.Hosting.IHostApplicationLifetime.StopApplication" /> to start the shutdown process.
            This will unblock extensions like RunAsync and WaitForShutdownAsync.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureOptions">The delegate for configuring the <see cref="T:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime" />.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.UseConsoleLifetime(Microsoft.Extensions.Hosting.IHostBuilder)">
      <summary>
            Listens for Ctrl+C or SIGTERM and calls <see cref="M:Microsoft.Extensions.Hosting.IHostApplicationLifetime.StopApplication" /> to start the shutdown process.
            This will unblock extensions like RunAsync and WaitForShutdownAsync.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.UseContentRoot(Microsoft.Extensions.Hosting.IHostBuilder,System.String)">
      <summary>
            Specifies the content root directory to be used by the host. To avoid the content root directory being
            overwritten by a default value, ensure this is called after defaults are configured.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="contentRoot">Path to root directory of the application.</param>
      <returns>The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.UseDefaultServiceProvider(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.DependencyInjection.ServiceProviderOptions})">
      <summary>
            Specifies the <see cref="T:System.IServiceProvider" /> to be the default one.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configure">The delegate that configures the <see cref="T:System.IServiceProvider" />.</param>
      <returns>The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.UseDefaultServiceProvider(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.ServiceProviderOptions})">
      <summary>
            Specifies the <see cref="T:System.IServiceProvider" /> to be the default one.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configure">The delegate that configures the <see cref="T:System.IServiceProvider" />.</param>
      <returns>The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.UseEnvironment(Microsoft.Extensions.Hosting.IHostBuilder,System.String)">
      <summary>
            Specifies the environment to be used by the host. To avoid the environment being overwritten by a default
            value, ensure this is called after defaults are configured.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="environment">The environment to host the application in.</param>
      <returns>The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.HostOptions">
      <summary>
            Options for <see cref="T:Microsoft.Extensions.Hosting.IHost" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.HostOptions" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostOptions.BackgroundServiceExceptionBehavior">
      <summary>
            Gets or sets the behavior the <see cref="T:Microsoft.Extensions.Hosting.IHost" /> will follow when any of
            its <see cref="T:Microsoft.Extensions.Hosting.BackgroundService" /> instances throw an unhandled exception.</summary>
      <returns>The default is <see cref="F:Microsoft.Extensions.Hosting.BackgroundServiceExceptionBehavior.StopHost" />.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostOptions.ServicesStartConcurrently">
      <summary>
            Gets or sets a value that indicates if the <see cref="T:Microsoft.Extensions.Hosting.IHost" /> will start registered instances of <see cref="T:Microsoft.Extensions.Hosting.IHostedService" /> concurrently or sequentially.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:Microsoft.Extensions.Hosting.IHost" /> will start registered instances of <see cref="T:Microsoft.Extensions.Hosting.IHostedService" /> concurrently; <see langword="false" /> if the <see cref="T:Microsoft.Extensions.Hosting.IHost" /> will start registered instances sequentially. The default is <see langword="false" /> .</returns>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostOptions.ServicesStopConcurrently">
      <summary>
            Gets or sets a value that indicates if the <see cref="T:Microsoft.Extensions.Hosting.IHost" /> will stop registered instances of <see cref="T:Microsoft.Extensions.Hosting.IHostedService" /> concurrently or sequentially.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:Microsoft.Extensions.Hosting.IHost" /> will stop registered instances of <see cref="T:Microsoft.Extensions.Hosting.IHostedService" /> concurrently; <see langword="false" /> if the <see cref="T:Microsoft.Extensions.Hosting.IHost" /> will stop registered instances sequentially. The default is <see langword="false" /> .</returns>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostOptions.ShutdownTimeout">
      <summary>
            Gets or sets the default timeout for <see cref="M:Microsoft.Extensions.Hosting.IHost.StopAsync(System.Threading.CancellationToken)" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostOptions.StartupTimeout">
      <summary>
            Gets or sets the default timeout for <see cref="M:Microsoft.Extensions.Hosting.IHost.StartAsync(System.Threading.CancellationToken)" />.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime">
      <summary>
            Allows consumers to perform cleanup during a graceful shutdown.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.#ctor(Microsoft.Extensions.Logging.ILogger{Microsoft.Extensions.Hosting.Internal.ApplicationLifetime})">
      <summary>
            Initializes an <see cref="T:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime" /> instance using the specified logger.</summary>
      <param name="logger">The logger to initialize this instance with.</param>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.NotifyStarted">
      <summary>
            Signals the ApplicationStarted event and blocks until it completes.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.NotifyStopped">
      <summary>
            Signals the ApplicationStopped event and blocks until it completes.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.StopApplication">
      <summary>
            Signals the ApplicationStopping event and blocks until it completes.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.ApplicationStarted">
      <summary>
            Gets a cancellation token. Triggered when the application host has fully started and is about to wait
            for a graceful shutdown.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.ApplicationStopped">
      <summary>
            Gets a cancellation token. Triggered when the application host is performing a graceful shutdown.
            All requests should be complete at this point. Shutdown will block
            until this event completes.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.ApplicationStopping">
      <summary>
            Gets a cancellation token. Triggered when the application host is performing a graceful shutdown.
            Request might still be in flight. Shutdown will block until this event completes.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime">
      <summary>
            Listens for Ctrl+C or SIGTERM and initiates shutdown.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.ConsoleLifetimeOptions},Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime,Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.HostOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
      <summary>
            Initializes a <see cref="T:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime" /> instance using the specified console lifetime options, host environment, host options, and logger factory.</summary>
      <param name="options">An object used to retrieve <see cref="T:Microsoft.Extensions.Hosting.ConsoleLifetimeOptions" /> instances.</param>
      <param name="environment">Information about the hosting environment an application is running in.</param>
      <param name="applicationLifetime">An object that allows consumers to be notified of application lifetime events.</param>
      <param name="hostOptions">An object used to retrieve <see cref="P:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.HostOptions" /> instances.</param>
      <param name="loggerFactory">An object to configure the logging system and create instances of <see cref="T:Microsoft.Extensions.Logging.ILogger" /> from the registered <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> or <paramref name="environment" /> or <paramref name="applicationLifetime" /> or <paramref name="hostOptions" /> or <paramref name="loggerFactory" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.ConsoleLifetimeOptions},Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime,Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.HostOptions})">
      <summary>
            Initializes a <see cref="T:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime" /> instance using the specified console lifetime options, host environment, host application lifetime, and host options.</summary>
      <param name="options">An object used to retrieve <see cref="T:Microsoft.Extensions.Hosting.ConsoleLifetimeOptions" /> instances.</param>
      <param name="environment">Information about the hosting environment an application is running in.</param>
      <param name="applicationLifetime">An object that allows consumers to be notified of application lifetime events.</param>
      <param name="hostOptions">An object used to retrieve internal host options instances.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> or <paramref name="environment" /> or <paramref name="applicationLifetime" /> or <paramref name="hostOptions" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.Dispose">
      <summary>
            Unregisters the shutdown handlers and disposes the application start and application stop registrations.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.StopAsync(System.Threading.CancellationToken)">
      <summary>
            This method does nothing.</summary>
      <param name="cancellationToken">A cancellation token instance.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents a completed task.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.WaitForStartAsync(System.Threading.CancellationToken)">
      <summary>
            Registers the application start, application stop and shutdown handlers for this application.</summary>
      <param name="cancellationToken">The cancellation token to monitor for cancellation requests.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous registration operation.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.Internal.HostingEnvironment">
      <summary>
            This API supports infrastructure and is not intended to be used
            directly from your code. This API may change or be removed in future releases.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.HostingEnvironment.#ctor">
      <summary>This API supports infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.Internal.HostingEnvironment.ApplicationName">
      <summary>
            This API supports infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.Internal.HostingEnvironment.ContentRootFileProvider">
      <summary>
            This API supports infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.Internal.HostingEnvironment.ContentRootPath">
      <summary>
            This API supports infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.Internal.HostingEnvironment.EnvironmentName">
      <summary>
            This API supports infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases.</summary>
    </member>
  </members>
</doc>