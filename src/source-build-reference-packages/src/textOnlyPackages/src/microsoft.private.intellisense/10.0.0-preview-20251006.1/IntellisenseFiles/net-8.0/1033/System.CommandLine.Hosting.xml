<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.CommandLine.Hosting</name>
  </assembly>
  <members>
    <member name="T:System.CommandLine.Hosting.HostingExtensions" />
    <member name="M:System.CommandLine.Hosting.HostingExtensions.BindCommandLine``1(Microsoft.Extensions.Options.OptionsBuilder{``0})">
      <param name="optionsBuilder" />
      <typeparam name="TOptions" />
    </member>
    <member name="M:System.CommandLine.Hosting.HostingExtensions.GetHost(System.CommandLine.ParseResult)">
      <param name="parseResult" />
    </member>
    <member name="M:System.CommandLine.Hosting.HostingExtensions.GetParseResult(Microsoft.Extensions.Hosting.HostBuilderContext)">
      <param name="context" />
    </member>
    <member name="M:System.CommandLine.Hosting.HostingExtensions.GetParseResult(Microsoft.Extensions.Hosting.IHostBuilder)">
      <param name="hostBuilder" />
    </member>
    <member name="M:System.CommandLine.Hosting.HostingExtensions.UseCommandHandler``1(System.CommandLine.Command)">
      <param name="command" />
      <typeparam name="THandler" />
    </member>
    <member name="M:System.CommandLine.Hosting.HostingExtensions.UseHost(System.CommandLine.CommandLineConfiguration,System.Action{Microsoft.Extensions.Hosting.IHostBuilder})">
      <param name="config" />
      <param name="configureHost" />
    </member>
    <member name="M:System.CommandLine.Hosting.HostingExtensions.UseHost(System.CommandLine.CommandLineConfiguration,System.Func{System.String[],Microsoft.Extensions.Hosting.IHostBuilder},System.Action{Microsoft.Extensions.Hosting.IHostBuilder})">
      <param name="config" />
      <param name="hostBuilderFactory" />
      <param name="configureHost" />
    </member>
    <member name="M:System.CommandLine.Hosting.HostingExtensions.UseInvocationLifetime(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{System.CommandLine.Hosting.InvocationLifetimeOptions})">
      <param name="host" />
      <param name="configureOptions" />
    </member>
    <member name="T:System.CommandLine.Hosting.InvocationLifetime" />
    <member name="M:System.CommandLine.Hosting.InvocationLifetime.#ctor(Microsoft.Extensions.Options.IOptions{System.CommandLine.Hosting.InvocationLifetimeOptions},Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime,Microsoft.Extensions.Logging.ILoggerFactory)">
      <param name="options" />
      <param name="environment" />
      <param name="applicationLifetime" />
      <param name="loggerFactory" />
    </member>
    <member name="M:System.CommandLine.Hosting.InvocationLifetime.Dispose" />
    <member name="M:System.CommandLine.Hosting.InvocationLifetime.StopAsync(System.Threading.CancellationToken)">
      <param name="cancellationToken" />
    </member>
    <member name="M:System.CommandLine.Hosting.InvocationLifetime.WaitForStartAsync(System.Threading.CancellationToken)">
      <param name="cancellationToken" />
    </member>
    <member name="P:System.CommandLine.Hosting.InvocationLifetime.ApplicationLifetime" />
    <member name="P:System.CommandLine.Hosting.InvocationLifetime.Environment" />
    <member name="P:System.CommandLine.Hosting.InvocationLifetime.Options" />
    <member name="T:System.CommandLine.Hosting.InvocationLifetimeOptions" />
    <member name="M:System.CommandLine.Hosting.InvocationLifetimeOptions.#ctor" />
  </members>
</doc>