<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.Diagnostics.Probes</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.DependencyInjection.KubernetesProbesExtensions">
      <summary>
            Extensions for setting up probes for Kubernetes.</summary>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.KubernetesProbesExtensions.AddKubernetesProbes(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationSection)">
      <summary>
            Registers liveness, startup and readiness probes using the configured options.</summary>
      <param name="services">The dependency injection container to add the probe to.</param>
      <param name="section">Configuration for <see cref="T:Microsoft.Extensions.Diagnostics.Probes.KubernetesProbesOptions" />.</param>
      <returns>The value of <paramref name="services" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.KubernetesProbesExtensions.AddKubernetesProbes(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Diagnostics.Probes.KubernetesProbesOptions})">
      <summary>
            Registers liveness, startup and readiness probes using the configured options.</summary>
      <param name="services">The dependency injection container to add the probe to.</param>
      <param name="configure">Configure action for <see cref="T:Microsoft.Extensions.Diagnostics.Probes.KubernetesProbesOptions" />.</param>
      <returns>The value of <paramref name="services" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.KubernetesProbesExtensions.AddKubernetesProbes(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <summary>
            Registers liveness, startup and readiness probes using the default options.</summary>
      <param name="services">The dependency injection container to add the probe to.</param>
      <returns>The value of <paramref name="services" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.DependencyInjection.TcpEndpointProbesExtensions">
      <summary>
            Extension methods for setting up TCP-based health check probes.</summary>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.TcpEndpointProbesExtensions.AddTcpEndpointProbe(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationSection)">
      <summary>
            Registers health status reporting using a TCP port
            if service is considered as healthy <see cref="T:Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
      <param name="configurationSection">Configuration for <see cref="T:Microsoft.Extensions.Diagnostics.Probes.TcpEndpointProbesOptions" />.</param>
      <returns>The value of <paramref name="services" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.TcpEndpointProbesExtensions.AddTcpEndpointProbe(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Diagnostics.Probes.TcpEndpointProbesOptions})">
      <summary>
            Registers health status reporting using a TCP port
            if service is considered as healthy <see cref="T:Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
      <param name="configure">Configuration for <see cref="T:Microsoft.Extensions.Diagnostics.Probes.TcpEndpointProbesOptions" />.</param>
      <returns>The value of <paramref name="services" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.TcpEndpointProbesExtensions.AddTcpEndpointProbe(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,Microsoft.Extensions.Configuration.IConfigurationSection)">
      <summary>
            Registers health status reporting using a TCP port
            if service is considered as healthy <see cref="T:Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
      <param name="name">Name for the options.</param>
      <param name="configurationSection">Configuration for <see cref="T:Microsoft.Extensions.Diagnostics.Probes.TcpEndpointProbesOptions" />.</param>
      <returns>The value of <paramref name="services" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.TcpEndpointProbesExtensions.AddTcpEndpointProbe(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Microsoft.Extensions.Diagnostics.Probes.TcpEndpointProbesOptions})">
      <summary>
            Registers health status reporting using a TCP port
            if service is considered as healthy <see cref="T:Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
      <param name="name">Name for the options.</param>
      <param name="configure">Configuration for <see cref="T:Microsoft.Extensions.Diagnostics.Probes.TcpEndpointProbesOptions" />.</param>
      <returns>The value of <paramref name="services" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.TcpEndpointProbesExtensions.AddTcpEndpointProbe(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
      <summary>
            Registers health status reporting using a TCP port
            if service is considered as healthy <see cref="T:Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
      <param name="name">Name used to retrieve the options.</param>
      <returns>The value of <paramref name="services" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.TcpEndpointProbesExtensions.AddTcpEndpointProbe(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <summary>
            Registers health status reporting using a TCP port
            if service is considered as healthy <see cref="T:Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
      <returns>The value of <paramref name="services" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Diagnostics.Probes.KubernetesProbesOptions">
      <summary>
            Options for Kubernetes probes.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Diagnostics.Probes.KubernetesProbesOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Diagnostics.Probes.KubernetesProbesOptions.LivenessProbe">
      <summary>
            Gets or sets the options for the liveness probe.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.Probes.KubernetesProbesOptions.ReadinessProbe">
      <summary>
            Gets or sets the options for the readiness probe.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.Probes.KubernetesProbesOptions.StartupProbe">
      <summary>
            Gets or sets the options for the startup probe.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Diagnostics.Probes.ProbeTags">
      <summary>
            Standardized health check tags for probes.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Diagnostics.Probes.ProbeTags.Liveness">
      <summary>
            Liveness probe tag.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Diagnostics.Probes.ProbeTags.Readiness">
      <summary>
            Readiness probe tag.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Diagnostics.Probes.ProbeTags.Startup">
      <summary>
            Startup probe tag.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Diagnostics.Probes.TcpEndpointProbesOptions">
      <summary>
            Options to control TCP-based health check probes.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Diagnostics.Probes.TcpEndpointProbesOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Diagnostics.Probes.TcpEndpointProbesOptions.FilterChecks">
      <summary>
            Gets or sets a predicate that is used to include health checks based on user-defined criteria.</summary>
      <returns>
            The default value is <see langword="null" />, which has the effect of enabling all health checks.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.Probes.TcpEndpointProbesOptions.HealthAssessmentPeriod">
      <summary>
            Gets or sets the interval at which the health of the application is assessed.</summary>
      <returns>
            The default value is 30 seconds.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.Probes.TcpEndpointProbesOptions.MaxPendingConnections">
      <summary>
            Gets or sets the maximum length of the pending connections queue.</summary>
      <returns>
            The default value is 10.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.Probes.TcpEndpointProbesOptions.TcpPort">
      <summary>
            Gets or sets the TCP port that gets opened if the service is healthy and closed otherwise.</summary>
      <returns>
            The default value is 2305.</returns>
    </member>
  </members>
</doc>