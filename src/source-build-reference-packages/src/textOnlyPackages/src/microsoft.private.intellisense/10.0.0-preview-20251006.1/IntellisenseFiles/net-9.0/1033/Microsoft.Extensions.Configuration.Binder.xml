<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.Configuration.Binder</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.Configuration.BinderOptions">
      <summary>
            Specifies options used by the <see cref="T:Microsoft.Extensions.Configuration.ConfigurationBinder" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Configuration.BinderOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Configuration.BinderOptions.BindNonPublicProperties">
      <summary>
            Gets or sets a value that indicates whether the binder attempts to set all properties or only public properties.</summary>
      <returns>
        <see langword="true" /> if the binder attempts to set all non-read-only properties; <see langword="false" /> if only public properties are set.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Configuration.BinderOptions.ErrorOnUnknownConfiguration">
      <summary>
            Gets or sets a value that indicates whether exceptions are thrown when converting a value or when a configuration
            key is found for which the provided model object doesn't have an appropriate property that matches the key's name.</summary>
      <returns>
        <see langword="true" /> if an <see cref="T:System.InvalidOperationException" /> is thrown with a description; <see langword="false" /> if no exceptions are thrown. The default is <see langword="false" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Configuration.ConfigurationBinder">
      <summary>
            Static helper class that allows binding strongly typed objects to configuration values.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(Microsoft.Extensions.Configuration.IConfiguration,System.Object,System.Action{Microsoft.Extensions.Configuration.BinderOptions})">
      <summary>
            Attempts to bind the given object instance to configuration values by matching property names against configuration keys recursively.</summary>
      <param name="configuration">The configuration instance to bind.</param>
      <param name="instance">The object to bind.</param>
      <param name="configureOptions">Configures the binder options.</param>
    </member>
    <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(Microsoft.Extensions.Configuration.IConfiguration,System.Object)">
      <summary>
            Attempts to bind the given object instance to configuration values by matching property names against configuration keys recursively.</summary>
      <param name="configuration">The configuration instance to bind.</param>
      <param name="instance">The object to bind.</param>
    </member>
    <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.Object)">
      <summary>
            Attempts to bind the given object instance to the configuration section specified by the key by matching property names against configuration keys recursively.</summary>
      <param name="configuration">The configuration instance to bind.</param>
      <param name="key">The key of the configuration section to bind.</param>
      <param name="instance">The object to bind.</param>
    </member>
    <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.Get(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.Action{Microsoft.Extensions.Configuration.BinderOptions})">
      <summary>
            Attempts to bind the configuration instance to a new instance of type T.
            If this configuration section has a value, that will be used.
            Otherwise binding by matching property names against configuration keys recursively.</summary>
      <param name="configuration">The configuration instance to bind.</param>
      <param name="type">The type of the new instance to bind.</param>
      <param name="configureOptions">Configures the binder options.</param>
      <returns>The new instance if successful, null otherwise.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.Get(Microsoft.Extensions.Configuration.IConfiguration,System.Type)">
      <summary>
            Attempts to bind the configuration instance to a new instance of type T.
            If this configuration section has a value, that will be used.
            Otherwise binding by matching property names against configuration keys recursively.</summary>
      <param name="configuration">The configuration instance to bind.</param>
      <param name="type">The type of the new instance to bind.</param>
      <returns>The new instance if successful, null otherwise.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.Get``1(Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.Extensions.Configuration.BinderOptions})">
      <summary>
            Attempts to bind the configuration instance to a new instance of type T.
            If this configuration section has a value, that will be used.
            Otherwise binding by matching property names against configuration keys recursively.</summary>
      <param name="configuration">The configuration instance to bind.</param>
      <param name="configureOptions">Configures the binder options.</param>
      <typeparam name="T">The type of the new instance to bind.</typeparam>
      <returns>The new instance of T if successful, default(T) otherwise.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.Get``1(Microsoft.Extensions.Configuration.IConfiguration)">
      <summary>
            Attempts to bind the configuration instance to a new instance of type T.
            If this configuration section has a value, that will be used.
            Otherwise binding by matching property names against configuration keys recursively.</summary>
      <param name="configuration">The configuration instance to bind.</param>
      <typeparam name="T">The type of the new instance to bind.</typeparam>
      <returns>The new instance of T if successful, default(T) otherwise.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String,System.Object)">
      <summary>
            Extracts the value with the specified key and converts it to the specified type.</summary>
      <param name="configuration">The configuration.</param>
      <param name="type">The type to convert the value to.</param>
      <param name="key">The key of the configuration section's value to convert.</param>
      <param name="defaultValue">The default value to use if no value is found.</param>
      <returns>The converted value.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String)">
      <summary>
            Extracts the value with the specified key and converts it to the specified type.</summary>
      <param name="configuration">The configuration.</param>
      <param name="type">The type to convert the value to.</param>
      <param name="key">The key of the configuration section's value to convert.</param>
      <returns>The converted value.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String,``0)">
      <summary>
            Extracts the value with the specified key and converts it to type T.</summary>
      <param name="configuration">The configuration.</param>
      <param name="key">The key of the configuration section's value to convert.</param>
      <param name="defaultValue">The default value to use if no value is found.</param>
      <typeparam name="T">The type to convert the value to.</typeparam>
      <returns>The converted value.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
      <summary>
            Extracts the value with the specified key and converts it to type T.</summary>
      <param name="configuration">The configuration.</param>
      <param name="key">The key of the configuration section's value to convert.</param>
      <typeparam name="T">The type to convert the value to.</typeparam>
      <returns>The converted value.</returns>
    </member>
  </members>
</doc>