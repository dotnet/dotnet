<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.Caching.Hybrid</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.Caching.Hybrid.HybridCacheOptions">
      <summary>
            Options for configuring the default <see cref="T:Microsoft.Extensions.Caching.Hybrid.HybridCache" /> implementation.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Caching.Hybrid.HybridCacheOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Caching.Hybrid.HybridCacheOptions.DefaultEntryOptions">
      <summary>
            Gets or sets the default global options to be applied to <see cref="T:Microsoft.Extensions.Caching.Hybrid.HybridCache" /> operations.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Caching.Hybrid.HybridCacheOptions.DisableCompression">
      <summary>
            Gets or sets a value indicating whether compression for this <see cref="T:Microsoft.Extensions.Caching.Hybrid.HybridCache" /> instance is disabled.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Caching.Hybrid.HybridCacheOptions.MaximumKeyLength">
      <summary>
            Gets or sets the maximum permitted length (in characters) of keys.</summary>
      <returns>
            The maximum permitted length of keys, in characters. The default value is 1024 characters.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Caching.Hybrid.HybridCacheOptions.MaximumPayloadBytes">
      <summary>
            Gets or sets the maximum size of cache items.</summary>
      <returns>
            The maximum size of cache items. The default value is 1 MiB.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Caching.Hybrid.HybridCacheOptions.ReportTagMetrics">
      <summary>
            Gets or sets a value indicating whether to use "tags" data as dimensions on metric reporting.</summary>
      <returns>
        <see langword="true" /> to use "tags" data as dimensions on metric reporting; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder">
      <summary>
            Helper API for configuring <see cref="T:Microsoft.Extensions.Caching.Hybrid.HybridCache" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder.Services">
      <summary>
            Gets the services collection associated with this instance.</summary>
    </member>
    <member name="T:Microsoft.Extensions.DependencyInjection.HybridCacheBuilderExtensions">
      <summary>
            Configuration extension methods for <see cref="T:Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder" /> / <see cref="T:Microsoft.Extensions.Caching.Hybrid.HybridCache" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HybridCacheBuilderExtensions.AddSerializer``1(Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder,Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializer{``0})">
      <summary>
            Serialize values of type <typeparamref name="T" /> with the specified serializer from <paramref name="serializer" />.</summary>
      <param name="builder" />
      <param name="serializer" />
      <typeparam name="T">The type to be serialized.</typeparam>
      <returns>The <see cref="T:Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HybridCacheBuilderExtensions.AddSerializer``2(Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder)">
      <summary>
            Serialize values of type <typeparamref name="T" /> with the serializer of type <typeparamref name="TImplementation" />.</summary>
      <param name="builder" />
      <typeparam name="T">The type to be serialized.</typeparam>
      <typeparam name="TImplementation">The serializer to use for this type.</typeparam>
      <returns>The <see cref="T:Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HybridCacheBuilderExtensions.AddSerializerFactory(Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder,Microsoft.Extensions.Caching.Hybrid.IHybridCacheSerializerFactory)">
      <summary>
            Add <paramref name="factory" /> as an additional serializer factory, which can provide serializers for multiple types.</summary>
      <param name="builder" />
      <param name="factory" />
      <returns>The <see cref="T:Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HybridCacheBuilderExtensions.AddSerializerFactory``1(Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder)">
      <summary>
            Add a factory of type <typeparamref name="TImplementation" /> as an additional serializer factory, which can provide serializers for multiple types.</summary>
      <param name="builder" />
      <typeparam name="TImplementation">The type of the serializer factory.</typeparam>
      <returns>The <see cref="T:Microsoft.Extensions.Caching.Hybrid.IHybridCacheBuilder" /> instance.</returns>
    </member>
    <member name="T:Microsoft.Extensions.DependencyInjection.HybridCacheServiceExtensions">
      <summary>
            Configuration extension methods for <see cref="T:Microsoft.Extensions.Caching.Hybrid.HybridCache" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HybridCacheServiceExtensions.AddHybridCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Caching.Hybrid.HybridCacheOptions})">
      <summary>
            Adds support for multi-tier caching services.</summary>
      <param name="services" />
      <param name="setupAction" />
      <returns>A builder instance that allows further configuration of the <see cref="T:Microsoft.Extensions.Caching.Hybrid.HybridCache" /> system.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HybridCacheServiceExtensions.AddHybridCache(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <summary>
            Adds support for multi-tier caching services.</summary>
      <param name="services" />
      <returns>A builder instance that allows further configuration of the <see cref="T:Microsoft.Extensions.Caching.Hybrid.HybridCache" /> system.</returns>
    </member>
  </members>
</doc>