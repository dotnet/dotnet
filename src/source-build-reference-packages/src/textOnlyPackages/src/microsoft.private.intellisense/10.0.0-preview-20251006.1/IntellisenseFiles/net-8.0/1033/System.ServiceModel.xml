<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Generic.KeyedByTypeCollection`1">
      <summary>Provides a collection whose items are types that serve as keys.</summary>
      <typeparam name="TItem">The item types contained in the collection that also serve as the keys for the collection.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> class.</summary>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> class for a specified enumeration of objects.</summary>
      <param name="items">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> of generic type <see cref="T:System.Object" /> used to initialize the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="items" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Find``1">
      <summary>Returns the first item in the collection of a specified type.</summary>
      <typeparam name="T">The type of item in the collection to find.</typeparam>
      <returns>The object of type <paramref name="T" /> if it is a reference type and the value of type <paramref name="T" /> if it is a value type. The default value of the type is returned if no object of type <paramref name="T" /> is contained in the collection: <see langword="null" /> if it is a reference type and 0 if it is a value type.</returns>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.FindAll``1">
      <summary>Returns a collection of objects of type <paramref name="T" /> that are contained in the <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" />.</summary>
      <typeparam name="T">The type of item in the collection to find.</typeparam>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <paramref name="T" /> that contains the objects of type <paramref name="T" /> from the original collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.GetKeyForItem(`0)">
      <summary>Gets the type of an item contained in the collection.</summary>
      <param name="item">The item in the collection whose type is to be retrieved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is <see langword="null" />.</exception>
      <returns>The type of the specified <paramref name="item" /> in the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.InsertItem(System.Int32,`0)">
      <summary>Inserts an element into the collection at a specific location.</summary>
      <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The object to insert into the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Remove``1">
      <summary>Removes an object of a specified type from the collection.</summary>
      <typeparam name="T">The type of item in the collection to remove.</typeparam>
      <returns>The object removed from the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.RemoveAll``1">
      <summary>Removes all of the elements of a specified type from the collection.</summary>
      <typeparam name="T">The type of item in the collection to remove.</typeparam>
      <returns>The <see cref="T:System.Collections.ObjectModel.Collection`1" /> that contains the objects of type <paramref name="T" /> from the original collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.SetItem(System.Int32,`0)">
      <summary>Replaces the item at the specified index with a new object.</summary>
      <param name="index">The zero-based index of the <paramref name="item" /> to be replaced.</param>
      <param name="item">The object to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.Collections.Generic.SynchronizedCollection`1">
      <summary>Provides a thread-safe collection that contains objects of a type specified by the generic parameter as elements.</summary>
      <typeparam name="T">The type of object contained as items in the thread-safe collection.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class.</summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object,`0[])">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class from a specified array of elements and with the object used to synchronize access to the thread-safe collection.</summary>
      <param name="syncRoot">The object used to synchronize access the thread-safe collection.</param>
      <param name="list">The <see cref="T:System.Array" /> of type <typeparamref name="T" /> elements used to initialize the thread-safe collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> or <paramref name="list" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class from a specified enumerable list of elements and with the object used to synchronize access to the thread-safe collection.</summary>
      <param name="syncRoot">The object used to synchronize access to the thread-safe collection.</param>
      <param name="list">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of elements used to initialize the thread-safe collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> or <paramref name="list" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class with the object used to synchronize access to the thread-safe collection.</summary>
      <param name="syncRoot">The object used to synchronize access the thread-safe collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Add(`0)">
      <summary>Adds an item to the thread-safe, read-only collection.</summary>
      <param name="item">The element to be added to the collection.</param>
      <exception cref="T:System.ArgumentException">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.ClearItems">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Contains(`0)">
      <summary>Determines whether the collection contains an element with a specific value.</summary>
      <param name="item">The object to locate in the collection.</param>
      <exception cref="T:System.ArgumentException">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
      <returns>
        <see langword="true" /> if the element value is found in the collection; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the elements of the collection to a specified array, starting at a particular index.</summary>
      <param name="array">The destination <see cref="T:System.Array" /> for the elements of type <typeparamref name="T" /> copied from the collection.</param>
      <param name="index">The zero-based index in the array at which copying begins.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.GetEnumerator">
      <summary>Returns an enumerator that iterates through the synchronized collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for objects of the type stored in the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.IndexOf(`0)">
      <summary>Returns the index of the first occurrence of a value in the collection.</summary>
      <param name="item">Removes all items from the collection.</param>
      <exception cref="T:System.ArgumentException">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
      <returns>The zero-based index of the first occurrence of the value in the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Insert(System.Int32,`0)">
      <summary>Inserts an item into the collection at a specified index.</summary>
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <param name="item">The object to be inserted into the collection as an element.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
      <exception cref="T:System.ArgumentException">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.InsertItem(System.Int32,`0)">
      <summary>Inserts an item into the collection at a specified index.</summary>
      <param name="index">The zero-based index of the collection where the object is to be inserted.</param>
      <param name="item">The object to be inserted into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
      <exception cref="T:System.ArgumentException">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Remove(`0)">
      <summary>Removes the first occurrence of a specified item from the collection.</summary>
      <param name="item">The object to remove from the collection.</param>
      <returns>
        <see langword="true" /> if item was successfully removed from the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.RemoveAt(System.Int32)">
      <summary>Removes an item at a specified index from the collection.</summary>
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.RemoveItem(System.Int32)">
      <summary>Removes an item at a specified <paramref name="index" /> from the collection.</summary>
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.SetItem(System.Int32,`0)">
      <summary>Replaces the item at a specified index with another item.</summary>
      <param name="index">The zero-based index of the object to be replaced.</param>
      <param name="item">The object to replace.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the collection to a specified array, starting at a particular index.</summary>
      <param name="array">The destination <see cref="T:System.Array" /> for the elements of type <typeparamref name="T" /> copied from the collection.</param>
      <param name="index">The zero-based index in the array at which copying begins.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the synchronized collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for objects of the type stored in the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>Adds an element to the collection.</summary>
      <param name="value">The object to add to the collection.</param>
      <returns>The position into which the new element was inserted.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the collection contains an element with a specific value.</summary>
      <param name="value">The object to locate in the collection.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an object of the type contained in the collection.</exception>
      <returns>
        <see langword="true" /> if the element <paramref name="value" /> is found in the collection; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the zero-based index of an element in the collection.</summary>
      <param name="value">The element in the collection whose index is being determined.</param>
      <returns>The index of the <paramref name="value" /> if found in the collection; otherwise, -1.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an object into the collection at a specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> is to be inserted.</param>
      <param name="value">The object to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="value" /> set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specified object as an element from the collection.</summary>
      <param name="value">The object to be removed from the collection.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.Count">
      <summary>Gets the number of elements contained in the thread-safe collection.</summary>
      <returns>The number of elements contained in the thread-safe, read-only collection.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.Item(System.Int32)">
      <summary>Gets an element from the thread-safe collection with a specified index.</summary>
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
      <returns>The object in the collection that has the specified <paramref name="index" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.Items">
      <summary>Gets the list of elements contained in the thread-safe collection.</summary>
      <returns>The <see cref="T:System.Collections.Generic.IList`1" /> of elements that are contained in the thread-safe, read-only collection.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.SyncRoot">
      <summary>Gets the object used to synchronize access to the thread-safe collection.</summary>
      <returns>An object used to synchronize access to the thread-safe collection.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Gets a value that indicates whether the collection is read only.</summary>
      <returns>
        <see langword="false" />
      </returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value that indicates whether the collection is thread safe.</summary>
      <returns>
        <see langword="true" />
      </returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>Gets the object used to synchronize access to the thread-safe collection.</summary>
      <returns>An object used to synchronize access to the thread-safe collection.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsFixedSize">
      <summary>Gets a value that indicates whether the collection is fixed in size.</summary>
      <returns>
        <see langword="false" />
      </returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsReadOnly">
      <summary>Gets a value that indicates whether the collection is read only.</summary>
      <returns>
        <see langword="false" />
      </returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the item at a specified zero-based index.</summary>
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <exception cref="T:System.ArgumentException">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
      <returns>The item with the specified <paramref name="index" />.</returns>
    </member>
    <member name="T:System.IO.PipeException">
      <summary>Thrown when an error occurs within a named pipe.</summary>
    </member>
    <member name="M:System.IO.PipeException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IO.PipeException" /> class.</summary>
    </member>
    <member name="M:System.IO.PipeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.PipeException" /> class with the specified serialization information and streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.IO.PipeException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.PipeException" /> class with the specified error message and the inner exception.</summary>
      <param name="message">A string that contains the error message that explains the reason for the exception.</param>
      <param name="inner">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="M:System.IO.PipeException.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.PipeException" /> class with a specified error message and error code.</summary>
      <param name="message">A string that contains the error message that explains the reason for the exception.</param>
      <param name="errorCode">An integer that contains the error code.</param>
    </member>
    <member name="M:System.IO.PipeException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.PipeException" /> class with a specified error message.</summary>
      <param name="message">A string that contains the error message that explains the reason for the exception.</param>
    </member>
    <member name="P:System.IO.PipeException.ErrorCode">
      <summary>Gets the error code to be returned with the exception.</summary>
      <returns>An integer with the error code to be returned with the exception.</returns>
    </member>
    <member name="T:System.ServiceModel.ActionNotSupportedException">
      <summary>This exception is typically thrown on the client when the action related to the operation invoked does not match any action of operations in the server.</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ActionNotSupportedException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ActionNotSupportedException" /> class with serialization information and streaming context specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ActionNotSupportedException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ActionNotSupportedException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:System.ServiceModel.AddressAccessDeniedException">
      <summary>The exception that is thrown when access to the address is denied.</summary>
    </member>
    <member name="M:System.ServiceModel.AddressAccessDeniedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAccessDeniedException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAccessDeniedException" /> class with serialization information and streaming context specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAccessDeniedException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAccessDeniedException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:System.ServiceModel.BasicHttpBinding">
      <summary>Represents a binding that a Windows Communication Foundation (WCF) service can use to configure and expose endpoints that are able to communicate with ASMX-based Web services and clients and other services that conform to the WS-I Basic Profile 1.1.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class with a specified type of security used by the binding.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.</summary>
      <param name="parameters">Specifies the requirements for the channel factory built.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> that satisfies the features specified by the collection.</returns>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
      <summary>Creates and returns an ordered collection of binding elements contained in the current binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the ordered stack of binding elements described by the <see cref="T:System.ServiceModel.BasicHttpBinding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MessageEncoding">
      <summary>Gets or sets whether MTOM or Text is used to encode SOAP messages.</summary>
      <returns>The value of <see cref="T:System.ServiceModel.WSMessageEncoding" /> that indicates whether MTOM or Text/XML is used to encode SOAP messages. The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Security">
      <summary>Gets the type of security used with this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.BasicHttpSecurity" /> that is used with this binding. The default value is <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpMessageCredentialType">
      <summary>Enumerates credential types the client can authenticate with when security is enabled in the <see langword="BasicHttpBinding" /> binding.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.Certificate">
      <summary>Indicates that a client be authenticated using a certificate.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName">
      <summary>Indicates that the client be authenticated using a username credential.</summary>
    </member>
    <member name="T:System.ServiceModel.BasicHttpMessageSecurity">
      <summary>Configures message-level security settings for <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpMessageSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpMessageSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.BasicHttpMessageSecurity.AlgorithmSuite">
      <summary>Specifies the algorithm suite to use with <see cref="T:System.ServiceModel.BasicHttpMessageSecurity" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />. The default value is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpMessageSecurity.ClientCredentialType">
      <summary>Specifies the type of credential with which the client authenticates.</summary>
      <returns>A member of the <see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" /> enumeration. The default value is <see cref="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName" />.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpsBinding">
      <summary>Specifies basic https binding settings.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpsBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpsBinding" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpsBinding.#ctor(System.ServiceModel.BasicHttpsSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpsBinding" /> class with the specified type of security mode.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.BasicHttpsSecurityMode" /> that specifies the type of security.</param>
    </member>
    <member name="M:System.ServiceModel.BasicHttpsBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel.</summary>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel factory built.</param>
      <typeparam name="TChannel">The type of channel.</typeparam>
      <returns>The channel factory stack on the client.</returns>
    </member>
    <member name="M:System.ServiceModel.BasicHttpsBinding.CreateBindingElements">
      <summary>Returns an ordered collection of binding elements contained in the current binding.</summary>
      <returns>An ordered collection of binding elements contained in the current binding.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpsBinding.MessageEncoding">
      <summary>Gets or sets whether MTOM or Text is used to encode SOAP messages.</summary>
      <returns>The value that indicates whether MTOM or Text/XML is used to encode SOAP messages. The default value is Text.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpsBinding.Security">
      <summary>Gets the type of security used with the binding.</summary>
      <returns>The BasicHttpSecurity that is used with the binding. The default value is None.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurity">
      <summary>Configures the security settings of a <see langword="basicHttpBinding" /> binding.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.BasicHttpSecurity.Message">
      <summary>Gets the message-level security settings for a <see langword="basicHttpBinding" /> binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.BasicHttpMessageSecurity" />, which represents the message-level security settings for this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpSecurity.Mode">
      <summary>Gets or sets the security mode for a <see langword="basicHttpBinding" /> binding.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a legal value for <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />.</exception>
      <returns>A value in the <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> enumeration. The default value for this property is <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpSecurity.Transport">
      <summary>Gets the transport-level security settings for a <see langword="basicHttpBinding" /> binding.</summary>
      <returns>The transport-level security settings for a <see langword="basicHttpBinding" /> binding.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurityMode">
      <summary>Specifies the types of security that can be used with the system-provided <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.Message">
      <summary>Security is provided using SOAP message security. For the <see cref="T:System.ServiceModel.BasicHttpBinding" />, the system requires that the server certificate be provided to the client separately. The valid client credential types for this binding are <see langword="UserName" /> and <see langword="Certificate" />.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.None">
      <summary>The SOAP message is not secured during transfer. This is the default behavior.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.Transport">
      <summary>Security is provided using HTTPS. The service must be configured with SSL certificates. The SOAP message is protected as a whole using HTTPS. The service is authenticated by the client using the service's SSL certificate. The client authentication is controlled through the <see cref="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType" />.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly">
      <summary>This mode does not provide message integrity and confidentiality. It provides only HTTP-based client authentication. Use this mode with caution. It should be used in environments where the transfer security is being provided by other means (such as IPSec) and only client authentication is provided by the Windows Communication Foundation (WCF) infrastructure.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential">
      <summary>Integrity, confidentiality and server authentication are provided by HTTPS. The service must be configured with a certificate. Client authentication is provided by means of SOAP message security. This mode is applicable when the user is authenticating with a UserName or Certificate credential and there is an existing HTTPS deployment for securing message transfer.</summary>
    </member>
    <member name="T:System.ServiceModel.BasicHttpsSecurity">
      <summary>Specifies basic https security settings.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpsSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpsSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.BasicHttpsSecurity.Message">
      <summary>Gets the message-level security settings for a basicHttpsBinding binding.</summary>
      <returns>The message-level security settings for a basicHttpBinding binding.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpsSecurity.Mode">
      <summary>Gets or sets the security mode for a basicHttpsBinding binding.</summary>
      <returns>The security mode for a basicHttpsBinding binding.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpsSecurity.Transport">
      <summary>Gets the transport-level security settings for a basicHttpsBinding binding.</summary>
      <returns>The transport-level security settings for a basicHttpsBinding binding.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpsSecurityMode">
      <summary>Specifies the basic https security mode.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpsSecurityMode.Transport">
      <summary>The Transport security mode.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpsSecurityMode.TransportWithMessageCredential">
      <summary>The TransportWithMessageCredential security mode.</summary>
    </member>
    <member name="T:System.ServiceModel.CacheSetting">
      <summary>Specifies an enumeration of cache settings.</summary>
    </member>
    <member name="F:System.ServiceModel.CacheSetting.AlwaysOff">
      <summary>The setting is always off.</summary>
    </member>
    <member name="F:System.ServiceModel.CacheSetting.AlwaysOn">
      <summary>The setting is always on.</summary>
    </member>
    <member name="F:System.ServiceModel.CacheSetting.Default">
      <summary>Default setting.</summary>
    </member>
    <member name="T:System.ServiceModel.CallbackBehaviorAttribute">
      <summary>Configures a callback service implementation in a client application.</summary>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CallbackBehaviorAttribute" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Configures the binding elements to support the callback behavior.</summary>
      <param name="serviceEndpoint">The endpoint for the callback object.</param>
      <param name="parameters">The collection of binding parameters that are configured.</param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Configures the client runtime to support the callback object.</summary>
      <param name="serviceEndpoint">The endpoint configured by the attribute.</param>
      <param name="clientRuntime">The client run-time object that the attribute configures.</param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implementation of the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /> method. This implementation has no effect.</summary>
      <param name="serviceEndpoint">The endpoint to be modified.</param>
      <param name="endpointDispatcher">The endpoint dispatcher that the method modifies.</param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Validates the endpoint description prior to building the runtime.</summary>
      <param name="serviceEndpoint">The endpoint to be validated.</param>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown">
      <summary>Specifies whether to automatically close a session when a service closes a duplex session.</summary>
      <returns>
        <see langword="true" /> if duplex callback objects automatically close a session when the service closes a duplex session; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode">
      <summary>Gets or sets whether a service supports one thread, multiple threads, or reentrant calls.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.ServiceModel.ConcurrencyMode" /> values.</exception>
      <returns>One of the <see cref="T:System.ServiceModel.ConcurrencyMode" /> values; the default is <see cref="F:System.ServiceModel.ConcurrencyMode.Single" />.</returns>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext">
      <summary>Gets or sets a value that specifies whether to use the current synchronization context to choose the thread of execution.</summary>
      <returns>
        <see langword="true" /> if all calls to the service must run on the thread specified by the <see cref="T:System.Threading.SynchronizationContext" />; otherwise, <see langword="false" />. The default value is <see langword="true" />.</returns>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory">
      <summary>Creates and manages the channels that are used by clients to send messages to service endpoints.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateDescription">
      <summary>When implemented in a derived class, creates a description of the service endpoint associated with the channel factory.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> associated with the channel factory.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateFactory">
      <summary>Builds the channel factory for the current endpoint of the factory.</summary>
      <exception cref="T:System.InvalidOperationException">The endpoint of the service that the factory channels connect to is <see langword="null" /> or the endpoint's binding is <see langword="null" /> or is missing the element with the configuration name specified.</exception>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory" /> for the endpoint of the current factory.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.EnsureOpened">
      <summary>Opens the current channel factory if it is not yet opened.</summary>
      <exception cref="T:System.ObjectDisposedException">The current factory is either closing or closed and so cannot be opened.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.GetProperty``1">
      <summary>Returns the typed object requested, if present, from the appropriate layer in the channel stack, or <see langword="null" /> if not present.</summary>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
      <returns>The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes the service endpoint of the channel factory with a specified binding and address.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> with which to initialize the channel factory.</param>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> with which to initialize the channel factory.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes the service endpoint of the channel factory with a specified endpoint.</summary>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to initialize the channel factory with.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpoint" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnAbort">
      <summary>Terminates the inner channel factory of the current channel factory.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous close operation on the inner channel factory of the current channel factory that has a state object associated with it.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous open operation on the inner channel factory of the current channel factory that has a state object associated with it.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
      <summary>Calls close on the inner channel factory with a specified time-out for the completion of the operation.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous close operation on the inner channel factory of the current channel factory.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous open operation on the inner channel factory of the current channel factory.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
      <summary>Calls open on the inner channel factory of the current channel factory with a specified time-out for the completion of the operation.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the open operation has to complete before timing out.</param>
      <exception cref="T:System.InvalidOperationException">The inner channel of the current channel is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpened">
      <summary>Initializes a read-only copy of the <see cref="T:System.ServiceModel.Description.ClientCredentials" /> object for the channel factory.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpening">
      <summary>Builds the inner channel factory for the current channel.</summary>
      <exception cref="T:System.InvalidOperationException">The inner channel factory for the channel factory is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.System#IAsyncDisposable#DisposeAsync" />
    <member name="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
      <summary>Closes the current channel factory.</summary>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Credentials">
      <summary>Gets the credentials used by clients to communicate a service endpoint over the channels produced by the factory.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ClientCredentials" /> used by clients if they are configured for the factory or if the endpoint is non-<see langword="null" /> and is in either the created or opening communication state; otherwise <see langword="null" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
      <summary>Gets the default interval of time provided for a close operation to complete.</summary>
      <returns>The default <see cref="T:System.TimeSpan" /> that specifies how long the close operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
      <summary>Gets the default interval of time provided for an open operation to complete.</summary>
      <returns>The default <see cref="T:System.TimeSpan" /> that specifies how long the open operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Endpoint">
      <summary>Gets the service endpoint to which the channels produced by the factory connect.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to which the channels produced by the factory connect.</returns>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory`1">
      <summary>A factory that creates channels of different types that are used by clients to send messages to variously configured service endpoints.</summary>
      <typeparam name="TChannel">The type of channel produced by the channel factory. This type must be either <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> or <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class with a specified binding and endpoint address.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to configure the endpoint.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="binding" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> specified for the channels produced by the factory.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class that produces channels with a specified endpoint.</summary>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> for the channels produced by the factory.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="endpoint" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class.</summary>
      <param name="channelType">The <see cref="T:System.Type" /> of channel produced by the factory.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="channelType" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="channelType" /> is a class or value type and is not an interface.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel">
      <summary>Creates a channel of a specified type to a specified endpoint address.</summary>
      <returns>The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a channel that is used to send messages to a service at a specific endpoint address through a specified transport address.</summary>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the channel sends messages.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.ChannelFactory" /> has duplex operations it does not support.</exception>
      <returns>The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Creates a channel that is used to send messages to a service at a specific endpoint address.</summary>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is <see langword="null" />.</exception>
      <returns>The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateDescription">
      <summary>Creates a description of the service endpoint.</summary>
      <exception cref="T:System.InvalidOperationException">The callback contract is <see langword="null" /> but the service endpoint requires one that is non-<see langword="null" />.</exception>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> of the service.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeader">
      <summary>Represents a header that encapsulates an address information item used to identify or interact with an endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.AddressHeader" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Channels.AddressHeader" /> class with a specified name and namespace that uses a specified formatter to serialize the information item from a specified object.</summary>
      <param name="name">The name of the address header.</param>
      <param name="ns">The namespace of the address header.</param>
      <param name="value">The information item for the address header.</param>
      <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> used to serialize the specified object in the <paramref name="value" /> parameter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="serializer" /> is <see langword="null" /> or <paramref name="name" />.Length == 0.</exception>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressHeader" /> with the specified <paramref name="name" /> and <paramref name="ns" /> that contains the information item specified by <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Channels.AddressHeader" /> class with a specified value, name and namespace.</summary>
      <param name="name">The name of the address header.</param>
      <param name="ns">The namespace of the address header.</param>
      <param name="value">The information item for the address header.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> is <see langword="null" /> or <paramref name="name" />.Length == 0.</exception>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressHeader" /> with the specified <paramref name="name" /> and <paramref name="ns" /> that contains the information item specified by <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.Equals(System.Object)">
      <summary>Determines whether the information item in a specified object is equal to the object contained in the current address header.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the object contained in the current address header.</param>
      <returns>
        <see langword="true" /> if the information item in a specified <paramref name="obj" /> is equivalent to the information item contained in the current address header; otherwise, <see langword="false" />. In particular, returns <see langword="false" /> if <paramref name="obj" /> is <see langword="null" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetAddressHeaderReader">
      <summary>Returns an XML reader that can serialize the current address header object.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can serialize the current address header object.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetHashCode">
      <summary>Provides a unique hash code for an address header.</summary>
      <returns>A unique hash code for the current address header.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1">
      <summary>Deserializes the information item from the current address header to an object of a specified type.</summary>
      <typeparam name="T">A class of type <typeparamref name="T" /> with its fields and properties set to the values supplied by the current address header object.</typeparam>
      <returns>An instance of a class of type <typeparamref name="T" /> with its fields and properties set to the values supplied by the current address header object.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Deserializes the information item from the current address header to an object of a specified type that uses a specified formatter to serialize this information.</summary>
      <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> used to deserialize the information item from the current address header object.</param>
      <typeparam name="T">A class of type <typeparamref name="T" /> with its fields and properties set to the values supplied by the current address header object.</typeparam>
      <exception cref="T:System.ArgumentNullException">The <paramref name="serializer" /> is <see langword="null" />.</exception>
      <returns>An instance of a class of type <typeparamref name="T" /> with its fields and properties set to the values supplied by the current address header object.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>When overridden in a derived class, is invoked when the address header contents are written to a stream or file.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the address header contents to a stream or file.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>When overridden in a derived class, is invoked when the address header contents begin to be written to a stream or file.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the address header to a stream or file.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.ToMessageHeader">
      <summary>Wraps the address header as a message header.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageHeader" /> that wraps the current address header.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Writes the address header to a stream or file using a specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the address header to a stream or file.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="writer" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlWriter)">
      <summary>Writes the address header to a stream or file using a specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the address header to a stream or file.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="writer" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>Writes the address header contents to a stream or file.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the address header contents to a stream or file.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="writer" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Starts to write the address header contents to a stream or file.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the address header to a stream or file.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="writer" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Name">
      <summary>When implemented, gets the name of the address header.</summary>
      <returns>The name of the address header.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Namespace">
      <summary>When implemented, gets the namespace of the address header.</summary>
      <returns>The namespace of the address header.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeaderCollection">
      <summary>Represents a thread-safe, read-only collection of address headers.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.AddressHeader})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> class from an enumerable set of address headers.</summary>
      <param name="addressHeaders">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> set of <see cref="T:System.ServiceModel.Channels.AddressHeader" /> objects used to initialize the collection.</param>
      <exception cref="T:System.ArgumentException">One of the address headers in the <paramref name="addressHeaders" /> parameter is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.AddHeadersTo(System.ServiceModel.Channels.Message)">
      <summary>Adds the headers in the collection to the headers of a specified message.</summary>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to which the headers are added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindAll(System.String,System.String)">
      <summary>Finds all the address headers in the collection with the specified name and namespace.</summary>
      <param name="name">The name of the address header to be found.</param>
      <param name="ns">The namespace of the address header to be found.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="ns" /> is <see langword="null" />.</exception>
      <returns>The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains all the headers in the collection with the specified name and namespace.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindHeader(System.String,System.String)">
      <summary>Finds the first address header in the collection with a specified name and namespace.</summary>
      <param name="name">The name of the address header to be found.</param>
      <param name="ns">The namespace of the address header to be found.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="ns" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">There is more than one header that has the specified <paramref name="name" /> and <paramref name="ns" />.</exception>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressHeader" /> in the collection with the specified name and namespace.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressingVersion">
      <summary>The WS-Addressing version associated with a SOAP message or understood by an endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressingVersion.ToString">
      <summary>Returns a string representation of the current addressing version.</summary>
      <returns>A string that represents the current addressing version.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.None">
      <summary>Gets the addressing version that is not associated with WS-Addressing version.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> that is not associated WS-Addressing version.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressing10">
      <summary>Gets an identifier for the address version associated with WS-Addressing 1.0.</summary>
      <returns>A singleton instance that identifies the <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> that is associated with WS-Addressing 1.0.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressingAugust2004">
      <summary>Gets the version of WS-Addressing that is associated with WS-Addressing August 2004.</summary>
      <returns>A singleton instance that identifies the <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> that is associated with WS-Addressing August 2004.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement">
      <summary>The binding element that specifies the .NET Binary Format for XML used to encode messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel for a specified context.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> for the specified context.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone">
      <summary>Creates a new <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> object initialized from the current one.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> object with property values equal to those of the current element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Creates a factory for binary message encoders that employ the SOAP and WS-Addressing versions and the character encoding specified by the current encoding binding element.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> that this binding element creates.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the binding element stack.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</param>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
      <returns>The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CompressionFormat">
      <summary>Gets or sets the compression format for the binding element.</summary>
      <returns>The compression format for the binding element.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxReadPoolSize">
      <summary>Gets or sets the maximum number of XML readers that are allocated to a pool and are ready for use to process incoming messages.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to zero.</exception>
      <returns>The maximum number of readers to be kept in the pool. The default value is 64 readers.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxSessionSize">
      <summary>Gets or sets the maximum amount of memory available within a session for optimizing transmission procedures.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
      <returns>The maximum size, in bytes, of a session. The default value is 2048 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxWritePoolSize">
      <summary>Gets or sets the maximum number of XML writers that are allocated to a pool and are ready for use to process outgoing messages.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
      <returns>The maximum number of writers to be kept in the pool. The default value is 16 writers.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion">
      <summary>Gets or sets the SOAP message and WS-Addressing versions that are used or expected.</summary>
      <exception cref="T:System.ArgumentNullException">The value set is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is an unsupported envelope version.</exception>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used or expected.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of XML messages that can be processed by endpoints configured with this binding element.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on SOAP messages exchanged. The default values for these constraints are provided in the following remarks section.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.Binding">
      <summary>Contains the binding elements that specify the protocols, transports, and message encoders used for communication between clients and services.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.Binding" /> class with a default name and namespace.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.Binding" /> class from a specified binding of the service.</summary>
      <param name="name">The <see cref="P:System.ServiceModel.Channels.Binding.Name" /> of the binding.</param>
      <param name="ns">The <see cref="P:System.ServiceModel.Channels.Binding.Namespace" /> of the binding.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is <see langword="null" /> or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ns" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by an object array.</summary>
      <param name="parameters">The object array that specifies requirements for the channel factory that is built.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> that satisfies the features specified by the collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.</summary>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel factory built.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> that satisfies the features specified by the collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])">
      <summary>Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the requirements specified by an object array.</summary>
      <param name="parameters">The object array that specifies requirements for the channel factory that is built.</param>
      <typeparam name="TChannel">The type of channel for which the factory is being tested.</typeparam>
      <returns>
        <see langword="true" /> if the specified channel factory stack can be build on the client; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the collection of binding parameters specified.</summary>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel factory that is built.</param>
      <typeparam name="TChannel">The type of channel for which the factory is being tested.</typeparam>
      <returns>
        <see langword="true" /> if the specified channel factory stack can be build on the client; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
      <summary>When overridden in a derived class, creates a collection that contains the binding elements that are part of the current binding.</summary>
      <returns>A <see cref="T:System.Collections.Generic.ICollection`1" /> object of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that contains the binding elements from the current binding object in the correct order.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the binding stack.</summary>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</param>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
      <returns>The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.CloseTimeout">
      <summary>Gets or sets the interval of time provided for a connection to close before the transport raises an exception.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero or too large.</exception>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies how long the close operation has to complete before timing out. The default value is 1 minute.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.MessageVersion">
      <summary>Gets the message version used by clients and services configured with the binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> used by clients and services configured with the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Name">
      <summary>Gets or sets the name of the binding.</summary>
      <exception cref="T:System.ArgumentException">The value set cannot be <see langword="null" /> or an empty string.</exception>
      <returns>The name of the binding. The default name is <see langword="null" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Namespace">
      <summary>Gets or sets the XML namespace of the binding.</summary>
      <exception cref="T:System.ArgumentNullException">The value set cannot be <see langword="null" />.</exception>
      <returns>The XML namespace of the binding. The default value is <c>"http://tempuri.org/"</c>.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.OpenTimeout">
      <summary>Gets or sets the interval of time provided for a connection to open before the transport raises an exception.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero or too large.</exception>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies how long the open operation has to complete before timing out. The default value is 1 minute.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.ReceiveTimeout">
      <summary>Gets or sets the interval of time that a connection can remain inactive, during which no application messages are received, before it is dropped.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero or too large.</exception>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies how long the application has to receive a message before timing out. The default value is 10 minutes.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Scheme">
      <summary>When implemented in a derived class, sets the URI scheme that specifies the transport used by the channel and listener factories that are built by the bindings.</summary>
      <returns>The URI scheme that is used by the channels or listeners that are created by the factories built by the current binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.SendTimeout">
      <summary>Gets or sets the interval of time provided for a write operation to complete before the transport raises an exception.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero or too large.</exception>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies how long the write operation has to complete before timing out. The default value is 1 minute.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingContext">
      <summary>Provides information about the addresses, bindings, binding elements and binding parameters required to build the channel listeners and channel factories.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingContext" /> class for a specified binding and collection of binding parameters.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.CustomBinding" /> for the channel.</param>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> for the channel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1">
      <summary>Builds the inner channel factory for channels of a specified type below the current channel factory.</summary>
      <typeparam name="TChannel">The type of <see cref="T:System.ServiceModel.Channels.IChannel" /> object the inner channel factory produces.</typeparam>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> that represents the inner channel factory of the current channel factory.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory``1">
      <summary>Returns a value that indicates whether the inner channel factory can produce a specified type of channel.</summary>
      <typeparam name="TChannel">The type of <see cref="T:System.ServiceModel.Channels.IChannel" /> object the inner channel factory produces.</typeparam>
      <returns>
        <see langword="true" /> if the inner channel factory can produce the specified <paramref name="TChannel" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.Clone">
      <summary>Returns a copy of the current channel build context.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingContext" /> object that is a copy of the current channel build context.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.GetInnerProperty``1">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the binding stack.</summary>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
      <returns>The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.Binding">
      <summary>Gets the binding for the channel built in the current context.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.CustomBinding" /> for the channel built in the current context.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.BindingParameters">
      <summary>Gets the collection of binding parameters for the channel built in the current context.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> for the channel built in the current context.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.RemainingBindingElements">
      <summary>Gets the binding elements that are used by other binding elements to construct the channel stack.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the binding elements that are used by other binding elements to construct the channel stack.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElement">
      <summary>The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class from a specified binding element.</summary>
      <param name="elementToBeCloned">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> to be cloned.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Initializes a channel factory for producing channels of a specified type from the binding context.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</param>
      <typeparam name="TChannel">The type of channel the factory builds.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is <see langword="null" />.</exception>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> initialized from the <paramref name="context" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> can be built by the binding element; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.Clone">
      <summary>When overridden in a derived class, returns a copy of the binding element object.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElement" /> object that is a deep clone of the original.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</param>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
      <returns>The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not present.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElementCollection">
      <summary>Represents the collection of binding elements used in a binding.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> class from an enumerable set of binding elements.</summary>
      <param name="elements">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> of generic type <see cref="T:System.ServiceModel.Channels.BindingElement" /> used to initialize the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> class from an array of binding elements.</summary>
      <param name="elements">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> used to initialize the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.AddRange(System.ServiceModel.Channels.BindingElement[])">
      <summary>Adds binding elements from an array to the collection of binding elements.</summary>
      <param name="elements">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> to be added to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Clone">
      <summary>Creates a copy of the binding element collection.</summary>
      <returns>A copy of the <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Contains(System.Type)">
      <summary>Returns a value that indicates whether a specified type of binding element belongs to the collection of binding elements.</summary>
      <param name="bindingElementType">The type of binding element being tested for inclusion in the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementType" /> is <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> if the type of binding element specified is contained in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Find``1">
      <summary>Returns the first item of a specified type from the collection of binding elements.</summary>
      <typeparam name="T">The <see cref="T:System.Type" /> of item to find.</typeparam>
      <returns>The item of type <see cref="T:System.Type" /> if found; if not found, 0 if <paramref name="T" /> is a value type and <see langword="null" /> if <paramref name="T" /> is a reference type.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.FindAll``1">
      <summary>Returns all of the items of a specified type from the collection of binding elements.</summary>
      <typeparam name="T">The <see cref="T:System.Type" /> of item to find.</typeparam>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of all of the items of type <see cref="T:System.Type" /> if found; if none are found, 0 if <paramref name="T" /> is a value type and <see langword="null" /> if <paramref name="T" /> is a reference type.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.InsertItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Inserts a binding element at a specified location within a collection of binding elements.</summary>
      <param name="index">The location at which to insert the binding element in the collection.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> to be inserted.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Remove``1">
      <summary>Removes a binding element of a specified type from the collection of binding elements.</summary>
      <typeparam name="T">The <see cref="T:System.Type" /> of item to find.</typeparam>
      <returns>The item of type <see cref="T:System.Type" /> removed.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.RemoveAll``1">
      <summary>Removes all of the binding elements of a specified type from the collection of binding elements.</summary>
      <typeparam name="T">The <see cref="T:System.Type" /> of item to find.</typeparam>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of all of the items of type <see cref="T:System.Type" /> found.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.SetItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Replaces a binding element at the specified index in the collection of binding elements.</summary>
      <param name="index">The zero-based index of the element to replace.</param>
      <param name="item">The new value for <see cref="T:System.ServiceModel.Channels.BindingElement" /> item at the specified <paramref name="index" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingParameterCollection">
      <summary>Represents a collection of binding parameters that store information used by binding elements to build factories.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.BodyWriter">
      <summary>Represents the writer of the message body.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BodyWriter" /> class that explicitly indicates whether to buffer.</summary>
      <param name="isBuffered">
        <see langword="true" /> if the body writer can be called multiple times; otherwise <see langword="false" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.CreateBufferedCopy(System.Int32)">
      <summary>Creates a buffered copy of the body.</summary>
      <param name="maxBufferSize">The maximum size of the buffer for the body.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="maxBufferSize" /> is less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">The body has already been written and cannot be written again, or the body writer is not buffered.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.BodyWriter" /> that contains a copy of this object.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnCreateBufferedCopy(System.Int32)">
      <summary>Provides an extensibility point when the body contents are written.</summary>
      <param name="maxBufferSize">The maximum size of the buffer for the body.</param>
      <returns>The <see cref="T:System.ServiceModel.Channels.BodyWriter" /> with the specified maximum buffer size.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>When implemented, provides an extensibility point when the body contents are written.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write out the message body.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Writes out the contents of the message body.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write out the message body.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BodyWriter.IsBuffered">
      <summary>Gets a value that indicates whether the write method can be called multiple times.</summary>
      <returns>
        <see langword="true" /> if the body writer can be called multiple times; otherwise <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BufferManager">
      <summary>Many Windows Communication Foundation (WCF) features require the use of buffers, which are expensive to create and destroy. You can use the <see cref="T:System.ServiceModel.Channels.BufferManager" /> class to manage a buffer pool. The pool and its buffers are created when you instantiate this class and destroyed when the buffer pool is reclaimed by garbage collection. Every time you need to use a buffer, you take one from the pool, use it, and return it to the pool when done. This process is much faster than creating and destroying a buffer every time you need to use one.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BufferManager" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.Clear">
      <summary>Releases the buffers currently cached in the manager.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)">
      <summary>Creates a new BufferManager with a specified maximum buffer pool size and a maximum size for each individual buffer in the pool.</summary>
      <param name="maxBufferPoolSize">The maximum size of the pool.</param>
      <param name="maxBufferSize">The maximum size of an individual buffer.</param>
      <exception cref="T:System.InsufficientMemoryException">There was insufficient memory to create the requested buffer pool.

Note: In .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.OutOfMemoryException" />, instead.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferPoolSize" /> or <paramref name="maxBufferSize" /> was less than zero.</exception>
      <returns>Returns a <see cref="T:System.ServiceModel.Channels.BufferManager" /> object with the specified parameters.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])">
      <summary>Returns a buffer to the pool.</summary>
      <param name="buffer">A reference to the buffer being returned.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> reference cannot be <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Length of <paramref name="buffer" /> does not match the pool's buffer length property.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)">
      <summary>Gets a buffer of at least the specified size from the pool.</summary>
      <param name="bufferSize">The size, in bytes, of the requested buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> cannot be less than zero.</exception>
      <returns>A byte array that is the requested size of the buffer.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelBase">
      <summary>Provides the base implementation for custom channels.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelBase" /> class.</summary>
      <param name="channelManager">The <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> that provides default timeouts for the channel operations (send, receive, open, and close).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="channelManager" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.GetProperty``1">
      <summary>Returns the typed object requested, if present, from the appropriate layer in the channel stack.</summary>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
      <returns>The typed object <paramref name="T" /> requested, if it is present, or <see langword="null" />, if it is not.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.OnClosed">
      <summary>Uses diagnostic tracing during the transition into the closing state.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout">
      <summary>Gets the default interval of time provided for a close operation to complete.</summary>
      <returns>The default <see cref="T:System.TimeSpan" /> that specifies how long the close operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout">
      <summary>Gets the default interval of time provided for an open operation to complete.</summary>
      <returns>The default <see cref="T:System.TimeSpan" /> that specifies how long the open operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout">
      <summary>Gets the default interval of time provided for a receive operation to complete.</summary>
      <returns>The default <see cref="T:System.TimeSpan" /> that specifies how long the receive operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout">
      <summary>Gets the default interval of time provided for a send operation to complete.</summary>
      <returns>The default <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.Manager">
      <summary>Gets the channel manager that is associated with the current channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> that is associated with the current channel.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Gets the interval of time after which the close method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the close method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Gets the interval of time after which the open method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the open method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Gets the interval of time after which the receive method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the receive method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Gets the interval of time after which the send method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the send method to time out.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase">
      <summary>Provides a common base implementation for all custom channel factories.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> class with specified default communication timeouts.</summary>
      <param name="timeouts">The <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> specifying the default timeouts for open, send, receive, and close operations when exchanging messages.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</summary>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
      <returns>The typed object T requested if it is present or <see langword="null" /> if it is not.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnAbort">
      <summary>Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous abort operation.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close each of the channels that were created by the factory.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on close operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation on close completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on close operation.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous on close operation.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)">
      <summary>Inserts processing on a communication object after it transitions into the opening state which must complete within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on close operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to close channels that were opened by the factory.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout">
      <summary>Gets the default interval of time provided for a close operation to complete.</summary>
      <returns>The default <see cref="T:System.TimeSpan" /> that specifies how long the close operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout">
      <summary>Gets the default interval of time provided for an open operation to complete.</summary>
      <returns>The default <see cref="T:System.TimeSpan" /> that specifies how long the open operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout">
      <summary>Gets the default interval of time provided for a receive operation to complete.</summary>
      <returns>The default <see cref="T:System.TimeSpan" /> that specifies how long the receive operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout">
      <summary>Gets the default interval of time provided for a send operation to complete.</summary>
      <returns>The default <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase`1">
      <summary>Provides a common base implementation for channel factories on the client to create channels of a specified type connected to a specified address.</summary>
      <typeparam name="TChannel">The type of channel the factory produces.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> class with the default communication timeouts specified.</summary>
      <param name="timeouts">The <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> that specifies the default timeouts for open, send, receive, and close operations when exchanging messages.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a particular type of channel with specified transport and endpoint addresses.</summary>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> of the remote endpoint to which the channel sends messages.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which messages are sent on the output channel.</param>
      <returns>A channel of type <paramref name="TChannel" /> with the specified remote and transport addresses.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Creates a particular type of channel with a specified endpoint address.</summary>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> of the remote endpoint to which the channel sends messages.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is <see langword="null" />.</exception>
      <returns>A channel of type <paramref name="TChannel" /> with the specified <paramref name="address" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort">
      <summary>Aborts each channel managed by the channel factory.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on-close operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the on-close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on-close operation.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous on-close operation.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)">
      <summary>Closes all the channels associated with the channel factory within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on-close operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>When implemented in a derived class, provides an extensibility point when creating channels.</summary>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> of the remote endpoint to which the channel sends messages.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which messages are sent on the output channel.</param>
      <returns>A channel of type <paramref name="TChannel" /> with the specified addresses.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel">
      <summary>Confirms that the channel factory is opened and ready to create channels.</summary>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.InvalidOperationException">The current channel factory is not in the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelManagerBase">
      <summary>Provides a base implementation for managing the default timeouts that are associated with channel and listener factories.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelManagerBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout">
      <summary>When overridden in a derived class, gets the default interval of time a channel has to complete the reception of a message.</summary>
      <returns>The default <see cref="T:System.TimeSpan" /> that specifies how long the channel has to complete the reception of a message before timing out once the receive method has been invoked.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout">
      <summary>When overridden in a derived class, gets the default interval of time a channel has to complete the sending of a message.</summary>
      <returns>The default <see cref="T:System.TimeSpan" /> that specifies how long the channel has to complete the sending of a message before timing out once the send method has been invoked.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Gets the interval of time after which the close method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the close method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Gets the interval of time after which the open method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the open method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Gets the interval of time after which the receive method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the receive method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Gets the interval of time after which the send method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the send method to time out.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelParameterCollection">
      <summary>Represents a collection of channel parameters.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor(System.ServiceModel.Channels.IChannel)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> class.</summary>
      <param name="channel">The channel whose parameters are in this collection.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.ClearItems">
      <summary>Clears the collection of parameters.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>Inserts the specified item into the collection using the specified index.</summary>
      <param name="index">The index of the item in the collection.</param>
      <param name="item">The item to add to the collection.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.PropagateChannelParameters(System.ServiceModel.Channels.IChannel)">
      <summary>Adds the parameters in the current collection to a specified channel's <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />.</summary>
      <param name="innerChannel">The channel that receives the current collection's parameters.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.RemoveItem(System.Int32)">
      <summary>Removes a parameter from the collection.</summary>
      <param name="index">Index of the parameter to remove.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>Replaces an item in the collection at a specified index.</summary>
      <param name="index">Index of the item to replace.</param>
      <param name="item">Value of the replacement item.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelParameterCollection.Channel">
      <summary>Gets the channel whose parameters are in this collection.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannel" /> whose parameters are in this collection.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.CommunicationObject">
      <summary>Provides a common base implementation for the basic state machine common to all communication-oriented objects in the system, including channels, listeners, and the channel and listener factories.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closed">
      <summary>Occurs when a communication object transitions into the closed state.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closing">
      <summary>Occurs when a communication object transitions into the closing state.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
      <summary>Occurs when a communication object transitions into the faulted state.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opened">
      <summary>Occurs when a communication object transitions into the opened state.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opening">
      <summary>Occurs when a communication object transitions into the opening state.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> class with the mutually exclusive lock to protect the state transitions specified.</summary>
      <param name="mutex">The mutually exclusive lock that protects the class instance during a state transition.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Abort">
      <summary>Causes a communication object to transition immediately from its current state into the closing state.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close a communication object.</summary>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close a communication object with a specified timeout.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the close operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open a communication object.</summary>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous open operation.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open a communication object within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous open operation.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close">
      <summary>Causes a communication object to transition from its current state into the closed state.</summary>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
      <summary>Causes a communication object to transition from its current state into the closed state within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the close operation has to complete before timing out.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to close a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> method.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to open a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> method.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Fault">
      <summary>Causes a communication object to transition from its current state into the faulted state.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
      <summary>Gets the type of communication object.</summary>
      <returns>The type of communication object.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
      <summary>Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous abort operation.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inserts processing after a communication object transitions to the closing state due to the invocation of an asynchronous close operation.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on close operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous on close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on close operation.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous on close operation.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inserts processing on a communication object after it transitions to the opening state due to the invocation of an asynchronous open operation.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on open operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous on open operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on open operation.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous on open operation.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
      <summary>Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous close operation.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on close operation has to complete before timing out.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
      <exception cref="T:System.ServiceModel.CommunicationException">A communication error occurred while closing the object.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
      <summary>Invoked during the transition of a communication object into the closing state.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
      <summary>Invoked during the transition of a communication object into the closing state.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation on the close of a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" /> method.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous operation on the open of a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" /> method.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
      <summary>Inserts processing on a communication object after it transitions to the faulted state due to the invocation of a synchronous fault operation.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
      <summary>Inserts processing on a communication object after it transitions into the opening state which must complete within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the on open operation has to complete before timing out.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
      <summary>Invoked during the transition of a communication object into the opened state.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
      <summary>Invoked during the transition of a communication object into the opening state.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open">
      <summary>Causes a communication object to transition from the created state into the opened state.</summary>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
      <summary>Causes a communication object to transition from the created state into the opened state within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the open operation has to complete before timing out.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
      <summary>Throws an exception if the communication object is disposed.</summary>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
      <summary>Throws an exception if the communication object the <see cref="P:System.ServiceModel.Channels.CommunicationObject.State" /> property is not set to the <see cref="F:System.ServiceModel.CommunicationState.Created" /> state.</summary>
      <exception cref="T:System.InvalidOperationException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
      <summary>Throws an exception if the communication object is not in the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</summary>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Created" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be used.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
      <summary>When overridden in a derived class, gets the default interval of time provided for a close operation to complete.</summary>
      <returns>The default <see cref="T:System.TimeSpan" /> that specifies how long the close operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
      <summary>When overridden in a derived class, gets the default interval of time provided for an open operation to complete.</summary>
      <returns>The default <see cref="T:System.TimeSpan" /> that specifies how long the open operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
      <summary>Gets a value that indicates whether the communication object has been disposed.</summary>
      <returns>
        <see langword="true" /> if the communication object is in a closed state; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.State">
      <summary>Gets a value that indicates the current state of the communication object.</summary>
      <returns>A value from the <see cref="T:System.ServiceModel.CommunicationState" /> enumeration that indicates the current state of the object.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
      <summary>Gets the mutually exclusive lock that protects the class instance during a state transition.</summary>
      <returns>The mutually exclusive lock that protects the class instance during a state transition.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.CompressionFormat">
      <summary>Specifies the channels compression format.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.CompressionFormat.Deflate">
      <summary>The Deflate compression format.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.CompressionFormat.GZip">
      <summary>The GZip compression format.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.CompressionFormat.None">
      <summary>The none compression format.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement">
      <summary>An abstract class that supplements the base <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> with additional properties that are common to connection-oriented transports such as TCP and named pipes.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.#ctor" />
    <member name="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.#ctor(System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement)">
      <param name="elementToBeCloned" />
    </member>
    <member name="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determines whether a channel factory of the specified type can be built.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</param>
      <typeparam name="TChannel">The type of channel to check.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> if a channel factory can be built; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets properties from the binding stack, if present.</summary>
      <param name="context">The binding context.</param>
      <typeparam name="T">Type of the property.</typeparam>
      <returns>A <paramref name="T" /> object from the binding stack, if present.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize">
      <summary>Gets or sets the size of the buffer used to transmit a chunk of the serialized message on the wire from the client or service.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
      <returns>The size of the connection buffer. The default value is 8192 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize">
      <summary>Gets or sets the maximum size of the buffer to use. For streamed messages, this value should be at least the maximum possible size of the message headers, which are read in buffered mode.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
      <returns>The maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode">
      <summary>Gets or sets a value that indicates whether the messages are buffered or streamed with the connection-oriented transport.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid <see cref="T:System.ServiceModel.TransferMode" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.TransferMode" /> value which indicates whether a channel uses streamed or buffered modes of message transfer. The default is <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.CustomBinding">
      <summary>Defines a binding from a list of binding elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CustomBinding" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CustomBinding" /> class with the binding elements from a complete channel stack.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that contains the binding elements of the channel stack in top-down order.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CustomBinding" /> class from the values of a specified binding.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> that is used to initialize the custom binding.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CustomBinding" /> class from an array of binding elements.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> used to initialize the custom binding.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.String,System.String,System.ServiceModel.Channels.BindingElement[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CustomBinding" /> class from an array of binding elements with a specified name and namespace.</summary>
      <param name="name">The name of the binding.</param>
      <param name="ns">The namespace of the binding.</param>
      <param name="bindingElementsInTopDownChannelStackOrder">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> used to initialize the custom binding.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.CreateBindingElements">
      <summary>Returns a generic collection of the binding elements from the custom binding.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> object of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that contains the binding elements from the custom binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Elements">
      <summary>Gets the binding elements from the custom binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the binding elements from the custom binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Scheme">
      <summary>Gets the URI scheme for transport used by the custom binding.</summary>
      <returns>The URI scheme for transport used by the custom binding; or an empty string if there is no transport (<see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> is <see langword="null" />).</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.FaultConverter">
      <summary>Converts exceptions thrown by a channel into SOAP fault messages that conform to the channel's protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.FaultConverter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)">
      <summary>Gets the default fault converter.</summary>
      <param name="version">The message version.</param>
      <returns>An instance of <see cref="T:System.ServiceModel.Channels.FaultConverter" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Tries to create the exception.</summary>
      <param name="message">The fault message.</param>
      <param name="fault">The fault.</param>
      <param name="exception">If conversion is successful, the SOAP exception, returned as an <see langword="out" /> parameter.</param>
      <returns>
        <see langword="true" /> if fault was successfully converted; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
      <summary>Tries to create the fault message once the fault has been converted to a SOAP exception.</summary>
      <param name="exception">The SOAP exception.</param>
      <param name="message">The fault message returned as an <see langword="out" /> parameter.</param>
      <returns>
        <see langword="true" /> if fault message was successfully created; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Wraps <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> with error checking.</summary>
      <param name="message">The fault message.</param>
      <param name="fault">The fault.</param>
      <param name="exception">If conversion is successful, the SOAP exception, returned as an <see langword="out" /> parameter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> or <paramref name="fault" /> is <see langword="null" />.

-or-

<see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> returned <see langword="true" /> but <paramref name="exception" /> is <see langword="null" />.

-or-

<see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> returned <see langword="false" /> but <paramref name="exception" /> is not <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> if fault was successfully converted; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpRequestMessageProperty">
      <summary>Provides access to the HTTP request to access and respond to the additional information made available for requests over the HTTP protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpRequestMessageProperty.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpRequestMessageProperty.System#ServiceModel#Channels#IMergeEnabledMessageProperty#TryMergeWithProperty(System.Object)">
      <param name="propertyToMerge" />
    </member>
    <member name="M:System.ServiceModel.Channels.HttpRequestMessageProperty.System#ServiceModel#Channels#IMessageProperty#CreateCopy">
      <summary>Creates and returns a copy of the current object.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.IMessageProperty" /> object that represents a copy of the current object.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Headers">
      <summary>Gets the HTTP headers from the HTTP request.</summary>
      <returns>Returns a <see cref="T:System.Net.WebHeaderCollection" /> that contains the HTTP headers in the HTTP request.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Method">
      <summary>Gets or sets the HTTP verb for the HTTP request.</summary>
      <exception cref="T:System.ArgumentNullException">The value is set to <see langword="null" />.</exception>
      <returns>The HTTP verb for the HTTP request.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Name">
      <summary>Gets the name of the message property associated with the <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" /> class.</summary>
      <returns>The value "httpRequest".</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.QueryString">
      <summary>Gets or sets the query string for the HTTP request.</summary>
      <exception cref="T:System.ArgumentNullException">The value is set to <see langword="null" />.</exception>
      <returns>The query string from the HTTP request.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.SuppressEntityBody">
      <summary>Gets or sets a value that indicates whether the body of the message is ignored and only the headers are sent.</summary>
      <returns>
        <see langword="true" /> if the message body is suppressed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpResponseMessageProperty">
      <summary>Provides access to the HTTP response in order to access and respond to the additional information made available for requests over the HTTP protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpResponseMessageProperty.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpResponseMessageProperty.System#ServiceModel#Channels#IMergeEnabledMessageProperty#TryMergeWithProperty(System.Object)">
      <param name="propertyToMerge" />
    </member>
    <member name="M:System.ServiceModel.Channels.HttpResponseMessageProperty.System#ServiceModel#Channels#IMessageProperty#CreateCopy">
      <summary>Creates a new copy of the current instance.</summary>
      <returns>A newly created copy of type <see cref="T:System.ServiceModel.Channels.IMessageProperty" /> of the current instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Headers">
      <summary>Gets the HTTP headers from the HTTP response.</summary>
      <returns>Returns a <see cref="T:System.Net.WebHeaderCollection" /> that contains the HTTP headers in the HTTP response.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.HttpResponseMessage" />
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Name">
      <summary>Gets the name of the message property associated with the <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" /> class.</summary>
      <returns>Returns "httpResponse".</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusCode">
      <summary>Gets or sets the status code of the current HTTP response to which this property is attached.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is set to less than 100 or greater than 599.</exception>
      <returns>Returns the <see cref="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusCode" /> to send on the HTTP response.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusDescription">
      <summary>Gets or sets the description of the status code of the current HTTP response to which this property is attached.</summary>
      <returns>Returns the <see cref="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusDescription" /> to send for the HTTP response.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpsTransportBindingElement">
      <summary>Represents the binding element used to specify an HTTPS transport for transmitting messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpsTransportBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" /> class.</summary>
      <param name="elementToBeCloned">An instance of the <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" /> class.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory of a specified type that can be used to create a channel.</summary>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts and other information required to create the channel factory.</param>
      <typeparam name="TChannel">Type of channel.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> cannot be <see langword="null" />.</exception>
      <returns>A channel factory of the specified type that is configured based on the values set in the transport binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.Clone">
      <summary>Creates a copy of the current binding element.</summary>
      <returns>A copy of the current binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <param name="context">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The object to get.</typeparam>
      <returns>The specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />, or <see langword="null" /> if the object isn't found.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpsTransportBindingElement.RequireClientCertificate">
      <summary>Gets or sets a value that indicates whether SSL client authentication is required.</summary>
      <returns>
        <see langword="true" /> if SSL client authentication is required; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpsTransportBindingElement.Scheme">
      <summary>Returns the URI scheme for the transport.</summary>
      <returns>Returns the URI scheme for the transport, which is "HTTPS".</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpTransportBindingElement">
      <summary>Represents the binding element used to specify an HTTP transport for transmitting messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpTransportBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> class using another binding element.</summary>
      <param name="elementToBeCloned">An <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" /> object used to initialize this instance.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory that can be used to create a channel.</summary>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts and other information required to create the channel factory.</param>
      <typeparam name="TChannel">The type of channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> cannot be <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">An invalid argument was passed.</exception>
      <returns>A channel factory of the specified type.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determines whether a channel factory of the specified type can be built.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</param>
      <typeparam name="TChannel">The type of channel to check.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> if a channel factory can be built; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.Clone">
      <summary>Creates a new instance that is a copy of the current binding element.</summary>
      <returns>A new instance that is a copy of the current binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <param name="context">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The type of the property to get.</typeparam>
      <returns>The property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.AllowCookies">
      <summary>Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.</summary>
      <returns>
        <see langword="true" /> if cookies are allowed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.AuthenticationScheme">
      <summary>Gets or sets the authentication scheme used to authenticate client requests being processed by an HTTP listener.</summary>
      <exception cref="T:System.ArgumentException">The value for the <see cref="T:System.Net.AuthenticationSchemes" /> was already set.</exception>
      <returns>One of the enumeration values of the <see cref="T:System.Net.AuthenticationSchemes" /> enumeration that specifies the protocols used for client authentication. The default is <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.BypassProxyOnLocal">
      <summary>Gets or sets a value that indicates whether proxies are ignored for local addresses.</summary>
      <returns>
        <see langword="true" /> if proxies are ignored for local addresses; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.DecompressionEnabled">
      <summary>Gets or sets whether the process for returning compressed message data to its original size and format is enabled.</summary>
      <returns>
        <see langword="true" /> if decompression is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.ExtendedProtectionPolicy">
      <summary>Gets or sets the value of the extended security policy used by the server to validate incoming client connections.</summary>
      <returns>The value of the extended security policy used by the server to validate incoming client connections.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.KeepAliveEnabled">
      <summary>Gets or sets a value that indicates whether to make a persistent connection to a service endpoint.</summary>
      <returns>
        <see langword="true" /> if the request to the service endpoint should contain a Connection HTTP header with the value <see langword="Keep-alive" />; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize">
      <summary>Gets or sets the maximum size of the buffer to use. For buffered messages this value is the same as <see cref="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize" />. For streamed messages, this value is the maximum size of the SOAP headers, which must be read in buffered mode.</summary>
      <returns>The maximum size, in bytes, of the buffer.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.Proxy" />
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAddress">
      <summary>Gets or sets a URI that contains the address of the proxy to use for HTTP requests.</summary>
      <returns>The <see cref="T:System.Uri" /> that contains the address for the proxy. The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.ProxyAuthenticationScheme">
      <summary>Gets or sets the authentication scheme used to authenticate client requests being processed by an HTTP proxy.</summary>
      <returns>The <see cref="T:System.Net.AuthenticationSchemes" /> enumeration that specifies the protocols used for client authentication on the proxy. The default is <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.Scheme">
      <summary>Gets the URI scheme for the transport.</summary>
      <returns>A <see cref="F:System.Uri.UriSchemeHttp" /> object that represents the URI scheme for the transport.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.TransferMode">
      <summary>Gets or sets the transfer mode.</summary>
      <returns>One of the following member values of <see cref="P:System.ServiceModel.Channels.HttpTransportBindingElement.TransferMode" />:

- Buffered

- Streamed

- StreamedRequest

- StreamedResponse.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the machine-wide proxy settings are used rather than the user specific settings.</summary>
      <returns>
        <see langword="true" /> if the machine-wide proxy settings are used; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.WebSocketSettings">
      <summary>Gets or sets the web socket configuration of the binding element.</summary>
      <returns>The web socket settings.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IBindingDeliveryCapabilities">
      <summary>Defines the interface that bindings must implement to describe and advertise the capabilities that clients and services may require.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.IBindingDeliveryCapabilities.AssuresOrderedDelivery">
      <summary>Gets a value that indicates whether the binding can support assurances for the delivery of messages in the order they were sent.</summary>
      <returns>
        <see langword="true" /> if messages must be delivered in the order in which they were sent; <see langword="false" />, if the messages might not be delivered in this order.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.IBindingDeliveryCapabilities.QueuedDelivery">
      <summary>Gets a value that indicates whether the binding can support the queued delivery of messages.</summary>
      <returns>
        <see langword="true" /> if queued messages delivery is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannel">
      <summary>Defines the basic interface that all channel objects must implement. It requires that they implement the state machine interface shared by all communication objects and that they implement a method to retrieve objects from the channel stack.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</summary>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
      <returns>The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory">
      <summary>Defines the interface that must be implemented by a channel factory to produce channels.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</summary>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
      <returns>The typed object <paramref name="T" /> requested, if it is present, or <see langword="null" /> if it is not.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory`1">
      <summary>Defines the interface that must be implemented by channel factories that create type-specific channels.</summary>
      <typeparam name="TChannel">The type of channel that the channel factory creates.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a channel of a specified type to a specified endpoint address and transport address to which messages are sent.</summary>
      <param name="to">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</param>
      <returns>A channel of type <paramref name="TChannel" /> to the specified endpoint address and transport address.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Creates a channel of a specified type to a specified endpoint address.</summary>
      <param name="to">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <returns>A channel of type <paramref name="TChannel" /> to the specified endpoint address.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexChannel">
      <summary>Defines the interface that a channel must implement to both send and receive messages.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSession">
      <summary>Defines the interface for the session implemented on each side of a bi-directional communication between messaging endpoints.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to terminate the outbound session.</summary>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate.</param>
      <param name="state">An <see langword="object" /> that contains state information for this request.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous outbound session termination.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to terminate the outbound session with a specified timeout within which the operation must complete.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the operation must complete.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate.</param>
      <param name="state">An <see langword="object" /> that contains state information for this request.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous outbound session termination.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
      <summary>Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
      <summary>Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the operation must complete.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to terminate the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" /> methods.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSessionChannel">
      <summary>Defines the interface that associates a duplex channel with a session.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IHttpCookieContainerManager">
      <summary>Represents the cookie container manager.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.IHttpCookieContainerManager.CookieContainer">
      <summary>Gets or sets the cookie container.</summary>
      <returns>The cookie container.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputChannel">
      <summary>Defines the interface that a channel must implement to receive a message.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a message that has a state object associated with it.</summary>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous message reception.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a message that has a specified time out and state object associated with it.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for a message to become available.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation.</param>
      <exception cref="T:System.TimeoutException">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than zero.</exception>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous receive operation.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to receive a message that has a specified time out and state object associated with it.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for a message to become available.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation.</param>
      <exception cref="T:System.TimeoutException">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than zero.</exception>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous receive operation.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous wait-for-a-message-to-arrive operation that has a specified time out and state object associated with it.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for a message to become available.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation.</param>
      <exception cref="T:System.TimeoutException">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than zero.</exception>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to wait for a message to arrive.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to receive a message.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> methods.</param>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> received.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
      <summary>Completes the specified asynchronous operation to receive a message.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> received.</param>
      <returns>
        <see langword="true" /> if a message is received before the specified interval of time elapses; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)">
      <summary>Completes the specified asynchronous wait-for-a-message operation.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that identifies the <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" /> operation to finish, and from which to retrieve an end result.</param>
      <returns>
        <see langword="true" /> if a message has arrived before the <paramref name="timeout" /> has been exceeded; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive">
      <summary>Returns the message received, if one is available. If a message is not available, blocks for a default interval of time.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> received.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
      <summary>Returns the message received, if one is available. If a message is not available, blocks for a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the receive operation has to complete before timing out and throwing a <see cref="T:System.TimeoutException" />.</param>
      <exception cref="T:System.TimeoutException">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than zero.</exception>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> received.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
      <summary>Tries to receive a message within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> methods.</param>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> received.</param>
      <exception cref="T:System.TimeoutException">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than zero.</exception>
      <returns>
        <see langword="true" /> if a message is received before the <paramref name="timeout" /> has been exceeded; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
      <summary>Returns a value that indicates whether a message has arrived within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> specifies the maximum interval of time to wait for a message to arrive before timing out.</param>
      <exception cref="T:System.TimeoutException">The specified <paramref name="timeout" /> is exceeded before the operation is completed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than zero.</exception>
      <returns>
        <see langword="true" /> if a message has arrived before the <paramref name="timeout" /> has been exceeded; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
      <summary>Gets the address on which the input channel receives messages.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> on which the input channel receives messages.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSession">
      <summary>Defines the interface for the session implemented on the receiving side of a one-way communication between messaging endpoints.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSessionChannel">
      <summary>Defines the interface that associates an input channel with a session.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IMessageProperty">
      <summary>Defines an interface that you can implement to describe a set of properties for a message.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IMessageProperty.CreateCopy">
      <summary>Creates a copy of the current instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.IMessageProperty" /> object that is a copy of the current instance.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputChannel">
      <summary>Defines the interface that a channel must implement to send a message.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to transmit a message to the destination of the output channel.</summary>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous send operation.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to transmit a message to the destination of the output channel within a specified interval of time.</summary>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</param>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation send completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous send operation.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous send operation.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to transmit a message to the destination of the output channel.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Sends a message on the current output channel within a specified interval of time.</summary>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</param>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)">
      <summary>Transmits a message to the destination of the output channel.</summary>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress">
      <summary>Gets the destination of the service to which messages are sent out on the output channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> of the service to which the output channel sends messages.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.Via">
      <summary>Gets the URI that contains the transport address to which messages are sent on the output channel.</summary>
      <returns>The <see cref="T:System.Uri" /> that contains the transport address to which messages are sent on the output channel.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSession">
      <summary>Defines the interface for the session implemented on the sending side of a one-way communication between messaging endpoints.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSessionChannel">
      <summary>Defines the interface that associates an output channel with a session.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestChannel">
      <summary>Defines the contract that a channel must implement to be on the requesting side of a request-reply communication between messaging endpoints.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange.</summary>
      <param name="message">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange within a specified interval of time.</summary>
      <param name="message">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</param>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which a response must be received.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to return a message-based response to a transmitted request.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> method.</param>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> received in response to the request.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Sends a message-based request and returns the correlated message-based response within a specified interval of time.</summary>
      <param name="message">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</param>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which a response must be received.</param>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> received in response to the request.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
      <summary>Sends a message-based request and returns the correlated message-based response.</summary>
      <param name="message">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</param>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> received in response to the request.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
      <summary>Gets the remote address to which the request channel sends messages.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> to which the request channel sends messages.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.Via">
      <summary>Gets the transport address to which the request is send.</summary>
      <returns>The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestSessionChannel">
      <summary>Defines the interface to associate a request channel with a session.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.ISecurityCapabilities">
      <summary>Defines the contract for specifying the security capabilities for bindings.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ISecurityCapabilities.SupportedRequestProtectionLevel">
      <summary>Gets the protection level requests supported by the binding.</summary>
      <returns>The <see cref="T:System.Net.Security.ProtectionLevel" /> that specifies the protection level requests supported by the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ISecurityCapabilities.SupportedResponseProtectionLevel">
      <summary>Gets the protection level responses supported by the binding.</summary>
      <returns>The <see cref="T:System.Net.Security.ProtectionLevel" /> that specifies the protection level responses supported by the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ISecurityCapabilities.SupportsClientAuthentication">
      <summary>Gets a value that indicates whether the binding supports client authentication.</summary>
      <returns>
        <see langword="true" /> if the binding can support client authentication; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ISecurityCapabilities.SupportsClientWindowsIdentity">
      <summary>Gets a value that indicates whether the binding supports client Windows identity.</summary>
      <returns>
        <see langword="true" /> if the binding can support client Windows identity; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ISecurityCapabilities.SupportsServerAuthentication">
      <summary>Gets a value that indicates whether the binding supports server authentication.</summary>
      <returns>
        <see langword="true" /> if the binding can support server authentication; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ISession">
      <summary>Defines the interface to establish a shared context among parties that exchange messages by providing an ID for the communication session.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ISession.Id">
      <summary>Gets the ID that uniquely identifies the session.</summary>
      <returns>The ID that uniquely identifies the session.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ISessionChannel`1">
      <summary>Defines the interface that associates a channel with a specific type of session.</summary>
      <typeparam name="TSession">The type of <see cref="T:System.ServiceModel.Channels.ISession" /> associated with the cannel.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ISessionChannel`1.Session">
      <summary>Gets the type of session associated with this channel.</summary>
      <returns>The type of <see cref="T:System.ServiceModel.Channels.ISession" /> associated with this channel.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.LocalClientSecuritySettings">
      <summary>Specifies local client security settings.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.Clone">
      <summary>Creates a new instance of this class, which is a copy or clone of the current instance.</summary>
      <returns>A new instance of <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.CacheCookies">
      <summary>Gets or sets a value that indicates whether secure conversation cookies are cached.</summary>
      <returns>
        <see langword="true" /> if cookies are cached; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.CookieRenewalThresholdPercentage">
      <summary>Gets or sets the threshold percentage for renewal of secure conversation cookies.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is <see langword="set" /> to a value less than 0 or greater than 100.</exception>
      <returns>The threshold percentage for renewing secure conversation cookies. The default is 60 percent.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.DetectReplays">
      <summary>Gets or sets a value that indicates whether replay detection is enabled on messages the client receives from the service.</summary>
      <returns>
        <see langword="true" /> if replay detection is enabled; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.IdentityVerifier">
      <summary>Gets or sets the identity verifier.</summary>
      <returns>An instance of an implementation of the abstract class <see cref="T:System.ServiceModel.Security.IdentityVerifier" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.MaxClockSkew">
      <summary>Gets or sets the maximum allowable time difference between the system clocks of the two parties that are communicating.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is <see langword="set" /> to a value less than 0.</exception>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the maximum allowable time difference between the system clocks of the two parties that are communicating. The default is 5 minutes.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.MaxCookieCachingTime">
      <summary>Gets or sets the maximum caching time for secure conversation cookies.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is <see langword="set" /> to a value less than 0.</exception>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the maximum caching time for secure conversation cookies. The default is 10675199 days.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.NonceCache">
      <summary>Gets or sets the cache for the local client security settings.</summary>
      <returns>The cache for the local client security settings.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.ReconnectTransportOnFailure">
      <summary>Gets or sets a value that indicates whether security sessions attempt to reconnect after transport failures.</summary>
      <returns>
        <see langword="true" /> if security sessions attempt to reconnect after transport failures; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayCacheSize">
      <summary>Gets or sets the number of cached nonces used for replay detection.</summary>
      <returns>The number of cached nonces used for replay detection. The default is 900000.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayWindow">
      <summary>Gets or sets the maximum time that a message nonce is valid.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is <see langword="set" /> to a value less than 0.</exception>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the maximum time that a message nonce is valid. The default is five minutes.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.SessionKeyRenewalInterval">
      <summary>Gets or sets the time span after which the initiator renews the key for the security session.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is <see langword="set" /> to a value less than 0.</exception>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the time span after which the initiator renews the key for the security session. The default is 10 hours.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.SessionKeyRolloverInterval">
      <summary>Gets or sets the time interval for which the previous session key is valid on incoming messages during a key renewal.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is <see langword="set" /> to a value less than 0.</exception>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the time interval for which the previous session key is valid on incoming messages after a key renewal. The default is 5 minutes.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.TimestampValidityDuration">
      <summary>Gets or sets the maximum duration that the messages are valid when sent by the client. If a message is received by the service after this duration, it should discard the message.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is <see langword="set" /> to a value less than 0.</exception>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the maximum duration that the messages are valid when sent by the client. The default is 5 minutes.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.Message">
      <summary>Represents the unit of communication between endpoints in a distributed environment.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.Message" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.Close">
      <summary>Closes the <see cref="T:System.ServiceModel.Channels.Message" /> and releases any resources.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)">
      <summary>Stores an entire <see cref="T:System.ServiceModel.Channels.Message" /> into a memory buffer for future access.</summary>
      <param name="maxBufferSize">The maximum size of the buffer to be created.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferSize" /> is smaller than zero.</exception>
      <exception cref="T:System.ObjectDisposedException">The message is closed.</exception>
      <exception cref="T:System.InvalidOperationException">The message has been copied, read or written.</exception>
      <returns>A newly created <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.ServiceModel.FaultCode,System.String,System.Object,System.String)">
      <summary>Creates a message that contains a SOAP fault, a reason and the detail for the fault, a version and an action.</summary>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that specifies the SOAP version to use for the message.</param>
      <param name="faultCode">A <see cref="T:System.ServiceModel.Channels.MessageFault" /> object that represents a SOAP fault.</param>
      <param name="reason">The reason of the SOAP fault.</param>
      <param name="detail">The details of the SOAP fault.</param>
      <param name="action">A description of how the message should be processed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="fault" />, <paramref name="action" />, <paramref name="detail" /> or <paramref name="faultCode" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.ServiceModel.FaultCode,System.String,System.String)">
      <summary>Creates a message that contains a SOAP fault, the reason for the fault, a version and an action.</summary>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that specifies the SOAP version to use for the message.</param>
      <param name="faultCode">A <see cref="T:System.ServiceModel.Channels.MessageFault" /> object that represents a SOAP fault.</param>
      <param name="reason">The reason of the SOAP fault.</param>
      <param name="action">A description of how the message should be processed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="fault" />, <paramref name="action" /> or <paramref name="faultCode" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Creates a message using the specified version, action, message body and serializer.</summary>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that specifies the SOAP version to use for the message.</param>
      <param name="action">A description of how the message should be processed.</param>
      <param name="body">The body of the message.</param>
      <param name="serializer">A <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> object used to serialize the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="fault" /> or <paramref name="action" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object)">
      <summary>Creates a message with the specified version, action and body.</summary>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that specifies the SOAP version to use for the message.</param>
      <param name="action">A description of how the message should be processed.</param>
      <param name="body">The body of the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> or <paramref name="body" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.ServiceModel.Channels.BodyWriter)">
      <summary>Creates a message with a body that consists of an array of bytes.</summary>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that specifies the SOAP version to use for the message.</param>
      <param name="action">A description of how the message should be processed.</param>
      <param name="body">A <see cref="T:System.ServiceModel.Channels.BodyWriter" /> of type byte.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Version" />, <paramref name="action" /> or <paramref name="body" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlDictionaryReader)">
      <summary>Creates a message with the specified version, action and body.</summary>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that specifies the SOAP version to use for the message.</param>
      <param name="action">A description of how the message should be processed.</param>
      <param name="body">The body of the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> or <paramref name="body" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlReader)">
      <summary>Creates a message using the specified reader, action and version.</summary>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that specifies the SOAP version to use for the message.</param>
      <param name="action">A description of how the message should be processed.</param>
      <param name="body">The <see cref="T:System.Xml.XmlReader" /> object to be used for reading the SOAP message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> or <paramref name="body" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String)">
      <summary>Creates a message that contains a version and an action.</summary>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that specifies the SOAP version to use for the message.</param>
      <param name="action">A description of how the message should be processed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> or <paramref name="action" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.Xml.XmlDictionaryReader,System.Int32,System.ServiceModel.Channels.MessageVersion)">
      <summary>Creates a message using the specified reader, action and version.</summary>
      <param name="envelopeReader">The <see cref="T:System.Xml.XmlDictionaryReader" /> object to be used for reading the SOAP message.</param>
      <param name="maxSizeOfHeaders">The maximum size in bytes of a header.</param>
      <param name="version">A valid <see cref="T:System.ServiceModel.Channels.MessageVersion" /> value that specifies the SOAP version to use for the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeReader" /> or <paramref name="version" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.Xml.XmlReader,System.Int32,System.ServiceModel.Channels.MessageVersion)">
      <summary>Creates a message using the specified reader, action and version.</summary>
      <param name="envelopeReader">The <see cref="T:System.Xml.XmlReader" /> object to be used for reading the SOAP message.</param>
      <param name="maxSizeOfHeaders">The maximum size in bytes of a header.</param>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that specifies the SOAP version to use for the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeReader" /> or <paramref name="version" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> object for the message created.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1">
      <summary>Retrieves the body of this <see cref="T:System.ServiceModel.Channels.Message" /> instance.</summary>
      <typeparam name="T">The body of the message.</typeparam>
      <returns>An object of type <paramref name="T" /> that contains the body of this message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Retrieves the body of this <see cref="T:System.ServiceModel.Channels.Message" /> using the specified serializer.</summary>
      <param name="serializer">A <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> object used to read the body of the message.</param>
      <typeparam name="T">The body of the message.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializer" /> is <see langword="null" />.</exception>
      <returns>An object of type <paramref name="T" /> that contains the body of this message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBodyAttribute(System.String,System.String)">
      <summary>Retrieves the attributes of the message body.</summary>
      <param name="localName">The local name of the XML node.

 The name of the element that corresponds to this member. This string must be a valid XML element name.</param>
      <param name="ns">The namespace to which this XML element belongs.

 The namespace URI of the element that corresponds to this member. The system does not validate any URIs other than transport addresses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> or <paramref name="ns" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The message is closed.</exception>
      <exception cref="T:System.InvalidOperationException">The message has been copied, read or written.</exception>
      <returns>The attributes of the message body.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetReaderAtBodyContents">
      <summary>Gets the XML dictionary reader that accesses the body content of this message.</summary>
      <exception cref="T:System.ObjectDisposedException">The message is closed.</exception>
      <exception cref="T:System.InvalidOperationException">The message is empty, or has been copied, read or written.</exception>
      <returns>A <see cref="T:System.Xml.XmlDictionaryReader" /> object that accesses the body content of this message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnBodyToString(System.Xml.XmlDictionaryWriter)">
      <summary>Called when the message body is converted to a string.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to convert the message body to a string.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnClose">
      <summary>Called when the message is closing.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnCreateBufferedCopy(System.Int32)">
      <summary>Called when a message buffer is created to store this message.</summary>
      <param name="maxBufferSize">The maximum size of the buffer to be created.</param>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object for the newly created message copy.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBody``1(System.Xml.XmlDictionaryReader)">
      <summary>Called when the body of the message is retrieved.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> object used to read the body of the message.</param>
      <typeparam name="T">The type of the message body.</typeparam>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> that represents the body of the message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBodyAttribute(System.String,System.String)">
      <summary>Called when the attributes of the message body is retrieved.</summary>
      <param name="localName">The local name of the XML node.

 The name of the element that corresponds to this member. This string must be a valid XML element name.</param>
      <param name="ns">The namespace to which this XML element belongs.

 The namespace URI of the element that corresponds to this member. The system does not validate any URIs other than transport addresses.</param>
      <returns>The attributes of the message body.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetReaderAtBodyContents">
      <summary>Called when an XML dictionary reader that accesses the body content of this message is retrieved.</summary>
      <returns>A <see cref="T:System.Xml.XmlDictionaryReader" /> object that accesses the body content of this message.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Called when the message body is written to an XML file.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to write this message body to an XML file.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Called when the entire message is written to an XML file.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to write this message to an XML file.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Called when the start body is written to an XML file.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to write the start body to an XML file.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Called when the start envelope is written to an XML file.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to write the start envelope to an XML file.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartHeaders(System.Xml.XmlDictionaryWriter)">
      <summary>Called when the start header is written to an XML file.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to write the start header to an XML file.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.System#IDisposable#Dispose">
      <summary>Closes all the resources used by this message. This method cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.ToString">
      <summary>Returns a string that represents the current <see cref="T:System.ServiceModel.Channels.Message" /> instance.</summary>
      <returns>The string representation of the current <see cref="T:System.ServiceModel.Channels.Message" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlDictionaryWriter)">
      <summary>Writes the body element using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> object to be used to write the body element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlWriter)">
      <summary>Serializes the message body using the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> object to be used to write the body of the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The message is disposed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Serializes the body content using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> object to be used to write the body element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The message is closed.</exception>
      <exception cref="T:System.InvalidOperationException">The message has been copied, read or written.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Serializes the entire message using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> object to be used to write the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The message is closed.</exception>
      <exception cref="T:System.InvalidOperationException">The message has been copied, read or written.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlWriter)">
      <summary>Serializes the entire message using the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> object to be used to write the entire message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The message is closed.</exception>
      <exception cref="T:System.InvalidOperationException">The message has been copied, read or written.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Serializes the start body of the message using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> object to be used to write the start body.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlWriter)">
      <summary>Serializes the start body of the message using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> object to be used to write the start body of the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Serializes the start envelope using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> object to be used to write the start envelope.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Headers">
      <summary>When overridden in a derived class, gets the headers of the message.</summary>
      <exception cref="T:System.ObjectDisposedException">The message has been disposed of.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> object that represents the headers of the message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsDisposed">
      <summary>Returns a value that indicates whether the <see cref="T:System.ServiceModel.Channels.Message" /> is disposed.</summary>
      <returns>
        <see langword="true" /> if the message is disposed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsEmpty">
      <summary>Returns a value that indicates whether the <see cref="T:System.ServiceModel.Channels.Message" /> is empty.</summary>
      <exception cref="T:System.ObjectDisposedException">The message has been disposed of.</exception>
      <returns>
        <see langword="true" /> if the message is empty; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsFault">
      <summary>Gets a value that indicates whether this message generates any SOAP faults.</summary>
      <exception cref="T:System.ObjectDisposedException">The message has been disposed of.</exception>
      <returns>
        <see langword="true" /> if this message generates any SOAP faults; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Properties">
      <summary>When overridden in a derived class, gets a set of processing-level annotations to the message.</summary>
      <exception cref="T:System.ObjectDisposedException">The message has been disposed of.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> that contains a set of processing-level annotations to the message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.State">
      <summary>Gets the current state of this <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageState" /> that contains the current state of this <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Version">
      <summary>When overridden in a derived class, gets the SOAP version of the message.</summary>
      <exception cref="T:System.ObjectDisposedException">The message has been disposed of.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object that represents the SOAP version.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageBuffer">
      <summary>Represents a memory buffer that stores an entire message for future consumption.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.Close">
      <summary>Finishes working with the buffer.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
      <summary>Returns a copy of the original message.</summary>
      <returns>An identical copy of the original <see cref="T:System.ServiceModel.Channels.Message" /> instance you previously provided to the <see cref="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)" /> method of a <see cref="T:System.ServiceModel.Channels.Message" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> and optionally releases the managed resources. This method cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
      <summary>Writes the entire content of this buffer to the specified IO stream.</summary>
      <param name="stream">An IO stream that the entire content of this buffer is written to.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
      <summary>Gets the approximate number of bytes consumed by this <see cref="T:System.ServiceModel.Channels.MessageBuffer" />.</summary>
      <returns>The approximate number of bytes consumed by this <see cref="T:System.ServiceModel.Channels.MessageBuffer" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType">
      <summary>Gets the type of message content stored in this buffer.</summary>
      <returns>The type of message content stored in this buffer.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoder">
      <summary>The encoder is the component that is used to write messages to a stream and to read messages from a stream.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</summary>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
      <returns>The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
      <summary>Returns a value that indicates whether a specified message-level content-type value is supported by the message encoder.</summary>
      <param name="contentType">The message-level content-type being tested.</param>
      <returns>
        <see langword="true" /> if the message-level content-type specified is supported; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
      <summary>When overridden in a derived class, reads a message from a specified stream.</summary>
      <param name="buffer">A <see cref="T:System.ArraySegment`1" /> of type <see cref="T:System.Byte" /> that provides the buffer from which the message is deserialized.</param>
      <param name="bufferManager">The <see cref="T:System.ServiceModel.Channels.BufferManager" /> that manages the buffer from which the message is deserialized.</param>
      <param name="contentType">The Multipurpose Internet Mail Extensions (MIME) message-level content-type.</param>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> that is read from the stream specified.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
      <summary>When overridden in a derived class, reads a message from a specified buffer.</summary>
      <param name="buffer">A <see cref="T:System.ArraySegment`1" /> of type <see cref="T:System.Byte" /> that provides the buffer from which the message is deserialized.</param>
      <param name="bufferManager">The <see cref="T:System.ServiceModel.Channels.BufferManager" /> that manages the buffer from which the message is deserialized.</param>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> that is read from the buffer specified.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
      <summary>When overridden in a derived class, reads a message from a specified stream.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> object from which the message is read.</param>
      <param name="maxSizeOfHeaders">The maximum size of the headers that can be read from the message.</param>
      <param name="contentType">The Multipurpose Internet Mail Extensions (MIME) message-level content-type.</param>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> that is read from the stream specified.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)">
      <summary>When overridden in a derived class, reads a message from a specified stream.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> object from which the message is read.</param>
      <param name="maxSizeOfHeaders">The maximum size of the headers that can be read from the message.</param>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> that is read from the stream specified.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessageAsync(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
      <param name="buffer" />
      <param name="bufferManager" />
      <param name="contentType" />
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessageAsync(System.IO.Stream,System.Int32,System.String)">
      <param name="stream" />
      <param name="maxSizeOfHeaders" />
      <param name="contentType" />
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ToString">
      <summary>Returns the content type that is used by the message encoder.</summary>
      <returns>The content type that is used by the message encoder.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
      <summary>When overridden in a derived class, writes a message of less than a specified size to a byte array buffer at the specified offset.</summary>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to write to the message buffer.</param>
      <param name="maxMessageSize">The maximum message size that can be written.</param>
      <param name="bufferManager">The <see cref="T:System.ServiceModel.Channels.BufferManager" /> that manages the buffer to which the message is written.</param>
      <param name="messageOffset">The offset of the segment that begins from the start of the byte array that provides the buffer.</param>
      <returns>A <see cref="T:System.ArraySegment`1" /> of type <see langword="byte" /> that provides the buffer to which the message is serialized.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
      <summary>Writes a message less than a specified size to a byte array buffer.</summary>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to write to the message buffer.</param>
      <param name="maxMessageSize">The maximum message size that can be written.</param>
      <param name="bufferManager">The <see cref="T:System.ServiceModel.Channels.BufferManager" /> that manages the buffer to which the message is written.</param>
      <returns>A <see cref="T:System.ArraySegment`1" /> of type <see langword="byte" /> that provides the buffer to which the message is serialized.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
      <summary>When overridden in a derived class, writes a message to a specified stream.</summary>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to write to the <paramref name="stream" />.</param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> object to which the <paramref name="message" /> is written.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessageAsync(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
      <param name="message" />
      <param name="maxMessageSize" />
      <param name="bufferManager" />
      <param name="messageOffset" />
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessageAsync(System.ServiceModel.Channels.Message,System.IO.Stream)">
      <param name="message" />
      <param name="stream" />
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
      <summary>When overridden in a derived class, gets the MIME content type used by the encoder.</summary>
      <returns>The content type that is supported by the message encoder.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MediaType">
      <summary>When overridden in a derived class, gets the media type value that is used by the encoder.</summary>
      <returns>The media type that is supported by the message encoder.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
      <summary>When overridden in a derived class, gets the message version value that is used by the encoder.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used by the encoder.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoderFactory">
      <summary>An abstract base class that represents the factory for producing message encoders that can read messages from a stream and write them to a stream for various types of message encoding.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder">
      <summary>Returns a message encoder that can be used to correlate messages in session-based exchanges.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> that is used in session-based exchanges of messages.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.Encoder">
      <summary>When overridden in a derived class, gets the message encoder that is produced by the factory.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> used by the factory.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion">
      <summary>When overridden in a derived class, gets the message version that is used by the encoders produced by the factory to encode messages.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> used by the factory.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
      <summary>The binding element that specifies the message version used to encode messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> class initialized from an existing element.</summary>
      <param name="elementToBeCloned">The <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> to be cloned.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>When overridden in a derived class, creates a factory for producing message encoders.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> used to produce message encoders.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns the typed object requested, if present, from the appropriate layer in the channel stack.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the current binding element.</param>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is <see langword="null" />.</exception>
      <returns>The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
      <summary>When overridden in a derived class, gets or sets the message version that can be handled by the message encoders produced by the message encoder factory.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> used by the encoders produced by the message encoder factory.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageFault">
      <summary>Represents an in-memory representation of a SOAP fault that can be passed to <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> to create a message that contains a fault.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.#ctor">
      <summary>When called in a derived class, initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageFault" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Returns a new <see cref="T:System.ServiceModel.Channels.MessageFault" /> object that uses the specified <see cref="T:System.ServiceModel.Channels.Message" /> and the specified maximum buffer size for the message buffer.</summary>
      <param name="message">The specified <see cref="T:System.ServiceModel.Channels.Message" /> to be used to create the <see cref="T:System.ServiceModel.Channels.MessageFault" /> object.</param>
      <param name="maxBufferSize">The specified maximum buffer size for the message buffer.</param>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageFault" /> object with initial values from the passed in parameters.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1">
      <summary>Returns the detail object of the message fault.</summary>
      <typeparam name="T">The type of the detail object.</typeparam>
      <returns>The detail object of the message fault.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Returns the detail object that uses the specified <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
      <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> to use when deserializing the detail object.</param>
      <typeparam name="T">The type of the detail object.</typeparam>
      <returns>The detail object contained in the <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetReaderAtDetailContents">
      <summary>Returns an <see cref="T:System.Xml.XmlDictionaryReader" /> object that is positioned on the detail object of the <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryReader" /> object that is positioned on the detail object of the <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnGetReaderAtDetailContents">
      <summary>When called in a derived class, returns an <see cref="T:System.Xml.XmlDictionaryReader" /> object that is positioned on the detail object of the <see cref="T:System.ServiceModel.Channels.MessageFault" />.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryReader" /> object that is positioned on the detail object of the <see cref="T:System.ServiceModel.Channels.MessageFault" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Invoked prior to writing the detail contents.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the detail element.</param>
      <param name="version">The version of the SOAP envelope to write.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetailContents(System.Xml.XmlDictionaryWriter)">
      <summary>When overridden in a non-abstract derived class, writes the contents of the detail element.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the detail element.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteStartDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Writes the start element using the specified <see cref="T:System.Xml.XmlDictionaryWriter" /> and SOAP envelope version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the detail element.</param>
      <param name="version">The version of the SOAP envelope to write.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Actor">
      <summary>Gets or sets the value of the actor.</summary>
      <returns>The value of the actor.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Code">
      <summary>Gets the SOAP fault code.</summary>
      <returns>A <see cref="T:System.ServiceModel.FaultCode" /> that contains the SOAP fault code.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.HasDetail">
      <summary>Gets a value that indicates whether the <see cref="T:System.ServiceModel.Channels.MessageFault" /> has a detail object.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageFault" /> has a detail object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Node">
      <summary>Gets the SOAP node containing information about which SOAP node on a message path cause the fault.</summary>
      <returns>The SOAP node containing information about which SOAP node on a message path cause the fault.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Reason">
      <summary>Gets a textual description of a SOAP fault.</summary>
      <returns>A <see cref="T:System.ServiceModel.FaultReason" /> that contains a textual description of a SOAP fault.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeader">
      <summary>Represents the content of a SOAP header.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageHeader" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String,System.Boolean)">
      <summary>Creates a new message header with the specified data.</summary>
      <param name="name">The local name of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="value">The content of the header to be created.</param>
      <param name="mustUnderstand">A value that indicates whether the header must be understood.</param>
      <param name="actor">The targeted recipient of the message header.</param>
      <param name="relay">A value that indicates whether the header should be relayed.</param>
      <returns>A new <see cref="T:System.ServiceModel.Channels.MessageHeader" /> object with the specified data.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String)">
      <summary>Creates a new message header with the specified data.</summary>
      <param name="name">The local name of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="value">The content of the header to be created.</param>
      <param name="mustUnderstand">A value that indicates whether the header must be understood.</param>
      <param name="actor">The targeted recipient of the message header.</param>
      <returns>A new <see cref="T:System.ServiceModel.Channels.MessageHeader" /> object with the specified data.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean)">
      <summary>Creates a new message header with the specified data.</summary>
      <param name="name">The local name of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="value">The content of the header to be created.</param>
      <param name="mustUnderstand">A value that indicates whether the header must be understood.</param>
      <returns>A new <see cref="T:System.ServiceModel.Channels.MessageHeader" /> object with the specified data.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String,System.Boolean)">
      <summary>Creates a new message header with the specified data.</summary>
      <param name="name">The local name of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="value">The content of the header to be created.</param>
      <param name="serializer">An <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> that is used to serialize the header.</param>
      <param name="mustUnderstand">A value that indicates whether the header must be understood.</param>
      <param name="actor">The targeted recipient of the message header.</param>
      <param name="relay">A value that indicates whether the header should be relayed.</param>
      <returns>A new <see cref="T:System.ServiceModel.Channels.MessageHeader" /> object with the specified data.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String)">
      <summary>Creates a new message header with the specified data.</summary>
      <param name="name">The local name of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="value">The content of the header to be created.</param>
      <param name="serializer">An <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> that is used to serialize the header.</param>
      <param name="mustUnderstand">A value that indicates whether the header must be understood.</param>
      <param name="actor">The targeted recipient of the message header.</param>
      <returns>A new <see cref="T:System.ServiceModel.Channels.MessageHeader" /> object with the specified data.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean)">
      <summary>Creates a new message header with the specified data.</summary>
      <param name="name">The local name of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="value">The content of the header to be created.</param>
      <param name="serializer">An <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> that is used to serialize the header.</param>
      <param name="mustUnderstand">A value that indicates whether the header must be understood.</param>
      <returns>A new <see cref="T:System.ServiceModel.Channels.MessageHeader" /> object with the specified data.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Creates a header from an object to be serialized using the XmlFormatter.</summary>
      <param name="name">The local name of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="value">The content of the header to be created.</param>
      <param name="serializer">An <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> that is used to serialize the header.</param>
      <returns>A new <see cref="T:System.ServiceModel.Channels.MessageHeader" /> object with the specified data.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object)">
      <summary>Creates a new message header with the specified data.</summary>
      <param name="name">The local name of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="value">The content of the header to be created.</param>
      <returns>A new <see cref="T:System.ServiceModel.Channels.MessageHeader" /> object with the specified data.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.IsMessageVersionSupported(System.ServiceModel.Channels.MessageVersion)">
      <summary>Verifies whether the specified message version is supported.</summary>
      <param name="messageVersion">The object that contains information related to the version of SOAP associated with a message and its exchange.</param>
      <returns>
        <see langword="true" /> if the specified message version is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Called when the header content is serialized using the specified XML writer.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to serialize the header contents.</param>
      <param name="messageVersion">The object that contains information related to the version of SOAP associated with a message and its exchange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Called when the start header is serialized using the specified XML writer.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to serialize the start header.</param>
      <param name="messageVersion">The object that contains information related to the version of SOAP associated with a message and its exchange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.ToString">
      <summary>Returns the string representation of this message header.</summary>
      <returns>The string representation of this message header.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializes the header using the specified XML writer.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to serialize the header.</param>
      <param name="messageVersion">The object that contains information related to the version of SOAP associated with a message and its exchange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializes the header using the specified XML writer.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> that is used to serialize the header.</param>
      <param name="messageVersion">The object that contains information related to the version of SOAP associated with a message and its exchange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderAttributes(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializes the header attributes using the specified XML writer.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to serialize the header attributes.</param>
      <param name="messageVersion">The object that contains information related to the version of SOAP associated with a message and its exchange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializes the header contents using the specified XML writer.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> that is used to serialize the header contents.</param>
      <param name="messageVersion">The object that contains information related to the version of SOAP associated with a message and its exchange.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serializes the start header using the specified XML writer.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to serialize the start header.</param>
      <param name="messageVersion">That object that contains information related to the version of SOAP associated with a message and its exchange.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Actor">
      <summary>Gets or sets the targeted recipient of the message header.</summary>
      <returns>The targeted recipient of the message header. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.IsReferenceParameter">
      <summary>Gets a value that specifies whether this message header contains reference parameters of an endpoint reference.</summary>
      <returns>
        <see langword="true" /> if this message header contains reference parameters of an endpoint reference; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.MustUnderstand">
      <summary>Gets or sets a value that indicates whether the header must be understood, according to SOAP 1.1/1.2 specification.</summary>
      <returns>
        <see langword="true" /> if the header must be understood; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Relay">
      <summary>Gets a value that indicates whether the header should be relayed.</summary>
      <returns>
        <see langword="true" /> if the header should be relayed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaderInfo">
      <summary>Represents system information regarding a SOAP message header.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaderInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Actor">
      <summary>Gets or sets the intended recipient of the message header.</summary>
      <returns>A URI that indicates the intended recipient of the message header.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.IsReferenceParameter">
      <summary>Gets a value that specifies whether the message header represents reference parameters of an endpoint reference.</summary>
      <returns>
        <see langword="true" /> if the message header represents reference parameters of an endpoint reference; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.MustUnderstand">
      <summary>Gets or sets a value that indicates whether processing the message header is mandatory or optional.</summary>
      <returns>
        <see langword="true" /> if processing the message header is mandatory; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Name">
      <summary>Gets the name of the message header.</summary>
      <returns>The name of the message header.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Namespace">
      <summary>Gets the namespace of the message header.</summary>
      <returns>The namespace of the message header.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Relay">
      <summary>Gets or sets a value that indicates whether the message header can be relayed.</summary>
      <returns>
        <see langword="true" /> if the message header can be relayed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaders">
      <summary>Represents a collection of message headers for a message. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> class with the specified collection of message headers.</summary>
      <param name="collection">A collection of message headers.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> class with the specified message version and size.</summary>
      <param name="version">The SOAP version of the message.</param>
      <param name="initialSize">The size of the header.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> class with the specified message version.</summary>
      <param name="version">The SOAP version of the message.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Add(System.ServiceModel.Channels.MessageHeader)">
      <summary>Adds the specified message header to the collection.</summary>
      <param name="header">A message header to be added to the collection.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Clear">
      <summary>Removes all the headers from the collection.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Copies the header content located at the specified index from the specified message to this instance.</summary>
      <param name="message">A message from which the header is copied from.</param>
      <param name="headerIndex">The location of the original message header, from which the content is copied over.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.MessageHeaders,System.Int32)">
      <summary>Copies the header content located at the specified index from the specified message header collection to this instance.</summary>
      <param name="collection">A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> collection object.</param>
      <param name="headerIndex">The location of the original message header, from which the content is copied over.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.Message)">
      <summary>Copies the content of all the headers from the specified message to this instance.</summary>
      <param name="message">A message from which the headers are copied from.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Copies the content from the specified header collection to this instance.</summary>
      <param name="collection">A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> collection object from which the headers are copied to this instance.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyTo(System.ServiceModel.Channels.MessageHeaderInfo[],System.Int32)">
      <summary>Copies the headers from this collection to an array, starting at a particular index of the array.</summary>
      <param name="array">The one-dimensional Array that is the destination of the message header objects copied from this instance. The Array must have zero-based indexing.</param>
      <param name="index">The zero-based index in the array at which copying begins.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String,System.String[])">
      <summary>Finds a message header in this collection by the specified LocalName, namespace URI and actors of the header element.</summary>
      <param name="name">The LocalName of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="actors">The targeted recipient of the message header.</param>
      <exception cref="T:System.ArgumentNullException">Arguments are <see langword="null" />.</exception>
      <exception cref="T:System.ServiceModel.MessageHeaderException">The header specified by the arguments exists multiple times.</exception>
      <returns>The index of the message header in this collection if found, or -1 if the header specified does not exist.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String)">
      <summary>Finds a message header in this collection by the specified LocalName and namespace URI of the header element.</summary>
      <param name="name">The LocalName of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <exception cref="T:System.ArgumentNullException">Arguments are <see langword="null" />.</exception>
      <exception cref="T:System.ServiceModel.MessageHeaderException">The header specified by the arguments exists multiple times.</exception>
      <returns>The index of the message header in this collection if found or -1 if the header specified does not exist.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetEnumerator">
      <summary>Returns an enumerator for iterating through the collection. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Retrieves a message header at a specific position in this collection.</summary>
      <param name="index">The zero-based index of the header to get.</param>
      <param name="serializer">An <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> that is used to serialize the header.</param>
      <typeparam name="T">The type of the message header.</typeparam>
      <returns>A message header at the specified index.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32)">
      <summary>Retrieves a message header at a specific position in this collection.</summary>
      <param name="index">The zero-based index of the header to get.</param>
      <typeparam name="T">The type of the message header.</typeparam>
      <returns>A message header at the specified index.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Retrieves a message header in this collection by the specified LocalName, namespace URI and serializer.</summary>
      <param name="name">The LocalName of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="serializer">An <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> that is used to serialize the header.</param>
      <typeparam name="T">The type of the message header.</typeparam>
      <returns>A message header with the specified name.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.String[])">
      <summary>Retrieves a message header in this collection by the specified LocalName, namespace URI and actors of the header element.</summary>
      <param name="name">The LocalName of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <param name="actors">The targeted recipient of the message header.</param>
      <typeparam name="T">The type of the message header.</typeparam>
      <returns>A message header with the specified name.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String)">
      <summary>Finds a message header in this collection by the specified LocalName and namespace URI of the header element.</summary>
      <param name="name">The LocalName of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <typeparam name="T">The type of the message header.</typeparam>
      <returns>A message header with the specified name.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetReaderAtHeader(System.Int32)">
      <summary>Gets a XML dictionary reader that consumes the message header at the specified location of the collection.</summary>
      <param name="headerIndex">The zero-based index of the header to get.</param>
      <returns>An <see cref="T:System.Xml.XmlDictionaryReader" /> object that consumes the message header at the specified location of the collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood">
      <summary>Verifies whether all the message headers marked with <see langword="MustUnderstand" /> have been properly interpreted and processed.</summary>
      <returns>
        <see langword="true" /> if the recipients specified by <paramref name="actors" /> have properly interpreted and processed all the message headers marked with <see langword="MustUnderstand" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood(System.String[])">
      <summary>Verifies whether the specified recipients have properly interpreted and processed all the message headers marked with <see langword="MustUnderstand" />.</summary>
      <param name="actors">The targeted recipient of the message header.</param>
      <returns>
        <see langword="true" /> if the recipients specified by <paramref name="actors" /> have properly interpreted and processed all the message headers marked with <see langword="MustUnderstand" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Insert(System.Int32,System.ServiceModel.Channels.MessageHeader)">
      <summary>Inserts a message header into the collection at the specified index.</summary>
      <param name="headerIndex">The zero-based index at which <paramref name="header" /> should be inserted.</param>
      <param name="header">A message header to insert.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAll(System.String,System.String)">
      <summary>Removes all headers with the specified name and namespace from the collection.</summary>
      <param name="name">The LocalName of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAt(System.Int32)">
      <summary>Removes the message header at the specified index from the collection.</summary>
      <param name="headerIndex">The zero-based index of the header to remove.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.SetAction(System.Xml.XmlDictionaryString)">
      <summary>Sets the action element of the header.</summary>
      <param name="action">A description of how the message should be processed.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator for iterating through the collection. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serializes the header from the specified location using the specified XML writer.</summary>
      <param name="headerIndex">The zero-based index of the header to be serialized.</param>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to serialize the header.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Serializes the header from the specified location using the specified XML writer.</summary>
      <param name="headerIndex">The zero-based index of the header to be serialized.</param>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> that is used to serialize the header.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serializes the specified header content using the specified XML writer.</summary>
      <param name="headerIndex">The zero-based index of the header to be serialized.</param>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to serialize the header contents.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlWriter)">
      <summary>Serializes the specified header content using the specified XML writer.</summary>
      <param name="headerIndex">The zero-based index of the header to be serialized.</param>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> that is used to serialize the header contents.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serializes the start header using the specified XML writer.</summary>
      <param name="headerIndex">The zero-based index of the header to be serialized.</param>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that is used to serialize the start header.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Serializes the start header using the specified XML writer.</summary>
      <param name="headerIndex">The zero-based index of the header to be serialized.</param>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> that is used to serialize the start header.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Action">
      <summary>Gets or sets a description of how the message should be processed.</summary>
      <returns>A description of how the message should be processed.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Count">
      <summary>Gets the number of message headers in this collection.</summary>
      <returns>The number of message headers in this collection.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.FaultTo">
      <summary>Gets or sets the address of the node to which faults should be sent.</summary>
      <returns>An <see cref="T:System.ServiceModel.EndpointAddress" /> of the node to which faults should be sent.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.From">
      <summary>Gets or sets the address of the node that sent the message.</summary>
      <returns>An <see cref="T:System.ServiceModel.EndpointAddress" /> of the node that sent the message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Item(System.Int32)">
      <summary>Retrieves a header at the given index.</summary>
      <param name="index">The zero-based index of the header in the list.</param>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> in the collection. If <paramref name="index" /> is greater than or equal to the number of headers in the list, this returns <see langword="null" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageId">
      <summary>Gets or sets the unique ID of the message.</summary>
      <returns>The unique ID of the message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageVersion">
      <summary>Gets the SOAP version of the message.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is SOAP version of the message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.RelatesTo">
      <summary>Gets the IDs of messages that are related to this message.</summary>
      <returns>The IDs of messages that are related to this message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.ReplyTo">
      <summary>Gets or sets the address of the node to which a reply should be sent for a request.</summary>
      <returns>An <see cref="T:System.ServiceModel.EndpointAddress" /> of the node to which a reply should be sent for a request.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.To">
      <summary>Gets or sets the destination endpoint of a message.</summary>
      <returns>A URI that contains the destination endpoint of a message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders">
      <summary>Gets all the message headers that must be understood, according to SOAP 1.1/1.2 specification.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.UnderstoodHeaders" /> that represents the message headers that must be understood.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageProperties">
      <summary>Represents a set of properties for a message. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor(System.ServiceModel.Channels.MessageProperties)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> class with preset properties.</summary>
      <param name="properties">A <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Add(System.String,System.Object)">
      <summary>Adds an element with the specified name and property into the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> collection.</summary>
      <param name="name">The name of the element to add.</param>
      <param name="property">The value of the element to add.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Clear">
      <summary>Removes all elements from the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> collection.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.ContainsKey(System.String)">
      <summary>Determines whether the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contains a specific name, key, or identifier.</summary>
      <param name="name">The name, key, or identifier to locate in the <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contains an element with the specified <paramref name="name" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.CopyProperties(System.ServiceModel.Channels.MessageProperties)">
      <summary>Copies the content of the specified <see cref="T:System.ServiceModel.Channels.MessageProperties" /> to this instance.</summary>
      <param name="properties">A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> object in which to copy from.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Remove(System.String)">
      <summary>Removes the element with the specified name from the <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <param name="name">The name of the element to remove.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contains an element with the specified <paramref name="name" /> and can be removed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Adds an element with the specified name and property into the <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <param name="pair">A key/value pair that contains the name and value of the element to add.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determines whether the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contains a specific name.</summary>
      <param name="pair">A key/value pair that contains the name and value of the element to locate in the <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contains an element with the name and value in the specified <paramref name="pair" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copies the content of the specified <see cref="T:System.ServiceModel.Channels.MessageProperties" /> to an array, starting at the specified index.</summary>
      <param name="array">The array to copy the collection to.</param>
      <param name="index">The index to start from.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Removes the element with the specified name from the <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <param name="pair">A key/value pair that contains the name and value of the element to be removed.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contains an element with the specified name and value in the <paramref name="pair" /> parameter and can be removed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary>Returns an enumerator that can iterate through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that can iterate through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.TryGetValue(System.String,System.Object@)">
      <summary>Determines whether the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contains a specific name, and retrieves its value.</summary>
      <param name="name">The name of the element to locate.</param>
      <param name="value">The value of the found element.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> contains an element with the specified <paramref name="name" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching">
      <summary>Gets or sets a value that specifies whether to store this message before giving it to the transport.</summary>
      <returns>
        <see langword="true" /> if the batching of outgoing messages is allowed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Count">
      <summary>Gets the total number of properties in the <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>The total number of properties in the <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Encoder">
      <summary>Gets the encoder that is used to write messages to a stream and to read messages from a stream.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> that is used to write messages to a stream and to read messages from a stream.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsFixedSize">
      <summary>Gets a value that indicates whether the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> has a fixed size.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageProperties" /> has a fixed size; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Item(System.String)">
      <summary>Retrieves a property with the specified name, identifier, or key value.</summary>
      <param name="name">The name of the property to get from the collection.</param>
      <returns>The property with the specified <paramref name="name" />, or <see langword="null" /> if the property does not exist.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Keys">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Security">
      <summary>Gets or sets the security-related property of a message.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityMessageProperty" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Values">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> that contains the values in the <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> that contains the values in the <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Via">
      <summary>Gets or sets the transport address that is used to send messages.</summary>
      <returns>A URI that contains the transport address that is used to send messages.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageState">
      <summary>Specifies the status of a message.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Closed">
      <summary>The message has been closed and can no longer be accessed.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Copied">
      <summary>The message has been copied.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Created">
      <summary>The message has been created.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Read">
      <summary>The message is being read.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Written">
      <summary>The message has been written.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageVersion">
      <summary>Specifies the versions of SOAP and WS-Addressing associated with a message and its exchange.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion,System.ServiceModel.Channels.AddressingVersion)">
      <summary>Creates a message version object with specified SOAP and WS-Addressing versions.</summary>
      <param name="envelopeVersion">The <see cref="T:System.ServiceModel.EnvelopeVersion" /> that indicates the SOAP version.</param>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> that indicates the WS-Addressing version.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="envelopeVersion" /> or <paramref name="addressingVersion" /> is <see langword="null" />.</exception>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> using the specified versions of WS-Addressing and SOAP.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion)">
      <summary>Creates a message version object by using WS-Addressing 1.0 and with a specified SOAP version.</summary>
      <param name="envelopeVersion">The <see cref="T:System.ServiceModel.EnvelopeVersion" /> that indicates the SOAP version to be used.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="envelopeVersion" /> is <see langword="null" />.</exception>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> using the specified version of SOAP and WS-Addressing 1.0.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current message version is equal to a specified object.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current message version.</param>
      <returns>
        <see langword="true" /> if the specified object is equal to the current <see cref="T:System.ServiceModel.Channels.MessageVersion" /> object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.GetHashCode">
      <summary>Gets a hash code for the current message version.</summary>
      <returns>A unique hash code for the current <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.ToString">
      <summary>Returns the string representation of the current message version.</summary>
      <returns>The string representation of the current message version.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Addressing">
      <summary>Gets or sets the version of WS-Addressing that is associated with the current message version.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> that is associated with the current message version.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Default">
      <summary>Gets the default message version used by Windows Communication Foundation (WCF).</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that uses WS-Addressing 1.0 and SOAP1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Envelope">
      <summary>Gets the SOAP version associated with the current message version.</summary>
      <returns>The <see cref="T:System.ServiceModel.EnvelopeVersion" /> associated with the current message version.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.None">
      <summary>Gets the message version that does not use SOAP or WS-Addressing.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that does not use SOAP or WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11">
      <summary>Gets the message version using SOAP 1.1.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> using SOAP 1.1 but no version of WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11WSAddressing10">
      <summary>Gets the message version using WS-Addressing 1.0 and SOAP 1.1.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> using the version of WS-Addressing 1.0 and SOAP 1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11WSAddressingAugust2004">
      <summary>Gets the message version by using WS-Addressing submitted 10 August 2004 and SOAP 1.1.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> using the version of WS-Addressing submitted 10 August 2004 and SOAP 1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12">
      <summary>Gets the message version using SOAP 1.2.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> using SOAP 1.2 but no version of WS-Addressing.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10">
      <summary>Gets the message version using WS-Addressing 1.0 and SOAP 1.2.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> using the version of WS-Addressing 1.0 and SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressingAugust2004">
      <summary>Gets the message version using WS-Addressing submitted August 2004 and SOAP 1.2.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> using the version of WS-Addressing submitted 10 August 2004 and SOAP 1.2.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement">
      <summary>The binding element that specifies the encoding and versioning used for Message Transmission Optimization Mechanism (MTOM) messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> class with a specified message version and character encoding.</summary>
      <param name="messageVersion">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used for the SOAP message.</param>
      <param name="writeEncoding">The <see cref="T:System.Text.Encoding" /> that is used to format the message characters.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageVersion" /> or <paramref name="encoding" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="messageVersion" /> is set to <see cref="P:System.ServiceModel.Channels.MessageVersion.None" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel for a specified context.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> for the specified context.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the current binding can build a factory for a specified type of channel and context.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
      <returns>
        <see langword="true" /> if the specified channel factory stack can be built on the service; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.Clone">
      <summary>Creates a new <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> object initialized from the current one.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MtomMessageEncodingBindingElement" /> object with property values equal to those of the current element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Creates a message encoder factory that encodes MTOM messages.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> that encodes MTOM messages.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the binding element stack.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</param>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
      <returns>The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxBufferSize">
      <summary>Gets or sets the maximum buffer size.</summary>
      <exception cref="T:System.ArgumentNullException">The value set is less than or equal to zero.</exception>
      <returns>The maximum size of the buffer. The default value is 65536 (0x10000) bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxReadPoolSize">
      <summary>Gets or sets the maximum number of XML readers that is allocated to a pool and is ready for use to process incoming messages.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
      <returns>The maximum number of readers to be kept in the pool. The default value is 64 readers.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MaxWritePoolSize">
      <summary>Gets or sets the maximum number of XML writers that is allocated to a pool and are ready for use to process outgoing messages.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
      <returns>The maximum number of writers to be kept in the pool. The default value is 16 writers.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.MessageVersion">
      <summary>Gets or sets the SOAP message and WS-Addressing versions that are used or expected.</summary>
      <exception cref="T:System.ArgumentNullException">The value is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The value <see cref="P:System.ServiceModel.Channels.MessageVersion.None" /> is not allowed.</exception>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used for the SOAP message.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of XML messages that can be processed by endpoints configured with this binding element.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on SOAP messages exchanged. The default values for these constraints are provided in the following Remarks section.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MtomMessageEncodingBindingElement.WriteEncoding">
      <summary>Gets or sets the encoding that is used to format the characters in the text message.</summary>
      <exception cref="T:System.ArgumentNullException">The value is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The value is not valid text encoding value.</exception>
      <returns>The <see cref="T:System.Text.Encoding" /> that is used to format the characters in the text message.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.NamedPipeConnectionPoolSettings">
      <summary>Represents settings that control the behavior of the named pipe connection pool.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.NamedPipeConnectionPoolSettings.GroupName">
      <summary>Gets or sets the group name of the connection pool group on the client.</summary>
      <exception cref="T:System.ArgumentNullException">The value is <see langword="null" />.</exception>
      <returns>The name of the connection pool group on the client. The default name is "default".</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.NamedPipeConnectionPoolSettings.IdleTimeout">
      <summary>Gets or sets the maximum time the connection can be idle in the connection pool before being disconnected.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
      <returns>Returns a <see cref="T:System.TimeSpan" /> structure that indicates the maximum time the connection can be idle in the connection pool before being disconnected.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.NamedPipeConnectionPoolSettings.MaxOutboundConnectionsPerEndpoint">
      <summary>Gets or sets the maximum number of outbound connections for each endpoint that is cached in the connection pool.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
      <returns>The maximum number of allowed outbound connections for each endpoint that is cached in the connection pool. The default value is 10.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement">
      <summary>Represents the binding element for the named pipe transport.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.#ctor(System.ServiceModel.Channels.NamedPipeTransportBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement" /> class.</summary>
      <param name="elementToBeCloned">An instance of the <see cref="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement" /> class.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory of the specified type that can be used to create channels.</summary>
      <param name="context">Members that describe bindings, behaviors, contracts and other information required to create the channel factory.</param>
      <typeparam name="TChannel">Type of channel factory to create.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> cannot be <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">An invalid argument was passed.</exception>
      <returns>Returns a channel factory of the specified type.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.Clone">
      <summary>Creates a copy of the current binding element.</summary>
      <returns>Returns a copy of the current binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <param name="context">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The object to get.</typeparam>
      <returns>The specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />, or <see langword="null" /> if the object isn't found.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.NamedPipeTransportBindingElement.ConnectionPoolSettings">
      <summary>Gets a collection of connection pool settings.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.NamedPipeConnectionPoolSettings" /> object that contains various properties related to connection pooling.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.NamedPipeTransportBindingElement.Scheme">
      <summary>Returns the URI scheme for the transport.</summary>
      <returns>Returns the URI scheme for the transport, which is "net.pipe".</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ReliableSessionBindingElement">
      <summary>Represents the binding element that can produce the sending and receiving channels required for a reliable session between endpoints.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> class that specifies whether message delivery must preserve the order in which messages are sent.</summary>
      <param name="ordered">
        <see langword="true" /> if messages must be delivered in the order in which they are sent; otherwise, <see langword="false" />. The default value is <see langword="true" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a factory that creates a channel of a specified type that supports a reliable session.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that contains the information required to build the factories that can produce channels of type <typeparamref name="TChannel" />.</param>
      <typeparam name="TChannel">The type of channel the factory builds.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="TChannel" /> is not supported.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the channel factory can be built for the channel and context provided that can support a reliable session.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that contains the information required to build the factories that can produce channels of type <typeparamref name="TChannel" />.</param>
      <typeparam name="TChannel">The type of channel the factory builds.</typeparam>
      <returns>
        <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> can be built; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.Clone">
      <summary>Creates a copy of the current reliable session binding element.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElement" /> that is a clone of the current binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a property of the specified type from its binding context.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that contains the information required to retrieve the channel of type <typeparamref name="T" />.</param>
      <typeparam name="T">The type of property retrieved.</typeparam>
      <returns>The property of type <paramref name="T" /> with the specified <paramref name="context" /> or <see langword="null" /> if no property of type <paramref name="T" /> is found.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval">
      <summary>Gets or sets the interval of time that a destination waits before sending an acknowledgment to the message source on reliable channels that are created by the factory.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to zero.</exception>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time that a service waits until sending an acknowledgment to the message source. The default value is 2 seconds.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled">
      <summary>Gets or sets a value that indicates whether the reliable session has flow control enabled.</summary>
      <returns>
        <see langword="true" /> if the reliable session has flow control enabled; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout">
      <summary>Gets or sets an interval of time that a service remains inactive before closing.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to zero or greater than either <see cref="F:System.Int32.MaxValue">Int32.MaxValue</see> or <see cref="F:System.TimeSpan.MaxValue">TimeSpan.MaxValue</see>.</exception>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time that a service remains inactive before closing. The default value is 10 minutes.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels">
      <summary>Gets or sets the largest number of channels that can be pending during the reliable session.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to zero or greater than 16384.</exception>
      <returns>The largest number of channels that can be pending. The default value is 4.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount">
      <summary>Gets or sets the maximum number of times that a message attempts to be transferred during the reliable session.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to zero.</exception>
      <returns>The maximum number of times that a message attempts to be re-sent. The minimum value is 1; the maximum is <see cref="F:System.Int32.MaxValue">Int32.MaxValue</see>; and the default value is 8.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize">
      <summary>Gets or sets the largest number of messages that can exist in either the send buffer or the receive buffer.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to one or greater than 4096.</exception>
      <returns>The largest number of messages that can be buffered. The minimum value is 1; the maximum value is 4096; and the default value is 32.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered">
      <summary>Gets or sets a value that indicates whether message delivery must preserve the order in which messages are sent.</summary>
      <returns>
        <see langword="true" /> if messages must be delivered in the order in which they are sent; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion">
      <summary>Gets or sets the version of WS-ReliableMessaging specified by the binding element.</summary>
      <returns>An instance derived from <see cref="T:System.ServiceModel.ReliableMessagingVersion" /> that represents the version of the WS-ReliableMessaging protocol used by the configuration element.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.RequestContext">
      <summary>Provides a reply that is correlated to an incoming request.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.RequestContext" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Abort">
      <summary>When overridden in a derived class, aborts processing the request associated with the context.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context.</summary>
      <param name="message">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous reply operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous reply operation.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous reply operation.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context within a specified interval of time.</summary>
      <param name="message">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</param>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the reply to an available request.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous reply operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous reply operation.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous reply operation.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close">
      <summary>When overridden in a derived class, closes the operation that is replying to the request context associated with the current context.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)">
      <summary>When overridden in a derived class, closes the operation that is replying to the request context associated with the current context within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the reply operation associated with the current context must close.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)">
      <summary>Releases resources associated with the context.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)">
      <summary>When overridden in a derived class, completes an asynchronous operation to reply to a request message.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" /> methods.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>When overridden in a derived class, replies to a request message within a specified interval of time.</summary>
      <param name="message">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</param>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the reply to a request.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
      <summary>When overridden in a derived class, replies to a request message.</summary>
      <param name="message">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose">
      <summary>Releases both managed and unmanaged resources associated with the context.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.RequestContext.RequestMessage">
      <summary>When overridden in a derived class, gets the message that contains the request.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.SecurityBindingElement">
      <summary>An abstract class that, when implemented, represents a binding element that supports channel SOAP message security.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory based on the <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> settings and the binding context passed in. The channel factory created is a SOAP message security channel factory, which internally has a reference to the channel factory that corresponds to the binding context, (which includes the transport channel factory).</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">The type of channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A channel of type <paramref name="TChannel" /> is not supported.</exception>
      <returns>A channel factory based on the <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> settings and the binding context passed in.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactoryCore``1(System.ServiceModel.Channels.BindingContext)">
      <summary>When implemented, creates a channel factory of a specified type.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">The type of channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A channel of type <paramref name="TChannel" /> is not supported.</exception>
      <returns>A channel factory of a specified type.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determines whether a channel factory of the specified type can be built.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">The type of channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> if a channel factory of the specified type can be built; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateCertificateOverTransportBindingElement">
      <summary>Creates a security binding element that expects clients to do certificate-based authentication using SOAP message security.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateCertificateOverTransportBindingElement(System.ServiceModel.MessageSecurityVersion)">
      <summary>Creates a security binding element that expects clients to do certificate-based authentication using SOAP message security.</summary>
      <param name="version">The <see cref="T:System.ServiceModel.MessageSecurityVersion" /> for the binding.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateIssuedTokenOverTransportBindingElement(System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters)">
      <summary>Creates a security binding element configured to require SOAP security based client authentication using an issued token. This binding element requires the transport to provide server authentication and message protection (for example, HTTPS).</summary>
      <param name="issuedTokenParameters">An <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="issuedTokenParameters" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateBindingElement">
      <summary>Creates an asymmetric security binding element that is configured to require certificate-based client authentication as well as certificate-based server authentication.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateBindingElement(System.ServiceModel.MessageSecurityVersion,System.Boolean)">
      <summary>Creates an asymmetric security binding element that is configured to require certificate-based client authentication as well as certificate-based server authentication.</summary>
      <param name="version">The message security version.</param>
      <param name="allowSerializedSigningTokenOnReply">
        <see langword="true" /> to allow a serialized signing token on the reply; otherwise, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateMutualCertificateBindingElement(System.ServiceModel.MessageSecurityVersion)">
      <summary>Creates an asymmetric security binding element that is configured to require certificate-based client authentication as well as certificate-based server authentication.</summary>
      <param name="version">The message security version.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement(System.ServiceModel.Channels.SecurityBindingElement,System.Boolean,System.ServiceModel.Security.ChannelProtectionRequirements)">
      <summary>Creates a symmetric security binding element that is configured to establish a secure conversation between the client and service. The security context token issued at the end of the secure conversation handshake is used to secure the messages. The bootstrap security binding element specifies how the secure conversation handshake messages are secured.</summary>
      <param name="bootstrapSecurity">A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> that contains specification on how the secure conversation handshake messages are secured.</param>
      <param name="requireCancellation">
        <see langword="true" /> if cancellation is required; otherwise, <see langword="false" />. Setting this parameter to <see langword="false" /> enables a security context token that is useful in Web farm scenarios, because in this mode the session state is encoded inside the established security context token instead of being kept in the server memory.</param>
      <param name="bootstrapProtectionRequirements">The <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" /> object that specifies the requirements for channel protection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bootstrapSecurity" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement(System.ServiceModel.Channels.SecurityBindingElement,System.Boolean)">
      <summary>Creates a symmetric security binding element that is configured to establish a secure conversation between the client and service. The security context token issued at the end of the secure conversation handshake is used to secure the messages.</summary>
      <param name="bootstrapSecurity">A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> that contains specification on how the secure conversation handshake messages are secured.</param>
      <param name="requireCancellation">
        <see langword="true" /> if cancellation is required; otherwise, <see langword="false" />. Setting this parameter to <see langword="false" /> enables a security context token that is useful in Web farm scenarios, because in this mode the session state is encoded inside the established security context token instead of being kept in the server memory.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bootstrapSecurity" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement(System.ServiceModel.Channels.SecurityBindingElement)">
      <summary>Creates a symmetric security binding element that is configured to establish a secure conversation between the client and service. The security context token issued at the end of the secure conversation handshake is used to secure the messages. The bootstrap security binding element specifies how the secure conversation handshake messages are secured.</summary>
      <param name="bootstrapSecurity">A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> that contains specification on how the secure conversation handshake messages are secured.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bootstrapSecurity" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameOverTransportBindingElement">
      <summary>Creates a security binding element that is configured for client authentication based on a user name and password sent as part of the SOAP message. The binding element requires the transport to provide server authentication and message protection (for example, HTTPS).</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a specified object using the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The property to get.</typeparam>
      <returns>The specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" /> or <see langword="null" /> if the object is not found.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.SetIssuerBindingContextIfRequired(System.ServiceModel.Security.Tokens.SecurityTokenParameters,System.ServiceModel.Channels.BindingContext)">
      <summary>Sets the key for the token requirement property whose value is the BindingContext used to talk to the issuing party if the requirement is for an issued token.</summary>
      <param name="parameters">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</param>
      <param name="issuerBindingContext">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> object that represents the key for the token requirement property whose value is the BindingContext used to talk to the issuing party.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.SetKeyDerivation(System.Boolean)">
      <summary>Sets a value that indicates whether derived keys are required.</summary>
      <param name="requireDerivedKeys">
        <see langword="true" /> to require derived keys; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.ToString">
      <summary>Returns a description of this class.</summary>
      <returns>A description of the current <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.DefaultAlgorithmSuite">
      <summary>Gets or sets the message encryption and key-wrap algorithms.</summary>
      <exception cref="T:System.ArgumentNullException">The value is null on a <see langword="set" />.</exception>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> object that represents the message encryption and key-wrap algorithms.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.EnableUnsecuredResponse">
      <summary>Gets or sets a value that indicates whether WCF can send and receive unsecured responses to secured requests.</summary>
      <returns>
        <see langword="true" /> if WCF can send and receive unsecured responses to secured requests; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.EndpointSupportingTokenParameters">
      <summary>Gets the endpoint that supports token parameters.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" /> object that represents the endpoint that supports token parameters.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp">
      <summary>Gets or sets a value that indicates whether time stamps are included in each message.</summary>
      <returns>
        <see langword="true" /> if time stamps are included in each message; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.KeyEntropyMode">
      <summary>Gets or sets the source of entropy used to create keys.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityKeyEntropyMode" /> used to create keys. The default value is <see cref="F:System.ServiceModel.Security.SecurityKeyEntropyMode.CombinedEntropy" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings">
      <summary>Gets the binding properties specific to local security settings used by the client.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" /> that represents the binding properties specific to local security settings used by the client.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion">
      <summary>Gets or sets the message security version.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see langword="set" /> with a null value.</exception>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" /> object that represents the message security version.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.OperationSupportingTokenParameters">
      <summary>Gets the collection of operation supporting token parameters.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IDictionary`2" /> of types <see cref="T:System.String" /> (key) and <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" /> (value).</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.OptionalEndpointSupportingTokenParameters">
      <summary>Gets the optional supporting token parameters for the service endpoint.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" /> for the service endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.OptionalOperationSupportingTokenParameters">
      <summary>Gets the collection of optional operation supporting token parameters.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IDictionary`2" /> of types <see cref="T:System.String" /> (key) and <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" /> (value).</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.SecurityHeaderLayout">
      <summary>Gets or sets the ordering of the elements in the security header for this binding.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid <see cref="T:System.ServiceModel.Channels.SecurityHeaderLayout" /> value.</exception>
      <returns>The <see cref="T:System.ServiceModel.Channels.SecurityHeaderLayout" /> that represents the ordering of the elements in the security header for this binding. The default is <see cref="F:System.ServiceModel.Channels.SecurityHeaderLayout.Strict" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.SecurityHeaderLayout">
      <summary>Describes the layout of the security header.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.SecurityHeaderLayout.Lax">
      <summary>Items are added to the security header in any order that confirms to WSS: SOAP Message security.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.SecurityHeaderLayout.LaxTimestampFirst">
      <summary>Items are added to the security header in any order that confirms to WSS: SOAP Message security except that the first element in the security header must be a wsse:Timestamp element.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.SecurityHeaderLayout.LaxTimestampLast">
      <summary>Items are added to the security header in any order that confirms to WSS: SOAP Message security except that the last element in the security header must be a wsse:Timestamp element.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.SecurityHeaderLayout.Strict">
      <summary>Items are added to the security header according to the general principle of "declare before use".</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.SslStreamSecurityBindingElement">
      <summary>Represents a custom binding element that supports channel security using an SSL stream.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.SslStreamSecurityBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.#ctor(System.ServiceModel.Channels.SslStreamSecurityBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.SslStreamSecurityBindingElement" /> class using the values from another <see cref="T:System.ServiceModel.Channels.SslStreamSecurityBindingElement" />.</summary>
      <param name="elementToBeCloned">The <see cref="T:System.ServiceModel.Channels.SslStreamSecurityBindingElement" /> to clone.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory of a specified type.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Type of channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is <see langword="null" />.</exception>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory" /> object that represents the channel factory of type <paramref name="TChannel" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildClientStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates an instance on the client of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" /> based on the channel context provided.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the entire channel stack.</param>
      <returns>An instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a value that indicates whether a channel factory of the specified type can be built.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Type of channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> if a channel factory of the specified type can be built; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.Clone">
      <summary>Creates a new instance that is a copy of the current instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SslStreamSecurityBindingElement" /> instance that is a copy of the current instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <param name="context">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The type of the object to get.</typeparam>
      <returns>The object of type <paramref name="T" /> from the <see cref="T:System.ServiceModel.Channels.BindingContext" />, or <see langword="null" /> if the object is not found.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SslStreamSecurityBindingElement.IdentityVerifier">
      <summary>Gets or sets the identity verifier for this binding.</summary>
      <exception cref="T:System.ArgumentNullException">The value to set is null.</exception>
      <returns>An <see cref="T:System.ServiceModel.Security.IdentityVerifier" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SslStreamSecurityBindingElement.RequireClientCertificate">
      <summary>Gets or sets a value that specifies whether a client certificate is required for this binding.</summary>
      <returns>
        <see langword="true" /> if a client certificate is required for this binding; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SslStreamSecurityBindingElement.SslProtocols">
      <summary>Specifies the list of SSL/TLS protocols to negotiate when using a client credential type of TcpClientCredentialType.Certificate. The value can be a combination of one of more of the following enumeration members: Ssl3, Tls, Tls11, Tls12.</summary>
      <returns>Returns <see cref="T:System.Security.Authentication.SslProtocols" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamSecurityUpgradeInitiator">
      <summary>To implement a security upgrade initiator, inherit from this <see langword="abstract" /> base class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamSecurityUpgradeInitiator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamSecurityUpgradeInitiator" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamSecurityUpgradeInitiator.GetRemoteSecurity">
      <summary>Gets the security message property provided on the stream for performing custom security negotiation based on the information provided in the security context.</summary>
      <returns>Returns the <see cref="T:System.ServiceModel.Security.SecurityMessageProperty" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamSecurityUpgradeProvider">
      <summary>Implements a custom security upgrade provider, inherited from this <see langword="abstract" /> base class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamSecurityUpgradeProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamSecurityUpgradeProvider" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamSecurityUpgradeProvider.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamSecurityUpgradeProvider" /> class.</summary>
      <param name="timeouts">The default communication time-outs.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamUpgradeBindingElement">
      <summary>Adds a custom stream upgrade provider to a custom binding.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeBindingElement.#ctor(System.ServiceModel.Channels.StreamUpgradeBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeBindingElement" /> class from an existing instance.</summary>
      <param name="elementToBeCloned">The instance of this class to be cloned.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeBindingElement.BuildClientStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates an instance on the client of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" /> based on the channel context provided.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the entire channel stack.</param>
      <returns>An instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.StreamUpgradeInitiator">
      <summary>To implement a custom upgrade initiator, inherit from this <see langword="abstract" /> base class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeInitiator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeInitiator" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeInitiator.GetNextUpgrade">
      <summary>Returns the content type of the next upgrade to be performed.</summary>
      <returns>Returns the content type of the next upgrade.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgradeAsync(System.IO.Stream)">
      <param name="stream" />
    </member>
    <member name="T:System.ServiceModel.Channels.StreamUpgradeProvider">
      <summary>Implements a custom upgrade provider, inherited from this <see langword="abstract" /> base class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeProvider.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" /> class.</summary>
      <param name="timeouts">The default communication time-outs.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeProvider.CreateUpgradeInitiator(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates an instance of <see cref="T:System.ServiceModel.Channels.StreamUpgradeInitiator" />.</summary>
      <param name="remoteAddress">Endpoint address for the channel.</param>
      <param name="via">The address of the Via URI (an intermediate URI through which communication may be routed).</param>
      <returns>Returns an instance of <see cref="T:System.ServiceModel.Channels.StreamUpgradeInitiator" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.StreamUpgradeProvider.GetProperty``1">
      <summary>When implemented in a derived class, gets a property of the current stream that represents an initiator of a stream upgrade.</summary>
      <typeparam name="T">The type of the current stream.</typeparam>
      <returns>An initiator of a stream upgrade.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.StreamUpgradeProvider.DefaultCloseTimeout">
      <summary>Gets the DefaultCloseTimeout.</summary>
      <returns>Returns a <see cref="T:System.TimeSpan" /> for the DefaultCloseTimeout.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.StreamUpgradeProvider.DefaultOpenTimeout">
      <summary>Gets the DefaultOpenTimeout.</summary>
      <returns>Returns a <see cref="T:System.TimeSpan" /> for the DefaultOpenTimeout.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TcpConnectionPoolSettings">
      <summary>Represents properties that control the behavior of the TCP connection pool.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpConnectionPoolSettings.GroupName">
      <summary>Gets or sets the group name of the connection pool group on the client.</summary>
      <exception cref="T:System.ArgumentNullException">The value is <see langword="null" />.</exception>
      <returns>The group name of the connection pool group on the client. The default name is "default".</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpConnectionPoolSettings.IdleTimeout">
      <summary>Gets or sets the maximum time the connection can be idle in the connection pool before being disconnected.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
      <returns>Returns a <see cref="T:System.TimeSpan" /> structure that indicates the maximum time the connection can be idle in the connection pool before being disconnected.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpConnectionPoolSettings.LeaseTimeout">
      <summary>Gets or sets the time span after which a connection in the connection pool is closed.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value cannot be less than zero.</exception>
      <returns>Returns a <see cref="T:System.TimeSpan" /> structure that indicates the time span after which a cached TCP connection is purged from the connection pool.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpConnectionPoolSettings.MaxOutboundConnectionsPerEndpoint">
      <summary>Gets or sets the maximum number of outbound connections for each endpoint that is cached in the connection pool.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
      <returns>The maximum number of allowed outbound connections for each endpoint that is cached in the connection pool. The default value is 10.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TcpTransportBindingElement">
      <summary>Represents the binding element for the TCP transport.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.#ctor(System.ServiceModel.Channels.TcpTransportBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class.</summary>
      <param name="elementToBeCloned">An instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory that can be used to create a channel.</summary>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts, and other information required to create the channel factory.</param>
      <typeparam name="TChannel">Type of channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> cannot be <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">An invalid argument was passed.</exception>
      <returns>Returns a channel factory of the specified type.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.Clone">
      <summary>Creates a copy of the current binding element.</summary>
      <returns>Returns a copy of the current binding element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TcpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <param name="context">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The object to get.</typeparam>
      <returns>The specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />, or <see langword="null" /> if the object is not found.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpTransportBindingElement.ConnectionPoolSettings">
      <summary>Gets a collection of connection pool settings.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.TcpConnectionPoolSettings" /> object that contains various properties related to connection pooling.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpTransportBindingElement.ExtendedProtectionPolicy">
      <summary>Gets or sets the current extended protection policy.</summary>
      <returns>The extended protection policy.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TcpTransportBindingElement.Scheme">
      <summary>Returns the URI scheme for the transport.</summary>
      <returns>Returns the URI scheme for the transport, which is "net.tcp".</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement">
      <summary>The binding element that specifies the character encoding and message versioning used for text-based SOAP messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> class with a specified message version and encoding.</summary>
      <param name="messageVersion">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used for the message version.</param>
      <param name="writeEncoding">The <see cref="T:System.Text.Encoding" /> that is used to format the message characters.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageVersion" /> or <paramref name="writeEncoding" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="writeEncoding" /> value is not valid.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel for a specified context.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> for the specified context.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.Clone">
      <summary>Creates a new <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> object initialized from the current one.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" /> object with property values equal to those of the current element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Creates a factory for text message encoders that employs the message version and character encoding specified by the current encoding binding element.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> that this factory creates.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the binding element stack.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</param>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
      <returns>The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.MessageVersion">
      <summary>Gets or sets the SOAP and WS-Addressing versions that are used to format the text message.</summary>
      <exception cref="T:System.ArgumentNullException">The value is <see langword="null" />.</exception>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used to format messages. The default value is <see cref="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on SOAP messages exchanged. The default values for these constraints are provided in the following Remarks section.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.WriteEncoding">
      <summary>Gets or sets the encoding that is used to format the characters in the text message.</summary>
      <exception cref="T:System.ArgumentNullException">The value is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="writeEncoding" /> value is not valid.</exception>
      <returns>The <see cref="T:System.Text.Encoding" /> that is used to format the characters in the text message. The default text encoding is the UTF-8 format.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportBindingElement">
      <summary>An <see langword="abstract" /> base class that represents a transport binding element.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor">
      <summary>Creates a new instance of this class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)">
      <summary>Creates a new instance of this class from an existing instance.</summary>
      <param name="elementToBeCloned">The <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> to be cloned.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <param name="context">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The property to get.</typeparam>
      <returns>The property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
      <summary>Gets or sets a value that indicates whether manual addressing of the message is required.</summary>
      <returns>
        <see langword="true" /> if manual addressing of the message is required; otherwise <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size, in bytes, of any buffer pools used by the transport.</summary>
      <returns>The maximum size of the buffer pool. The default is 524,288 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum allowable message size, in bytes, that can be received.</summary>
      <returns>The maximum allowable message size that can be received. The default is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.Scheme">
      <summary>Gets the URI scheme for the transport.</summary>
      <returns>Returns the URI scheme for the transport, which varies depending on what derived class implements this method.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
      <summary>Represents a custom binding element that supports mixed-mode security (such as, optimized message security over a secure transport).</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.#ctor">
      <summary>Creates an instance of the <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
      <summary>Creates a new <see cref="T:System.ServiceModel.Channels.BindingElement" /> object initialized from the current class.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElement" /> object with property values equal to those of the current instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <param name="context">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The property to get.</typeparam>
      <returns>The property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" /> or <see langword="null" /> if the object is not found.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.UnderstoodHeaders">
      <summary>Represents a collection of message headers that are understood. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.UnderstoodHeaders.Add(System.ServiceModel.Channels.MessageHeaderInfo)">
      <summary>Adds the specified <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> to this collection. This implies that the specific header has been understood.</summary>
      <param name="headerInfo">Contains additional information regarding a message header.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.UnderstoodHeaders.Contains(System.ServiceModel.Channels.MessageHeaderInfo)">
      <summary>Verifies whether the specified <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> is present in this collection.</summary>
      <param name="headerInfo">Contains additional information regarding a message header.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> is present in this collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.UnderstoodHeaders.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.UnderstoodHeaders.Remove(System.ServiceModel.Channels.MessageHeaderInfo)">
      <summary>Removes the specified <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> from this collection.</summary>
      <param name="headerInfo">Contains additional information regarding a message header.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.UnderstoodHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.WebSocketTransportSettings">
      <summary>Represents settings for web socket transport.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebSocketTransportSettings.BinaryEncoderTransferModeHeader">
      <summary>Specifies the header for the binary encoder transfer mode.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebSocketTransportSettings.BinaryMessageReceivedAction">
      <summary>Specifies the action when web socket binary message is received.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebSocketTransportSettings.SoapContentTypeHeader">
      <summary>Specifies the soap content type header.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebSocketTransportSettings.TextMessageReceivedAction">
      <summary>Specifies the action when web socket text message is received.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WebSocketTransportSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.WebSocketTransportSettings" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WebSocketTransportSettings.Equals(System.Object)">
      <summary>Determines whether the specified object is equal with the current object.</summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>
        <see langword="true" /> if the specified object is equal with the current object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.WebSocketTransportSettings.Equals(System.ServiceModel.Channels.WebSocketTransportSettings)">
      <summary>Determines whether the specified web socket transport settings object is equal with the current object.</summary>
      <param name="other">The web socket transport settings object to compare with the current object.</param>
      <returns>
        <see langword="true" /> if the specified object is equal with the current object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.WebSocketTransportSettings.GetHashCode">
      <summary>Gets the hash code value for this object.</summary>
      <returns>The hash code value for this object.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.WebSocketTransportSettings.DisablePayloadMasking">
      <summary>Gets or sets a value that indicates whether the web socket masking is disabled.</summary>
      <returns>
        <see langword="true" /> if the web socket masking is disabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.WebSocketTransportSettings.KeepAliveInterval">
      <summary>Gets or sets the value of the keep alive interval of the connection.</summary>
      <returns>The value of the keep alive interval of the connection.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.WebSocketTransportSettings.SubProtocol">
      <summary>Gets or sets the web socket sub protocol.</summary>
      <returns>The web socket sub protocol.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.WebSocketTransportSettings.TransportUsage">
      <summary>Gets or sets the web socket transport usage.</summary>
      <returns>One of the values of the <see cref="T:System.ServiceModel.Channels.WebSocketTransportUsage" /> enumeration.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.WebSocketTransportUsage">
      <summary>Specifies an enumeration of WebSocket transport usage.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebSocketTransportUsage.Always">
      <summary>Indicates WebSocket transport will always be used.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebSocketTransportUsage.Never">
      <summary>Indicates WebSocket transport will never be used.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.WebSocketTransportUsage.WhenDuplex">
      <summary>Indicates WebSocket transport will be used for duplex service contracts only.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement">
      <summary>Represents the binding element used to specify Windows stream security settings.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.#ctor(System.ServiceModel.Channels.WindowsStreamSecurityBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement" /> class from an existing instance.</summary>
      <param name="elementToBeCloned">Instance of this class to clone.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates a channel factory that can be used to create a channel.</summary>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts, and other information required to create the channel factory.</param>
      <typeparam name="TChannel">Type of channel factory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> cannot be <see langword="null" />.</exception>
      <returns>Returns a channel factory of the specified type. This method adds this class instance to the <see cref="P:System.ServiceModel.Channels.BindingContext.BindingParameters" /> and delegates to the build method <see cref="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.BuildClientStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)">
      <summary>Creates an instance on the client of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" /> based on the channel context provided.</summary>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the entire channel stack.</param>
      <returns>An instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeProvider" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Determines whether a channel factory of the specified type can be built.</summary>
      <param name="context">The binding context.</param>
      <typeparam name="TChannel">The type of channel to check.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> if a channel factory can be built; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.Clone">
      <summary>Creates a new binding element from this instance of the class.</summary>
      <returns>
        <see cref="T:System.ServiceModel.Channels.BindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <param name="context">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The object to get.</typeparam>
      <returns>The specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" /> or <see langword="null" /> if the object is not found.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.WindowsStreamSecurityBindingElement.ProtectionLevel">
      <summary>Gets or sets the protection level.</summary>
      <returns>The <see cref="T:System.Net.Security.ProtectionLevel" />. The default value is <see cref="F:System.Net.Security.ProtectionLevel.EncryptAndSign" />.</returns>
    </member>
    <member name="T:System.ServiceModel.ChannelTerminatedException">
      <summary>This exception is typically thrown on the client when a channel is terminated due to server closing the associated connection.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelTerminatedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelTerminatedException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelTerminatedException" /> class with serialization information and streaming context specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelTerminatedException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelTerminatedException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1">
      <summary>Provides the base implementation used to create Windows Communication Foundation (WCF) client objects that can call services.</summary>
      <typeparam name="TChannel">The channel to be used to connect to the service.</typeparam>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>The event handler that is invoked when the <see cref="T:System.ServiceModel.ClientBase`1" /> object has transitioned from its current state to the closed state.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>The event handler that is invoked when the <see cref="T:System.ServiceModel.ClientBase`1" /> object transitions from its current state to the closed state.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>The event handler that is invoked when a fault occurs while performing an operation on the <see cref="T:System.ServiceModel.ClientBase`1" /> object.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>The event handler that is invoked when the <see cref="T:System.ServiceModel.ClientBase`1" /> object transitions from the created state to the opened state.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>The event handler that is invoked when the <see cref="T:System.ServiceModel.ClientBase`1" /> object transitions from the created state to the opened state.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class using the default target endpoint from the application configuration file.</summary>
      <exception cref="T:System.InvalidOperationException">Either there is no default endpoint information in the configuration file, more than one endpoint in the file, or no configuration file.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class using the specified binding and target address.</summary>
      <param name="binding">The binding with which to make calls to the service.</param>
      <param name="remoteAddress">The address of the service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> or <paramref name="remoteAddress" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class using the specified  <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</summary>
      <param name="endpoint">The endpoint for a service that allows clients to find and communicate with the service.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Abort">
      <summary>Causes the <see cref="T:System.ServiceModel.ClientBase`1" /> object to transition immediately from its current state into the closed state.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Close">
      <summary>Causes the <see cref="T:System.ServiceModel.ClientBase`1" /> object to transition from its current state into the closed state.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.CloseAsync" />
    <member name="M:System.ServiceModel.ClientBase`1.CreateChannel">
      <summary>Returns a new channel to the service.</summary>
      <returns>A channel of the type of the service contract.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
      <summary>Replicates the behavior of the default keyword in C#.</summary>
      <typeparam name="T">The type that is identified as reference or numeric by the keyword.</typeparam>
      <returns>Returns <see langword="null" /> if <see langword="T" /> is a reference type and zero if <see langword="T" /> is a numeric value type.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)">
      <summary>Provides support for implementing the event-based asynchronous pattern. For more information about this pattern, see Event-based Asynchronous Pattern Overview.</summary>
      <param name="beginOperationDelegate">A delegate that is used for calling the asynchronous operation.</param>
      <param name="inValues">The input values to the asynchronous call.</param>
      <param name="endOperationDelegate">A delegate that is used to end the asynchronous call after it has completed.</param>
      <param name="operationCompletedCallback">A client-supplied callback that is invoked when the asynchronous method is complete. The callback is passed to the <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
      <param name="userState">The <paramref name="userState" /> object to associate with the asynchronous call.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Open">
      <summary>Causes the <see cref="T:System.ServiceModel.ClientBase`1" /> object to transition from the created state into the opened state.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#IAsyncDisposable#DisposeAsync" />
    <member name="M:System.ServiceModel.ClientBase`1.System#IDisposable#Dispose">
      <summary>Explicit implementation of the <see cref="M:System.IDisposable.Dispose" /> method.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close the <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <param name="callback">The method that receives the callback on completion.</param>
      <param name="state">The state data.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close the <see cref="T:System.ServiceModel.ClientBase`1" /> with a specified timeout.</summary>
      <param name="timeout">The period within which the call must complete.</param>
      <param name="callback">The callback object invoked when the operation completes.</param>
      <param name="state">The state data.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous begin close operation.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open the <see cref="T:System.ServiceModel.ClientBase`1" /> object.</summary>
      <param name="callback">The method that receives the callback on completion.</param>
      <param name="state">The state data.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open the <see cref="T:System.ServiceModel.ClientBase`1" /> object within a specified interval of time.</summary>
      <param name="timeout">The time within which the call must complete.</param>
      <param name="callback">The method that receives the callback on completion.</param>
      <param name="state">The state data.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>Causes a communication object to transition from its current state into the closed state.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Causes the <see cref="T:System.ServiceModel.ClientBase`1" /> object to transition from its current state into the closed state.</summary>
      <param name="timeout">The time within which the call must complete.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to close the <see cref="T:System.ServiceModel.ClientBase`1" /> object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> used to complete the asynchronous close operation.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to open the <see cref="T:System.ServiceModel.ClientBase`1" /> object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> used to complete the asynchronous end open operation.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>Causes a communication object to transition from the created state into the opened state.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Causes the <see cref="T:System.ServiceModel.ClientBase`1" /> object to transition from the created state into the opened state within a specified interval of time.</summary>
      <param name="timeout">The time period within which the call must complete.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.CacheSetting">
      <summary>Gets or sets the cache setting.</summary>
      <returns>The cache setting.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Channel">
      <summary>Gets the inner channel used to send messages to variously configured service endpoints.</summary>
      <returns>A channel of a specified type.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelFactory">
      <summary>Gets the underlying <see cref="T:System.ServiceModel.ChannelFactory`1" /> object.</summary>
      <returns>A <see cref="T:System.ServiceModel.ChannelFactory`1" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ClientCredentials">
      <summary>Gets the client credentials used to call an operation.</summary>
      <returns>The proof of identity presented by the client.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Endpoint">
      <summary>Gets the target endpoint for the service to which the WCF client can connect.</summary>
      <returns>The target endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InnerChannel">
      <summary>Gets the underlying <see cref="T:System.ServiceModel.IClientChannel" /> implementation.</summary>
      <returns>The client channel for the WCF client object.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.State">
      <summary>Gets the current state of the <see cref="T:System.ServiceModel.ClientBase`1" /> object.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.CommunicationState" /> of the object.</returns>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate">
      <summary>A delegate that is used by <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> for calling asynchronous operations on the client.</summary>
      <param name="inValues">The input values to the asynchronous call.</param>
      <param name="asyncCallback">Reference to the method to be called when the corresponding asynchronous operation completes.</param>
      <param name="state">An <see cref="T:System.Object" /> that lets the client distinguish between different asynchronous calls. It is made available to the client in the arguments parameter of the event completion callback.</param>
      <returns>The result of the asynchronous call.</returns>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <summary>Represents the generic ChannelBase class.</summary>
      <typeparam name="T">The generic class.</typeparam>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived">
      <summary>The event handler that is invoked when the ClientBase object receives an unknown message.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>The event handler that is invoked when the ClientBase object has transitioned from its current state to the closed state.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>The event handler that is invoked when the ClientBase object transitions from its current state to the closed state.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>The event handler that is invoked when fault occurs while performing an operation on the ClientBase object.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>The event handler that is invoked when the ClientBase object has transitioned from the created state to the opened state.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>The event handler that is invoked when the ClientBase object transitions from the created state to the opened state.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" /> class from an existing instance of the class.</summary>
      <param name="client">The object used to initialize the new instance of the class.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>Starts an asynchronous call of a specified method by name.</summary>
      <param name="methodName">The name of the method to be called asynchronously.</param>
      <param name="args">An array of arguments for the method invoked.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate.</param>
      <param name="state">The state object.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous method invoked.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)">
      <summary>Completes an asynchronous invocation by name of a specified method.</summary>
      <param name="methodName">The name of the method called asynchronously.</param>
      <param name="args">An array of arguments for the method invoked.</param>
      <param name="result">The result returned by a call.</param>
      <returns>The <see cref="T:System.Object" /> output by the method invoked.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose">
      <summary>Performs application-defined tasks with freeing, releasing, or resetting unmanaged resources associated with the channel.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1">
      <summary>Returns a typed object requested, if present from the appropriate layer in the channel stack.</summary>
      <typeparam name="TProperty">The type object for which the method is querying.</typeparam>
      <returns>The typed object T requested if it is present or null if it is not.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to transmit a message to the destination of the output channel.</summary>
      <param name="message">The message being sent on the output channel.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous send operation.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to transmit a message to the destination of the output channel within a specified interval of time.</summary>
      <param name="message">The message being sent on the output channel.</param>
      <param name="timeout">The timespan that specifies how long the send operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation send completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous send operation.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous send operation.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to transmit a message to the destination of the output channel.</summary>
      <param name="result">The result returned by a call.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Sends a message on the current output channel within a specified interval of time.</summary>
      <param name="message">The message being sent on the output channel.</param>
      <param name="timeout">The timespan that specifies how long the send operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)">
      <summary>Transmits a message to the destination of the output channel.</summary>
      <param name="message">The message being sent on the output channel.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to transmit a request message to the reply-side of a request-reply message exchange.</summary>
      <param name="message">The request message to be transmitted.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to transmit a request message to the reply-side of a request-reply message exchange within a specified interval of time.</summary>
      <param name="message">The request message to be transmitted.</param>
      <param name="timeout">The timespan that specifies the interval of time within which a response must be received.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to return a message-based response to a transmitted request.</summary>
      <param name="result">The result of the operation.</param>
      <returns>The message received in response to the request.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Sends a message-based request and returns the correlated message-based response within a specified interval of time.</summary>
      <param name="message">The request message to be transmitted.</param>
      <param name="timeout">The timespan that specifies the interval of time within which a response must be received.</param>
      <returns>The message received in response to the request.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)">
      <summary>Sends a message-based request and returns the correlated message-based response.</summary>
      <param name="message">The request message to be transmitted.</param>
      <returns>The message received in response to the request.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>An asynchronous call to begin using a user interface to obtain credential information.</summary>
      <param name="callback">That method that is called when this method completes.</param>
      <param name="state">Information about the state of the channel.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> to use to call back when processing has completed.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI">
      <summary>Specifies a call to a user interface to obtain credential information.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Called when the call to BeginDisplayInitializationUI has finished.</summary>
      <param name="result">The result of the operation.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort">
      <summary>Causes a communication object to transition immediately from its current state into the closed state.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close a communication object.</summary>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object specified by the application, that contains state information associated with the asynchronous close operation.</param>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close a communication object with a specified time-out.</summary>
      <param name="timeout">The timespan that specifies how long the send operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open a communication object.</summary>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous open operation.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open a communication object within a specified interval of time.</summary>
      <param name="timeout">The timespan that specifies how long the send operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous open operation.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>Causes a communication object to transition from its current state into the closed state.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Causes a communication object to transition from its current state into the closed state.</summary>
      <param name="timeout">The timespan that specifies how long the send operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to close a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the BeginClose() method.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to open a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the BeginOpen() method.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>Causes a communication object to transition from the created state into the opened state.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Causes a communication object to transition from the created state into the opened state within a specified interval of time.</summary>
      <param name="timeout">The timespan that specifies how long the send operation has to complete before timing out.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress">
      <summary>Gets the destination of the service to which messages are sent out on the output channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> of the service to which the output channel sends messages.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via">
      <summary>Gets the URI that contains the transport address to which messages are sent on the output channel.</summary>
      <returns>The <see cref="T:System.Uri" /> that contains the transport address to which messages are sent on the output channel.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress">
      <summary>Gets the destination of the service to which messages are sent out on the output channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> of the service to which the output channel sends messages.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via">
      <summary>Gets the transport address to which the request is sent.</summary>
      <returns>The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI">
      <summary>Gets or sets a value that indicates whether the client channel allows an initialization UI.</summary>
      <returns>
        <see langword="true" /> if the client channel allows an initialization UR; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization">
      <summary>Gets a value that indicates whether a call was done to a user interface to obtain credential information.</summary>
      <returns>
        <see langword="true" /> if a call was done to a user interface to obtain credential information; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via">
      <summary>Gets the URI that contains the transport address to which messages are sent on the client channel.</summary>
      <returns>The URI that contains the transport address to which messages are sent on the channel.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State">
      <summary>Gets the current state of the communication-oriented object.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.CommunicationState" /> of the object.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching">
      <summary>Gets or sets a value that indicates whether the batching of outgoing messages is allowed; otherwise, false.</summary>
      <returns>
        <see langword="true" /> if the batching of outgoing messages is allowed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession">
      <summary>Gets the input session for the channel.</summary>
      <returns>The input session for the channel.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress">
      <summary>Gets the local endpoint for the channel.</summary>
      <returns>The local endpoint for the channel.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout">
      <summary>Gets or sets the time period within which an operation must complete or an exception is thrown.</summary>
      <returns>The timespan that specifies the time period within which an operation must complete.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession">
      <summary>Gets the output session associated with the channel, if any.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.IOutputSession" /> implementation if an input session exists; otherwise, null.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress">
      <summary>Gets the remote address associated with the channel.</summary>
      <returns>The remote <see cref="T:System.ServiceModel.EndpointAddress" /> for the channel.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId">
      <summary>Gets an identifier for the current session, if any.</summary>
      <returns>The current session identifier, if any.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions">
      <summary>Gets a collection of extension objects for this extensible object.</summary>
      <returns>The <see cref="T:System.ServiceModel.IExtensionCollection`1" /> of extension objects.</returns>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.EndOperationDelegate">
      <summary>Represents a delegate that is invoked by <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> on successful completion of the call made by <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> to <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</summary>
      <param name="result">The result returned by the call made by <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />  
  
 to <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
      <returns>An array of <see cref="T:System.Object" /> that contains the results of the call to the asynchronous method. The operation may have multiple return values, which are all returned in this object array.</returns>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <summary>Stores the results from an asynchronous call made by the client.</summary>
      <typeparam name="TChannel" />
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results">
      <summary>Gets the results from an asynchronous call made by the client.</summary>
      <returns>An array of <see cref="T:System.Object" /> that contains the results from an asynchronous call made by the client.</returns>
    </member>
    <member name="T:System.ServiceModel.ClientCredentialsSecurityTokenManager">
      <summary>Manages security tokens for the client.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" /> class.</summary>
      <param name="clientCredentials">The <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="clientCredentials" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)">
      <summary>Creates a security token authenticator.</summary>
      <param name="tokenRequirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
      <param name="outOfBandTokenResolver">When this method returns, contains a <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />. This parameter is passed uninitialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tokenRequirement" /> is <see langword="null" />.</exception>
      <returns>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Creates a security token provider.</summary>
      <param name="tokenRequirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tokenRequirement" /> is <see langword="null" />.</exception>
      <returns>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)">
      <summary>Creates a security token serializer.</summary>
      <param name="version">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenVersion" /> of the security token.</param>
      <returns>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials">
      <summary>Gets the client credentials.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ClientCredentials" /> object.</returns>
    </member>
    <member name="T:System.ServiceModel.CommunicationException">
      <summary>Represents a communication error in either the service or client application.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationException" /> class, using the specified serialization information and context objects.</summary>
      <param name="info">Information relevant to the deserialization process.</param>
      <param name="context">The context of the deserialization process.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationException" /> class, using the specified message and the inner exception.</summary>
      <param name="message">The description of the error condition.</param>
      <param name="innerException">The inner exception to be used.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationException" /> class, using the specified message.</summary>
      <param name="message">The description of the error condition.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectAbortedException">
      <summary>The exception that is thrown when the call is to an <see cref="T:System.ServiceModel.ICommunicationObject" /> object that has aborted.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> class used to deserialize data into a <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> class using the specified message and inner exception.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> class with the specified message.</summary>
      <param name="message">The message carried in the exception.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectFaultedException">
      <summary>The exception that is thrown when a call is made to a communication object that has faulted.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> class when deserializing a stream using the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> objects.</summary>
      <param name="info">The serialization information used to create the exception object.</param>
      <param name="context">The context within which the exception object is created.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> class using the specified message and inner exception.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> class using the specified message.</summary>
      <param name="message">The message that describes the exception.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationState">
      <summary>Defines the states in which an <see cref="T:System.ServiceModel.ICommunicationObject" /> can exist.</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closed">
      <summary>Indicates that the communication object has been closed and is no longer usable.</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closing">
      <summary>Indicates that the communication object is transitioning to the <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Created">
      <summary>Indicates that the communication object has been instantiated and is configurable, but not yet open or ready for use.</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Faulted">
      <summary>Indicates that the communication object has encountered an error or fault from which it cannot recover and from which it is no longer usable.</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opened">
      <summary>Indicates that the communication object is now open and ready to be used.</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opening">
      <summary>Indicates that the communication object is being transitioned from the <see cref="F:System.ServiceModel.CommunicationState.Created" /> state to the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</summary>
    </member>
    <member name="T:System.ServiceModel.ConcurrencyMode">
      <summary>Specifies whether a service class supports single-threaded or multi-threaded modes of operation.</summary>
    </member>
    <member name="F:System.ServiceModel.ConcurrencyMode.Multiple">
      <summary>The service instance is multi-threaded. No synchronization guarantees are made. Because other threads can change your service object at any time, you must handle synchronization and state consistency at all times.</summary>
    </member>
    <member name="F:System.ServiceModel.ConcurrencyMode.Reentrant">
      <summary>The service instance is single-threaded and accepts reentrant calls. The reentrant service accepts calls when you call another service; it is therefore your responsibility to leave your object state consistent before callouts and you must confirm that operation-local data is valid after callouts. Note that the service instance is unlocked only by calling another service over a WCF channel. In this case, the called service can reenter the first service via a callback. If the first service is not reentrant, the sequence of calls results in a deadlock. For details, see <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" />.</summary>
    </member>
    <member name="F:System.ServiceModel.ConcurrencyMode.Single">
      <summary>The service instance is single-threaded and does not accept reentrant calls. If the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" /> property is <see cref="F:System.ServiceModel.InstanceContextMode.Single" />, and additional messages arrive while the instance services a call, these messages must wait until the service is available or until the messages time out.</summary>
    </member>
    <member name="T:System.ServiceModel.DataContractFormatAttribute">
      <summary>Instructs the Windows Communication Foundation (WCF) infrastructure to use the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.DataContractFormatAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.DataContractFormatAttribute.Style">
      <summary>Gets or sets the SOAP style of the serialized data.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.OperationFormatStyle" /> values. The default is <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="T:System.ServiceModel.DeliveryRequirementsAttribute">
      <summary>Specifies the feature requirements that bindings must provide to the service or client implementation.</summary>
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DeliveryRequirementsAttribute" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implements the <see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /> method to attach binding parameters correctly.</summary>
      <param name="contractDescription" />
      <param name="endpoint">The service endpoint for the contract.</param>
      <param name="bindingParameters" />
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implementation of the <see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /> method for client support.</summary>
      <param name="contractDescription" />
      <param name="endpoint">The endpoint for the contract.</param>
      <param name="clientRuntime" />
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
      <summary>Implementation of the <see cref="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)" /> method that enables service support.</summary>
      <param name="contractDescription" />
      <param name="endpoint">The endpoint for the contract.</param>
      <param name="dispatchRuntime" />
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Implements the <see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)" /> method to enable validation support.</summary>
      <param name="contractDescription" />
      <param name="endpoint">The endpoint to be validated.</param>
    </member>
    <member name="P:System.ServiceModel.DeliveryRequirementsAttribute.QueuedDeliveryRequirements">
      <summary>Specifies whether the binding for a service must support queued contracts.</summary>
      <exception cref="T:System.ArgumentException">The value is not one of the <see cref="T:System.ServiceModel.QueuedDeliveryRequirementsMode" /> values.</exception>
      <returns>One of the <see cref="T:System.ServiceModel.QueuedDeliveryRequirementsMode" /> values; the default is <see cref="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Allowed" />.</returns>
    </member>
    <member name="P:System.ServiceModel.DeliveryRequirementsAttribute.RequireOrderedDelivery">
      <summary>Specifies whether the binding must support ordered messages.</summary>
      <returns>
        <see langword="true" /> instructs Windows Communication Foundation (WCF) to confirm that the binding must support the ordering of messages; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.CallbackDebugBehavior">
      <summary>Enables service debugging for a Windows Communication Foundation (WCF) callback object.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.CallbackDebugBehavior.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.CallbackDebugBehavior" /> class.</summary>
      <param name="includeExceptionDetailInFaults">Controls whether a WCF callback object includes managed exception information in the detail of the SOAP faults sent back to the service.</param>
    </member>
    <member name="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /> method to support the behavior.</summary>
      <param name="serviceEndpoint">The endpoint to modify.</param>
      <param name="bindingParameters">The objects that binding elements require to support the behavior.</param>
    </member>
    <member name="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /> to support the behavior.</summary>
      <param name="serviceEndpoint">The endpoint that is to be customized.</param>
      <param name="behavior">The client runtime to be customized.</param>
    </member>
    <member name="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /> to support the behavior.</summary>
      <param name="serviceEndpoint">The endpoint that exposes the contract.</param>
      <param name="endpointDispatcher">The endpoint dispatcher to be modified or extended.</param>
    </member>
    <member name="M:System.ServiceModel.Description.CallbackDebugBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Implements <see cref="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)" /> to support the behavior.</summary>
      <param name="serviceEndpoint">The endpoint to validate.</param>
    </member>
    <member name="P:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults">
      <summary>Gets or sets a value that controls whether client callback objects return managed exception information in SOAP faults back to the service.</summary>
      <returns>
        <see langword="true" /> if WCF returns managed client callback exception information in the SOAP faults for service debugging purposes in duplex communication; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ClientCredentials">
      <summary>Enables the user to configure client and service credentials as well as service credential authentication settings for use on the client side of communication.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ClientCredentials" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <summary>This is a copy constructor.</summary>
      <param name="other">A <see cref="T:System.ServiceModel.Description.ClientCredentials" />. All properties of the newly-constructed instance reflect the values of this parameter.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Applies the specified client behavior to the endpoint.</summary>
      <param name="serviceEndpoint">The endpoint to which the specified client behavior is to be applied.</param>
      <param name="behavior">The client behavior that is to be applied to the specified endpoint.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceEndpoint" /> or <paramref name="behavior" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.Clone">
      <summary>Creates a new copy of this <see cref="T:System.ServiceModel.Description.ClientCredentials" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.ClientCredentials" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.CloneCore">
      <summary>Creates a new copy of this <see cref="T:System.ServiceModel.Description.ClientCredentials" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.ClientCredentials" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.CreateSecurityTokenManager">
      <summary>Creates a security token manager for this instance. This method is rarely called explicitly; it is primarily used in extensibility scenarios and is called by the system itself.</summary>
      <returns>A <see cref="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" /> for this <see cref="T:System.ServiceModel.Description.ClientCredentials" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Adds this instance of this class to a binding parameter collection.</summary>
      <param name="serviceEndpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to add.</param>
      <param name="bindingParameters">The collection of binding parameters.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implements a modification or extension of the service across an endpoint.</summary>
      <param name="serviceEndpoint">The endpoint that exposes the contract.</param>
      <param name="endpointDispatcher">The endpoint dispatcher to be modified or extended.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Reserved for future use.</summary>
      <param name="serviceEndpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to validate.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.ClientCertificate">
      <summary>Gets an object that you can use to provide the X.509 certificate that the client uses to authenticate to the service.</summary>
      <returns>An <see cref="T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential" /> that represents the client certificate.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.HttpDigest">
      <summary>Gets the current HTTP Digest credential.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.HttpDigestClientCredential" /> that represents the credential that the client uses to authenticate to the service when the HTTP Digest authentication method is chosen.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.ServiceCertificate">
      <summary>Gets an object used to specify a service's X.509 certificate.</summary>
      <returns>An <see cref="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" /> that represents the certificate to use for a particular service.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.UserName">
      <summary>Gets a credential object that you can use to set the user name and password that the client uses to authenticate itself to the service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.UserNamePasswordClientCredential" /> that represents the current UserName credential.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.Windows">
      <summary>Gets an object used to control the Windows credential that the client uses to authenticate itself to the service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.WindowsClientCredential" /> that represents the current Windows credential.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ContractDescription">
      <summary>Describes a Windows Communication Foundation (WCF) contract that specifies what an endpoint communicates to the outside world.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ContractDescription" /> class with a namespace-qualified name specified.</summary>
      <param name="name">The name of the contract.</param>
      <param name="ns">The namespace that contains the name of the contract.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> is empty.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ContractDescription" /> class with a specified name.</summary>
      <param name="name">The name of the contract.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> is empty.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.GetContract(System.Type)">
      <summary>Returns the contract description for a specified type of contract.</summary>
      <param name="contractType">The <see cref="T:System.Type" /> of contract.</param>
      <returns>The <see cref="T:System.ServiceModel.Description.ContractDescription" /> for the specified type of contract.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.CallbackContractType">
      <summary>Gets or sets the type of callback contract that the contract description specifies.</summary>
      <returns>The <see cref="T:System.Type" /> of callback contract that the contract description specifies.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ConfigurationName">
      <summary>Gets or sets the configuration name for the contract description.</summary>
      <returns>The configuration name for the contract.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractBehaviors">
      <summary>Gets the collection of behavior for the contract.</summary>
      <returns>The collection of behavior for the contract.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractType">
      <summary>Gets or sets the contract type that the contract description specifies.</summary>
      <returns>The <see cref="T:System.Type" /> of contract that the contract description specifies.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Name">
      <summary>Gets or sets the name of the contract.</summary>
      <returns>The name of the contract description.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Namespace">
      <summary>Gets or sets the namespace for the contract.</summary>
      <exception cref="T:System.ArgumentNullException">The value set is <see langword="null" />.</exception>
      <returns>The namespace of the contract.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Operations">
      <summary>Gets the collection of operation descriptions associated with the contract.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.OperationDescriptionCollection" /> that contains the operation descriptions associated with the contract description.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior">
      <summary>Represents the run-time behavior of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription,System.ServiceModel.DataContractFormatAttribute)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior" /> class with the specified operation description and data contract format.</summary>
      <param name="operation">An <see cref="T:System.ServiceModel.Description.OperationDescription" /> that represents the operation.</param>
      <param name="dataContractFormatAttribute">A <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> that is used to control the serialization process.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior" /> class with the specified operation description.</summary>
      <param name="operation">An <see cref="T:System.ServiceModel.Description.OperationDescription" /> that represents the operation.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.String,System.String,System.Collections.Generic.IList{System.Type})">
      <summary>Creates an instance of a class that inherits from <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> for serialization and deserialization processes.</summary>
      <param name="type">The <see cref="T:System.Type" /> to create the serializer for.</param>
      <param name="name">The name of the generated type.</param>
      <param name="ns">The namespace of the generated type.</param>
      <param name="knownTypes">An <see cref="T:System.Collections.Generic.IList`1" /> of <see cref="T:System.Type" /> that contains known types.</param>
      <returns>An instance of a class that inherits from the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> class.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.CreateSerializer(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IList{System.Type})">
      <summary>Creates an instance of a class that inherits from <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> for serialization and deserialization processes with an <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace.</summary>
      <param name="type">The type to serialize or deserialize.</param>
      <param name="name">The name of the serialized type.</param>
      <param name="ns">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the serialized type.</param>
      <param name="knownTypes">An <see cref="T:System.Collections.Generic.IList`1" /> of <see cref="T:System.Type" /> that contains known types.</param>
      <returns>An instance of a class that inherits from the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> class.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Adds a collection of parameters to the behavior.</summary>
      <param name="description">The <see cref="T:System.ServiceModel.Description.OperationDescription" /> to add the parameters to.</param>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that contains the parameters to add.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Attaches a client behavior to the operation.</summary>
      <param name="description">The <see cref="T:System.ServiceModel.Description.OperationDescription" /> that represents the operation.</param>
      <param name="proxy">A <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> that represents a client.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Applies the behavior to the operation.</summary>
      <param name="description">An <see cref="T:System.ServiceModel.Description.OperationDescription" /> that represents the operation.</param>
      <param name="dispatch">The <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> to attach the behavior to.</param>
    </member>
    <member name="M:System.ServiceModel.Description.DataContractSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Validates the operation.</summary>
      <param name="description">An <see cref="T:System.ServiceModel.Description.OperationDescription" /> that represents the operation to validate.</param>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.DataContractFormatAttribute">
      <summary>Gets the <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> associated with the operation.</summary>
      <returns>The <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> associated with the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.DataContractResolver">
      <summary>Gets or sets an implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> that is used to dynamically map types during serialization and deserialization processes.</summary>
      <returns>A class that maps an <see langword="xsi:type" /> to a known data contract type.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.MaxItemsInObjectGraph">
      <summary>Gets or sets the maximum number of items in the object graph to serialize or deserialize.</summary>
      <returns>The maximum number of items in the object graph to serialize or deserialize. The default is <see cref="F:System.Int32.MaxValue">Int32.MaxValue</see>.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.DataContractSerializerOperationBehavior.SerializationSurrogateProvider">
      <summary>Gets or sets a surrogate provider to be used during the serialization and deserialization processes.</summary>
      <returns>A surrogate provider that is used to provide a serialization surrogate to be used during serialization and deserialization.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescription">
      <summary>Represents a SOAP fault.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.FaultDescription" /> class using the specified action value.</summary>
      <param name="action">The action of the SOAP fault message.</param>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Action">
      <summary>The value of the action in the SOAP fault message.</summary>
      <returns>The action of the SOAP fault.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.DetailType">
      <summary>The type of the SOAP fault detail.</summary>
      <returns>The type of the serializable detail object.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Name">
      <summary>Gets or sets the name of the SOAP fault.</summary>
      <returns>The name of the SOAP fault.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Namespace">
      <summary>Gets or sets the namespace of the SOAP fault.</summary>
      <returns>The namespace of the SOAP fault.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescriptionCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Description.FaultDescription" /> objects that you can use to obtain information about SOAP faults in a contract.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.IContractBehavior">
      <summary>Implements methods that can be used to extend run-time behavior for a contract in either a service or client application.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Configures any binding elements to support the contract behavior.</summary>
      <param name="contractDescription">The contract description to modify.</param>
      <param name="endpoint">The endpoint to modify.</param>
      <param name="bindingParameters">The objects that binding elements require to support the behavior.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implements a modification or extension of the client across a contract.</summary>
      <param name="contractDescription">The contract description for which the extension is intended.</param>
      <param name="endpoint">The endpoint.</param>
      <param name="clientRuntime">The client runtime.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
      <summary>Implements a modification or extension of the client across a contract.</summary>
      <param name="contractDescription">The contract description to be modified.</param>
      <param name="endpoint">The endpoint that exposes the contract.</param>
      <param name="dispatchRuntime">The dispatch runtime that controls service execution.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Implement to confirm that the contract and endpoint can support the contract behavior.</summary>
      <param name="contractDescription">The contract to validate.</param>
      <param name="endpoint">The endpoint to validate.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IEndpointBehavior">
      <summary>Implements methods that can be used to extend run-time behavior for an endpoint in either a service or client application.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implement to pass data at runtime to bindings to support custom behavior.</summary>
      <param name="endpoint">The endpoint to modify.</param>
      <param name="bindingParameters">The objects that binding elements require to support the behavior.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implements a modification or extension of the client across an endpoint.</summary>
      <param name="endpoint">The endpoint that is to be customized.</param>
      <param name="clientRuntime">The client runtime to be customized.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implements a modification or extension of the service across an endpoint.</summary>
      <param name="endpoint">The endpoint that exposes the contract.</param>
      <param name="endpointDispatcher">The endpoint dispatcher to be modified or extended.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Implement to confirm that the endpoint meets some intended criteria.</summary>
      <param name="endpoint">The endpoint to validate.</param>
    </member>
    <member name="T:System.ServiceModel.Description.IOperationBehavior">
      <summary>Implements methods that can be used to extend run-time behavior for an operation in either a service or client application.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implement to pass data at runtime to bindings to support custom behavior.</summary>
      <param name="operationDescription">The operation being examined. Use for examination only. If the operation description is modified, the results are undefined.</param>
      <param name="bindingParameters">The collection of objects that binding elements require to support the behavior.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Implements a modification or extension of the client across an operation.</summary>
      <param name="operationDescription">The operation being examined. Use for examination only. If the operation description is modified, the results are undefined.</param>
      <param name="clientOperation">The run-time object that exposes customization properties for the operation described by <paramref name="operationDescription" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Implements a modification or extension of the service across an operation.</summary>
      <param name="operationDescription">The operation being examined. Use for examination only. If the operation description is modified, the results are undefined.</param>
      <param name="dispatchOperation">The run-time object that exposes customization properties for the operation described by <paramref name="operationDescription" />.</param>
    </member>
    <member name="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Implement to confirm that the operation meets some intended criteria.</summary>
      <param name="operationDescription">The operation being examined. Use for examination only. If the operation description is modified, the results are undefined.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageBodyDescription">
      <summary>Represents the body of a SOAP message.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageBodyDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MessageBodyDescription" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.Parts">
      <summary>Gets the parts for the body of the SOAP message.</summary>
      <returns>The body parts that you can inspect or modify.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.ReturnValue">
      <summary>Gets or sets the portion of the SOAP message that contains the return value.</summary>
      <returns>The return value, if any.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperName">
      <summary>Gets or sets the name of the wrapper element inside the SOAP body element if there is one.</summary>
      <returns>The wrapper element if there is one.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperNamespace">
      <summary>Gets or sets the namespace of the wrapper element in the SOAP body if there is one.</summary>
      <returns>The namespace of the wrapper element if there is one.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescription">
      <summary>Represents the description of a message.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescription.#ctor(System.String,System.ServiceModel.Description.MessageDirection)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MessageDescription" /> class with a specified action and direction.</summary>
      <param name="action">The action parameter of the SOAP message that identifies the intent of the message.</param>
      <param name="direction">
        <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> if the message is incoming or <see cref="F:System.ServiceModel.Description.MessageDirection.Output" /> if the message is outgoing.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="direction" /> is neither <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> or <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Action">
      <summary>Gets or sets the action parameter of the SOAP message that identifies the intent of the message.</summary>
      <returns>A <see cref="T:System.String" /> that contains the action URI.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Body">
      <summary>Gets the body of the SOAP message.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" /> that contains the body of the message.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Direction">
      <summary>Gets the direction that indicates whether the message is incoming or outgoing.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.MessageDirection" /> that indicates whether the message is incoming to or outgoing from the service.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Headers">
      <summary>Gets the description of the headers of the SOAP message.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.MessageHeaderDescriptionCollection" /> that contains descriptions of the headers of the SOAP message.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.MessageType">
      <summary>Gets or sets a type that identifies the type of message contract.</summary>
      <returns>A <see cref="T:System.Type" /> that identifies the type of message contract.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Properties">
      <summary>Gets a description of the properties of the SOAP message.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.MessagePropertyDescriptionCollection" /> that contains the descriptions of the properties of the SOAP message.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescriptionCollection">
      <summary>Provides a collection that is used to store descriptions of the messages that make up an operation that belongs to a contract.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.Find(System.String)">
      <summary>Finds and returns the first message description in a collection for a message with a specified action.</summary>
      <param name="action">The action of the message being found.</param>
      <returns>The first <see cref="T:System.ServiceModel.Description.MessageDescription" /> from the collection whose message has the specified <paramref name="action" /> and <see langword="null" /> if no matching <paramref name="action" /> is found.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.FindAll(System.String)">
      <summary>Finds and returns all of the message descriptions in a collection whose messages have a specified action.</summary>
      <param name="action">The action of the messages being found.</param>
      <returns>A <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" /> that contains the collection message descriptions from the current collection whose messages have the specified <paramref name="action" />. If no matching <see cref="T:System.ServiceModel.Description.MessageDescription" /> objects are found, an empty collection is returned.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDirection">
      <summary>Specifies the direction of the message.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Input">
      <summary>The message is incoming.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Output">
      <summary>The message is outgoing.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessageHeaderDescription">
      <summary>Represents a SOAP message header.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageHeaderDescription.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" /> class with a specified qualified name.</summary>
      <param name="name">The name of the message header.</param>
      <param name="ns">The namespace of the message header.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.Actor">
      <summary>Gets or sets the intended recipient of the message header.</summary>
      <returns>A URI that indicates the intended recipient of the message header.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.MustUnderstand">
      <summary>Gets or sets a value indicating if the header must be understood according to the SOAP 1.1 and 1.2 specification.</summary>
      <returns>
        <see langword="true" /> if processing the message header is mandatory; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.Relay">
      <summary>Gets a value that indicates whether the header should be relayed.</summary>
      <returns>
        <see langword="true" /> if the message header can be relayed; otherwise, <see langword="false" />. The default is false according to the SOAP 1.1 specification.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageHeaderDescription.TypedHeader">
      <summary>Gets or sets a value that indicates whether the message header is a message contract header.</summary>
      <returns>
        <see langword="true" /> if the message header is a message contract header; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageHeaderDescriptionCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" /> objects.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageHeaderDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessageHeaderDescription)">
      <summary>When called by a derived class, returns the <see cref="T:System.Xml.XmlQualifiedName" /> of the message header.</summary>
      <param name="item">The <see cref="T:System.ServiceModel.Description.MessageHeaderDescription" /> to locate.</param>
      <returns>The <see cref="T:System.Xml.XmlQualifiedName" /> of the message header.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescription">
      <summary>Represents a description of a SOAP message part.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescription.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> class.</summary>
      <param name="name">The XML name of the message part.</param>
      <param name="ns">The XML namespace of the message part.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Index">
      <summary>Gets or sets the index of the message part.</summary>
      <returns>The index of the message part.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.MemberInfo">
      <summary>Gets or sets the member information for the message part.</summary>
      <returns>The member information for this message part.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Multiple">
      <summary>Gets or sets a value that controls whether the message part can occur more than once in the message.</summary>
      <returns>
        <see langword="true" /> if there can be more than one; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Name">
      <summary>Gets or sets the name of the message part.</summary>
      <returns>The name of the message part.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Namespace">
      <summary>Gets or sets the namespace of the message part.</summary>
      <returns>The namespace of the message part.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Type">
      <summary>Gets or sets the type of the message part.</summary>
      <returns>The type of the message part.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescriptionCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> objects.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePartDescription)">
      <summary>When called by a derived class, returns the <see cref="T:System.Xml.XmlQualifiedName" /> of the <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</summary>
      <param name="item">The <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> to locate.</param>
      <returns>The <see cref="T:System.Xml.XmlQualifiedName" /> of the <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePropertyDescription">
      <summary>Represents a message property specified by the <see cref="T:System.ServiceModel.MessagePropertyAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePropertyDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" /> class.</summary>
      <param name="name">The name of the property.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePropertyDescriptionCollection">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" /> objects.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePropertyDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePropertyDescription)">
      <summary>Returns an <see cref="T:System.Xml.XmlQualifiedName" /> for a <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.</summary>
      <param name="item">The <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" /> to locate.</param>
      <returns>The <see cref="T:System.Xml.XmlQualifiedName" /> of the <see cref="T:System.ServiceModel.Description.MessagePropertyDescription" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescription">
      <summary>Represents the description of a contract operation that provides a description of the messages that make up the operation.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.OperationDescription" /> class with a specified name and contract description.</summary>
      <param name="name">The name of the operation description.</param>
      <param name="declaringContract">The <see cref="T:System.ServiceModel.Description.ContractDescription" /> used to initialize the operation description.</param>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.BeginMethod">
      <summary>Gets or sets the begin method of the operation.</summary>
      <returns>The <see cref="T:System.Reflection.MethodInfo" /> that provides access to the attributes and metadata of the method.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Behaviors">
      <summary>Gets or sets the operation behaviors associated with the operation.</summary>
      <returns>A <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> that contains the <see cref="T:System.ServiceModel.Description.IOperationBehavior" /> objects associated with the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.DeclaringContract">
      <summary>Gets or sets the contract to which the operation belongs.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ContractDescription" /> for the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.EndMethod">
      <summary>Gets or sets the end method of the operation.</summary>
      <returns>The <see cref="T:System.Reflection.MethodInfo" /> that provides access to the attributes and metadata of the method.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Faults">
      <summary>Gets the descriptions of the faults associated with the operation description.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.FaultDescriptionCollection" /> that contains details about the faults associated with the operation description.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.IsOneWay">
      <summary>Gets or sets a value that indicates whether an operation returns a reply message.</summary>
      <returns>
        <see langword="true" /> if this method receives a request message and returns no reply message; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.KnownTypes">
      <summary>Gets the known types associated with the operation description.</summary>
      <returns>The collection of known types associated with the operation description.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Messages">
      <summary>Gets or sets the descriptions of the messages that make up the operation.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" /> that contains descriptions of the messages that makes up the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Name">
      <summary>Gets or sets the name of the operation description.</summary>
      <returns>The name of the operation description.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.OperationBehaviors">
      <summary>Gets the set of behaviors for the operation.</summary>
      <returns>The set of behaviors for the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.SyncMethod">
      <summary>Gets or sets the service synchronization method of the operation description.</summary>
      <returns>The <see cref="T:System.Reflection.MethodInfo" /> that provides access the attributes and metadata of the method.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.TaskMethod">
      <summary>Gets or sets the method used for the task operation.</summary>
      <returns>The method used for the task operation.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescriptionCollection">
      <summary>Represents a collection that contains operation descriptions.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.Find(System.String)">
      <summary>Returns an operation description with a specified name from the collection of operation descriptions.</summary>
      <param name="name">The name of the operation.</param>
      <returns>An <see cref="T:System.ServiceModel.Description.OperationDescription" /> with the name specified.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.FindAll(System.String)">
      <summary>Returns a collection of all the operation descriptions from the collection that have the specified name.</summary>
      <param name="name">The name of the operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is <see langword="null" />.</exception>
      <returns>The <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Description.OperationDescription" /> that contains the operation descriptions with the specified name.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.InsertItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Inserts an element into the operation description collection at the specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Description.OperationDescription" /> to insert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.SetItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Replaces the operation description element in the collection at the specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Description.OperationDescription" /> to set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceEndpoint">
      <summary>Represents the endpoint for a service that allows clients of the service to find and communicate with the service.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> class with a specified contract, binding, and address.</summary>
      <param name="contract">The <see cref="T:System.ServiceModel.Description.ContractDescription" /> for the service endpoint.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> that specifies how the service endpoint communicates with the world.</param>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> for the service endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> class for a specified contract.</summary>
      <param name="contract">The <see cref="T:System.ServiceModel.Description.ContractDescription" /> for the service endpoint.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Address">
      <summary>Gets or sets the endpoint address for the service endpoint.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> that specifies the location of the service endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Binding">
      <summary>Gets or sets the binding for the service endpoint.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Binding" /> for the service endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Contract">
      <summary>Gets the contract for the service endpoint.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ContractDescription" /> that specifies the contract for the service endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors">
      <summary>Gets the endpoint behaviors for the service.</summary>
      <returns>The endpoint behaviors for the service.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Name">
      <summary>Gets or sets the name of the service endpoint.</summary>
      <returns>The name the service endpoint. The default value is the concatenation of the binding name and the contract description name. For example, <see cref="P:System.ServiceModel.Channels.Binding.Name" /> +'_' + <see cref="P:System.ServiceModel.Description.ContractDescription.Name" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.TypedMessageConverter">
      <summary>Converts a typed message to an untyped message, or an untyped message to a typed message.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.DataContractFormatAttribute)">
      <summary>Represents a static method that returns a <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</summary>
      <param name="messageContract">A message contract type that is a <see cref="T:System.Type" /> annotated with a <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
      <param name="action">An action string.</param>
      <param name="formatterAttribute">A <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> that specifies the formatter to be used.</param>
      <exception cref="T:System.ArgumentNullException">Arguments are <see langword="null" /></exception>
      <exception cref="T:System.ArgumentException">The specified message contract type does not have the MessageContractAttribute applied</exception>
      <returns>A <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.XmlSerializerFormatAttribute)">
      <summary>Represents a static method that returns a <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</summary>
      <param name="messageContract">A message contract type that is a <see cref="T:System.Type" /> annotated with a <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
      <param name="action">An action string.</param>
      <param name="formatterAttribute">A <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> that specifies the formatter to be used.</param>
      <exception cref="T:System.ArgumentNullException">Arguments are <see langword="null" /></exception>
      <exception cref="T:System.ArgumentException">The specified message contract type does not have the MessageContractAttribute applied</exception>
      <returns>A <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.DataContractFormatAttribute)">
      <summary>Represents a static method that returns a <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</summary>
      <param name="messageContract">A message contract type that is a <see cref="T:System.Type" /> annotated with a <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
      <param name="action">An action string.</param>
      <param name="defaultNamespace">A namespace.</param>
      <param name="formatterAttribute">A <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> that specifies the formatter to be used.</param>
      <exception cref="T:System.ArgumentNullException">Arguments are <see langword="null" /></exception>
      <exception cref="T:System.ArgumentException">The specified message contract type does not have the MessageContractAttribute applied</exception>
      <returns>A <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.XmlSerializerFormatAttribute)">
      <summary>Represents a static method that returns a <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</summary>
      <param name="messageContract">A message contract type that is a <see cref="T:System.Type" /> annotated with a <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
      <param name="action">An action string.</param>
      <param name="defaultNamespace">A namespace.</param>
      <param name="formatterAttribute">A <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> that specifies the formatter to be used.</param>
      <exception cref="T:System.ArgumentNullException">Arguments are <see langword="null" /></exception>
      <exception cref="T:System.ArgumentException">The specified message contract type does not have the MessageContractAttribute applied</exception>
      <returns>A <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String)">
      <summary>Represents a static method that returns a <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</summary>
      <param name="messageContract">A message contract type that is a <see cref="T:System.Type" /> annotated with a <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
      <param name="action">An action string.</param>
      <param name="defaultNamespace">A namespace.</param>
      <exception cref="T:System.ArgumentNullException">Arguments are <see langword="null" /></exception>
      <exception cref="T:System.ArgumentException">The specified message contract type does not have the MessageContractAttribute applied</exception>
      <returns>A <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String)">
      <summary>Represents a static method that returns a <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</summary>
      <param name="messageContract">A message contract type that is a <see cref="T:System.Type" /> annotated with a <see cref="T:System.ServiceModel.MessageContractAttribute" />.</param>
      <param name="action">An action string.</param>
      <exception cref="T:System.ArgumentNullException">Arguments are <see langword="null" /></exception>
      <exception cref="T:System.ArgumentException">The specified message contract type does not have the MessageContractAttribute applied</exception>
      <returns>A <see cref="T:System.ServiceModel.Description.TypedMessageConverter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.FromMessage(System.ServiceModel.Channels.Message)">
      <summary>Creates a typed message from the specified <see cref="T:System.ServiceModel.Channels.Message" /> instance.</summary>
      <param name="message">An untyped message.</param>
      <returns>An object that is a typed message.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object,System.ServiceModel.Channels.MessageVersion)">
      <summary>Creates a <see cref="T:System.ServiceModel.Channels.Message" /> instance from the specified typed message using the specified version.</summary>
      <param name="typedMessage">A typed message.</param>
      <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that specifies the versions of SOAP and WS-Addressing associated with a message.</param>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object)">
      <summary>Creates a <see cref="T:System.ServiceModel.Channels.Message" /> instance from the specified typed message.</summary>
      <param name="typedMessage">A typed message.</param>
      <returns>A <see cref="T:System.ServiceModel.Channels.Message" /> instance.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.XmlSerializerOperationBehavior">
      <summary>Controls run-time behavior of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> associated with an operation.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription,System.ServiceModel.XmlSerializerFormatAttribute)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.XmlSerializerOperationBehavior" /> class.</summary>
      <param name="operation">The <see cref="T:System.ServiceModel.Description.OperationDescription" /> to export or serialize.</param>
      <param name="attribute">An <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> used to hold SOAP use and format options.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.#ctor(System.ServiceModel.Description.OperationDescription)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.XmlSerializerOperationBehavior" /> class with a specific operation.</summary>
      <param name="operation">The <see cref="T:System.ServiceModel.Description.OperationDescription" /> to export or serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.GetXmlMappings">
      <summary>Gets the collection of mappings between XML schema elements and CLR data types.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of <see cref="T:System.Xml.Serialization.XmlMapping" />s that contains the mappings.</returns>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Adds a set of parameters to an operation description.</summary>
      <param name="description">The target <see cref="T:System.ServiceModel.Description.OperationDescription" />.</param>
      <param name="parameters">A <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that contains the parameters.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Applies a client's behavior to the operation.</summary>
      <param name="description">A <see cref="T:System.ServiceModel.Description.OperationDescription" /> that represents the operation.</param>
      <param name="proxy">A <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> that represents a client operation.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Applies a dispatch behavior to the operation.</summary>
      <param name="description">The target <see cref="T:System.ServiceModel.Description.OperationDescription" />.</param>
      <param name="dispatch">The <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> to apply.</param>
    </member>
    <member name="M:System.ServiceModel.Description.XmlSerializerOperationBehavior.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Validates the operation.</summary>
      <param name="description">The target <see cref="T:System.ServiceModel.Description.OperationDescription" /> to validate.</param>
    </member>
    <member name="P:System.ServiceModel.Description.XmlSerializerOperationBehavior.XmlSerializerFormatAttribute">
      <summary>Gets the object that holds SOAP use and format options.</summary>
      <returns>An <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> that holds SOAP use and format options.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ChannelDispatcher">
      <summary>A component that accepts channels and associates them with a service.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers">
      <summary>Gets a set of <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" /> objects that can be used to insert custom error handling functionality for an endpoint.</summary>
      <returns>A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" /> objects.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults">
      <summary>Gets or sets a value that indicates whether to include the details about an exception in a fault.</summary>
      <exception cref="T:System.InvalidOperationException">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <returns>
        <see langword="true" /> if the details about an exception are included in the faults; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientOperation">
      <summary>Used to modify or extend the execution behavior of a specific contract operation in a client object or client channel object. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> class using the specified <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, name, action, and reply action values.</summary>
      <param name="parent">The containing <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> object.</param>
      <param name="name">The name of the operation.</param>
      <param name="action">The action of the operation.</param>
      <param name="replyAction">The action of the reply message.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> class using the specified <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, name, and action values.</summary>
      <param name="parent">The containing <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> object.</param>
      <param name="name">The name of the operation.</param>
      <param name="action">The action of the operation.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Action">
      <summary>Gets the action of the operation.</summary>
      <returns>The action of the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod">
      <summary>Gets or sets the method associated with an asynchronous operation.</summary>
      <returns>A <see cref="T:System.Reflection.MethodInfo" /> object that represents the method handling the begin portion of an asynchronous method pair, or <see langword="null" /> if the operation is not part of an asynchronous method pair.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ClientParameterInspectors">
      <summary>Gets a collection of parameter inspector objects used to view or modify parameters prior to or subsequent to a client call.</summary>
      <returns>A collection of parameter inspector objects used to view or modify parameters prior to or subsequent to a client call.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
      <summary>Gets or sets a value that indicates whether the <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> property value is used to deserialize the reply message.</summary>
      <returns>
        <see langword="true" /> if the return type is not a <see cref="T:System.ServiceModel.Channels.Message" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod">
      <summary>Gets or sets the method that implements the asynchronous end method for the operation.</summary>
      <returns>A <see cref="T:System.Reflection.MethodInfo" /> that represents the end method for the operation, or <see langword="null" /> if the operation is not asynchronous.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.FaultContractInfos">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Dispatcher.FaultContractInfo" /> objects that represent the specified SOAP faults for this operation.</summary>
      <returns>A collection of SOAP faults specified for this operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
      <summary>Gets or sets the formatter that serializes objects into messages and deserializes messages into objects.</summary>
      <returns>An <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /> implementation.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
      <summary>Gets or sets a value that indicates if the operation is a one-way operation.</summary>
      <returns>
        <see langword="true" /> if the indigo2 client should not expect a reply; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Name">
      <summary>Gets the name of the operation.</summary>
      <returns>The name of the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Parent">
      <summary>Gets the containing <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> object.</summary>
      <returns>The containing <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction">
      <summary>Gets the action of the reply message for this operation.</summary>
      <returns>The action of the reply.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
      <summary>Gets or sets a value that specifies whether the <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> object serializes an outbound message.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /> property serializes the return values into a reply message; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SyncMethod">
      <summary>Gets or sets the method that is associated with this operation.</summary>
      <returns>A <see cref="T:System.Reflection.MethodInfo" /> that represents the method that implements the operation. If the operation is asynchronous, this value is <see langword="null" /> and the implementing methods are stored in the <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod" /> and <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod" /> properties.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.TaskMethod">
      <summary>Gets or sets the method associated with a task.</summary>
      <returns>A <see cref="T:System.Reflection.MethodInfo" /> object that represents the method associated with a task.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.TaskTResult">
      <summary>Gets or sets the type of the result of the method that is associated with a task.</summary>
      <returns>The <see cref="T:System.Type" /> of the result of the method that is associated with a task.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientRuntime">
      <summary>Represents the insertion point for classes that extend the functionality of Windows Communication Foundation (WCF) client objects for all messages handled by a client application.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime">
      <summary>Gets the dispatch run-time that dispatches service-initiated operations.</summary>
      <returns>A <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> object. If the contract is a duplex contract, the dispatch behavior contains service-initiated operations; otherwise the dispatch behavior contains no operations.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers">
      <summary>Gets a collection of channel initializer objects used to customize the channel associated with a client.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> implementations.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientMessageInspectors">
      <summary>Gets a collection of message inspector objects used to view or modify messages of a particular service operation.</summary>
      <returns>A collection of message inspector objects used to view or modify messages of a particular service operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientOperations">
      <summary>Gets a collection of client operation objects used to attach extension objects that inspect or modify messages and behavior of a particular service operation.</summary>
      <returns>A collection of client operation objects used to attach extension objects that inspect or modify messages and behavior of a particular service operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType">
      <summary>Gets or sets the type of the contract associated with a client.</summary>
      <returns>The <see cref="T:System.Type" /> object that represents the contract associated with this client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName">
      <summary>Gets the name of the contract associated with a client.</summary>
      <returns>The contract name for a client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace">
      <summary>Gets the namespace of the contract associated with a client.</summary>
      <returns>The namespace of the contract associated with a client.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers">
      <summary>Gets a collection of an interactive channel initializer.</summary>
      <returns>A synchronized collection of type <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
      <summary>Gets or sets a value that indicates whether the client adds addressing headers to request-reply messages.</summary>
      <returns>
        <see langword="true" /> if the client does not add any addressing headers; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize">
      <summary>Gets or sets the maximum fault size.</summary>
      <returns>An integer representing the maximum fault size.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
      <summary>Gets or sets an <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> implementation that can be used to select a <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</summary>
      <returns>An <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> object that selects a <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation">
      <summary>Gets the client operation for methods that do not have a corresponding <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> in the <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" /> collection.</summary>
      <returns>A <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> that represents the method to which the current message contents are routed when the operation selector cannot find an operation that matches the message.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
      <summary>Gets or sets the transport address that is used to send messages through the client.</summary>
      <returns>A <see cref="T:System.Uri" /> that is the destination address for the transport. The default value is the <see cref="P:System.ServiceModel.EndpointAddress.Uri" /> value of the client.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.DispatchOperation">
      <summary>Used to modify or extend the execution behavior of a specific service operation in a service endpoint. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.DispatchOperation.#ctor(System.ServiceModel.Dispatcher.DispatchRuntime,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> class using the specified dispatch run-time, name, and action values.</summary>
      <param name="parent">The associated <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> object.</param>
      <param name="name">The name of the dispatch operation. This is used as the key to the <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations" /> collection.</param>
      <param name="action">The message action for which this dispatch operation is being created.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Action">
      <summary>Gets the value of the action for this operation.</summary>
      <returns>The value of the action for this operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.AutoDisposeParameters">
      <summary>Gets or sets whether parameters are to be automatically disposed.</summary>
      <returns>
        <see langword="true" /> if the parameters are to be automatically disposed; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.DeserializeRequest">
      <summary>Gets or sets a value that indicates whether the <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> property value is used to deserialize the request message.</summary>
      <returns>
        <see langword="false" /> if the return type is of type <see cref="T:System.ServiceModel.Channels.Message" /> and there are no out parameters; otherwise, <see langword="true" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.IsOneWay">
      <summary>Gets a value that indicates if the operation is a one-way operation.</summary>
      <returns>
        <see langword="true" /> if the operation has only an input; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Name">
      <summary>Gets the name of the operation.</summary>
      <returns>The name of the operation. This is used as the key to the <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations" /> collection.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.Parent">
      <summary>Gets the associated <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> object.</summary>
      <returns>The associated <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchOperation.SerializeReply">
      <summary>Gets or sets a value that specifies whether the <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> object serializes reply messages.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" /> property serializes the return values into a reply message; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.DispatchRuntime">
      <summary>Exposes properties that can be used to modify default service behavior as well as attach custom objects that can modify how incoming messages are transformed into objects and dispatched to operations. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.ChannelDispatcher">
      <summary>Gets the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> for this dispatch run-time object.</summary>
      <returns>The channel dispatcher for the dispatch run-time object.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" /> objects that can be used to attach a custom message inspector for all incoming and outgoing messages across the endpoint.</summary>
      <returns>A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> object of type <see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.EndpointDispatcher">
      <summary>Represents the run-time object that exposes properties that enable the insertion of run-time extensions or modifications for messages in service applications.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.FaultContractInfo">
      <summary>Represents information about a SOAP fault that is specified in a <see cref="T:System.ServiceModel.FaultContractAttribute" /> attribute.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FaultContractInfo.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.FaultContractInfo" /> class that uses the specified action and detail type.</summary>
      <param name="action">The action of the SOAP fault.</param>
      <param name="detail">The detail type that is serialized as the SOAP fault detail.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Action">
      <summary>Gets the SOAP fault action value.</summary>
      <returns>The SOAP fault action value.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Detail">
      <summary>The type of the object that is serialized as the SOAP fault detail.</summary>
      <returns>The <see cref="T:System.Type" /> that represents the serialized SOAP fault detail.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IChannelInitializer">
      <summary>Defines the interface to notify a service or client when a channel is created.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IChannelInitializer.Initialize(System.ServiceModel.IClientChannel)">
      <summary>Initializes the <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> class with a specified <see cref="T:System.ServiceModel.IClientChannel" />.</summary>
      <param name="channel">The <see cref="T:System.ServiceModel.IClientChannel" /> used to initialize the <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" />.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
      <summary>Defines methods that are used to control the conversion of messages into objects and objects into messages for client applications.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>Converts a message into a return value and <see langword="out" /> parameters that are passed back to the calling operation.</summary>
      <param name="message">The inbound message.</param>
      <param name="parameters">Any <see langword="out" /> values.</param>
      <returns>The return value of the operation.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
      <summary>Converts an <see cref="T:System.Object" /> array into an outbound <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <param name="messageVersion">The version of the SOAP message to use.</param>
      <param name="parameters">The parameters passed to the WCF client operation.</param>
      <returns>The SOAP message sent to the service operation.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageInspector">
      <summary>Defines a message inspector object that can be added to the <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors" /> collection to view or modify messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)">
      <summary>Enables inspection or modification of a message after a reply message is received but prior to passing it back to the client application.</summary>
      <param name="reply">The message to be transformed into types and handed back to the client application.</param>
      <param name="correlationState">Correlation state data.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)">
      <summary>Enables inspection or modification of a message before a request message is sent to a service.</summary>
      <param name="request">The message to be sent to the service.</param>
      <param name="channel">The WCF client object channel.</param>
      <returns>The object that is returned as the <paramref name="correlationState" /> argument of the <see cref="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)" /> method. This is <see langword="null" /> if no correlation state is used.  
  
 The best practice is to make this a <see cref="T:System.Guid" /> to ensure that no two <paramref name="correlationState" /> objects are the same.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientOperationSelector">
      <summary>Defines the contract for an operation selector.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])">
      <summary>Returns the selected operation.</summary>
      <param name="method">The method invoked.</param>
      <param name="parameters">The parameters passed to the method.</param>
      <returns>The operation selected by the custom operation selector.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection">
      <summary>Gets a value that indicates whether parameters are required to determine the selection.</summary>
      <returns>
        <see langword="true" /> if parameters are required; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector">
      <summary>Defines the methods that enable custom inspection or modification of inbound and outbound application messages in service applications.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel,System.ServiceModel.InstanceContext)">
      <summary>Called after an inbound message has been received but before the message is dispatched to the intended operation.</summary>
      <param name="request">The request message.</param>
      <param name="channel">The incoming channel.</param>
      <param name="instanceContext">The current service instance.</param>
      <returns>The object used to correlate state. This object is passed back in the <see cref="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply(System.ServiceModel.Channels.Message@,System.Object)" /> method.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply(System.ServiceModel.Channels.Message@,System.Object)">
      <summary>Called after the operation has returned but before the reply message is sent.</summary>
      <param name="reply">The reply message. This value is null if the operation is one way.</param>
      <param name="correlationState">The correlation object returned from the <see cref="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel,System.ServiceModel.InstanceContext)" /> method.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IErrorHandler">
      <summary>Allows an implementer to control the fault message returned to the caller and optionally perform custom error processing such as logging.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IErrorHandler.HandleError(System.Exception)">
      <summary>Enables error-related processing and returns a value that indicates whether the dispatcher aborts the session and the instance context in certain cases.</summary>
      <param name="error">The exception thrown during processing.</param>
      <returns>
        <see langword="true" /> if Windows Communication Foundation (WCF) should not abort the session (if there is one) and instance context if the instance context is not <see cref="F:System.ServiceModel.InstanceContextMode.Single" />; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)">
      <summary>Enables the creation of a custom <see cref="T:System.ServiceModel.FaultException`1" /> that is returned from an exception in the course of a service method.</summary>
      <param name="error">The <see cref="T:System.Exception" /> object thrown in the course of the service operation.</param>
      <param name="version">The SOAP version of the message.</param>
      <param name="fault">The <see cref="T:System.ServiceModel.Channels.Message" /> object that is returned to the client, or service, in the duplex case.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
      <summary>Defines the methods that enable a client application to display a user interface to collect identity information prior to creating the channel.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)">
      <summary>An asynchronous call to begin using a user interface to obtain credential information.</summary>
      <param name="channel">The client channel.</param>
      <param name="callback">The callback object.</param>
      <param name="state">Any state data.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> to use to call back when processing has completed.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Called when the <see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" /> has finished.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IParameterInspector">
      <summary>Defines the contract implemented by custom parameter inspectors that enables inspection or modification of information prior to and subsequent to calls on either the client or the service.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)">
      <summary>Called after client calls are returned and before service responses are sent.</summary>
      <param name="operationName">The name of the invoked operation.</param>
      <param name="outputs">Any output objects.</param>
      <param name="returnValue">The return value of the operation.</param>
      <param name="correlationState">Any correlation state returned from the <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])" /> method, or <see langword="null" />.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])">
      <summary>Called before client calls are sent and after service responses are returned.</summary>
      <param name="operationName">The name of the operation.</param>
      <param name="inputs">The objects passed to the method by the client.</param>
      <returns>The correlation state that is returned as the <paramref name="correlationState" /> parameter in <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)" />. Return <see langword="null" /> if you do not intend to use correlation state.</returns>
    </member>
    <member name="T:System.ServiceModel.DnsEndpointIdentity">
      <summary>Specifies the DNS identity of the server.</summary>
    </member>
    <member name="M:System.ServiceModel.DnsEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DnsEndpointIdentity" /> class from a claim.</summary>
      <param name="identity">The <see cref="T:System.IdentityModel.Claims.Claim" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.DnsEndpointIdentity.#ctor(System.String)">
      <summary>Initializes a new instance of this class from a DNS name.</summary>
      <param name="dnsName">The DNS name.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dnsName" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The claim type of <paramref name="dnsName" /> is not <see cref="P:System.IdentityModel.Claims.ClaimTypes.Dns" />.</exception>
    </member>
    <member name="T:System.ServiceModel.DuplexChannelFactory`1">
      <summary>Provides the means to create and manage duplex channels of different types that are used by clients to send and receive messages to and from service endpoints.</summary>
      <typeparam name="TChannel">The type of channel produced by the channel factory.</typeparam>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified binding and endpoint address.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> or <paramref name="binding" /> or <paramref name="remoteAddress" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified instance context, binding, and remote address.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The remote address that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> or <paramref name="binding" /> or <paramref name="remoteAddress" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with a context that implements the callback contract and a specified binding.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> or <paramref name="binding" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified type of callback instance, binding, and remote address.</summary>
      <param name="callbackInstanceType">The <see cref="T:System.Type" /> that provides the callback instance that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> or <paramref name="binding" /> or <paramref name="remoteAddress" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with the specified type of callback instance, binding, and remote address.</summary>
      <param name="callbackInstanceType">The <see cref="T:System.Type" /> that provides the callback instance that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The remote address that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> or <paramref name="binding" /> or <paramref name="remoteAddress" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified type of callback instance and binding.</summary>
      <param name="callbackInstanceType">The <see cref="T:System.Type" /> that provides the callback instance that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> or <paramref name="binding" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified type of callback instance and service endpoint.</summary>
      <param name="callbackInstanceType">The <see cref="T:System.Type" /> that provides the callback instance that the client uses to listen for messages from the connected service.</param>
      <param name="serviceEndpoint" />
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified type of callback instance.</summary>
      <param name="callbackInstanceType">The <see cref="T:System.Type" /> that provides the callback instance that the client uses to listen for messages from the connected service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is <see langword="null" />.</exception>
      <returns>A duplex channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is <see langword="null" />.</exception>
      <returns>A channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is <see langword="null" />.</exception>
      <returns>A duplex channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is <see langword="null" />.</exception>
      <returns>A duplex channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
    </member>
    <member name="T:System.ServiceModel.DuplexClientBase`1">
      <summary>Used to create a channel to a duplex service and associate that channel with a callback object.</summary>
      <typeparam name="TChannel">The type of the channel to be created.</typeparam>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object, binding, and service endpoint address.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="binding">The binding with which to call the service.</param>
      <param name="remoteAddress">The service endpoint address to use.</param>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object.</summary>
      <param name="callbackInstance">An <see cref="T:System.ServiceModel.InstanceContext" /> object that associates the callback object with the channel to the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.ServiceModel.EndpointAddress">
      <summary>Provides a unique network address that a client uses to communicate with a service endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI string.</summary>
      <param name="uri">The URI that identifies the endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI and headers.</summary>
      <param name="uri">The <see cref="T:System.Uri" /> that identifies the endpoint location.</param>
      <param name="addressHeaders">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains address information used to interact with the endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI, identity, and headers.</summary>
      <param name="uri">The <see cref="T:System.Uri" /> that identifies the endpoint location.</param>
      <param name="identity">The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</param>
      <param name="addressHeaders">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains address information used to interact with the endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)">
      <summary>Assigns the URI and properties of the endpoint address to the values of the headers of a specified message.</summary>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> whose header values are being assigned.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.Equals(System.Object)">
      <summary>Returns a value that indicates whether a specified object is equivalent to the current endpoint address.</summary>
      <param name="obj">The <see cref="T:System.Object" /> to be compared to the current endpoint address.</param>
      <returns>
        <see langword="true" /> if the specified object is equivalent to the current address; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetHashCode">
      <summary>Provides a unique hash code for the current endpoint address.</summary>
      <returns>A unique hash code for the current endpoint address.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Returns a value that indicates whether specified endpoint addresses are not equivalent.</summary>
      <param name="address1">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</param>
      <param name="address2">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</param>
      <returns>
        <see langword="true" /> if the endpoint addresses are equivalent; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Returns a value that indicates whether specified endpoint addresses are not equivalent.</summary>
      <param name="address1">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</param>
      <param name="address2">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</param>
      <returns>
        <see langword="true" /> if the endpoint addresses are not equivalent; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)">
      <summary>Reads an endpoint address for a specified address version from a specified XML dictionary reader.</summary>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</param>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> read from the XML dictionary reader.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ToString">
      <summary>Returns a canonical string representation of the URI that is contained in the endpoint address.</summary>
      <returns>The URI that identifies the endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <summary>Saves all the child nodes of the node to the XML dictionary writer specified.</summary>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> to which the endpoint address is saved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> or <paramref name="addressingVersion" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.AnonymousUri">
      <summary>Gets a version-neutral representation of the anonymous URI.</summary>
      <returns>A <see cref="T:System.Uri" /> with the value <c>http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous</c>.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Headers">
      <summary>Gets the collection of address headers for the endpoints that the builder can create.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> that contains address information for the endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Identity">
      <summary>Gets the identity for the endpoint used to authenticate it.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsAnonymous">
      <summary>Gets a value that indicates whether the endpoint is anonymous.</summary>
      <returns>
        <see langword="true" /> if the endpoint is <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsNone">
      <summary>Gets a value that indicates whether the URI for the endpoint is the <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />.</summary>
      <returns>
        <see langword="true" /> if the URI of the endpoint is <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.NoneUri">
      <summary>Gets a version-neutral URI used for the address of an endpoint to which a message must not be sent.</summary>
      <returns>A <see cref="T:System.Uri" /> with the value <c>http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None</c>.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Uri">
      <summary>Gets the URI for the endpoint.</summary>
      <returns>The <see cref="T:System.Uri" /> for the endpoint.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddressBuilder">
      <summary>A factory for producing new (immutable) endpoint addresses with specific property values.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> class from an existing endpoint address.</summary>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> whose property values are used to initialize the property values of this instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress">
      <summary>Creates a new endpoint address initialized with the property values of the current endpoint address builder.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> whose property are initialized with the values of the current endpoint address builder.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Headers">
      <summary>Gets the list of address headers for the endpoints that the builder can create.</summary>
      <returns>The <see cref="T:System.Collections.Generic.List`1" /> of type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains the address headers for the endpoints that the builder can create.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Identity">
      <summary>Gets or sets the identity for the endpoints that the builder can create.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Uri">
      <summary>Gets or sets the URI for the endpoints that the builder can create.</summary>
      <returns>The <see cref="T:System.Uri" /> that specifies the endpoint address.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointIdentity">
      <summary>An abstract class that when implemented provides an identity that enables the authentication of an endpoint by clients that exchange messages with it.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.#ctor">
      <summary>Creates an empty <see cref="T:System.ServiceModel.EndpointIdentity" /> instance.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)">
      <summary>Creates an identity with the specified claim.</summary>
      <param name="identity">A <see cref="T:System.IdentityModel.Claims.Claim" /> used to create the new identity.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is <see langword="null" />.</exception>
      <returns>An <see cref="T:System.ServiceModel.EndpointIdentity" /> associated with the specified <paramref name="identity" />.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)">
      <summary>Returns a value that determines whether a specified object is equal to the current identity object or if they have equal security properties.</summary>
      <param name="obj">The <see cref="T:System.Object" /> compared for equality with the current identity.</param>
      <returns>
        <see langword="true" /> if the specified object <paramref name="obj" /> is equivalent to the current identity or contains the same security properties; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.GetHashCode">
      <summary>Provides a hash code for the current instance of the identity.</summary>
      <returns>The hash code for the current identity.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})">
      <summary>Initializes an <see cref="T:System.ServiceModel.EndpointIdentity" /> with the specified claim and an interface and compares equality.</summary>
      <param name="identityClaim">The <see cref="T:System.IdentityModel.Claims.Claim" /> used to initialize the <see cref="T:System.ServiceModel.EndpointIdentity" />.</param>
      <param name="claimComparer">The <see cref="T:System.Collections.IEqualityComparer" /> used to compare claims.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)">
      <summary>Initializes an <see cref="T:System.ServiceModel.EndpointIdentity" /> with the specified claim.</summary>
      <param name="identityClaim">The <see cref="T:System.IdentityModel.Claims.Claim" /> used to initialize the <see cref="T:System.ServiceModel.EndpointIdentity" />.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.ToString">
      <summary>Returns the identity.</summary>
      <returns>A <see cref="T:System.String" /> of the form "identity(string)" where string = <see cref="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointIdentity.IdentityClaim">
      <summary>Gets the identity claim that corresponds to the identity.</summary>
      <returns>The <see cref="T:System.IdentityModel.Claims.Claim" /> that represents the identity claim.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointNotFoundException">
      <summary>The exception that is thrown when a remote endpoint could not be found or reached.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointNotFoundException" /> class with data that specifies the source and destination of the stream and the information required to serialize the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointNotFoundException" /> class with a specified error message and the inner exception that caused the current exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointNotFoundException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:System.ServiceModel.EnvelopeVersion">
      <summary>Contains information related to the version of SOAP associated with a message and its exchange.</summary>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues">
      <summary>Gets a string that contains the URI name for the SOAP role associated with the current message version for the ultimate destination.</summary>
      <returns>An empty string if SOAP1.1 is used; a string that contains http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver if SOAP1.2 is used.</returns>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.ToString">
      <summary>Gets a string that represents the current envelope version.</summary>
      <returns>The string representation of the current envelope version.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue">
      <summary>Gets a string that contains the URI name for the SOAP role associated with the current message version for the next destination.</summary>
      <returns>A string that contains http://schemas.xmlsoap.org/soap/actor/next if SOAP1.1 is used; a string that contains http://www.w3.org/2003/05/soap-envelope/role/next if SOAP1.2 is used; and an empty string if the message version is none.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.None">
      <summary>Gets the envelope version not using a version of SOAP.</summary>
      <returns>The envelope version not using a SOAP formatting.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap11">
      <summary>Gets the SOAP1.1 envelope version.</summary>
      <returns>The SOAP1.1 <see cref="T:System.ServiceModel.EnvelopeVersion" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap12">
      <summary>Gets the SOAP1.2 envelope version.</summary>
      <returns>The SOAP1.2 <see cref="T:System.ServiceModel.EnvelopeVersion" /> object.</returns>
    </member>
    <member name="T:System.ServiceModel.ExceptionDetail">
      <summary>Represents fault detail information.</summary>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ExceptionDetail" /> class from the exception.</summary>
      <param name="exception">The exception to be serialized as an <see cref="T:System.ServiceModel.ExceptionDetail" /> object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="exception" /> parameter is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.ToString">
      <summary>Returns the exception detail information for the exception passed to the constructor.</summary>
      <returns>The message and stack trace of the exception.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.HelpLink">
      <summary>Gets or sets the help link from the exception passed to the constructor.</summary>
      <returns>The help link information of the exception.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.InnerException">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.ExceptionDetail" /> object that represents the inner exception.</summary>
      <returns>The inner exception information.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Message">
      <summary>Gets or sets the message from the exception passed to the constructor.</summary>
      <returns>The exception message.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.StackTrace">
      <summary>Gets or sets the stack trace information from the exception passed to the constructor.</summary>
      <returns>The stack trace of the exception.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Type">
      <summary>Gets or sets the type string for the exception passed to the constructor.</summary>
      <returns>The type string for the exception passed to the constructor.</returns>
    </member>
    <member name="T:System.ServiceModel.ExtensionCollection`1">
      <summary>Represents a collection of extensions.</summary>
      <typeparam name="T">The type for the collection.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ExtensionCollection`1.#ctor(`0,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ExtensionCollection`1" /> class with a specified owner and synchronization root.</summary>
      <param name="owner">The owner of the collection.</param>
      <param name="syncRoot">The object used to synchronize.</param>
    </member>
    <member name="M:System.ServiceModel.ExtensionCollection`1.#ctor(`0)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ExtensionCollection`1" /> class with a specified owner.</summary>
      <param name="owner">The owner of the collection.</param>
    </member>
    <member name="M:System.ServiceModel.ExtensionCollection`1.Find``1">
      <summary>Returns an extension if it is in the collection.</summary>
      <typeparam name="E">The type of extension sought.</typeparam>
      <returns>An extension of the type sought, or <see langword="null" /> if no extensions implement the type. If more than one extension implements the type, the most recently added is returned.</returns>
    </member>
    <member name="M:System.ServiceModel.ExtensionCollection`1.FindAll``1">
      <summary>Returns a collection of extensions if found in the collection.</summary>
      <typeparam name="E">The type for which the collection of extensions is sought.</typeparam>
      <returns>A collection of extensions of the type sought. If no extensions implement this type, a non-null empty collection is returned.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultCode">
      <summary>Represents a SOAP fault code.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultCode" /> class.</summary>
      <param name="name">The name of the fault code.</param>
      <param name="subCode">The fault subcode.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultCode" /> class with the specified name, namespace, and fault subcode.</summary>
      <param name="name">The local name of the fault code.</param>
      <param name="ns">The namespace name of the fault code.</param>
      <param name="subCode">A <see cref="T:System.ServiceModel.FaultCode" /> object that represents the fault subcode.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="ns" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> is an empty string.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultCode" /> class with the specified name and namespace.</summary>
      <param name="name">The local name of the fault code.</param>
      <param name="ns">The namespace name of the fault code.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="ns" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> is an empty string.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultCode" /> class.</summary>
      <param name="name">The name of the fault code.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)">
      <summary>Creates a sender fault code with the specified subcode.</summary>
      <param name="subCode">A <see cref="T:System.ServiceModel.FaultCode" /> object that represents the fault subcode.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subCode" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.FaultCode" /> object with the created SOAP fault subcode in the <see cref="P:System.ServiceModel.FaultCode.SubCode" /> property.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsPredefinedFault">
      <summary>Gets a value that indicates whether the fault is a SOAP 1.1 or SOAP 1.2 fault.</summary>
      <returns>
        <see langword="true" /> if the fault is a SOAP 1.1 or SOAP 1.2 fault; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsReceiverFault">
      <summary>Gets a value that indicates whether the fault is a SOAP 1.1 server fault or a SOAP 1.2 receiver fault.</summary>
      <returns>
        <see langword="true" /> if the fault is a SOAP 1.1 server fault or a SOAP 1.2 receiver fault; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsSenderFault">
      <summary>Gets a value that indicates whether the fault is a SOAP 1.1 client fault or a SOAP 1.2 sender fault.</summary>
      <returns>
        <see langword="true" /> if the fault is a SOAP 1.1 client fault or a SOAP 1.2 sender fault; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Name">
      <summary>Gets the local name of the fault code.</summary>
      <returns>The local name of the fault code.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Namespace">
      <summary>Gets the namespace for the fault code.</summary>
      <returns>A Uniform Resource Identifier (URI) for the namespace name.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.SubCode">
      <summary>Gets the fault subcode.</summary>
      <returns>A <see cref="T:System.ServiceModel.FaultCode" /> object that represents the fault subcode.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultContractAttribute">
      <summary>Specifies one or more SOAP faults that are returned when a service operation encounters processing errors.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultContractAttribute" /> class.</summary>
      <param name="detailType">The serializable type that contains error information for the caller.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="detailType" /> argument is <see langword="null" />.</exception>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Action">
      <summary>Gets or sets the action of the SOAP fault message that is specified as part of the operation contract.</summary>
      <returns>The value of the action for the SOAP fault message.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.DetailType">
      <summary>Gets the type of a serializable object that contains error information.</summary>
      <returns>The type that represents the serializable error class.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Name">
      <summary>Gets or sets the name of the fault message in Web Services Description Language (WSDL).</summary>
      <returns>The fault message name. The default is the name of the type used as the fault detail.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Namespace">
      <summary>Gets or sets the namespace of the SOAP fault.</summary>
      <returns>The namespace of the SOAP fault.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException">
      <summary>Represents a SOAP fault.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class using the specified serialization information and context when deserializing a stream into a <see cref="T:System.ServiceModel.FaultException" /> object.</summary>
      <param name="info">The serialization information necessary to reconstruct the <see cref="T:System.ServiceModel.FaultException" /> object from a stream.</param>
      <param name="context">The streaming context required to reconstruct the <see cref="T:System.ServiceModel.FaultException" /> object.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class using the specified message fault values and the provided action string.</summary>
      <param name="fault">The message fault that contains the default SOAP fault values to use.</param>
      <param name="action">The action of the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class using the specified reason, fault code, and action value.</summary>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The fault code for the SOAP fault.</param>
      <param name="action">The action value for the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class with the specified fault reason.</summary>
      <param name="reason">The reason for the fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
      <summary>Returns a <see cref="T:System.ServiceModel.FaultException" /> object from the specified message fault, action and an array of detail types.</summary>
      <param name="messageFault">The message fault that contains default SOAP fault information.</param>
      <param name="action">The fault action value.</param>
      <param name="faultDetailTypes">An array of types that contains fault details.</param>
      <returns>A <see cref="T:System.ServiceModel.FaultException" /> object that you can throw to indicate that a SOAP fault message was received.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
      <summary>Returns a <see cref="T:System.ServiceModel.FaultException" /> object from the specified message fault and an array of detail types.</summary>
      <param name="messageFault">The message fault that contains default SOAP fault information.</param>
      <param name="faultDetailTypes">An array of types that contains fault details.</param>
      <returns>A <see cref="T:System.ServiceModel.FaultException" /> object that you can throw to indicate that a SOAP fault message was received.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateMessageFault">
      <summary>Returns a <see cref="T:System.ServiceModel.Channels.MessageFault" /> object.</summary>
      <returns>The in-memory representation of a SOAP fault that can be passed to <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> to create a message that contains a fault. For <see cref="T:System.ServiceModel.FaultException" /> objects that result from fault messages, this <see cref="T:System.ServiceModel.Channels.MessageFault" /> object is the fault that arrives.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Action">
      <summary>Gets the value of the SOAP action for the fault message.</summary>
      <returns>The value of the SOAP action for the fault message.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Code">
      <summary>Gets the fault code for the SOAP fault.</summary>
      <returns>The fault code for the SOAP fault.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Message">
      <summary>Gets the message for the exception.</summary>
      <returns>The exception message.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Reason">
      <summary>Gets the <see cref="T:System.ServiceModel.FaultReason" /> for the SOAP fault.</summary>
      <returns>The reason for the SOAP fault.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException`1">
      <summary>Used in a client application to catch contractually-specified SOAP faults.</summary>
      <typeparam name="TDetail">The serializable error detail type.</typeparam>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail object, and SOAP fault reason, code and action values.</summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The fault code for the SOAP fault.</param>
      <param name="action">The action of the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail object, fault reason, and fault code.</summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The fault code for the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail object and fault reason.</summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
      <param name="reason">The reason for the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail object, and SOAP fault reason, code and action values.</summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The fault code for the SOAP fault.</param>
      <param name="action">The action of the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail object, fault reason, and fault code.</summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The fault code for the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail and fault reason.</summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
      <param name="reason">The reason for the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail object.</summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class using the specified serialization information and context when deserializing a stream into a <see cref="T:System.ServiceModel.FaultException" /> object.</summary>
      <param name="info">The serialization information necessary to reconstruct the <see cref="T:System.ServiceModel.FaultException" /> object from the <paramref name="context" />.</param>
      <param name="context">The stream from which to reconstruct the <see cref="T:System.ServiceModel.FaultException" /> object.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.CreateMessageFault">
      <summary>Creates a <see cref="T:System.ServiceModel.Channels.MessageFault" /> object that can be used to create a <see cref="T:System.ServiceModel.Channels.Message" /> that represents the SOAP fault.</summary>
      <returns>The message fault created.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.ToString">
      <summary>Returns a string for the <see cref="T:System.ServiceModel.FaultException`1" /> object.</summary>
      <returns>The string for the SOAP fault.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException`1.Detail">
      <summary>Gets the object that contains the detail information of the fault condition.</summary>
      <returns>The detail object that is the type parameter of the <see cref="T:System.ServiceModel.FaultException`1" /> object.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReason">
      <summary>Provides a text description of a SOAP fault.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultReason" /> class using the specified list of fault translations.</summary>
      <param name="translations">A list of <see cref="T:System.ServiceModel.FaultReasonText" /> objects; each object describes the fault in a specific language.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translations" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="translations" /> is empty or one or more items is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultReason" /> class using the specified text element that describes the fault in a specific language.</summary>
      <param name="translation">An array of <see cref="T:System.ServiceModel.FaultReasonText" /> objects that correspond to fault descriptions in different languages.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultReason" /> class using the specified fault description.</summary>
      <param name="text">A description of the reason the fault occurred.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <summary>Gets the fault description in the language used by the current thread.</summary>
      <returns>A <see cref="T:System.ServiceModel.FaultReasonText" /> object that contains the fault description.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)">
      <summary>Gets the fault description in the specified language.</summary>
      <param name="cultureInfo">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the language of the fault description.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Globalization.CultureInfo" /> is <see langword="null" />.</exception>
      <returns>The fault text in the specified language.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultReason.ToString">
      <summary>Returns the fault reason as a string.</summary>
      <returns>A string containing the reason for the fault.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReasonText">
      <summary>Represents the text of the reason of a SOAP fault.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultReasonText" /> class.</summary>
      <param name="text">The text of the fault reason.</param>
      <param name="xmlLang">The language of the fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultReasonText" /> class that uses the specified fault text.</summary>
      <param name="text">The text that is the SOAP fault reason.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)">
      <summary>Returns a value that indicates whether the language of the description matches provided <see cref="T:System.Globalization.CultureInfo" /> object.</summary>
      <param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo" /> object to compare with the language of the description.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Globalization.CultureInfo" /> matches; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.Text">
      <summary>Gets the text of the SOAP fault reason.</summary>
      <returns>The text of the SOAP fault reason.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.XmlLang">
      <summary>Gets the language of the SOAP fault reason.</summary>
      <returns>The language of the SOAP fault reason.</returns>
    </member>
    <member name="T:System.ServiceModel.HostNameComparisonMode">
      <summary>Specifies how the host name should be used in URI comparisons when dispatching an incoming message to a service endpoint.</summary>
    </member>
    <member name="F:System.ServiceModel.HostNameComparisonMode.Exact">
      <summary>Uses the hostname when dispatching incoming messages to this endpoint, if no strong match was found.</summary>
    </member>
    <member name="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard">
      <summary>Ignores the hostname when dispatching incoming messages to this endpoint. This is the default value.</summary>
    </member>
    <member name="F:System.ServiceModel.HostNameComparisonMode.WeakWildcard">
      <summary>If no strong or exact match was found, ignores the hostname when matching.</summary>
    </member>
    <member name="T:System.ServiceModel.HttpBindingBase">
      <summary>Specifies the base HTTP binding.</summary>
    </member>
    <member name="P:System.ServiceModel.HttpBindingBase.AllowCookies">
      <summary>Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.</summary>
      <returns>
        <see langword="true" /> if cookies are allowed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.HttpBindingBase.BypassProxyOnLocal">
      <summary>Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</summary>
      <returns>
        <see langword="true" /> to bypass the proxy server for local addresses; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.HttpBindingBase.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages that are processed by this binding.</summary>
      <returns>The version of SOAP that is used for messages that are processed by this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.HttpBindingBase.MaxBufferPoolSize">
      <summary>Gets or sets the maximum amount of memory, in bytes, that is allocated for use by the manager of the message buffers that receive messages from the channel.</summary>
      <returns>The maximum amount of memory, in bytes, that is allocated for use by the manager of the message buffers that receive messages from the channel.</returns>
    </member>
    <member name="P:System.ServiceModel.HttpBindingBase.MaxBufferSize">
      <summary>Gets or sets the maximum size, in bytes, for a buffer that receives messages from the channel.</summary>
      <returns>The maximum size, in bytes, for a buffer that receives messages from the channel.</returns>
    </member>
    <member name="P:System.ServiceModel.HttpBindingBase.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size, in bytes, for a message that can be received on a channel configured with this binding.</summary>
      <returns>The maximum size, in bytes, for a message that can be received on a channel configured with this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.HttpBindingBase.ProxyAddress">
      <summary>Gets or sets the URI address of the HTTP proxy.</summary>
      <returns>The URI address of the HTTP proxy.</returns>
    </member>
    <member name="P:System.ServiceModel.HttpBindingBase.ReaderQuotas">
      <summary>Gets or sets the constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.HttpBindingBase.Scheme">
      <summary>Gets the URI transport scheme for the channels and listeners that are configured with this binding.</summary>
      <returns>The URI transport scheme for the channels and listeners that are configured with this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.HttpBindingBase.TextEncoding">
      <summary>Gets or sets the character encoding that is used for the message text.</summary>
      <returns>The character encoding that is used for the message text.</returns>
    </member>
    <member name="P:System.ServiceModel.HttpBindingBase.TransferMode">
      <summary>Gets or sets a value that indicates whether messages are sent buffered or streamed.</summary>
      <returns>One of the enumeration values of <see cref="T:System.ServiceModel.TransferMode" /> that indicates whether messages are sent buffered or streamed.</returns>
    </member>
    <member name="P:System.ServiceModel.HttpBindingBase.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</summary>
      <returns>
        <see langword="true" /> if the auto-configured HTTP proxy of the system should be used, if available; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.HttpClientCredentialType">
      <summary>Enumerates the valid credential types for HTTP clients.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Basic">
      <summary>Specifies Basic authentication. For more information, see RFC 2617 - HTTP Authentication: Basic and Digest Authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Certificate">
      <summary>Specifies client authentication using a certificate.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Digest">
      <summary>Specifies Digest authentication. For more information, see RFC 2617 - HTTP Authentication: Basic and Digest Authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.InheritedFromHost">
      <summary>The authentication is inherited from the host.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.None">
      <summary>Specifies anonymous authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Ntlm">
      <summary>Specifies client authentication using NTLM.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Windows">
      <summary>Specifies client authentication using Windows.</summary>
    </member>
    <member name="T:System.ServiceModel.HttpProxyCredentialType">
      <summary>Enumerates the valid credential types for HTTP proxy authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.Basic">
      <summary>Specifies basic authentication. For more information, see RFC 2617 - HTTP Authentication: Basic and Digest Authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.Digest">
      <summary>Specifies digest authentication. For more information, see RFC 2617 - HTTP Authentication: Basic and Digest Authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.None">
      <summary>Specifies anonymous authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.Ntlm">
      <summary>Specifies NTLM authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.Windows">
      <summary>Specifies Windows authentication.</summary>
    </member>
    <member name="T:System.ServiceModel.HttpTransportSecurity">
      <summary>Represents the transport-level security settings for the <see cref="T:System.ServiceModel.WSHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.HttpTransportSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.HttpTransportSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType">
      <summary>Gets or sets the type of client credential to be used for authentication.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Setting the property to an undefined value.</exception>
      <returns>One of the enumeration values that indicates the type of client credential to be used for authentication.</returns>
    </member>
    <member name="P:System.ServiceModel.HttpTransportSecurity.ExtendedProtectionPolicy">
      <summary>Gets or sets the extended protection policy.</summary>
      <returns>The extended protection policy.</returns>
    </member>
    <member name="P:System.ServiceModel.HttpTransportSecurity.ProxyCredentialType">
      <summary>Gets or sets the type of client credential to be used for authentication against the proxy.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Setting the property to an undefined value.</exception>
      <returns>One of the enumeration values that indicates the type of client credential to be used for authentication against the proxy.</returns>
    </member>
    <member name="T:System.ServiceModel.IClientChannel">
      <summary>Defines the behavior of outbound request and request/reply channels used by client applications.</summary>
    </member>
    <member name="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
      <summary>This is a reserved event.</summary>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>An asynchronous call to begin using a user interface to obtain credential information.</summary>
      <param name="callback">The method that is called when this method completes.</param>
      <param name="state">Information about the state of the channel.</param>
      <returns>The <see cref="T:System.IAsyncResult" /> to use to call back when processing has completed.</returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
      <summary>A call to a user interface to obtain credential information.</summary>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Called when the call to <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> has finished.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
      <summary>Gets or sets a value indicating whether <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> attempts to call the <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> objects in the <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> property or throws if that collection is not empty.</summary>
      <returns>
        <see langword="true" /> if Windows Communication Foundation (WCF) is permitted to invoke interactive channel initializers; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
      <summary>Gets a value indicating whether a call was done to a user interface to obtain credential information.</summary>
      <returns>
        <see langword="true" /> if the <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> method was called (or the <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> and <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" /> methods; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.Via">
      <summary>Gets the URI that contains the transport address to which messages are sent on the client channel.</summary>
      <returns>The <see cref="T:System.Uri" /> that contains the transport address to which messages are sent on the channel.</returns>
    </member>
    <member name="T:System.ServiceModel.ICommunicationObject">
      <summary>Defines the contract for the basic state machine for all communication-oriented objects in the system, including channels, the channel managers, factories, listeners, and dispatchers, and service hosts.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closed">
      <summary>Occurs when the communication object completes its transition from the closing state into the closed state.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closing">
      <summary>Occurs when the communication object first enters the closing state.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Faulted">
      <summary>Occurs when the communication object first enters the faulted state.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opened">
      <summary>Occurs when the communication object completes its transition from the opening state into the opened state.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opening">
      <summary>Occurs when the communication object first enters the opening state.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Abort">
      <summary>Causes a communication object to transition immediately from its current state into the closed state.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close a communication object.</summary>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The default timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</exception>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</returns>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close a communication object with a specified timeout.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</exception>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</returns>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open a communication object.</summary>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous open operation.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The default open timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</returns>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open a communication object within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous open operation.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</returns>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close">
      <summary>Causes a communication object to transition from its current state into the closed state.</summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The default close timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
      <summary>Causes a communication object to transition from its current state into the closed state.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to close a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> method.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to open a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" /> method.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open">
      <summary>Causes a communication object to transition from the created state into the opened state.</summary>
      <exception cref="T:System.ServiceModel.CommunicationException">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The default open timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
      <summary>Causes a communication object to transition from the created state into the opened state within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="P:System.ServiceModel.ICommunicationObject.State">
      <summary>Gets the current state of the communication-oriented object.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.CommunicationState" /> of the object.</returns>
    </member>
    <member name="T:System.ServiceModel.IContextChannel">
      <summary>Defines the interface for the context control of a channel.</summary>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
      <summary>Gets or sets a value that instructs Windows Communication Foundation (WCF) to store a set of messages before giving the messages to the transport.</summary>
      <returns>
        <see langword="true" /> if the batching of outgoing messages is allowed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.InputSession">
      <summary>Gets the input session for the channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IInputSession" /> for the channel.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.LocalAddress">
      <summary>Gets the local endpoint for the channel.</summary>
      <returns>The local <see cref="T:System.ServiceModel.EndpointAddress" /> for the channel.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OperationTimeout">
      <summary>Gets or sets the time period within which an operation must complete or an exception is thrown.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the time period within which an operation must complete.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OutputSession">
      <summary>Gets the output session associated with the channel, if any.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.IOutputSession" /> implementation if an input session exists; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.RemoteAddress">
      <summary>Gets the remote address associated with the channel.</summary>
      <returns>The remote <see cref="T:System.ServiceModel.EndpointAddress" /> for the channel.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.SessionId">
      <summary>Returns an identifier for the current session, if any.</summary>
      <returns>The current session identifier, if any.</returns>
    </member>
    <member name="T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <summary>Defines the interface for specifying communication timeouts used by channels, channel managers such as channel listeners and channel factories, and service hosts.</summary>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
      <summary>Gets the interval of time after which the close method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the close method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
      <summary>Gets the interval of time after which the open method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the open method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
      <summary>Gets the interval of time after which the receive method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the receive method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
      <summary>Gets the interval of time after which the send method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the send method to time out.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtensibleObject`1">
      <summary>Enable an object to participate in custom behavior, such as registering for events, or watching state transitions.</summary>
      <typeparam name="T">The type of the extension class.</typeparam>
    </member>
    <member name="P:System.ServiceModel.IExtensibleObject`1.Extensions">
      <summary>Gets a collection of extension objects for this extensible object.</summary>
      <returns>A <see cref="T:System.ServiceModel.IExtensionCollection`1" /> of extension objects.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtension`1">
      <summary>Enables an object to extend another object through aggregation.</summary>
      <typeparam name="T">The object that participates in the custom behavior.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Attach(`0)">
      <summary>Enables an extension object to find out when it has been aggregated. Called when the extension is added to the <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> property.</summary>
      <param name="owner">The extensible object that aggregates this extension.</param>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Detach(`0)">
      <summary>Enables an object to find out when it is no longer aggregated. Called when an extension is removed from the <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> property.</summary>
      <param name="owner">The extensible object that aggregates this extension.</param>
    </member>
    <member name="T:System.ServiceModel.IExtensionCollection`1">
      <summary>A collection of the <see cref="T:System.ServiceModel.IExtension`1" /> objects that allow for retrieving the <see cref="T:System.ServiceModel.IExtension`1" /> by its type.</summary>
      <typeparam name="T">The type of the extension objects.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.Find``1">
      <summary>Finds the specified extension object in the collection.</summary>
      <typeparam name="E">The type of extension object.</typeparam>
      <returns>The extension object that was found.</returns>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.FindAll``1">
      <summary>Finds all extension object in the collection specified by <paramref name="E" />.</summary>
      <typeparam name="E">The type of extension object.</typeparam>
      <returns>A collection of all extension objects in the collection that implement the specified type.</returns>
    </member>
    <member name="T:System.ServiceModel.InstanceContext">
      <summary>Represents the context information for a service instance.</summary>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InstanceContext" /> class for a specified object that implements the service instance.</summary>
      <param name="implementation">The object that implements the service instance.</param>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.GetServiceInstance(System.ServiceModel.Channels.Message)">
      <summary>Returns the instance of the service for the instance context in response to an incoming message.</summary>
      <param name="message">The incoming message that triggered the creation of a service object.</param>
      <exception cref="T:System.InvalidOperationException">The service instance is in a created or opening state or is not initialized.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">The service instance is aborted.</exception>
      <exception cref="T:System.ObjectDisposedException">The service instance has been closed already and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance is faulted and cannot be modified in these states.</exception>
      <returns>The object that represents the service instance.</returns>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.Extensions">
      <summary>Gets the extension collection, if any, associated with the service instance.</summary>
      <exception cref="T:System.ObjectDisposedException">The service instance associated with this context is closed, but was not aborted.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance associated with this context is in a faulted state.</exception>
      <returns>The <see cref="T:System.ServiceModel.IExtensionCollection`1" /> of type <see cref="T:System.ServiceModel.InstanceContext" /> that contains the instance contexts for the extensions of the service instance.</returns>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.SynchronizationContext">
      <summary>Gets or sets the context used for thread synchronization with the current instance context.</summary>
      <exception cref="T:System.InvalidOperationException">The communication object is opened or closing and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">The communication object has been aborted and cannot be modified in these states.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object has been closed already and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is faulted and cannot be modified in these states.</exception>
      <returns>The <see cref="T:System.Threading.SynchronizationContext" /> used for thread synchronization with the current instance context.</returns>
    </member>
    <member name="T:System.ServiceModel.InvalidMessageContractException">
      <summary>Represents a message contract that is not valid.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InvalidMessageContractException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InvalidMessageContractException" /> class when deserializing from a stream into an object.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The stream from which to deserialize.</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InvalidMessageContractException" /> class that uses the specified message and inner exception.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InvalidMessageContractException" /> class using the specified message.</summary>
      <param name="message">The message for the exception.</param>
    </member>
    <member name="T:System.ServiceModel.MessageBodyMemberAttribute">
      <summary>Specifies that a member is serialized as an element inside the SOAP body.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageBodyMemberAttribute.Order">
      <summary>Gets or sets a value that indicates the position in which the member is serialized into the SOAP body.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value passed to the property setter is a negative integer.</exception>
      <returns>The location of the element in the SOAP body.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageContractAttribute">
      <summary>Defines a strongly-typed class that corresponds to a SOAP message.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageContractAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.IsWrapped">
      <summary>Gets or sets a value that specifies whether the message body has a wrapper element.</summary>
      <returns>
        <see langword="true" /> if the message body has a wrapper element; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperName">
      <summary>Gets or sets the name of the wrapper element of the message body.</summary>
      <exception cref="T:System.ArgumentNullException">The value is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is an empty string.</exception>
      <returns>The name of the wrapper element in the message body.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace">
      <summary>Gets or sets the namespace of the message body wrapper element.</summary>
      <returns>The wrapper element namespace.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageContractMemberAttribute">
      <summary>Declares the base members for <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> and <see cref="T:System.ServiceModel.MessageHeaderAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageContractMemberAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Name">
      <summary>Specifies the name of the element that corresponds to this member.</summary>
      <returns>The name of the element that corresponds to this member. This string must be a valid XML element name.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
      <summary>Specifies the namespace of the element that corresponds to this member.</summary>
      <returns>A namespace URI of the element that corresponds to this member.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageCredentialType">
      <summary>Enumerates the valid message credential types.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.Certificate">
      <summary>Specifies client authentication using a certificate.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.IssuedToken">
      <summary>Specifies client authentication using an issued token.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.None">
      <summary>Specifies anonymous authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.UserName">
      <summary>Specifies client authentication using UserName.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.Windows">
      <summary>Specifies client authentication using Windows.</summary>
    </member>
    <member name="T:System.ServiceModel.MessageHeader`1">
      <summary>Represents the content of a SOAP header.</summary>
      <typeparam name="T">The message header type.</typeparam>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeader`1" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0,System.Boolean,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeader`1" /> class with the specified header content and metadata.</summary>
      <param name="content">The content of the new header.</param>
      <param name="mustUnderstand">A value that indicates whether the header must be understood.</param>
      <param name="actor">The targeted recipient of the message header.</param>
      <param name="relay">A value that indicates whether the header should be relayed.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeader`1" /> class with the specified header content.</summary>
      <param name="content">The content of the new header.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.GetUntypedHeader(System.String,System.String)">
      <summary>Gets the message header with the specified namespace and local name.</summary>
      <param name="name">The local name of the header XML element.</param>
      <param name="ns">The namespace URI of the header XML element.</param>
      <returns>A message header with the specified namespace and local name.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Actor">
      <summary>Gets or sets the targeted recipient of the message header.</summary>
      <returns>The targeted recipient of the message header. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Content">
      <summary>Gets or sets the content of the header.</summary>
      <returns>The content of the header.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.MustUnderstand">
      <summary>Gets or sets a value that indicates whether the header must be understood, as stated in the SOAP 1.1/1.2 specification.</summary>
      <returns>
        <see langword="true" /> if the header must be understood; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Relay">
      <summary>Gets a value that indicates whether the header should be relayed.</summary>
      <returns>
        <see langword="true" /> if the header should be relayed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderArrayAttribute">
      <summary>Specifies that the default wrapper element in the SOAP message must not be written around array types in a header element.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderArrayAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderArrayAttribute" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderAttribute">
      <summary>Specifies that a data member is a SOAP message header.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderAttribute.MustUnderstand">
      <summary>Specifies whether the node acting in the <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" /> role must understand this header. This is mapped to the <see langword="mustUnderstand" /> SOAP header attribute.</summary>
      <returns>
        <see langword="true" /> if the node acting in the <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" /> role must understand this header; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderException">
      <summary>The exception that is thrown when the expectations regarding headers of a SOAP message are not satisfied when the message is processed.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class used to deserialize data into a <see cref="T:System.ServiceModel.MessageHeaderException" /> object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class using the specified message and a value that indicates whether the message header is a duplicate or is missing.</summary>
      <param name="message">The exception message.</param>
      <param name="isDuplicate">
        <see langword="true" /> if the multiple message header is a duplicate; <see langword="false" /> if there are no message headers.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class using the specified message and the inner exception that caused the exception.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that contains the inner exception that caused the exception.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class using the specified message, header name and namespace, a value that indicates whether the message header is a duplicate or is missing, and the inner exception that caused the exception.</summary>
      <param name="message">The exception message.</param>
      <param name="headerName">The name of the message header.</param>
      <param name="ns">The namespace of the message header.</param>
      <param name="isDuplicate">
        <see langword="true" /> if the multiple message header is a duplicate; <see langword="false" /> if there are no message headers.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that contains the inner exception that caused the exception.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class using the specified message, header name and namespace, and a value that indicates whether the message header is a duplicate or is missing.</summary>
      <param name="message">The exception message.</param>
      <param name="headerName">The name of the message header.</param>
      <param name="ns">The namespace of the message header.</param>
      <param name="isDuplicate">
        <see langword="true" /> if the multiple message header is a duplicate; <see langword="false" /> if there are no message headers.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class using the specified message, header name and namespace, and the inner exception that caused the exception.</summary>
      <param name="message">The exception message.</param>
      <param name="headerName">The name of the message header.</param>
      <param name="ns">The namespace of the message header.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that contains the inner exception that caused the exception.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class using the specified message, header name and namespace.</summary>
      <param name="message">The exception message.</param>
      <param name="headerName">The name of the message header.</param>
      <param name="ns">The namespace of the message header.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class with the specified message.</summary>
      <param name="message">The message carried in the exception.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderName">
      <summary>Gets the name of the SOAP header that caused the exception.</summary>
      <returns>The name of the SOAP header.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
      <summary>Gets the namespace of the SOAP header that caused the exception.</summary>
      <returns>The namespace of the SOAP header.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
      <summary>Gets a value that indicates whether there are multiple message headers or no message headers.</summary>
      <returns>
        <see langword="true" /> if the multiple message header is a duplicate; <see langword="false" /> if there are no message headers.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageParameterAttribute">
      <summary>Controls the name of the request and response parameter names. Cannot be used with <see cref="T:System.ServiceModel.Channels.Message" /> or message contracts.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageParameterAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageParameterAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageParameterAttribute.Name">
      <summary>Obtains or sets the name attribute of the parameter in the XML Schema (XSD).</summary>
      <returns>The name attribute of the parameter in the XSD.</returns>
    </member>
    <member name="T:System.ServiceModel.MessagePropertyAttribute">
      <summary>Represents data that is passed locally with a custom message type but not serialized into a SOAP message.</summary>
    </member>
    <member name="M:System.ServiceModel.MessagePropertyAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessagePropertyAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.MessagePropertyAttribute.Name">
      <summary>Gets or sets the name of the property.</summary>
      <returns>The name of the <see cref="T:System.ServiceModel.MessagePropertyAttribute" /> attribute.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageSecurityOverHttp">
      <summary>Enables setting message-level security properties on the wsDualHttpBinding binding.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageSecurityOverHttp.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageSecurityOverHttp" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled">
      <summary>Only used in extensibility scenarios to indicate whether an instance of a class derived from <see cref="T:System.ServiceModel.MessageSecurityOverHttp" /> is configured to perform secure conversation as described in WS-SecurityConversation.</summary>
      <returns>Always returns <see langword="true" />, unless overridden in a derived class.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite">
      <summary>Specifies the algorithm suite used for security messages at the SOAP level.</summary>
      <exception cref="T:System.ArgumentNullException">The value of <see cref="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />. The default is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType">
      <summary>Specifies the type of client credential used for client authentication in the wsHttpBinding or wsDualHttpBinding bindings.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of <see cref="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" /> is not a valid <see cref="T:System.ServiceModel.MessageCredentialType" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.MessageCredentialType" />. The default is <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential">
      <summary>Gets or sets a value that indicates whether the service credential is provisioned at the client out of band or is obtained from the service through a process of negotiation.</summary>
      <returns>
        <see langword="true" /> if service credential is obtained through a process of negotiation; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageSecurityOverTcp">
      <summary>Configures the message-level security for a message sent using the TCP transport.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageSecurityOverTcp.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageSecurityOverTcp" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverTcp.AlgorithmSuite">
      <summary>Specifies the algorithm suite to be used for securing messages at the SOAP level.</summary>
      <exception cref="T:System.ArgumentNullException">The value of <see cref="P:System.ServiceModel.MessageSecurityOverTcp.AlgorithmSuite" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />. The default is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverTcp.ClientCredentialType">
      <summary>Specifies the type of client credential the client uses to authenticate itself to the service at the SOAP level.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of <see cref="P:System.ServiceModel.MessageSecurityOverTcp.ClientCredentialType" /> is not a valid <see cref="T:System.ServiceModel.MessageCredentialType" />.</exception>
      <returns>A <see cref="T:System.ServiceModel.MessageCredentialType" />. The default is <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageSecurityVersion">
      <summary>An abstract container class that, when implemented by several of its static properties, contains version information for security components.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.BasicSecurityProfileVersion">
      <summary>Gets the version information for the Basic Security Profile.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.BasicSecurityProfileVersion" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.Default">
      <summary>Gets the version information for default message security.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" /> object that represents the default message security.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.SecureConversationVersion">
      <summary>Gets the WS-SecureConversation version that corresponds to the message security version.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecureConversationVersion" /> object that corresponds to the message security version.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.SecurityPolicyVersion">
      <summary>Gets the WS-SecurityPolicy version that corresponds to the message security version.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityPolicyVersion" /> object that corresponds to the message security version.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.SecurityTokenVersion">
      <summary>Gets the security token version that corresponds to the message security version.</summary>
      <returns>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenVersion" /> object that corresponds to the message security version.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.SecurityVersion">
      <summary>Gets the WS-Security version that corresponds to the message security version.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityVersion" /> object that corresponds to the message security version.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.TrustVersion">
      <summary>Gets the WS-Trust version that corresponds to the message security version.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.TrustVersion" /> object that corresponds to the message security version.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity10WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10">
      <summary>Gets the message security version that requires the Basic Security Profile 1.0 based on WS-Security 1.0, WS-Trust 1.3, WS-SecureConversation 1.3 and WS-SecurityPolicy 1.2 security specifications.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" /> object that requires the Basic Security Profile 1.0 based on WS-Security 1.0, WS-Trust 1.3, WS-SecureConversation 1.3 and WS-SecurityPolicy 1.2 security specifications.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity10WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10">
      <summary>Gets the message security version that requires the Basic Security Profile 1.0 based on WS-Security 1.0, WS-Trust of February 2005, WS-SecureConversation of February 2005 and WS-SecurityPolicy 1.1 security specifications.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" /> object that requires the Basic Security Profile 1.0 based on WS-Security 1.0, WS-Trust of February 2005, WS-SecureConversation of February 2005 and WS-SecurityPolicy 1.1 security specifications.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12">
      <summary>Gets the message security version that requires the WS-Security 1.1, WS-Trust 1.3, WS-SecureConversation 1.3 and WS-SecurityPolicy 1.2 security specifications.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" /> object that requires the WS-Security 1.1, WS-Trust 1.3, WS-SecureConversation 1.3 and WS-SecurityPolicy 1.2 security specifications.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10">
      <summary>Gets the message security version that requires the WS-Security1.1, WS-Trust 1.3, WS-SecureConversation 1.3, WS-SecurityPolicy 1.2, and BasicSecurityProfile 1.0 security specifications.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" /> object that requires the WS-Security1.1, WS-Trust 1.3, WS-SecureConversation 1.3, WS-SecurityPolicy 1.2, and BasicSecurityProfile 1.0 security specifications.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11">
      <summary>Gets the message security version that requires the WS-Security 1.1, WS-Trust of February 2005, WS-SecureConversation of February 2005 and WS-SecurityPolicy 1.1 security specifications.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" /> object that requires the WS-Security 1.1, WS-Trust of February 2005, WS-SecureConversation of February 2005 and WS-SecurityPolicy 1.1 security specifications.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10">
      <summary>Gets the message security version that requires the Basic Security Profile based on WS-Security 1.1, WS-Trust of February 2005, WS-SecureConversation of February 2005 and WS-SecurityPolicy 1.1 security specifications.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" /> object that requires the Basic Security Profile based on WS-Security 1.1, WS-Trust of February 2005, WS-SecureConversation of February 2005 and WS-SecurityPolicy 1.1 security specifications.</returns>
    </member>
    <member name="T:System.ServiceModel.NamedPipeTransportSecurity">
      <summary>Provides properties that control protection level for a named pipe.</summary>
    </member>
    <member name="M:System.ServiceModel.NamedPipeTransportSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NamedPipeTransportSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.NamedPipeTransportSecurity.ProtectionLevel">
      <summary>Specifies the protection for the named pipe.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid <see cref="T:System.Net.Security.ProtectionLevel" />.</exception>
      <returns>A <see cref="T:System.Net.Security.ProtectionLevel" />. The default is <see cref="F:System.Net.Security.ProtectionLevel.EncryptAndSign" />.</returns>
    </member>
    <member name="T:System.ServiceModel.NetHttpBinding">
      <summary>Specifies settings for <see cref="T:System.ServiceModel.NetHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.NetHttpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetHttpBinding" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.NetHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetHttpBinding" /> class with the specified security mode.</summary>
      <param name="securityMode">The mode of the security.</param>
      <param name="reliableSessionEnabled">
        <see langword="true" /> to indicate that the reliable session was enabled; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.ServiceModel.NetHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetHttpBinding" /> class with the specified security mode.</summary>
      <param name="securityMode">The mode of the security.</param>
    </member>
    <member name="M:System.ServiceModel.NetHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.</summary>
      <param name="parameters">The collection of parameters that specifies requirements for the channel factory built.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
      <returns>The channel factory that satisfies the features specified by the collection.</returns>
    </member>
    <member name="M:System.ServiceModel.NetHttpBinding.CreateBindingElements">
      <summary>Creates a collection that contains the binding elements for the binding.</summary>
      <returns>A collection of the binding elements that makes up the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetHttpBinding.MessageEncoding">
      <summary>Gets or sets the type of the message encoding that is used to encode the message.</summary>
      <returns>The type of the message encoding that is used to encode the message.</returns>
    </member>
    <member name="P:System.ServiceModel.NetHttpBinding.ReliableSession">
      <summary>Gets or sets an object that indicates whether a reliable session is established between channel endpoints.</summary>
      <returns>An object that indicates whether a reliable session is established between channel endpoints.</returns>
    </member>
    <member name="P:System.ServiceModel.NetHttpBinding.Security">
      <summary>Gets or sets the security used with services configured with the binding.</summary>
      <returns>The security used with services configured with the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetHttpBinding.WebSocketSettings">
      <summary>Gets the settings of the websocket.</summary>
      <returns>The settings of the websocket.</returns>
    </member>
    <member name="T:System.ServiceModel.NetHttpMessageEncoding">
      <summary>Specifies the Net Http message encoding.</summary>
    </member>
    <member name="F:System.ServiceModel.NetHttpMessageEncoding.Binary">
      <summary>The Binary message encoding.</summary>
    </member>
    <member name="F:System.ServiceModel.NetHttpMessageEncoding.Mtom">
      <summary>The Mtom message encoding.</summary>
    </member>
    <member name="F:System.ServiceModel.NetHttpMessageEncoding.Text">
      <summary>The Text message encoding.</summary>
    </member>
    <member name="T:System.ServiceModel.NetHttpsBinding">
      <summary>Specifies settings for NetHttpsBinding.</summary>
    </member>
    <member name="M:System.ServiceModel.NetHttpsBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetHttpsBinding" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.NetHttpsBinding.#ctor(System.ServiceModel.BasicHttpsSecurityMode,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetHttpsBinding" /> class with the type of security used and with the value that indicates whether reliable sessions are explicitly enabled.</summary>
      <param name="securityMode">The type of security used with the binding.</param>
      <param name="reliableSessionEnabled">
        <see langword="true" /> if reliable sessions are enabled; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.ServiceModel.NetHttpsBinding.#ctor(System.ServiceModel.BasicHttpsSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetHttpsBinding" /> class with the type of security used.</summary>
      <param name="securityMode">The type of security used with the binding.</param>
    </member>
    <member name="M:System.ServiceModel.NetHttpsBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.</summary>
      <param name="parameters">Specifies the requirements for the channel factory built.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type TChannel that satisfies the features specified by the collection.</returns>
    </member>
    <member name="M:System.ServiceModel.NetHttpsBinding.CreateBindingElements">
      <summary>Creates a collection with the binding elements for the binding.</summary>
      <returns>A collection with the binding elements for the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetHttpsBinding.MessageEncoding">
      <summary>Gets or sets the message encoding associated with the binding.</summary>
      <returns>The message encoding associated with the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetHttpsBinding.ReliableSession">
      <summary>Gets or sets the reliable session that is established between channel endpoints.</summary>
      <returns>The reliable session that is established between channel endpoints.</returns>
    </member>
    <member name="P:System.ServiceModel.NetHttpsBinding.Security">
      <summary>Gets or sets the type of security used with services configured with this binding.</summary>
      <returns>The type of security used with services configured with this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetHttpsBinding.WebSocketSettings">
      <summary>Gets the web socket settings.</summary>
      <returns>The web socket settings.</returns>
    </member>
    <member name="T:System.ServiceModel.NetNamedPipeBinding">
      <summary>Provides a secure and reliable binding that is optimized for on-machine communication.</summary>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.#ctor(System.ServiceModel.NetNamedPipeSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> class with a specified security mode.</summary>
      <param name="securityMode">The <see cref="T:System.ServiceModel.NetNamedPipeSecurityMode" /> value that specifies whether Windows security is used with named pipes.</param>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.CreateBindingElements">
      <summary>Creates a collection with the binding elements for the binding.</summary>
      <returns>The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that makes up the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages processed by this binding.</summary>
      <returns>
        <see cref="P:System.ServiceModel.EnvelopeVersion.Soap12" />.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferPoolSize">
      <summary>Gets or sets the maximum number of bytes that are used to buffer incoming messages in memory.</summary>
      <returns>The maximum number of bytes that are used to buffer incoming messages in memory. The default value is 524,288 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferSize">
      <summary>Gets or sets the maximum number of bytes used to buffer incoming messages in memory.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than 0.</exception>
      <returns>The maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections">
      <summary>Gets or sets the maximum number of connections, both inbound and outbound, that are allowed to endpoints configured with the named pipe binding.</summary>
      <returns>The maximum number of named pipe connections that are allowed with this binding. The default value is 10.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size, in bytes, for a received message that is processed by the binding.</summary>
      <returns>The maximum size (in bytes) for a received message that is processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <exception cref="T:System.ArgumentNullException">The value set is <see langword="null" />.</exception>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on SOAP messages exchanged. The default values for these constraints are provided in the following Remarks section.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.Scheme">
      <summary>Gets the URI transport scheme for the channels and listeners that are configured with this binding.</summary>
      <returns>Returns "net.pipe".</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.Security">
      <summary>Gets an object that specifies the type of security used with services configured with this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.NetNamedPipeSecurity" /> that is used with this binding. The default value is <see cref="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport" />.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.TransferMode">
      <summary>Gets or sets a value that indicates whether the service configured with the binding uses streamed (in one or both directions) or buffered modes of message transfer.</summary>
      <returns>The <see cref="T:System.ServiceModel.TransferMode" /> value that indicates whether the service configured with the binding uses streamed (in one or both directions) or buffered modes of message transfer. The default is <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</returns>
    </member>
    <member name="T:System.ServiceModel.NetNamedPipeSecurity">
      <summary>Provides access to the security settings for endpoints configured with the named pipe binding.</summary>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetNamedPipeSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeSecurity.Mode">
      <summary>Gets or sets the security mode for the named pipe binding.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.NetNamedPipeSecurityMode" /> for the named pipe binding. The default value is <see cref="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport" />.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeSecurity.Transport">
      <summary>Gets the transport security for the named pipe binding.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.NamedPipeTransportSecurity" /> for the named pipe binding.</returns>
    </member>
    <member name="T:System.ServiceModel.NetNamedPipeSecurityMode">
      <summary>Specifies whether transport-level security is used with named pipes.</summary>
    </member>
    <member name="F:System.ServiceModel.NetNamedPipeSecurityMode.None">
      <summary>Indicates no security is used with the named pipe transport.</summary>
    </member>
    <member name="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport">
      <summary>Indicates that transport-level security is used with the named pipe transport.</summary>
    </member>
    <member name="T:System.ServiceModel.NetTcpBinding">
      <summary>A secure, reliable binding suitable for cross-machine communication.</summary>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpBinding" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpBinding" /> class with the type of security used specified and with a value that indicates whether reliable sessions are explicitly enabled.</summary>
      <param name="securityMode">The <see cref="T:System.ServiceModel.SecurityMode" /> value that specifies the type of security used with the binding.</param>
      <param name="reliableSessionEnabled">
        <see langword="true" /> if reliable sessions are enabled; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpBinding" /> class with the type of security used specified.</summary>
      <param name="securityMode">The <see cref="T:System.ServiceModel.SecurityMode" /> value that specifies the type of security used with the binding.</param>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.CreateBindingElements">
      <summary>Creates a collection with the binding elements for the binding.</summary>
      <returns>The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that makes up the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages processed by this binding.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding. The value is SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size, in bytes, allowed for a buffer pool that stores TCP messages processed by the binding.</summary>
      <returns>The maximum size allowed for a buffer pool that stores TCP messages processed by the binding. The default value is 524,288 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.MaxBufferSize">
      <summary>Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.</summary>
      <returns>The maximum size, in bytes, of the buffer used to store messages in memory. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.MaxConnections">
      <summary>Gets or sets a value that controls the maximum number of connections to be pooled for subsequent reuse on the client and the maximum number of connections allowed to be pending dispatch on the server.</summary>
      <returns>On the client, the maximum number of connections to be pooled for subsequent reuse; on the server, the maximum number of connections allowed to be pending dispatch.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size, in bytes, for a received message that is processed by the binding.</summary>
      <returns>The maximum size (in bytes) for a received message that is processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on soap messages exchanged. The default values for these constraints are provided in the following Remarks section.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.ReliableSession">
      <summary>Gets an object that indicates whether a reliable session is established between channel endpoints.</summary>
      <returns>An <see cref="T:System.ServiceModel.OptionalReliableSession" /> that indicates whether a WS-RM reliable session is established between channel endpoints. The default value for <see cref="P:System.ServiceModel.OptionalReliableSession.Enabled" /> is <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.Scheme">
      <summary>Returns the URI scheme for the transport.</summary>
      <returns>The URI scheme for the transport, which is "net.tcp".</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.Security">
      <summary>Gets an object that specifies the type of security used with services configured with this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.NetTcpSecurity" /> that contains the types of security used with this binding. The default mode of security for the <see langword="NetTCPBinding" /> is <see cref="F:System.ServiceModel.SecurityMode.Transport" />.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.TransferMode">
      <summary>Gets or sets a value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.</summary>
      <returns>The <see cref="T:System.ServiceModel.TransferMode" /> value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.</returns>
    </member>
    <member name="T:System.ServiceModel.NetTcpSecurity">
      <summary>Specifies the types of transport-level and message-level security used by an endpoint configured with a <see cref="T:System.ServiceModel.NetTcpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.NetTcpSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.NetTcpSecurity.Message">
      <summary>Gets the type of message-level security requirements for a service configured with a <see cref="T:System.ServiceModel.NetTcpBinding" />.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityOverTcp" /> that indicates the type of message-level security requirements for an endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpSecurity.Mode">
      <summary>Gets or sets whether message-level security and transport-level security are used by an endpoint configured with a <see cref="T:System.ServiceModel.NetTcpBinding" />.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not defined.</exception>
      <returns>A value of the <see cref="T:System.ServiceModel.SecurityMode" /> that indicates whether message-level security or transport-level security is used by an endpoint. The default value is <see cref="F:System.ServiceModel.SecurityMode.Transport" />.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpSecurity.Transport">
      <summary>Gets the type of message-level security requirements for an endpoint configured with a <see cref="T:System.ServiceModel.NetTcpBinding" />.</summary>
      <returns>The <see cref="T:System.ServiceModel.TcpTransportSecurity" /> that indicates the type of transport-level security requirements for an endpoint.</returns>
    </member>
    <member name="T:System.ServiceModel.NonDualMessageSecurityOverHttp">
      <summary>Represents the security settings of the wsHttpBinding binding.</summary>
    </member>
    <member name="M:System.ServiceModel.NonDualMessageSecurityOverHttp.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NonDualMessageSecurityOverHttp" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext">
      <summary>Gets or sets a value that indicates whether a security context token is established.</summary>
      <returns>
        <see langword="true" /> if a security context token is established; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContext">
      <summary>Provides access to the execution context of a service method.</summary>
    </member>
    <member name="E:System.ServiceModel.OperationContext.OperationCompleted">
      <summary>Occurs when the operation has completed.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContext" /> class that uses the specified <see cref="T:System.ServiceModel.IContextChannel" /> in a client application.</summary>
      <param name="channel">The <see cref="T:System.ServiceModel.IContextChannel" /> used to create a new client <see cref="T:System.ServiceModel.OperationContext" />.</param>
      <exception cref="T:System.ArgumentNullException">The channel is null.</exception>
    </member>
    <member name="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
      <summary>Gets a channel to the client instance that called the current operation.</summary>
      <typeparam name="T">The type of channel used to call back to the client.</typeparam>
      <returns>A channel to the client instance that called the operation of the type specified in the <see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /> property.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Channel">
      <summary>Gets the channel associated with the current <see cref="T:System.ServiceModel.OperationContext" /> object.</summary>
      <returns>An <see cref="T:System.ServiceModel.IContextChannel" /> associated with the current <see cref="T:System.ServiceModel.OperationContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Current">
      <summary>Gets or sets the execution context for the current thread.</summary>
      <returns>The <see cref="T:System.ServiceModel.OperationContext" /> that represents the messaging and execution context of the current method.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Extensions">
      <summary>Gets the collection of service extensions from the current message context.</summary>
      <returns>A collection of extensions of <see cref="T:System.ServiceModel.OperationContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
      <summary>Gets the incoming message headers for the <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> object that contains the incoming message headers.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
      <summary>Gets the message properties for the incoming message in the <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> object that contains the message properties on the incoming message.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
      <summary>Gets the incoming SOAP message version for the <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>The SOAP version of the incoming message.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IsUserContext">
      <summary>This property is intended for system use and should not be called by users.</summary>
      <returns>
        <see langword="true" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
      <summary>Gets the outgoing message headers for the active <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> object that contains outbound message headers for the active <see cref="T:System.ServiceModel.OperationContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
      <summary>Gets the message properties for the outbound message in the active <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> object that contains the message properties on the outbound message.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.RequestContext">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Channels.RequestContext" /> implementation for this method.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.RequestContext" /> implementation, or null if there is no request context.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContextScope">
      <summary>Creates a block within which an <see cref="T:System.ServiceModel.OperationContext" /> object is in scope.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContextScope" /> class that uses the specified <see cref="T:System.ServiceModel.IContextChannel" /> to create a new <see cref="T:System.ServiceModel.OperationContext" /> for the scope.</summary>
      <param name="channel">The channel to use when creating the scope for a new <see cref="T:System.ServiceModel.OperationContext" />.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContextScope" /> class to create a scope for the specified <see cref="T:System.ServiceModel.OperationContext" /> object.</summary>
      <param name="context">The active <see cref="T:System.ServiceModel.OperationContext" /> in the created scope.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.Dispose">
      <summary>Restores the original <see cref="T:System.ServiceModel.OperationContext" /> to the active context and recycles the <see cref="T:System.ServiceModel.OperationContextScope" /> object.</summary>
    </member>
    <member name="T:System.ServiceModel.OperationContractAttribute">
      <summary>Indicates that a method defines an operation that is part of a service contract in a Windows Communication Foundation (WCF) application.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContractAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContractAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Action">
      <summary>Gets or sets the WS-Addressing action of the request message.</summary>
      <exception cref="T:System.ArgumentNullException">The value is <see langword="null" />.</exception>
      <returns>The action to use in generating the WS-Addressing Action header.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
      <summary>Indicates that an operation is implemented asynchronously using a <see langword="Begin" />&lt;methodName&gt; and <see langword="End" />&lt;methodName&gt; method pair in a service contract.</summary>
      <returns>
        <see langword="true" /> if the <see langword="Begin" />&lt;methodName&gt;method is matched by an <see langword="End" />&lt;methodName&gt; method and can be treated by the infrastructure as an operation that is implemented as an asynchronous method pair on the service interface; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
      <summary>Gets or sets a value that indicates whether the method implements an operation that can initiate a session on the server (if such a session exists).</summary>
      <returns>
        <see langword="true" /> if the operation is permitted to initiate a session on the server, otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
      <summary>Gets or sets a value that indicates whether an operation returns a reply message.</summary>
      <returns>
        <see langword="true" /> if this method receives a request message and returns no reply message; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
      <summary>Gets or sets a value that indicates whether the service operation causes the server to close the session after the reply message, if any, is sent.</summary>
      <returns>
        <see langword="true" /> if the operation causes the server to close the session, otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Name">
      <summary>Gets or sets the name of the operation.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is an empty string.</exception>
      <returns>The name of the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
      <summary>Gets or sets the value of the SOAP action for the reply message of the operation.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> is <see langword="null" />.</exception>
      <returns>The value of the SOAP action for the reply message.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationFormatStyle">
      <summary>Represents the SOAP style that determines how the WSDL metadata for the service is formatted.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Document">
      <summary>Causes the WSDL representation to contain a single element that represents the document that is exchanged for the operation.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Rpc">
      <summary>Causes the WSDL representation of messages exchanged for an operation and contains parameters as if it were a remote procedure call.</summary>
    </member>
    <member name="T:System.ServiceModel.OperationFormatUse">
      <summary>Determines the format of the message.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatUse.Encoded">
      <summary>Implies that the schemas in the WSDL are abstract specifications that are encoded according to the rules found in SOAP 1.1 section 5.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatUse.Literal">
      <summary>Implies that the message is a literal instance of the schema in the WSDL.</summary>
    </member>
    <member name="T:System.ServiceModel.OptionalReliableSession">
      <summary>Provides convenient access to whether a reliable session is enabled when using one of the predefined bindings where it is optional.</summary>
    </member>
    <member name="M:System.ServiceModel.OptionalReliableSession.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.OptionalReliableSession" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.OptionalReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.OptionalReliableSession" /> class from a reliable session binding element.</summary>
      <param name="reliableSessionBindingElement">The <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> whose property value is used to initialize the reliable session.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="reliableSessionBindingElement" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.ServiceModel.OptionalReliableSession.Enabled">
      <summary>Gets or sets a value that indicates whether the reliable session is enabled.</summary>
      <returns>
        <see langword="true" /> if the reliable session is enabled; otherwise, <see langword="false" />. The default value depends on the binding being used.</returns>
    </member>
    <member name="T:System.ServiceModel.ProtocolException">
      <summary>The exception seen on the client that is thrown when communication with the remote party is impossible due to mismatched data transfer protocols.</summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ProtocolException" /> class with serialization information and streaming context specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ProtocolException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ProtocolException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:System.ServiceModel.QueuedDeliveryRequirementsMode">
      <summary>The <see cref="T:System.ServiceModel.QueuedDeliveryRequirementsMode" /> enumeration specifies queued delivery requirements.</summary>
    </member>
    <member name="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Allowed">
      <summary>Queued delivery is allowed.</summary>
    </member>
    <member name="F:System.ServiceModel.QueuedDeliveryRequirementsMode.NotAllowed">
      <summary>Queued delivery is not allowed.</summary>
    </member>
    <member name="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Required">
      <summary>Queued delivery is required.</summary>
    </member>
    <member name="T:System.ServiceModel.QuotaExceededException">
      <summary>The exception that is thrown when a message quota has been exceeded.</summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.QuotaExceededException" /> class with data that specifies the source and destination of the stream and the information required to serialize the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.QuotaExceededException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.QuotaExceededException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:System.ServiceModel.ReliableMessagingVersion">
      <summary>Contains the settings for the supported versions of the WS-ReliableMessaging protocol. This is an abstract class.</summary>
    </member>
    <member name="P:System.ServiceModel.ReliableMessagingVersion.Default">
      <summary>Returns the default version of WS-ReliableMessaging protocol.</summary>
      <returns>An instance derived from <see cref="T:System.ServiceModel.ReliableMessagingVersion" /> that represents the default version of the WS-ReliableMessaging protocol. The default version is WS-ReliableMessagingFebruary2005.</returns>
    </member>
    <member name="P:System.ServiceModel.ReliableMessagingVersion.WSReliableMessaging11">
      <summary>Gets version 1.1 of the WS-ReliableMessaging protocol.</summary>
      <returns>An instance derived from <see cref="T:System.ServiceModel.ReliableMessagingVersion" /> that represents the WS-ReliableMessaging1.1 version.</returns>
    </member>
    <member name="P:System.ServiceModel.ReliableMessagingVersion.WSReliableMessagingFebruary2005">
      <summary>Gets the February 2005 version of the WS-ReliableMessaging protocol.</summary>
      <returns>An instance derived from <see cref="T:System.ServiceModel.ReliableMessagingVersion" /> that represents the WS-ReliableMessagingFebruary2005 version.</returns>
    </member>
    <member name="T:System.ServiceModel.ReliableSession">
      <summary>Provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</summary>
    </member>
    <member name="M:System.ServiceModel.ReliableSession.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ReliableSession" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ReliableSession" /> class from a reliable session binding element.</summary>
      <param name="reliableSessionBindingElement">The <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> whose property values are used to initialize the reliable session.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="reliableSessionBindingElement" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.ServiceModel.ReliableSession.InactivityTimeout">
      <summary>Gets or sets an interval of time that a service can remain inactive before closing.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to zero.</exception>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time that a service remains inactive before closing. The default value is 10 minutes.</returns>
    </member>
    <member name="P:System.ServiceModel.ReliableSession.Ordered">
      <summary>Gets or sets a value that indicates whether message delivery must preserve the order in which messages are sent.</summary>
      <returns>
        <see langword="true" /> if messages must be delivered in the order in which they are sent; otherwise, <see langword="false" />. The default value is <see langword="true" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.BasicSecurityProfileVersion">
      <summary>Provides a message version that corresponds to the Basic Security Profile specification.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.BasicSecurityProfileVersion.BasicSecurityProfile10">
      <summary>Provides a message version that corresponds to the Basic Security Profile specification.</summary>
      <returns>A class that has a <c>ToString</c> method that returns the version in text form.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.HttpDigestClientCredential">
      <summary>Used for digest authentication of HTTP clients.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential">
      <summary>Gets or sets the network credential to be used for digest-based authentication.</summary>
      <returns>The <see cref="T:System.Net.NetworkCredential" /> to be used for digest-based authentication.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.IdentityVerifier">
      <summary>An <see langword="abstract" /> base class that can be implemented to verify an expected identity against an authorization context that represents a remote endpoint, or to create an identity from an endpoint address.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.IdentityVerifier.#ctor">
      <summary>Creates an instance of this class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)">
      <summary>Implements a method to verify an identity.</summary>
      <param name="identity">The <see cref="T:System.ServiceModel.EndpointIdentity" /> to verify.</param>
      <param name="authContext">The <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> to test the <paramref name="identity" /> against.</param>
      <returns>
        <see langword="true" /> if the identity is verified; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.IdentityVerifier.CreateDefault">
      <summary>Creates a default instance of this class.</summary>
      <returns>A default instance of <see cref="T:System.ServiceModel.Security.IdentityVerifier" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)">
      <summary>Tries to create an identity from an endpoint.</summary>
      <param name="reference">The <see cref="T:System.ServiceModel.EndpointAddress" /> to use for creating the identity.</param>
      <param name="identity">The <see cref="T:System.ServiceModel.EndpointIdentity" /> that is returned.</param>
      <returns>
        <see langword="true" /> if the identity is returned; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.ISecuritySession">
      <summary>Represents a kind of <see langword="ISession" /> that enforces the requirement that all messages exchanged on the session are between the same communicating parties that established the session.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.ISecuritySession.RemoteIdentity">
      <summary>Gets the identity of the remote principal.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointIdentity" /> of the remote principal.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.MessageSecurityException">
      <summary>Represents an exception that occurred when there is something wrong with the security applied on a message.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that contains the information required to serialize the new <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> instance.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream associated with the new <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> instance.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> class with an error string and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message.</param>
      <param name="innerException">The inner exception reference.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.MessageSecurityException" /> class with an error string.</summary>
      <param name="message">The error message.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecureConversationVersion">
      <summary>Contains the set of supported WS-SecureConversation versions. This is an abstract class.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.SecureConversationVersion.Default">
      <summary>Gets the default version.</summary>
      <returns>The default version.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecureConversationVersion.Namespace">
      <summary>Gets the namespace for this WS-SecureConversation version.</summary>
      <returns>The namespace for this WS-SecureConversation version.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecureConversationVersion.Prefix">
      <summary>Gets the prefix for the WS-SecureConversation version.</summary>
      <returns>The prefix for the WS-SecureConversation version.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecureConversationVersion.WSSecureConversation13">
      <summary>Gets the version 1.3 of WS-SecureConversation.</summary>
      <returns>The version 1.3 of WS-SecureConversation.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecureConversationVersion.WSSecureConversationFeb2005">
      <summary>Gets the February 2005 version of WS-SecureConversation.</summary>
      <returns>The February 2005 version of WS-SecureConversation.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityAccessDeniedException">
      <summary>Represents the security exception that is thrown when a security authorization request fails.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> class using the specified serialization information and context objects.</summary>
      <param name="info">Information relevant to the deserialization process.</param>
      <param name="context">The context of the deserialization process.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> class using the specified message and the inner exception.</summary>
      <param name="message">The description of the error condition.</param>
      <param name="innerException">The inner exception to be used.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" /> class using the specified message.</summary>
      <param name="message">The description of the error condition.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityAlgorithmSuite">
      <summary>Specifies properties of algorithms. This is an <see langword="abstract" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
      <summary>Indicates whether a particular key length is supported by the asymmetric algorithm.</summary>
      <param name="length">The key length to check.</param>
      <returns>
        <see langword="true" /> if the key length is supported by the asymmetric algorithm; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)">
      <summary>Indicates whether an asymmetric key wrap algorithm is supported.</summary>
      <param name="algorithm">The algorithm to check.</param>
      <returns>
        <see langword="true" /> if the asymmetric key wrap algorithm is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)">
      <summary>Indicates whether an asymmetric signature algorithm is supported.</summary>
      <param name="algorithm">The algorithm name to check.</param>
      <returns>
        <see langword="true" /> if the asymmetric signature algorithm is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)">
      <summary>Indicates whether a canonicalization algorithm is supported.</summary>
      <param name="algorithm">The algorithm name to check.</param>
      <returns>
        <see langword="true" /> if the canonicalization algorithm is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)">
      <summary>Indicates whether a digest algorithm is supported.</summary>
      <param name="algorithm">The algorithm name to check.</param>
      <returns>
        <see langword="true" /> if the digest algorithm is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)">
      <summary>Indicates whether an encryption algorithm is supported.</summary>
      <param name="algorithm">The algorithm name to check.</param>
      <returns>
        <see langword="true" /> if the encryption algorithm is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)">
      <summary>Indicates whether an encryption key derivation algorithm is supported.</summary>
      <param name="algorithm">The algorithm name to check.</param>
      <returns>
        <see langword="true" /> if the encryption key derivation algorithm is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)">
      <summary>Indicates whether a signature key derivation algorithm is supported.</summary>
      <param name="algorithm">The algorithm name to check.</param>
      <returns>
        <see langword="true" /> if the signature key derivation algorithm is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
      <summary>When overridden in a derived class, indicates whether a particular symmetric key length is supported.</summary>
      <param name="length">The key length to check.</param>
      <returns>
        <see langword="true" /> if the symmetric key length is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)">
      <summary>Indicates whether a symmetric key wrap algorithm is supported.</summary>
      <param name="algorithm">The algorithm name to check.</param>
      <returns>
        <see langword="true" /> if the symmetric key wrap algorithm is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)">
      <summary>Indicates whether a symmetric signature algorithm is supported.</summary>
      <param name="algorithm">The algorithm name to check.</param>
      <returns>
        <see langword="true" /> if the symmetric signature algorithm is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256">
      <summary>Gets an algorithm suite that uses 256-bit Basic as the message encryption algorithm.</summary>
      <returns>An algorithm suite that uses 256-bit Basic as the message encryption algorithm.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256">
      <summary>Gets an algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.</summary>
      <returns>An algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Default">
      <summary>Gets the default algorithm suite.</summary>
      <returns>The default <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm">
      <summary>Gets the default asymmetric key wrap algorithm as a string.</summary>
      <returns>The default asymmetric key wrap algorithm.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm">
      <summary>Gets the default asymmetric signature algorithm as a string.</summary>
      <returns>The default asymmetric signature algorithm.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm">
      <summary>Gets the default canonicalization algorithm as a string.</summary>
      <returns>The default canonicalization algorithm.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm">
      <summary>Gets the default digest algorithm as a string.</summary>
      <returns>The default digest algorithm.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm">
      <summary>Gets the default encryption algorithm as a string.</summary>
      <returns>The default encryption algorithm.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength">
      <summary>Gets the default encryption key derivation length as an <see cref="T:System.Int32" /> value.</summary>
      <returns>The default encryption key derivation length.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength">
      <summary>Gets the default signature key derivation length as an <see cref="T:System.Int32" /> value.</summary>
      <returns>The default signature key derivation length.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength">
      <summary>Gets the default symmetric key length as an <see cref="T:System.Int32" /> value.</summary>
      <returns>The default symmetric key length.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm">
      <summary>Gets the default symmetric key wrap algorithm as a string.</summary>
      <returns>The default symmetric key wrap algorithm.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm">
      <summary>Gets the default symmetric signature algorithm as a string.</summary>
      <returns>The default symmetric signature algorithm.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes">
      <summary>Gets the Triple Data Encryption Standard (DES) algorithm suite.</summary>
      <returns>The Triple DES <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityCredentialsManager">
      <summary>Specifies an <see langword="abstract" /> class that when implemented represents a security credentials manager.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityCredentialsManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityCredentialsManager" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityCredentialsManager.CreateSecurityTokenManager">
      <summary>When overridden in a derived class, creates a new <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" />.</summary>
      <returns>The newly created <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityKeyEntropyMode">
      <summary>Describes the source of entropy used for key generation.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityKeyEntropyMode.ClientEntropy">
      <summary>The client provides the key used for the issued token.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityKeyEntropyMode.CombinedEntropy">
      <summary>The client and server both provide entropy that is combined using the P-SHA1 function to derive the key of the issued token. Due to collision problems with SHA-1, Microsoft recommends a security model based on SHA-256 or better.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityKeyEntropyMode.ServerEntropy">
      <summary>The server provides the key for the issued token.</summary>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityMessageProperty">
      <summary>Contains security-related properties and is attached to a message.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityMessageProperty.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityMessageProperty" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityMessageProperty.CreateCopy">
      <summary>Clones the current instance of this class.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.IMessageProperty" /> cloned from the current instance of this class.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityMessageProperty.Dispose">
      <summary>Disposes of the current instance of this class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate(System.ServiceModel.Channels.Message)">
      <summary>Gets or creates an instance of this class from the specified message.</summary>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" />.</param>
      <returns>An instance of <see cref="T:System.ServiceModel.Security.SecurityMessageProperty" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies">
      <summary>Gets or sets a collection of external authorization policies.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens">
      <summary>Indicates whether the incoming message contains at least one supporting security token.</summary>
      <returns>
        <see langword="true" /> if <see cref="P:System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens" /> contains at least one entry; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens">
      <summary>Gets or sets a collection of incoming supporting tokens.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Security.SupportingTokenSpecification" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> initiator token for this message.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> initiator token for this message.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.OutgoingSupportingTokens">
      <summary>Gets a collection of outgoing <see cref="T:System.ServiceModel.Security.SupportingTokenSpecification" /> objects.</summary>
      <returns>A collection of outgoing supporting tokens.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> protection token for this message.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> protection token for this message.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.RecipientToken">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> recipient token for this message.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> recipient token for this message.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix">
      <summary>Gets or sets the sender ID prefix for this message.</summary>
      <exception cref="T:System.ArgumentNullException">The property value is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
          The length of the property value is 0.

-or-

The first character of the property value is not alphabetic and not equal to "_".

-or-
        
No character of the property value is alphabetic, numeric, or equal to "_", ".", or "-".</exception>
      <returns>The sender ID prefix for this message.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> for this message.</summary>
      <returns>The <see cref="T:System.ServiceModel.ServiceSecurityContext" /> object for this message.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityMessageProperty.TransportToken">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> transport token for this message.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> transport token for this message.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityNegotiationException">
      <summary>Indicates that an error occurred while negotiating the security context for a message.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityNegotiationException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityNegotiationException" /> class with serialization information and streaming context specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityNegotiationException" /> class with serialization information and inner exception specified.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityNegotiationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityNegotiationException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityPolicyVersion">
      <summary>Contains the set of supported WS-SecurityPolicy versions. This is an abstract class.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityPolicyVersion.Namespace">
      <summary>Gets the namespace for this WS-SecurityPolicy version.</summary>
      <returns>The namespace for this WS-SecurityPolicy version.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityPolicyVersion.Prefix">
      <summary>Gets the prefix.</summary>
      <returns>The prefix.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityPolicyVersion.WSSecurityPolicy11">
      <summary>Gets the version 1.1 of WS-SecurityPolicy.</summary>
      <returns>The version 1.1 of WS-SecurityPolicy.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityPolicyVersion.WSSecurityPolicy12">
      <summary>Gets the version 1.2 of WS-SecurityPolicy.</summary>
      <returns>The version 1.2 of WS-SecurityPolicy.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityTokenAttachmentMode">
      <summary>An enumeration that lists the ways in which security tokens are attached.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.Endorsing">
      <summary>The token is used to sign the message signature.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.Signed">
      <summary>The token is included in the message signature.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.SignedEncrypted">
      <summary>The token is included in the message signature and is encrypted.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.SecurityTokenAttachmentMode.SignedEndorsing">
      <summary>The token is included in and signs the message signature.</summary>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityTokenSpecification">
      <summary>Represents a security token and its authorization policies.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityTokenSpecification.#ctor(System.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityTokenSpecification" /> class using the specified token and token policies.</summary>
      <param name="token">The security token.</param>
      <param name="tokenPolicies">The collection of security token policies.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tokenPolicies" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityTokenSpecification.SecurityToken">
      <summary>Gets the security token.</summary>
      <returns>The security token.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityTokenSpecification.SecurityTokenPolicies">
      <summary>Gets the collection of security token policies.</summary>
      <returns>The collection of security token policies.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityVersion">
      <summary>Contains the set of supported WS-Security versions. This is an abstract class.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityVersion.WSSecurity10">
      <summary>Gets the version 1.0 of WS-Security.</summary>
      <returns>The version 1.0 of WS-Security.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.SecurityVersion.WSSecurity11">
      <summary>Gets the version 1.1 of WS-Security.</summary>
      <returns>The version 1.1 of WS-Security.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.SupportingTokenSpecification">
      <summary>Represents a supporting security token and its authorization policies.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SupportingTokenSpecification.#ctor(System.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityTokenAttachmentMode,System.ServiceModel.Security.Tokens.SecurityTokenParameters)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SupportingTokenSpecification" /> class.</summary>
      <param name="token">The security token.</param>
      <param name="tokenPolicies">The collection of security token policies.</param>
      <param name="attachmentMode">The security token attachment mode.</param>
      <param name="tokenParameters">The parameters to binding elements that control security tokens.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SupportingTokenSpecification.#ctor(System.IdentityModel.Tokens.SecurityToken,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityTokenAttachmentMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SupportingTokenSpecification" /> class.</summary>
      <param name="token">The security token.</param>
      <param name="tokenPolicies">The collection of security token policies.</param>
      <param name="attachmentMode">The security token attachment mode.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="attachmentMode" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.SupportingTokenSpecification.SecurityTokenAttachmentMode">
      <summary>Gets the security token attachment mode.</summary>
      <returns>The security token attachment mode.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken">
      <summary>Represents a binary secret security token.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken" /> class.</summary>
      <param name="key">A byte-array that represents the key.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.#ctor(System.String,System.Byte[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken" /> class.</summary>
      <param name="id">The token ID.</param>
      <param name="key">A byte-array that represents the key.</param>
      <param name="allowCrypto">A <see cref="T:System.Boolean" /> that indicates whether to allow cryptography.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.#ctor(System.String,System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken" /> class.</summary>
      <param name="id">The token ID.</param>
      <param name="key">A byte-array that represents the key.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.#ctor(System.String,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken" /> class.</summary>
      <param name="id">The token ID.</param>
      <param name="keySizeInBits">The key size in bits.</param>
      <param name="allowCrypto">A <see cref="T:System.Boolean" /> that indicates whether to allow cryptography.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Either <paramref name="keySizeInBits" /> is less than or equal to zero, or it is greater than or equal to 512, or it is not a multiple of 8.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.GetKeyBytes">
      <summary>Gets the bytes that represent the key.</summary>
      <returns>The key.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.Id">
      <summary>Gets the token ID.</summary>
      <returns>The token ID.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.KeySize">
      <summary>Gets the token key size.</summary>
      <returns>The token key size.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.SecurityKeys">
      <summary>Gets a collection of security keys.</summary>
      <returns>A collection of  <see cref="T:System.IdentityModel.Tokens.SecurityKey" />s.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.ValidFrom">
      <summary>Gets the token effective start time.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the token effective start time.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken.ValidTo">
      <summary>Gets the token effective start time.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the token effective start time.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.InitiatorServiceModelSecurityTokenRequirement">
      <summary>Specifies a security property requirements specific to channel creation in the Windows Communication Foundation (WCF).</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.InitiatorServiceModelSecurityTokenRequirement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.InitiatorServiceModelSecurityTokenRequirement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.InitiatorServiceModelSecurityTokenRequirement.ToString">
      <summary>Outputs a text representation of this instance of the class.</summary>
      <returns>A text representation of this instance of the class.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.InitiatorServiceModelSecurityTokenRequirement.TargetAddress">
      <summary>Gets or sets the target address.</summary>
      <returns>The target address.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.InitiatorServiceModelSecurityTokenRequirement.Via">
      <summary>Gets or sets the Via.</summary>
      <returns>The <see cref="T:System.Uri" /> that represents the Via.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters">
      <summary>Represents the parameters for a security token issued in a Federated security scenario.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" /> class.</summary>
      <param name="other">The other instance of this class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.#ctor(System.String,System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" /> class using the specified token type, issuer address and issuer binding.</summary>
      <param name="tokenType">The token type.</param>
      <param name="issuerAddress">The address of the endpoint that issues the token.</param>
      <param name="issuerBinding">The binding of the issuer.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" /> class using the specified token type and issuer address.</summary>
      <param name="tokenType">The token type.</param>
      <param name="issuerAddress">The address of the endpoint that issues the token.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" /> class using the specified token type.</summary>
      <param name="tokenType">The token type.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.CloneCore">
      <summary>Clones another instance of this instance of the class.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> that represents the copy.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Creates a key identifier clause for a token.</summary>
      <param name="token">The token.</param>
      <param name="referenceStyle">The reference style of the security token.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> is <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="referenceStyle" /> is not <see langword="External" /> or <see langword="Internal" />.</exception>
      <returns>The security key identifier clause.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>When implemented, initializes a security token requirement based on the properties set on the <see langword="IssuedSecurityTokenParameters" />.</summary>
      <param name="requirement">The security token requirement to initialize.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.ToString">
      <summary>Displays a text representation of this instance of the class.</summary>
      <returns>A text representation of this instance of this class.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.AdditionalRequestParameters">
      <summary>Gets a collection of additional request parameters.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.Xml.XmlElement" /> that holds the additional request parameters.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.ClaimTypeRequirements">
      <summary>Gets a collection of claim type requirements.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /> that holds the additional claim type requirements.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.DefaultMessageSecurityVersion">
      <summary>Gets or sets the default set of security specifications versions.</summary>
      <returns>A <see cref="T:System.ServiceModel.MessageSecurityVersion" /> that represents the default set of security specifications versions.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.HasAsymmetricKey">
      <summary>Gets a value that indicates whether the issued token has an asymmetric key.</summary>
      <returns>
        <see langword="true" /> if the issued token has an asymmetric key; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.IssuerAddress">
      <summary>Gets or sets the token issuer's address.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> of the token issuer.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.IssuerBinding">
      <summary>Gets or sets the token issuer's binding, to be used by the client.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Binding" /> of the token issuer, to be used by the client.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.IssuerMetadataAddress">
      <summary>Gets or sets the token issuer's metadata address.</summary>
      <returns>The metadata address of the token issuer.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.KeySize">
      <summary>Gets or sets the issued token key size.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">An attempt was made to <see langword="set" /> a value less than 0.</exception>
      <returns>The size of the token key.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.KeyType">
      <summary>Gets or sets the issued token key type.</summary>
      <returns>One of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyType" /> values.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.SupportsClientAuthentication">
      <summary>When implemented, gets a value that indicates whether the token supports client authentication.</summary>
      <returns>
        <see langword="true" /> if the token supports client authentication; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>When implemented, gets a value that indicates whether the token supports a Windows identity for authentication.</summary>
      <returns>
        <see langword="true" /> if the token supports a Windows identity for authentication; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.SupportsServerAuthentication">
      <summary>When implemented, gets a value that indicates whether the token supports server authentication.</summary>
      <returns>
        <see langword="true" /> if the token supports server authentication; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.TokenType">
      <summary>Gets or sets the issued token type.</summary>
      <returns>The token type.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.UseStrTransform">
      <summary>Gets or sets a value that indicates whether the issued token parameter uses STR transform.</summary>
      <returns>
        <see langword="true" /> if the issued token parameter uses STR transform; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters">
      <summary>Represents the parameters for a secure conversation security token.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.#ctor(System.ServiceModel.Channels.SecurityBindingElement,System.Boolean,System.Boolean,System.ServiceModel.Security.ChannelProtectionRequirements)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" /> class from the properties of a specified <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> with specified <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />.</summary>
      <param name="bootstrapSecurityBindingElement">A security binding element object that secures the message exchanged as part of the secure conversation token issuance.</param>
      <param name="requireCancellation">
        <see langword="true" /> to require cancellation; otherwise, <see langword="false" />.</param>
      <param name="canRenewSession">
        <see langword="true" /> to indicate that the communications session can be renewed; otherwise, <see langword="false" />.</param>
      <param name="bootstrapProtectionRequirements">The channel protection requirements.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.#ctor(System.ServiceModel.Channels.SecurityBindingElement,System.Boolean,System.ServiceModel.Security.ChannelProtectionRequirements)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" /> class from the properties of a specified <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> with specified <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />.</summary>
      <param name="bootstrapSecurityBindingElement">The bootstrap security binding element.</param>
      <param name="requireCancellation">
        <see langword="true" /> to require cancellation; otherwise, <see langword="false" />.</param>
      <param name="bootstrapProtectionRequirements">The bootstrap protection requirements.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.#ctor(System.ServiceModel.Channels.SecurityBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" /> class from the properties of a specified <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />.</summary>
      <param name="bootstrapSecurityBindingElement">The bootstrap security binding element.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" /> class from another instance of this class.</summary>
      <param name="other">The other instance of this class.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.CloneCore">
      <summary>Clones another instance of this instance of the class.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters" /> instance that represents the copy.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Creates a key identifier clause for a token.</summary>
      <param name="token">The token.</param>
      <param name="referenceStyle">The reference style of the security token.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> is <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="referenceStyle" /> is not <see langword="External" /> or <see langword="Internal" />.</exception>
      <returns>The key identifier clause for a token.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Initializes a security token requirement.</summary>
      <param name="requirement">The requirement of the security token.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.ToString">
      <summary>Displays a text representation of this instance of the class.</summary>
      <returns>A text representation of this instance of the class.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.BootstrapSecurityBindingElement">
      <summary>Gets or sets the bootstrap security binding element.</summary>
      <returns>The bootstrap security binding element.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.CanRenewSession">
      <summary>Gets or sets a value that indicates whether the communications session can be renewed.</summary>
      <returns>
        <see langword="true" /> if the communications session can be renewed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.HasAsymmetricKey">
      <summary>Gets a value that indicates whether the security token has an asymmetric key.</summary>
      <returns>This property always returns <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.RequireCancellation">
      <summary>Gets or sets a value that indicates whether cancellation is required.</summary>
      <returns>
        <see langword="true" /> if cancellation is required; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.SupportsClientAuthentication">
      <summary>Gets a value that indicates whether the token supports client authentication.</summary>
      <returns>
        <see langword="true" /> if the token supports client authentication; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>Gets a value that indicates whether the token supports a Windows identity for authentication.</summary>
      <returns>
        <see langword="true" /> if the token supports a Windows identity for authentication; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters.SupportsServerAuthentication">
      <summary>Gets a value that indicates whether the token supports server authentication.</summary>
      <returns>
        <see langword="true" /> if the token supports server authentication; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters">
      <summary>Specifies an <see langword="abstract" /> class that when implemented represents security token parameters.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> class from another instance.</summary>
      <param name="other">The other instance of this class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.Clone">
      <summary>Clones another instance of this instance of the class.</summary>
      <exception cref="T:System.InvalidOperationException">Unable to clone this instance of the class.</exception>
      <returns>A copy of <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore">
      <summary>Clones another instance of this instance of the class.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> instance that represents the copy.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Creates a key identifier clause for a token.</summary>
      <param name="token">The token.</param>
      <param name="referenceStyle">The reference style of the security token.</param>
      <returns>The key identifier clause for a token.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>When overridden in a derived class, initializes a security token requirement.</summary>
      <param name="requirement">The requirement of the security token.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Indicates whether a token matches a key identifier clause.</summary>
      <param name="token">The security token.</param>
      <param name="keyIdentifierClause">The specified key identifier clause.</param>
      <param name="referenceStyle">The reference style of the security token.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> is <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="referenceStyle" /> is not <see cref="F:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle.External" /> or <see cref="F:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle.Internal" />.</exception>
      <returns>
        <see langword="true" /> if the token matches the key identifier clause; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ToString">
      <summary>Displays a text representation of this instance of the class.</summary>
      <returns>A text representation of this instance of the class.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.HasAsymmetricKey">
      <summary>When overridden in a derived class, gets a value that indicates whether the token has an asymmetric key.</summary>
      <returns>
        <see langword="true" /> if the token has an asymmetric key; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode">
      <summary>Gets or sets the token inclusion requirements.</summary>
      <returns>The token inclusion requirements.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys">
      <summary>Gets or sets a value that indicates whether keys can be derived from the original proof keys.</summary>
      <returns>
        <see langword="true" /> if keys need to be derived from the token's key; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.SupportsClientAuthentication">
      <summary>When overridden in a derived class, gets a value that indicates whether the token supports client authentication.</summary>
      <returns>
        <see langword="true" /> if the token supports client authentication; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>When overridden in a derived class, gets a value that indicates whether the token supports a Windows identity for authentication.</summary>
      <returns>
        <see langword="true" /> if the token supports a Windows identity for authentication; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SecurityTokenParameters.SupportsServerAuthentication">
      <summary>When overridden in a derived class, gets a value that indicates whether the token supports server authentication.</summary>
      <returns>
        <see langword="true" /> if the token supports server authentication; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement">
      <summary>An abstract class that when implemented specifies security property requirements of the token being requested or authenticated that are specific to Windows Communication Foundation (WCF). The security token manager constructs security token providers and security token authenticators that are used by the WCF security processor based on the token requirement.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.Namespace">
      <summary>Specifies the current namespace.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.AuditLogLocationProperty">
      <summary>Gets the token requirement property name whose value is the location of the audit log to use when recording the results of the authentication (service only).</summary>
      <returns>The key for the AuditLogLocation in the token requirement's Properties dictionary.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.ChannelParametersCollectionProperty">
      <summary>Gets the token requirement property name whose value is the channel parameters collection (client only).</summary>
      <returns>The key for the <see langword="ChannelParametersCollection" /> in the token requirement's Properties dictionary.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.DuplexClientLocalAddressProperty">
      <summary>Gets a value that specifies the name of the index in the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> collection for the <see langword="DuplexClientLocalAddress" /> property.</summary>
      <returns>The name of the index in the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> collection for the <see langword="DuplexClientLocalAddress" /> property.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.EndpointFilterTableProperty">
      <summary>Gets the key for the token requirement property whose value is the endpoint filter table that contains the filters for messages that a service endpoint accepts. This is a service property.</summary>
      <returns>The key for the endpoint filter table property of the token requirement.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.ExtendedProtectionPolicy">
      <summary>Gets the protection policy used by the server to validate incoming client connections.</summary>
      <returns>The protection policy used by the server.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.HttpAuthenticationSchemeProperty">
      <summary>Gets the key of the token requirement property whose value is the HTTP authentication scheme if this request is for a token provider or token authenticator to be used in HTTP authentication.</summary>
      <returns>The key of the token requirement's HTTP authentication scheme property.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IsInitiator">
      <summary>Gets a value that indicates whether the endpoint that is creating the security token requirement is an initiator or a recipient.</summary>
      <returns>
        <see langword="true" /> if the request is made by the initiator of the channel; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IsInitiatorProperty">
      <summary>Gets the key for the token requirement property whose value indicates whether the request is made by the initiator of the channel or the recipient of the channel.</summary>
      <returns>The key for the token requirement property whose value indicates whether the endpoint that creates the requirement is the initiator or recipient.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IsOutOfBandTokenProperty">
      <summary>Gets the key for the token requirement property whose value indicates whether this is the request for a token that is configured on the client or service.</summary>
      <returns>The key for the token requirement property whose value indicates whether this is the request for a token that is configured on the client or service.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IssuedSecurityTokenParametersProperty">
      <summary>Gets the key for the token requirement property whose value is the <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" /> that contains information about the token if the requirement is for an issued token.</summary>
      <returns>The key for the token requirement property whose value is the <see cref="T:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters" /> that contains information about the token if the requirement is for an issued token.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IssuerAddress">
      <summary>If the token requirement is for an issued token, this property contains the endpoint address of the issuer.</summary>
      <returns>The endpoint address for the token issuer. This is used for issued token types.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IssuerAddressProperty">
      <summary>Gets the key for the token requirement property whose value is the <see cref="T:System.ServiceModel.EndpointAddress" /> of the issuing party if the requirement is for an issued token.</summary>
      <returns>The key for the token requirement property whose value is the <see cref="T:System.ServiceModel.EndpointAddress" /> of the issuing party.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IssuerBinding">
      <summary>If the token requirement is for an issued token, this property contains the binding to use to communicate with the issuer.</summary>
      <returns>The binding used to communicate with the user.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IssuerBindingContextProperty">
      <summary>Gets the key for the token requirement property whose value is the <see cref="T:System.ServiceModel.Channels.BindingContext" /> to use to talk to the issuing party if the requirement is for an issued token.</summary>
      <returns>The key for the token requirement property whose value is <see cref="T:System.ServiceModel.Channels.BindingContext" /> to use to talk to the issuing party.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.IssuerBindingProperty">
      <summary>Gets the key for the token requirement property whose value is the binding to use to talk to the issuing party when the requirement is for an issued token.</summary>
      <returns>The key for the token requirement property whose value is the binding to use to talk to the issuing party.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.ListenUriProperty">
      <summary>Gets the key for the token requirement property whose value is the URI that the service endpoint making the request is listening at (service only).</summary>
      <returns>The key for the token requirement property whose value is the URI that the service endpoint making the request is listening at.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.MessageAuthenticationAuditLevelProperty">
      <summary>Gets the key for the token requirement property whose value is the audit level to use when recording the results of the authentication (service only).</summary>
      <returns>Gets the key for the token requirement property whose value is the audit level to use when recording the results of the authentication.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.MessageDirectionProperty">
      <summary>Gets the key for the token requirement property whose value is the member of the <see cref="T:System.ServiceModel.Description.MessageDirection" /> enumeration to use and that indicates whether the token provider is needed for messages sent from client to server or server to client.</summary>
      <returns>Gets the key for the token requirement property whose value is the member of the <see cref="T:System.ServiceModel.Description.MessageDirection" /> enumeration to use.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.MessageSecurityVersion">
      <summary>Gets or sets the message security version to be used (if necessary).</summary>
      <returns>The message security version.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.MessageSecurityVersionProperty">
      <summary>Gets the key for the token requirement property whose value is the <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that the channel is configured with.</summary>
      <returns>The key for the token requirement property whose value is the <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that the channel is configured with.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.PreferSslCertificateAuthenticatorProperty">
      <summary>Gets the key for the token requirement property whose value is used to create SSL security token authenticator.</summary>
      <returns>The key for the token requirement property whose value is used to create SSL security token authenticator.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.PrivacyNoticeUriProperty">
      <summary>Gets the key for the token requirement property whose value is the link to the URI that points to the service's privacy policy if the service has one.</summary>
      <returns>The key for the token requirement property whose value is a link to the URI that points to the service's privacy policy.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.PrivacyNoticeVersionProperty">
      <summary>Gets the key for the token requirement property whose value is a string that represents the privacy notice version.</summary>
      <returns>The key for the token requirement property whose value represents the privacy notice version.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SecureConversationSecurityBindingElement">
      <summary>Gets or sets a security binding element used for securing the secure conversation bootstrap messages.</summary>
      <returns>A security binding element used for securing the secure conversation bootstrap messages.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SecureConversationSecurityBindingElementProperty">
      <summary>Gets the key for the token requirement property whose value is the security binding element used to secure the secure conversation bootstrap messages.</summary>
      <returns>The key for the token requirement property whose value represents the security binding element to be used for securing the secure conversation bootstrap messages.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SecurityAlgorithmSuite">
      <summary>Gets or sets the security algorithm suite to be used (if necessary).</summary>
      <returns>The security algorithm suite to be used.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SecurityAlgorithmSuiteProperty">
      <summary>Gets the key for the token requirement property whose value is the algorithm suite that the channel uses to perform message security.</summary>
      <returns>The key for the token requirement property whose value is <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SecurityBindingElement">
      <summary>Gets or sets the security binding element.</summary>
      <returns>The security binding element.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SecurityBindingElementProperty">
      <summary>Gets the key for the token requirement property whose value is the security binding element used to create the channel.</summary>
      <returns>The key for the token requirement property whose value is the <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> used to create the channel.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SupportingTokenAttachmentModeProperty">
      <summary>Gets the key for the token requirement property whose value is the associated <see cref="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" /> enumeration member if the request is for a supporting token.</summary>
      <returns>The key for the token requirement property whose value is the associated <see cref="T:System.ServiceModel.Security.SecurityTokenAttachmentMode" /> enumeration member.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SupportSecurityContextCancellationProperty">
      <summary>Gets the key for the token requirement property whose value indicates whether the secure conversation token is for a security session (in which case its lifetime is tied to the lifetime of the user's channel) or for a datagram security channel.</summary>
      <returns>The key for the token requirement property whose value indicates whether the secure conversation token should be cancelable.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.SuppressAuditFailureProperty">
      <summary>Gets the key for the token requirement property whose value indicates whether to ignore errors that occur when recording the results of the authentication (service only).</summary>
      <returns>The key for the token requirement property whose value indicates whether to ignore errors that occur when recording the results of the authentication.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.TargetAddressProperty">
      <summary>Gets the key for the token requirement property whose value is the endpoint address that the channel is talking to (client only).</summary>
      <returns>The key for the token requirement property whose value is the <see cref="T:System.ServiceModel.EndpointAddress" /> that the channel is talking to.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.TransportScheme">
      <summary>Gets or sets the transport scheme.</summary>
      <returns>The transport scheme.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.TransportSchemeProperty">
      <summary>If the request is made for a token provider/authenticator to be used with transport security, this string is the key for the token requirement property whose value is the transport scheme.</summary>
      <returns>The key for the token requirement property whose value is the transport scheme.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement.ViaProperty">
      <summary>Gets the key for the token requirement property whose value is the Via URI that the channel is connecting to (client only).</summary>
      <returns>The key for the token requirement property whose value is the Via URI that the channel is connecting to.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SspiSecurityToken">
      <summary>Represents an SSPI security token.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityToken.#ctor(System.Net.NetworkCredential,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SspiSecurityToken" /> class.</summary>
      <param name="networkCredential">The <see cref="T:System.Net.NetworkCredential" />.</param>
      <param name="extractGroupsForWindowsAccounts">
        <see langword="true" /> if the groups to which the Windows accounts belong are extracted; otherwise, <see langword="false" />.</param>
      <param name="allowUnauthenticatedCallers">
        <see langword="true" /> if unauthenticated (anonymous) callers are allowed; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SspiSecurityToken.#ctor(System.Security.Principal.TokenImpersonationLevel,System.Boolean,System.Net.NetworkCredential)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SspiSecurityToken" /> class.</summary>
      <param name="impersonationLevel">The <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</param>
      <param name="allowNtlm">
        <see langword="true" /> if NTLM authentication is allowed; otherwise, <see langword="false" />.</param>
      <param name="networkCredential">The <see cref="T:System.Net.NetworkCredential" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowNtlm">
      <summary>Gets a value that indicates whether to allow NTLM authentication.</summary>
      <returns>
        <see langword="true" /> if NTLM authentication is allowed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowUnauthenticatedCallers">
      <summary>Gets a value that indicates whether to allow anonymous callers.</summary>
      <returns>
        <see langword="true" /> if anonymous callers are allowed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.ExtractGroupsForWindowsAccounts">
      <summary>Gets a value that indicates whether to extract the groups to which the Windows accounts belong.</summary>
      <returns>
        <see langword="true" /> if the groups to which the Windows accounts belong are extracted; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.Id">
      <summary>Gets the token ID.</summary>
      <returns>The token ID.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.ImpersonationLevel">
      <summary>Gets the token impersonation level.</summary>
      <returns>The <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.NetworkCredential">
      <summary>Gets the network credential.</summary>
      <returns>The <see cref="T:System.Net.NetworkCredential" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.SecurityKeys">
      <summary>Gets a collection of security keys.</summary>
      <returns>A collection of <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidFrom">
      <summary>Gets the starting effective date for the token.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the starting effective date for the token.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidTo">
      <summary>Gets the expiration date for the token.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the expiration date for the token.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters">
      <summary>Represents the parameters for supporting security tokens required by the security binding element.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SupportingTokenParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SupportingTokenParameters.Clone">
      <summary>Clones another instance of this instance of the class.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SupportingTokenParameters.CloneCore">
      <summary>Clones another instance of this instance of the class.</summary>
      <returns>A new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SupportingTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SupportingTokenParameters.SetKeyDerivation(System.Boolean)">
      <summary>Sets a value that indicates whether all endorsing or signed endorsing token parameters require derived keys.</summary>
      <param name="requireDerivedKeys">A <see cref="T:System.Boolean" /> that determines whether parameters require derived keys.</param>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.SupportingTokenParameters.ToString">
      <summary>Displays a text representation of this instance of the class.</summary>
      <returns>A text representation of this instance of this class.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SupportingTokenParameters.Endorsing">
      <summary>Gets a collection of security token parameters for endorsing supporting tokens required by the security binding element.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SupportingTokenParameters.Signed">
      <summary>Gets a collection of security token parameters for signed supporting tokens required by the security binding element.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SupportingTokenParameters.SignedEncrypted">
      <summary>Gets a collection of security token parameters for signed and encrypted supporting tokens required by the security binding element.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.SupportingTokenParameters.SignedEndorsing">
      <summary>Gets a collection of security token parameters for signed and endorsing supporting tokens required by the security binding element.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters">
      <summary>Represents the parameters for a user name security token.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters" /> class.</summary>
      <param name="other">The other instance of this class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.CloneCore">
      <summary>Clones another instance of this instance of the class.</summary>
      <returns>An <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)">
      <summary>Creates a key identifier clause for a token.</summary>
      <param name="token">The token.</param>
      <param name="referenceStyle">The <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> is <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="referenceStyle" /> is not <see langword="External" /> or <see langword="Internal" />.</exception>
      <returns>The security key identifier clause.</returns>
    </member>
    <member name="M:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Initializes a security token requirement.</summary>
      <param name="requirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.HasAsymmetricKey">
      <summary>Gets a value that indicates whether the token has an asymmetric key.</summary>
      <returns>
        <see langword="true" /> if the token has an asymmetric key; otherwise, <see langword="false" />. Always returns <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.SupportsClientAuthentication">
      <summary>Gets a value that indicates whether the token supports client authentication.</summary>
      <returns>
        <see langword="true" /> if the token supports client authentication; otherwise, <see langword="false" />. Always returns <see langword="true" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.SupportsClientWindowsIdentity">
      <summary>Gets a value that indicates whether the token supports a Windows identity for authentication.</summary>
      <returns>
        <see langword="true" /> if the token supports a Windows identity for authentication; otherwise, <see langword="false" />. Always returns <see langword="true" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters.SupportsServerAuthentication">
      <summary>Gets a value that indicates whether the token supports server authentication.</summary>
      <returns>
        <see langword="true" /> if the token supports server authentication; otherwise, <see langword="false" />. Always returns <see langword="false" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.TrustVersion">
      <summary>Contains the set of supported WS-Trust versions. This is an abstract class.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.TrustVersion.Default">
      <summary>Gets the default version.</summary>
      <returns>The default version.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TrustVersion.Namespace">
      <summary>Gets the namespace for this trust version.</summary>
      <returns>The namespace for this trust version.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TrustVersion.Prefix">
      <summary>Gets the prefix.</summary>
      <returns>The prefix.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TrustVersion.WSTrust13">
      <summary>Gets the version 1.3 of WS-Trust.</summary>
      <returns>The version 1.3 of WS-Trust.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.TrustVersion.WSTrustFeb2005">
      <summary>Gets the February 2005 version of WS-Trust.</summary>
      <returns>The February 2005 version of WS-Trust.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.UserNamePasswordClientCredential">
      <summary>Represents a client credential based on user name and password.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.Password">
      <summary>Gets or sets the password.</summary>
      <returns>The password.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName">
      <summary>Gets or sets the user name.</summary>
      <returns>The user name.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.WindowsClientCredential">
      <summary>Allows you to specify properties related to Windows credentials to be used to represent the client.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel">
      <summary>Gets or sets the allowed impersonation level.</summary>
      <returns>One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential">
      <summary>Gets or sets the Windows client credential.</summary>
      <returns>The <see cref="T:System.Net.NetworkCredential" /> for the client.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential">
      <summary>Defines a certificate used by a client to identify itself.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <summary>Allows you to specify the certificate to use to represent the client by specifying query parameters such as <paramref name="storeLocation" />, <paramref name="storeName" />, <paramref name="findType" /> and <paramref name="findValue" />.</summary>
      <param name="storeLocation">The location of the certificate store the client uses to obtain the client certificate.</param>
      <param name="storeName">Specifies the name of the X.509 certificate store to open.</param>
      <param name="findType">Defines the type of X.509 search to be executed.</param>
      <param name="findValue">The value to search for in the X.509 certificate store.</param>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)">
      <summary>Allows you to specify the certificate to use to represent the service by specifying the subject distinguished name.</summary>
      <param name="subjectName">Subject distinguished name.</param>
      <param name="storeLocation">The location of the certificate store the service uses to obtain the service certificate.</param>
      <param name="storeName">Specifies the name of the X.509 certificate store to open.</param>
    </member>
    <member name="P:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate">
      <summary>Gets or sets the certificate to use to represent the service when communicating back to the client.</summary>
      <exception cref="T:System.InvalidOperationException">A <see langword="set" /> method was used when the credential is read-only.</exception>
      <returns>The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> to use to represent the service when communicating back to the client.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential">
      <summary>Represents the settings used by the client to validate the certificate presented by the service using SSL authentication. It also contains any certificate for the service that is explicitly configured on the client to use for encrypting messages to the service using message security.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <summary>Specifies the default certificate to use for the service. For bindings that use certificate-based message security, this certificate is used to encrypt messages to the service and is expected to be used by the service for signing replies to the client.</summary>
      <param name="storeLocation">The location of the certificate store the service uses to obtain the service certificate.</param>
      <param name="storeName">The name of the X.509 certificate store to open.</param>
      <param name="findType">The type of X.509 search to be executed.</param>
      <param name="findValue">The value to search for in the X.509 certificate store.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="findValue" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Attempted to set when the credential is read-only.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)">
      <summary>Specifies the default certificate to use for the service. For bindings that use certificate-based message security, this certificate is used to encrypt messages to the service and is expected to be used by the service for signing replies to the client.</summary>
      <param name="subjectName">The subject distinguished name.</param>
      <param name="storeLocation">The location of the certificate store that the service uses to obtain the service certificate.</param>
      <param name="storeName">The name of the X.509 certificate store to open.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subjectName" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Attempted to set when the credential is read-only.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)">
      <summary>Sets a certificate by certificate store location, certificate store name, type of X.509 search, and value to search for, and stores it in a collection to be used for the URL that sets the scope.</summary>
      <param name="storeLocation">The location of the certificate store that the service uses to obtain the service certificate.</param>
      <param name="storeName">The name of the X.509 certificate store to open.</param>
      <param name="findType">The type of X.509 search to be executed.</param>
      <param name="findValue">The value to search for in the X.509 certificate store.</param>
      <param name="targetService">The URL that sets the scope.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="findValue" /> or <paramref name="targetService" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Attempted to set when the credential is read-only.</exception>
    </member>
    <member name="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)">
      <summary>Sets a certificate by subject name, certificate store location, and certificate store name, and stores it in a collection to be used for the URL that sets the scope.</summary>
      <param name="subjectName">The fully qualified subject name.</param>
      <param name="storeLocation">The location of the certificate store that the service uses to obtain the service certificate.</param>
      <param name="storeName">The name of the X.509 certificate store to open.</param>
      <param name="targetService">The URL that sets the scope.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subjectName" /> or <paramref name="targetService" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Attempted to set when the credential is read-only.</exception>
    </member>
    <member name="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication">
      <summary>Gets the settings used to validate the service certificate obtained using SSL authentication.</summary>
      <returns>The settings used to validate the service certificate obtained using SSL authentication.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate">
      <summary>Gets or sets the default certificate to use for the service.</summary>
      <exception cref="T:System.InvalidOperationException">Attempted to set when the credential is read-only.</exception>
      <returns>The default certificate to use for the service.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates">
      <summary>Gets a scoped certificate to use to represent the service that the client is communicating with.</summary>
      <exception cref="T:System.InvalidOperationException">Attempted to set when the credential is read-only.</exception>
      <returns>A scoped certificate to use to represent the service that the client is communicating with.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication">
      <summary>Gets or sets the SSL certificate validator to use.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" /> instance.</returns>
    </member>
    <member name="T:System.ServiceModel.Security.X509CertificateValidationMode">
      <summary>An enumeration that lists the ways of validating a certificate.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.X509CertificateValidationMode.ChainTrust">
      <summary>The certificate is valid if the chain builds to a certification authority in the trusted root store.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.X509CertificateValidationMode.Custom">
      <summary>The user must plug in a custom <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> to validate the certificate.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.X509CertificateValidationMode.None">
      <summary>No validation of the certificate is done.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.X509CertificateValidationMode.PeerOrChainTrust">
      <summary>The certificate is valid if it is in the trusted people store, or if the chain builds to a certification authority in the trusted root store.</summary>
    </member>
    <member name="F:System.ServiceModel.Security.X509CertificateValidationMode.PeerTrust">
      <summary>The certificate is valid if it is in the trusted people store.</summary>
    </member>
    <member name="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication">
      <summary>Represents the settings used by the client proxy to authenticate service certificates that are obtained using SSL/TLS negotiation.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.X509ServiceCertificateAuthentication.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CertificateValidationMode">
      <summary>Gets or sets the certificate validation mode.</summary>
      <returns>A value from the enumeration in <see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CustomCertificateValidator">
      <summary>Gets or sets a custom client certificate validator.</summary>
      <exception cref="T:System.InvalidOperationException">Attempted to set when credential is read-only.</exception>
      <returns>The custom client certificate validator.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.RevocationMode">
      <summary>Gets or sets the certificate revocation mode for ChainTrust and PeerOrChainTrust X.509 certificate validation mode.</summary>
      <exception cref="T:System.InvalidOperationException">Attempted to set when credential is read-only.</exception>
      <returns>One of the values in <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" />: <see langword="NoCheck" />, <see langword="Online" />, or <see langword="Offline" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.TrustedStoreLocation">
      <summary>Gets or sets the trusted store location under which context the client certificate chain is validated.</summary>
      <exception cref="T:System.InvalidOperationException">Attempted to set when credential is read-only.</exception>
      <returns>The trusted store location.</returns>
    </member>
    <member name="T:System.ServiceModel.SecurityMode">
      <summary>Determines the security settings for a binding.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.Message">
      <summary>Security is provided using SOAP message security.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.None">
      <summary>Security is disabled.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.Transport">
      <summary>Security is provided using a secure transport (for example, HTTPS).</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.TransportWithMessageCredential">
      <summary>A secure transport (for example, HTTPS) provides integrity, confidentiality, and authentication while SOAP message security provides client authentication.</summary>
    </member>
    <member name="T:System.ServiceModel.ServerTooBusyException">
      <summary>The exception that is thrown when a server is too busy to accept a message.</summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServerTooBusyException" /> class with data that specifies the source and destination of the stream and the information required to serialize the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServerTooBusyException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServerTooBusyException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceActivationException">
      <summary>The exception that is thrown when a service fails to activate.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceActivationException" /> class with serialization information and streaming context specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceActivationException" /> class with a specified error message and the inner exception provided.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceActivationException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceContractAttribute">
      <summary>Indicates that an interface or a class defines a service contract in a Windows Communication Foundation (WCF) application.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceContractAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceContractAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
      <summary>Gets or sets the type of callback contract when the contract is a duplex contract.</summary>
      <returns>A <see cref="T:System.Type" /> that indicates the callback contract. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
      <summary>Gets or sets the name used to locate the service in an application configuration file.</summary>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is an empty string.</exception>
      <returns>The name used to locate the service element in an application configuration file. The default is the name of the service implementation class.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Name">
      <summary>Gets or sets the name for the <see langword="&lt;portType&gt;" /> element in Web Services Description Language (WSDL).</summary>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is an empty string.</exception>
      <returns>The default value is the name of the class or interface to which the <see cref="T:System.ServiceModel.ServiceContractAttribute" /> is applied.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Namespace">
      <summary>Gets or sets the namespace of the <see langword="&lt;portType&gt;" /> element in Web Services Description Language (WSDL).</summary>
      <returns>The WSDL namespace of the <see langword="&lt;portType&gt;" /> element. The default value is <c>"http://tempuri.org"</c>.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
      <summary>Gets or sets whether sessions are allowed, not allowed or required.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.ServiceModel.SessionMode" /> values.</exception>
      <returns>A <see cref="T:System.ServiceModel.SessionMode" /> that indicates whether sessions are allowed, not allowed, or required.</returns>
    </member>
    <member name="T:System.ServiceModel.ServiceKnownTypeAttribute">
      <summary>Specifies known types to be used by a service when serializing or deserializing.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> class with the name of a method that returns the known types and the type that contains the method (or methods) that returns the known types.</summary>
      <param name="methodName">The name of a method that returns the known types.</param>
      <param name="declaringType">The type that can use the known types in its object graph.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> class and specifies the name of a method that returns the known types.</summary>
      <param name="methodName">The name of a method that returns the known types.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> class with the specified known type.</summary>
      <param name="type">Specifies a known type that can be used in a parameter or return value defined by the service.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
      <summary>Gets the type that contains the methods that return the known types.</summary>
      <returns>The <see cref="T:System.Type" /> that contains the methods that return the known types.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
      <summary>Gets the name of a method that returns the collection of known types.</summary>
      <returns>The name of the method that returns the known types.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
      <summary>The known type that can be included in an object graph.</summary>
      <returns>The <see cref="T:System.Type" /> of the known type.</returns>
    </member>
    <member name="T:System.ServiceModel.ServiceSecurityContext">
      <summary>Represents the security context of a remote party. On the client, represents the service identity and, on the service, represents the client identity.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> class with the collection of policies object.</summary>
      <param name="authorizationPolicies">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the authorization policies.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> class with the specified authorization parameters and collection of policies.</summary>
      <param name="authorizationContext">An <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> that contains authorization settings.</param>
      <param name="authorizationPolicies">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the authorization policies.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> class with the specified authorization parameters.</summary>
      <param name="authorizationContext">An <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> that contains authorization information.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.Anonymous">
      <summary>Returns an instance of the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> class that contains an empty collection of claims, identities, and other context data that is usually used to represent an anonymous party.</summary>
      <returns>An empty instance of the <see cref="T:System.ServiceModel.ServiceSecurityContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.AuthorizationContext">
      <summary>Gets the authorization information for an instance of this class.  The <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> contains a collection of <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that the application can interrogate and retrieve the information of the party.</summary>
      <returns>An <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> that contains the authorization settings.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies">
      <summary>Gets the collection of policies associated with an instance of this class.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the policies.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.IsAnonymous">
      <summary>Gets a value that indicates whether the current client has provided credentials to the service.</summary>
      <returns>
        <see langword="true" /> if the client has provided credentials; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity">
      <summary>Gets the primary identity associated with the current setting.</summary>
      <returns>An <see cref="T:System.Security.Principal.IIdentity" /> associated with the current setting.</returns>
    </member>
    <member name="T:System.ServiceModel.SessionMode">
      <summary>Specifies the values available to indicate the support for reliable sessions that a contract requires or supports.</summary>
    </member>
    <member name="F:System.ServiceModel.SessionMode.Allowed">
      <summary>Specifies that the contract supports sessions if the incoming binding supports them.</summary>
    </member>
    <member name="F:System.ServiceModel.SessionMode.NotAllowed">
      <summary>Specifies that the contract never supports bindings that initiate sessions.</summary>
    </member>
    <member name="F:System.ServiceModel.SessionMode.Required">
      <summary>Specifies that the contract requires a sessionful binding. An exception is thrown if the binding is not configured to support session.</summary>
    </member>
    <member name="T:System.ServiceModel.SpnEndpointIdentity">
      <summary>Represents a service principal name (SPN) for an identity when the binding uses Kerberos.</summary>
    </member>
    <member name="M:System.ServiceModel.SpnEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)">
      <summary>Initializes a new instance of <see cref="T:System.ServiceModel.SpnEndpointIdentity" /> with the specified identity claim.</summary>
      <param name="identity">The identity for this service principal name (SPN).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The claim type of <paramref name="identity" /> is not <see cref="P:System.IdentityModel.Claims.ClaimTypes.Spn" />.</exception>
    </member>
    <member name="M:System.ServiceModel.SpnEndpointIdentity.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:System.ServiceModel.SpnEndpointIdentity" /> with the specified service principal name (SPN).</summary>
      <param name="spnName">The SPN.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="spnName" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.ServiceModel.SpnEndpointIdentity.SpnLookupTime">
      <summary>Specifies the maximum time allowed to look up the service principal name (SPN).</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is set to less than 0.</exception>
      <returns>A <see cref="T:System.TimeSpan" />. The default is 1 minute.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.Atom10FeedFormatter">
      <summary>A class that serializes a <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance to and from Atom 1.0 format.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.#ctor(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <param name="feedToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> class.</summary>
      <param name="feedTypeToCreate">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> derived instance to be serialized.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Verifies whether the specified <see cref="T:System.Xml.XmlReader" /> contains a valid Atom 1.0 syndication feed.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <returns>A value that specifies whether the <see cref="T:System.Xml.XmlReader" /> contains a valid Atom 1.0 syndication feed.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.CreateFeedInstance">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Reads an Atom 1.0 syndication feed from the specified <see cref="T:System.Xml.XmlReader" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItem(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Reads a syndication item from <see cref="T:System.Xml.XmlReader" /> instance using the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> used to create the new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItems(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.Boolean@)">
      <summary>Reads in a collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances from the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance to use to create the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances.</param>
      <param name="areAllItemsRead">A value that specifies whether all of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances have been read from the <see cref="T:System.Xml.XmlReader" /> instance.</param>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /> method.</summary>
      <returns>
        <see langword="Null" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> used to read the XML document.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML node.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteItem(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.Uri)">
      <summary>Writes the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to write.</param>
      <param name="feedBaseUri">The base URI for the feed.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteItems(System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem},System.Uri)">
      <summary>Writes a collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="items">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances to write.</param>
      <param name="feedBaseUri">The base URI for the feed.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> associated with the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10FeedFormatter.FeedType">
      <summary>The instance derived from <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> that is associated with the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> instance.</summary>
      <returns>The instance derived from <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> that is associated with the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10FeedFormatter.PreserveAttributeExtensions">
      <summary>Gets or sets a value that specifies whether to preserve attribute extensions during serialization.</summary>
      <returns>A value that specifies whether to preserve attribute extensions during serialization.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10FeedFormatter.PreserveElementExtensions">
      <summary>Gets or sets a value that specifies whether to preserve element extensions during serialization.</summary>
      <returns>A value that specifies whether to preserve element extensions during serialization.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10FeedFormatter.Version">
      <summary>Gets the syndication version used by the formatter.</summary>
      <returns>The syndication version used by the formatter.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.Atom10FeedFormatter`1">
      <summary>A class that serializes <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />-derived classes to and from Atom 1.0 format.</summary>
      <typeparam name="TSyndicationFeed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> -derived type to serialize.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter`1" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter`1.#ctor(`0)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter`1" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />-derived instance.</summary>
      <param name="feedToWrite">The feed to serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10FeedFormatter`1.CreateFeedInstance">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> derived class.</summary>
      <returns>A new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.Atom10ItemFormatter">
      <summary>A class that serializes a <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to and from Atom 1.0 format.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.#ctor(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <param name="itemToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" /> class.</summary>
      <param name="itemTypeToCreate">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> derived instance to associate with the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Verifies whether the specified <see cref="T:System.Xml.XmlReader" /> contains a valid Atom 1.0 syndication item.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <returns>A value that specifies whether the <see cref="T:System.Xml.XmlReader" /> contains a valid Atom 1.0 syndication item.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.CreateItemInstance">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Reads an Atom 1.0 syndication item from the specified <see cref="T:System.Xml.XmlReader" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /> method.</summary>
      <returns>
        <see langword="Null" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> used to read XML document.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML node.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> associated with the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" /> to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10ItemFormatter.ItemType">
      <summary>Gets the type of the syndication item associated with the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" />.</summary>
      <returns>The type of the syndication item associated with the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10ItemFormatter.PreserveAttributeExtensions">
      <summary>Gets or sets a value that specifies whether to preserve attribute extensions during serialization.</summary>
      <returns>A value that specifies whether to preserve attribute extensions during serialization.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10ItemFormatter.PreserveElementExtensions">
      <summary>Gets or sets a value that specifies whether to preserve element extensions during serialization.</summary>
      <returns>A value that specifies whether to preserve element extensions during serialization.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Atom10ItemFormatter.Version">
      <summary>Gets the syndication version used by the formatter.</summary>
      <returns>The syndication version used by the formatter.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.Atom10ItemFormatter`1">
      <summary>A class that serializes <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />-derived classes to and from Atom 1.0 format.</summary>
      <typeparam name="TSyndicationItem">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> -derived class to serialize.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter`1" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter`1.#ctor(`0)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter`1" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />-derived instance.</summary>
      <param name="itemToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Atom10ItemFormatter`1.CreateItemInstance">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />-derived class.</summary>
      <returns>A new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter">
      <summary>A class that serializes a <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> instance to and from Atom 1.0 format.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.#ctor(System.ServiceModel.Syndication.CategoriesDocument)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter" /> class with the specified <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />.</summary>
      <param name="documentToWrite">The <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> to serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.#ctor(System.Type,System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter" /> class with the specified <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />.</summary>
      <param name="inlineDocumentType">An <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" /> that can be serialized into an &lt;<see langword="atom:categories" />&gt; element within a service document and the set of categories are specified within the element.</param>
      <param name="referencedDocumentType">An <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" /> that can be serialized into an &lt;<see langword="atom:categories" />&gt; element within a service document and the set of categories are referenced using an URI.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Verifies whether the specified <see cref="T:System.Xml.XmlReader" /> contains a valid Atom 1.0 categories document.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <returns>A value that specifies whether the <see cref="T:System.Xml.XmlReader" /> contains a valid Atom 1.0 categories document.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.CreateInlineCategoriesDocument">
      <summary>Creates a <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" /> that can be serialized into a &lt;<see langword="atom:categories" />&gt; element within a service document and contains the set of categories within the element.</summary>
      <returns>Returns an <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" /> that can be serialized into a &lt;<see langword="atom:categories" />&gt; element within a service document.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.CreateReferencedCategoriesDocument">
      <summary>Creates a <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" /> that can be serialized into a &lt;<see langword="atom:categories" />&gt; element within a service document and contains a URI reference to the set of categories within the element.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" /> that can be serialized into a &lt;<see langword="atom:categories" />&gt; element within a service document.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Reads an Atom 1.0 &lt;<see langword="atom:categories" />&gt; element from the specified <see cref="T:System.Xml.XmlReader" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /> method.</summary>
      <returns>
        <see langword="Null" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> use to read the XML document.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML node.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> associated with the <see cref="T:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter" /> to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter.Version">
      <summary>Gets the syndication version used by the formatter.</summary>
      <returns>The syndication version used by the formatter.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter">
      <summary>A formatter that serializes a <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> instance to and from XML using Atom 1.0 formats.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.#ctor">
      <summary>Creates a new instance of the Atom 1.0-based <see cref="T:System.ServiceModel.Syndication.ServiceDocumentFormatter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.#ctor(System.ServiceModel.Syndication.ServiceDocument)">
      <summary>Creates a new instance of the Atom 1.0-based <see cref="T:System.ServiceModel.Syndication.ServiceDocumentFormatter" /> class to serialize a specified service document.</summary>
      <param name="documentToWrite">The <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> associated with the Atom 1.0 formatter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="documentToWrite" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.#ctor(System.Type)">
      <summary>Creates a new instance of the Atom 1.0-based <see cref="T:System.ServiceModel.Syndication.ServiceDocumentFormatter" /> class.</summary>
      <param name="documentTypeToCreate">The instance of an object that is derived from a <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> type that is associated with the Atom 1.0 formatter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="documentTypeToCreate" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="documentTypeToCreate" /> specified is not valid.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Tests whether the specified XML reader contains a valid service document.</summary>
      <param name="reader">The XML reader.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> if the XML reader does contain a valid service document; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.CreateDocumentInstance">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> instance associated with the Atom 1.0 formatter.</summary>
      <returns>Returns an instance of a <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Generates a <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> object from a specified XML reader.</summary>
      <param name="reader">The XML reader from which to read the syndication feed.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="reader" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException">The XML could not be parsed.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>This method is reserved and should not be used.</summary>
      <returns>Returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Generates a <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> from its XML representation.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> stream from which the <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> object is deserialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Converts the <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> into its XML representation.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> stream to which the object is serialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">There is no instance of a <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> associated with the formatter.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes a <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> object associated with the formatter to a specified XML writer.</summary>
      <param name="writer">The XML writer written to by the formatter.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="writer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">The service document associated with the formatter is <see langword="null" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter.Version">
      <summary>Gets the name of Atom Publishing Protocol namespace.</summary>
      <returns>Returns "http://www.w3.org/2007/app".</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter`1">
      <summary>A formatter that serializes classes derived from a <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> instance to and from XML using Atom 1.0 formats.</summary>
      <typeparam name="TServiceDocument">The class derived from a <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> instance that is to be serialized to XML or deserialized from XML using Atom 1.0 formatting.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.ServiceDocumentFormatter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter`1.#ctor(`0)">
      <summary>Creates a new instance of the Atom 1.0-based <see cref="T:System.ServiceModel.Syndication.ServiceDocumentFormatter" /> class.</summary>
      <param name="documentToWrite">The <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> associated with the Atom 1.0 formatter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="documentToWrite" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter`1.CreateDocumentInstance">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> instance associated with the Atom 1.0 formatter.</summary>
      <returns>Returns an instance of <see cref="T:System.ServiceModel.Syndication.ServiceDocument" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.CategoriesDocument">
      <summary>Represents a categories document.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.Create(System.Collections.ObjectModel.Collection{System.ServiceModel.Syndication.SyndicationCategory},System.Boolean,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> class.</summary>
      <param name="categories">A collection of categories.</param>
      <param name="isFixed">A value that specifies whether a user can add a category to the categories document.</param>
      <param name="scheme">The scheme of the categories document.</param>
      <returns>Returns <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.Create(System.Collections.ObjectModel.Collection{System.ServiceModel.Syndication.SyndicationCategory})">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> instance.</summary>
      <param name="categories">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instances used to initialize the new <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> instance.</param>
      <returns>Returns <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.Create(System.Uri)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> initializing it with the specified <see cref="T:System.Uri" />.</summary>
      <param name="linkToCategoriesDocument">The URI of the categories document.</param>
      <returns>Returns <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.GetFormatter">
      <summary>Gets a new <see cref="T:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter" /> instance initialized with the <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> on which this method is called.</summary>
      <returns>Returns <see cref="T:System.ServiceModel.Syndication.CategoriesDocumentFormatter" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.Load(System.Xml.XmlReader)">
      <summary>Loads a <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> instance from an <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <returns>Returns <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.Save(System.Xml.XmlWriter)">
      <summary>Saves the <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> to a <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Attempts to parse an attribute extension.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Attempts to parse an element extension.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="version">The syndication version to use when writing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocument.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the element extension to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="version">The syndication version to use when writing.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.CategoriesDocument.AttributeExtensions">
      <summary>Gets a collection of attribute extensions.</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.CategoriesDocument.BaseUri">
      <summary>The base URI of the <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />.</summary>
      <returns>Returns <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.CategoriesDocument.ElementExtensions">
      <summary>Gets the element extensions for the <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />.</summary>
      <returns>Returns  <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.CategoriesDocument.Language">
      <summary>Gets or sets the language of the <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />.</summary>
      <returns>The language of the <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.CategoriesDocumentFormatter">
      <summary>An abstract class used as a base class for other formatters, (for example, <see cref="T:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter" />).</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocumentFormatter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.CategoriesDocumentFormatter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocumentFormatter.#ctor(System.ServiceModel.Syndication.CategoriesDocument)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.CategoriesDocumentFormatter" /> class with the specified <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" />.</summary>
      <param name="documentToWrite">The <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> to serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocumentFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Verifies whether the specified <see cref="T:System.Xml.XmlReader" /> contains a valid Atom 1.0 categories document.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <returns>A value that specifies whether the <see cref="T:System.Xml.XmlReader" /> contains a valid Atom 1.0 categories document.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocumentFormatter.CreateInlineCategoriesDocument">
      <summary>Creates a <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" /> that can be serialized into a &lt;<see langword="atom:categories" />&gt; element within a service document and contains the set of categories within the element.</summary>
      <returns>Returns an <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" /> that can be serialized into a &lt;<see langword="atom:categories" />&gt; element within a service document.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocumentFormatter.CreateReferencedCategoriesDocument">
      <summary>Creates a <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" /> that can be serialized into a &lt;<see langword="atom:categories" />&gt; element within a service document and contains a URI reference to the set of categories within the element.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" /> that can be serialized into a &lt;<see langword="atom:categories" />&gt; element within a service document.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocumentFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Reads an Atom 1.0 &lt;<see langword="atom:categories" />&gt; element from the specified <see cref="T:System.Xml.XmlReader" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocumentFormatter.SetDocument(System.ServiceModel.Syndication.CategoriesDocument)">
      <summary>Specifies the <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> to associate with the <see cref="T:System.ServiceModel.Syndication.CategoriesDocumentFormatter" />.</summary>
      <param name="document">The <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> to associate with the <see cref="T:System.ServiceModel.Syndication.CategoriesDocumentFormatter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.CategoriesDocumentFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> associated with the <see cref="T:System.ServiceModel.Syndication.CategoriesDocumentFormatter" /> to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.CategoriesDocumentFormatter.Document">
      <summary>Gets the categories document.</summary>
      <returns>Returns the <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> that is associated with this <see cref="T:System.ServiceModel.Syndication.CategoriesDocumentFormatter" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.CategoriesDocumentFormatter.Version">
      <summary>Gets the syndication version used by the formatter.</summary>
      <returns>The syndication version used by the formatter.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.InlineCategoriesDocument">
      <summary>Represents a &lt;<see langword="atom:categories" />&gt; element within a service document.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.InlineCategoriesDocument.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.InlineCategoriesDocument.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationCategory},System.Boolean,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" /> class.</summary>
      <param name="categories">A collection of syndication categories.</param>
      <param name="isFixed">Specifies whether syndication categories can be added to the <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</param>
      <param name="scheme">The scheme of the <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.InlineCategoriesDocument.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationCategory})">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" /> class.</summary>
      <param name="categories">A collection of syndication categories.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.InlineCategoriesDocument.CreateCategory">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</summary>
      <returns>A new  <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.InlineCategoriesDocument.Categories">
      <summary>Gets the collection of syndication categories associated with the <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</summary>
      <returns>A collection of syndication categories.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.InlineCategoriesDocument.IsFixed">
      <summary>Gets or sets a value that specifies whether syndication categories can be added to the <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> that specifies if new syndication categories can be added.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.InlineCategoriesDocument.Scheme">
      <summary>Gets or sets the scheme of the <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</summary>
      <returns>The scheme of the <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument">
      <summary>Represents a reference to a categories document.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.ReferencedCategoriesDocument.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.ReferencedCategoriesDocument.#ctor(System.Uri)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" /> class.</summary>
      <param name="link">The URL to the referenced categories document.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.ReferencedCategoriesDocument.Link">
      <summary>Gets or sets the URI for the categories document.</summary>
      <returns>The URI for the categories document.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.ResourceCollectionInfo">
      <summary>Represents a collection of resources represented by <see langword="&lt;atom:collection&gt;" /> element.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.#ctor(System.ServiceModel.Syndication.TextSyndicationContent,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.CategoriesDocument},System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" /> class.</summary>
      <param name="title">The title of the collection.</param>
      <param name="link">The URI of the collection.</param>
      <param name="categories">A collection of categories documents.</param>
      <param name="allowsNewEntries">A value that specifies whether new &lt;<see langword="accept" />&gt; elements can be added to the collection.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.#ctor(System.ServiceModel.Syndication.TextSyndicationContent,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.CategoriesDocument},System.Collections.Generic.IEnumerable{System.String})">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" /> class.</summary>
      <param name="title">The title of the collection.</param>
      <param name="link">The URI of the collection.</param>
      <param name="categories">A collection of categories documents.</param>
      <param name="accepts">A collection of resource types that can be added to the collection.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.#ctor(System.ServiceModel.Syndication.TextSyndicationContent,System.Uri)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" /> class.</summary>
      <param name="title">The title of the collection.</param>
      <param name="link">The URI of the collection.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.#ctor(System.String,System.Uri)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" /> class.</summary>
      <param name="title">The title of the collection.</param>
      <param name="link">The URI of the collection.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.CreateInlineCategoriesDocument">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" /> instance.</summary>
      <returns>Returns <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.CreateReferencedCategoriesDocument">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" /> instance.</summary>
      <returns>Returns <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Attempts to parse an attribute extension.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Attempts to parse an element extension.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlReader" /> to write to.</param>
      <param name="version">The syndication version to use when writing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ResourceCollectionInfo.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the element extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="version">The syndication version to use when writing.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.ResourceCollectionInfo.Accepts">
      <summary>Gets a collection of resource types that can be added to the collection.</summary>
      <returns>A collection of resource types that can be added to the collection.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ResourceCollectionInfo.AttributeExtensions">
      <summary>Gets a collection of attribute extensions.</summary>
      <returns>A collection of attribute extensions.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ResourceCollectionInfo.BaseUri">
      <summary>Gets or sets the base URI for the <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" /> instance.</summary>
      <returns>The base URI for the <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ResourceCollectionInfo.Categories">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> objects.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> objects.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ResourceCollectionInfo.ElementExtensions">
      <summary>Gets the element extensions for the service document.</summary>
      <returns>The element extensions for the service document.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ResourceCollectionInfo.Link">
      <summary>Gets or sets the URI for the collection.</summary>
      <returns>The URI for the collection.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ResourceCollectionInfo.Title">
      <summary>Gets or sets the title of the collection.</summary>
      <returns>The title of the collection.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.Rss20FeedFormatter">
      <summary>A class that serializes a <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance to and from RSS 2.0 format.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <param name="feedToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to serialize.</param>
      <param name="serializeExtensionsAsAtom">A value that specifies whether to serialize elements that are defined in the Atom 1.0 specification but not in the RSS 2.0 specification. The default value is <see langword="true" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.#ctor(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <param name="feedToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> class.</summary>
      <param name="feedTypeToCreate">The instance derived from <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to be serialized.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Verifies whether the specified <see cref="T:System.Xml.XmlReader" /> contains a valid RSS 2.0 syndication feed.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <returns>A value that specifies whether the <see cref="T:System.Xml.XmlReader" /> contains a valid RSS 2.0 syndication feed.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.CreateFeedInstance">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Reads an RSS 2.0 syndication feed from the specified <see cref="T:System.Xml.XmlReader" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.ReadItem(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Reads a syndication item from <see cref="T:System.Xml.XmlReader" /> instance using the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> used to create the new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.ReadItems(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.Boolean@)">
      <summary>Reads in a collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances from the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance to use to create the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances.</param>
      <param name="areAllItemsRead">A value that specifies whether all of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances have been read from the <see cref="T:System.Xml.XmlReader" /> instance.</param>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.SetFeed(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Sets the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance associated with the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</summary>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to associate with the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /> method.</summary>
      <returns>
        <see langword="Null" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.WriteItem(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.Uri)">
      <summary>Writes the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to write.</param>
      <param name="feedBaseUri">The base URI for the feed.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.WriteItems(System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem},System.Uri)">
      <summary>Writes a collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="items">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instances to write.</param>
      <param name="feedBaseUri">The base URI for the feed.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> associated with the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20FeedFormatter.FeedType">
      <summary>The instance derived from <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> that is associated with the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</summary>
      <returns>The instance derived from <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> that is associated with the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20FeedFormatter.PreserveAttributeExtensions">
      <summary>Gets or sets a value that specifies whether to preserve attribute extensions during serialization.</summary>
      <returns>A value that specifies whether to preserve attribute extensions during serialization.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20FeedFormatter.PreserveElementExtensions">
      <summary>Gets or sets a value that specifies whether to preserve element extensions during serialization.</summary>
      <returns>A value that specifies whether to preserve element extensions during serialization.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20FeedFormatter.SerializeExtensionsAsAtom">
      <summary>Gets or sets a value that specifies whether to serialize extensions within the Atom 1.0 namespace.</summary>
      <returns>A value that specifies whether to serialize extensions within the Atom 1.0 namespace.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20FeedFormatter.Version">
      <summary>Gets the syndication version used by the formatter.</summary>
      <returns>The syndication version used by the formatter.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1">
      <summary>A class that serializes <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />-derived classes to RSS 2.0 format.</summary>
      <typeparam name="TSyndicationFeed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />-derived type to serialize.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter`1.#ctor(`0,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> derived instance.</summary>
      <param name="feedToWrite">The feed to serialize.</param>
      <param name="serializeExtensionsAsAtom">A value that specifies whether to serialize elements that are defined in the Atom 1.0 specification, but not in the RSS 2.0 specification. The default is <see langword="true" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter`1.#ctor(`0)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> derived instance.</summary>
      <param name="feedToWrite">The feed to serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20FeedFormatter`1.CreateFeedInstance">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> derived class.</summary>
      <returns>A new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.Rss20ItemFormatter">
      <summary>A class that serializes a <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to and from RSS 2.0 format.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.#ctor(System.ServiceModel.Syndication.SyndicationItem,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" /> class.</summary>
      <param name="itemToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to serialize.</param>
      <param name="serializeExtensionsAsAtom">A value that specifies whether to serialize elements that are defined in the Atom 1.0 specification but not in the RSS 2.0 specification. The default value is <see langword="true" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.#ctor(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" /> class.</summary>
      <param name="itemToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" /> class.</summary>
      <param name="itemTypeToCreate">The instance derived from <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to associate with the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Verifies whether the specified <see cref="T:System.Xml.XmlReader" /> contains a valid RSS 2.0 syndication item.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <returns>A value that specifies if the <see cref="T:System.Xml.XmlReader" /> contains a valid RSS 2.0 syndication item.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.CreateItemInstance">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Reads an RSS 2.0 syndication item from the specified <see cref="T:System.Xml.XmlReader" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /> method.</summary>
      <returns>
        <see langword="Null" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> used to read the XML document.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Implements the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write XML node.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> associated with the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20ItemFormatter.ItemType">
      <summary>Gets the type of the syndication item associated with the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" />.</summary>
      <returns>The type of the syndication item associated with the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20ItemFormatter.PreserveAttributeExtensions">
      <summary>Gets or sets a value that specifies whether to preserve attribute extensions during serialization.</summary>
      <returns>A value that specifies whether to preserve attribute extensions during serialization.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20ItemFormatter.PreserveElementExtensions">
      <summary>Gets or sets a value that specifies whether to preserve element extensions during serialization.</summary>
      <returns>A value that specifies whether to preserve element extensions during serialization.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20ItemFormatter.SerializeExtensionsAsAtom">
      <summary>Gets or sets a value that specifies whether to serialize extensions within the Atom 1.0 namespace.</summary>
      <returns>A value that specifies whether to serialize extensions within the Atom 1.0 namespace.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Rss20ItemFormatter.Version">
      <summary>Gets the syndication version used by the formatter.</summary>
      <returns>The syndication version used by the formatter.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.Rss20ItemFormatter`1">
      <summary>A class that serializes <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />-derived classes to and from RSS 2.0 format.</summary>
      <typeparam name="TSyndicationItem">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />-derived type to serialize.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter`1" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter`1.#ctor(`0,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter`1" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> derived instance.</summary>
      <param name="itemToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to serialize.</param>
      <param name="serializeExtensionsAsAtom">A value that specifies whether to serialize elements that are defined in the Atom 1.0 specification but not in the RSS 2.0 specification. The default value is <see langword="true" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter`1.#ctor(`0)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20ItemFormatter`1" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> derived instance.</summary>
      <param name="itemToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Rss20ItemFormatter`1.CreateItemInstance">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> derived class.</summary>
      <returns>A new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.ServiceDocument">
      <summary>Represents a service document.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.Workspace})">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> class, initializing it with the specified collection of <see cref="T:System.ServiceModel.Syndication.Workspace" /> instances.</summary>
      <param name="workspaces">A collection of workspaces.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.CreateWorkspace">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.Workspace" /> instance.</summary>
      <returns>A new workspace.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.GetFormatter">
      <summary>Gets a <see cref="T:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.ServiceDocumentFormatter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.Load(System.Xml.XmlReader)">
      <summary>Loads a service document from the specified <see cref="T:System.Xml.XmlReader" /> into a <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read the service document from.</param>
      <returns>A <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.Load``1(System.Xml.XmlReader)">
      <summary>Loads a service document from the specified <see cref="T:System.Xml.XmlReader" /> into a <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> derived instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read the service document from.</param>
      <typeparam name="TServiceDocument">The type of the service document.</typeparam>
      <returns>A <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.Save(System.Xml.XmlWriter)">
      <summary>Saves the <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> instance to the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlReader" /> to save the service document to.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Attempts to parse an attribute extension.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the attribute is successfully parsed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Attempts to parse an element extension.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the element is successfully parsed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlReader" /> to write to.</param>
      <param name="version">The syndication version to use when writing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocument.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the element extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="version">The syndication version to use when writing.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.ServiceDocument.AttributeExtensions">
      <summary>Gets a collection of attribute extensions.</summary>
      <returns>A collection of attribute extensions.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ServiceDocument.BaseUri">
      <summary>Gets or sets the base URI for the <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> instance.</summary>
      <returns>The base URI.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ServiceDocument.ElementExtensions">
      <summary>Gets the element extensions for the service document.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> instance containing the element extensions.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ServiceDocument.Language">
      <summary>Gets or sets the language of the service document.</summary>
      <returns>The language of the service document.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ServiceDocument.Workspaces">
      <summary>Gets a collection of workspaces contained within the service document.</summary>
      <returns>A collection of workspaces.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.ServiceDocumentFormatter">
      <summary>An abstract class used as a base class for other formatters, such as <see cref="T:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.ServiceDocumentFormatter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.#ctor(System.ServiceModel.Syndication.ServiceDocument)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.ServiceDocumentFormatter" /> class.</summary>
      <param name="documentToWrite">The <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> to serialize.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Verifies whether the specified <see cref="T:System.Xml.XmlReader" /> contains a valid service document.</summary>
      <param name="reader">An XML reader to check.</param>
      <returns>
        <see langword="true" />, if the XML reader contains a valid service document, otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.CreateCategory(System.ServiceModel.Syndication.InlineCategoriesDocument)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> class.</summary>
      <param name="inlineCategories">An <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" /> instance used to create the new categories document.</param>
      <returns>Returns a new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.CreateCollection(System.ServiceModel.Syndication.Workspace)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" /> instance.</summary>
      <param name="workspace">A <see cref="T:System.ServiceModel.Syndication.Workspace" /> instance used to create the new collection.</param>
      <returns>Returns a new <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.CreateDocumentInstance">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> instance.</summary>
      <returns>Returns a new <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.CreateInlineCategories(System.ServiceModel.Syndication.ResourceCollectionInfo)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</summary>
      <param name="collection">The <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" /> to use to create the new <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" />.</param>
      <returns>Returns a new <see cref="T:System.ServiceModel.Syndication.InlineCategoriesDocument" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.CreateReferencedCategories(System.ServiceModel.Syndication.ResourceCollectionInfo)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" />.</summary>
      <param name="collection">The <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" /> instance to use to create the new <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" />.</param>
      <returns>Returns a new <see cref="T:System.ServiceModel.Syndication.ReferencedCategoriesDocument" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.CreateWorkspace(System.ServiceModel.Syndication.ServiceDocument)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.Workspace" />.</summary>
      <param name="document">The <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> to use to create the new workspace.</param>
      <returns>Returns a new <see cref="T:System.ServiceModel.Syndication.Workspace" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.CategoriesDocument,System.Int32)">
      <summary>Loads element extensions.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="categories">The <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> to use to read the element extensions.</param>
      <param name="maxExtensionSize">The maximum size of an element extension to be loaded.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.ResourceCollectionInfo,System.Int32)">
      <summary>Loads element extensions.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="collection">The <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" /> to use to load the element extensions.</param>
      <param name="maxExtensionSize">The maximum size of an extension to load.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.ServiceDocument,System.Int32)">
      <summary>Loads element extensions.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="document">The <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> to use to read the element extensions.</param>
      <param name="maxExtensionSize">The maximum size of an extension to load.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.Workspace,System.Int32)">
      <summary>Loads element extensions.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="workspace">The <see cref="T:System.ServiceModel.Syndication.Workspace" /> to use to load the element extensions.</param>
      <param name="maxExtensionSize">The maximum size of an extension to load.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Reads a service document from the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.SetDocument(System.ServiceModel.Syndication.ServiceDocument)">
      <summary>Sets the <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> to write.</summary>
      <param name="document">The <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> to write.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.CategoriesDocument,System.String)">
      <summary>Attempts to parse an attribute extension.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="categories">The <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> to use to parse the attribute extension.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the attribute extension was successfully parsed.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.ResourceCollectionInfo,System.String)">
      <summary>Attempts to parse an attribute extension.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="collection">The <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" /> to use to parse the attribute.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the attribute extension was parsed successfully; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.ServiceDocument,System.String)">
      <summary>Attempts to parse an attribute extensions.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute extension to parse.</param>
      <param name="document">The <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> to use to parse the attribute extension.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the attribute extension was parsed successfully; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.Workspace,System.String)">
      <summary>Attempts to parse an attribute extension.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="workspace">The <see cref="T:System.ServiceModel.Syndication.Workspace" /> to use to parse the attribute.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the attribute extension was parsed successfully; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.CategoriesDocument,System.String)">
      <summary>Attempts to parse an element extension.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="categories">The <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> to use to parse the element extension.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the element extension was parsed successfully; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.ResourceCollectionInfo,System.String)">
      <summary>Attempts to parse an element extension.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="collection">The <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" /> to use to parse the element extension.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the element extension was parsed successfully; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.ServiceDocument,System.String)">
      <summary>Attempts to parse an element extension.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="document">The <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> to use to parse the element extension.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the element extension was successfully parsed.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.Workspace,System.String)">
      <summary>Attempts to parse an element extension.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="workspace">The <see cref="T:System.ServiceModel.Syndication.Workspace" /> to use to parse the element extension.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the element extension was parsed successfully; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.CategoriesDocument,System.String)">
      <summary>Writes attribute extensions.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="categories">The <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> to use to write the element extensions.</param>
      <param name="version">The syndication version to use when writing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.ResourceCollectionInfo,System.String)">
      <summary>Writes attribute extensions.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="collection">The <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" /> to use to write the attribute extensions.</param>
      <param name="version">The syndication version to use when writing the attribute extensions.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.ServiceDocument,System.String)">
      <summary>Writes attribute extensions.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="document">The <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> to use to write the attribute extensions.</param>
      <param name="version">The syndication version to use when writing the attribute extensions.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.Workspace,System.String)">
      <summary>Writes attribute extensions.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="workspace">The <see cref="T:System.ServiceModel.Syndication.Workspace" /> to use to write the attribute extensions.</param>
      <param name="version">The syndication version to use when writing the attribute extensions.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.CategoriesDocument,System.String)">
      <summary>Writes element extensions.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="categories">The  <see cref="T:System.ServiceModel.Syndication.CategoriesDocument" /> to use to write the element extensions.</param>
      <param name="version">The syndication version to use when writing the element extensions.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.ResourceCollectionInfo,System.String)">
      <summary>Writes element extensions.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="collection">The <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" /> to use to write the element extensions.</param>
      <param name="version">The syndication version to use when writing the element extensions.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.ServiceDocument,System.String)">
      <summary>Writes element extensions.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="document">The <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> to use to write the element extensions.</param>
      <param name="version">The syndication version to use when writing the element extensions.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.Workspace,System.String)">
      <summary>Writes element extensions.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="workspace">The <see cref="T:System.ServiceModel.Syndication.Workspace" /> to use to write the element extensions.</param>
      <param name="version">The syndication version to use when writing the element extensions.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.ServiceDocumentFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes a service document to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.ServiceDocumentFormatter.Document">
      <summary>Gets the <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> associated with the formatter.</summary>
      <returns>The <see cref="T:System.ServiceModel.Syndication.ServiceDocument" /> associated with the formatter.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.ServiceDocumentFormatter.Version">
      <summary>Gets the version of the formatter.</summary>
      <returns>The version of the formatter.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationCategory">
      <summary>A class that represents the category of a syndication feed.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor(System.ServiceModel.Syndication.SyndicationCategory)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</summary>
      <param name="source">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance to initialize the new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> class with the specified name, scheme, and label.</summary>
      <param name="name">The name of the category.</param>
      <param name="scheme">A Uniform Resource Identifier (URI) that represents the categorization scheme to which this category belongs.</param>
      <param name="label">A human-readable attribute that describes the category.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> class with the given name.</summary>
      <param name="name">The name of the category.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.Clone">
      <summary>Creates a copy of a <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Attempts to parse an attribute extension.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
      <returns>A value that specifies whether the attribute extension was parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Attempts to parse an element extension.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="version">The syndication version to use while parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
      <returns>A value that specifies whether the element extension has been parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the attribute extensions to the specified writer.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="version">The syndication version to use while writing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationCategory.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the element extensions to the specified writer.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="version">The syndication version to use while writing.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationCategory.AttributeExtensions">
      <summary>Gets the attribute extensions for this category.</summary>
      <returns>The attribute extensions for this category.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationCategory.ElementExtensions">
      <summary>Gets the element extensions for this category.</summary>
      <returns>A collection of element extensions.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationCategory.Label">
      <summary>Gets or sets the label of the category.</summary>
      <returns>The label of the category.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationCategory.Name">
      <summary>Gets or sets the name of the category.</summary>
      <returns>The name of the category.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationCategory.Scheme">
      <summary>Gets or sets the scheme of the category.</summary>
      <returns>The scheme of the category.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationContent">
      <summary>A base class that represents syndication content.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.#ctor(System.ServiceModel.Syndication.SyndicationContent)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance.</summary>
      <param name="source">The <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance to use to initialize the new instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.Clone">
      <summary>Creates a copy of the <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance.</summary>
      <returns>A copy of the <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateHtmlContent(System.String)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance with the specified HTML content.</summary>
      <param name="content">The text of the content.</param>
      <returns>A <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreatePlaintextContent(System.String)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance with the specified plain text content.</summary>
      <param name="content">The plain text content.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateUrlContent(System.Uri,System.String)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> instance with the specified <see cref="T:System.Uri" /> and media type.</summary>
      <param name="url">The <see cref="T:System.Uri" /> of the content.</param>
      <param name="mediaType">The media type of the content.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateXhtmlContent(System.String)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance with the specified XHTML content.</summary>
      <param name="content">The XHTML content.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateXmlContent(System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> instance with the specified data contract object and data contract serializer.</summary>
      <param name="dataContractObject">The data contract object.</param>
      <param name="dataContractSerializer">The data contract serializer.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateXmlContent(System.Object,System.Xml.Serialization.XmlSerializer)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> instance with the specified object and XML serializer.</summary>
      <param name="xmlSerializerObject">The object.</param>
      <param name="serializer">The XML serializer.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateXmlContent(System.Object)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> instance with the specified data contract object.</summary>
      <param name="dataContractObject">The data contract object.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.CreateXmlContent(System.Xml.XmlReader)">
      <summary>Creates XML syndication content.</summary>
      <param name="xmlReader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <returns>An instance of the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> class that contains the new content.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.WriteContentsTo(System.Xml.XmlWriter)">
      <summary>Writes the contents of this <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> object to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationContent.WriteTo(System.Xml.XmlWriter,System.String,System.String)">
      <summary>Writes the contents of this object to the specified <see cref="T:System.Xml.XmlWriter" /> within the specified element and element namespace.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="outerElementName">The name of the element.</param>
      <param name="outerElementNamespace">The namespace of the element.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationContent.AttributeExtensions">
      <summary>Gets the attribute extensions for this content.</summary>
      <returns>A dictionary that contains the attribute extensions for this object.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationContent.Type">
      <summary>Gets the syndication content type.</summary>
      <returns>The name of the type of syndication content.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationElementExtension">
      <summary>A class that represents a syndication element extension.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.#ctor(System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> class with the specified object and data contract serializer.</summary>
      <param name="dataContractExtension">The data contract object used to initialize the extension.</param>
      <param name="dataContractSerializer">The data contract serializer to use.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.#ctor(System.Object,System.Xml.Serialization.XmlSerializer)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> class with the specified object and XML serializer.</summary>
      <param name="xmlSerializerExtension">The object used to initialize the extension.</param>
      <param name="serializer">The XML serializer to use.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> class with the specified object.</summary>
      <param name="dataContractExtension">The data contract object used to initialize the extension.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.#ctor(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> class with the specified outer name, outer namespace, object, and data contract serializer.</summary>
      <param name="outerName">The name of the enclosing XML element.</param>
      <param name="outerNamespace">The namespace of the enclosing XML element.</param>
      <param name="dataContractExtension">The object used to initialize the extension.</param>
      <param name="dataContractSerializer">The data contract serializer to use.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.#ctor(System.String,System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> class with the specified outer name, outer namespace, and object.</summary>
      <param name="outerName">The name of the enclosing XML element.</param>
      <param name="outerNamespace">The namespace of the enclosing XML element.</param>
      <param name="dataContractExtension">The object used to initialize the extension.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.#ctor(System.Xml.XmlReader)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> class.</summary>
      <param name="xmlReader">The <see cref="T:System.Xml.XmlReader" /> that contains the content of the new <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.GetObject``1">
      <summary>Gets the object that represents the element extension.</summary>
      <typeparam name="TExtension">The type of the extension to retrieve.</typeparam>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type is not a valid data contract.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The input XML cannot be deserialized into the requested type.</exception>
      <returns>An object of the specified type that contains the element extension.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.GetObject``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Gets the object that represents the element extension.</summary>
      <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> to use.</param>
      <typeparam name="TExtension">The type of the extension to retrieve.</typeparam>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type is not a valid data contract.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The input XML cannot be deserialized into the requested type.</exception>
      <returns>An object of the specified type that contains the element extension.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.GetObject``1(System.Xml.Serialization.XmlSerializer)">
      <summary>Gets the object that represents the element extension.</summary>
      <param name="serializer">The <see cref="T:System.Xml.Serialization.XmlSerializer" /> to use.</param>
      <typeparam name="TExtension">The type of the extension to retrieve.</typeparam>
      <exception cref="T:System.InvalidOperationException">The input XML cannot be deserialized into the requested type.</exception>
      <returns>An object of the specified type that contains the element extension.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.GetReader">
      <summary>Gets the <see cref="T:System.Xml.XmlReader" /> associated with the <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" />.</summary>
      <returns>The <see cref="T:System.Xml.XmlReader" /> associated with the <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtension.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes the current extension to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationElementExtension.OuterName">
      <summary>Gets the outer name of the element extension.</summary>
      <returns>The outer name of the element extension.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationElementExtension.OuterNamespace">
      <summary>Gets the outer namespace of the element extension.</summary>
      <returns>The outer namespace of the element extension.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection">
      <summary>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> objects.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.Add(System.Object,System.Runtime.Serialization.DataContractSerializer)">
      <summary>Adds the specified object to the collection using the specified data contract serializer.</summary>
      <param name="dataContractExtension">The object to add to the collection.</param>
      <param name="serializer">The serializer to use.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.Add(System.Object,System.Xml.Serialization.XmlSerializer)">
      <summary>Adds the specified object to the collection using the specified XML serializer.</summary>
      <param name="xmlSerializerExtension">The object to add to the collection.</param>
      <param name="serializer">The XML serializer to use.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.Add(System.Object)">
      <summary>Adds the specified <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> object to the collection.</summary>
      <param name="extension">The <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> object to add.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.Add(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Adds the specified object to the collection with the specified outer name and outer namespace using the specified data contract serializer.</summary>
      <param name="outerName">The outer name.</param>
      <param name="outerNamespace">The outer namespace.</param>
      <param name="dataContractExtension">The object to add to the collection.</param>
      <param name="dataContractSerializer">The serializer to use.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.Add(System.String,System.String,System.Object)">
      <summary>Adds the specified object to the collection with the specified outer name and outer namespace.</summary>
      <param name="outerName">The outer name.</param>
      <param name="outerNamespace">The outer namespace.</param>
      <param name="dataContractExtension">The object to add to the collection.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.Add(System.Xml.XmlReader)">
      <summary>Adds a new syndication element extension to the collection.</summary>
      <param name="xmlReader">The <see cref="T:System.Xml.XmlReader" /> to read the syndication element extension from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.GetReaderAtElementExtensions">
      <summary>Gets an <see cref="T:System.Xml.XmlReader" /> with the element extensions.</summary>
      <returns>An <see cref="T:System.Xml.XmlReader" /> that contains the element extensions.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.ReadElementExtensions``1(System.String,System.String,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Reads the element extensions with the specified name and namespace.</summary>
      <param name="extensionName">The name of the element extension.</param>
      <param name="extensionNamespace">The namespace of the element extension.</param>
      <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> to use.</param>
      <typeparam name="TExtension">The type of the extension to read.</typeparam>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type is not a valid data contract.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The input XML cannot be deserialized into the requested type.</exception>
      <returns>A collection of element extension objects.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.ReadElementExtensions``1(System.String,System.String,System.Xml.Serialization.XmlSerializer)">
      <summary>Reads the element extensions with the specified name and namespace.</summary>
      <param name="extensionName">The name of the element extension.</param>
      <param name="extensionNamespace">The namespace of the element extension.</param>
      <param name="serializer">The <see cref="T:System.Xml.Serialization.XmlSerializer" /> to use.</param>
      <typeparam name="TExtension">The type of the extension to read.</typeparam>
      <exception cref="T:System.InvalidOperationException">The input XML cannot be deserialized into the requested type.</exception>
      <returns>A collection of element extension objects.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationElementExtensionCollection.ReadElementExtensions``1(System.String,System.String)">
      <summary>Reads the element extensions with the specified name and namespace.</summary>
      <param name="extensionName">The name of the element extension.</param>
      <param name="extensionNamespace">The namespace of the element extension.</param>
      <typeparam name="TExtension">The type of the extension to read.</typeparam>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">The type is not a valid data contract.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The input XML cannot be deserialized into the requested type.</exception>
      <returns>A collection of element extension objects.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationFeed">
      <summary>Represents a top-level feed object, &lt;<see langword="feed" />&gt; in Atom 1.0 and &lt;<see langword="rss" />&gt; in RSS 2.0.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</summary>
      <param name="items">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified feed.</summary>
      <param name="source">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> used to initialize the new instance.</param>
      <param name="cloneItems">A value that specifies whether to clone the items in the source instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified title, description, URI, and collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</summary>
      <param name="title">The title of the feed.</param>
      <param name="description">The description of the feed.</param>
      <param name="feedAlternateLink">The URI for the feed.</param>
      <param name="items">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</summary>
      <param name="title">The syndication feed title.</param>
      <param name="description">The syndication feed description.</param>
      <param name="feedAlternateLink">The alternate URI for the syndication feed.</param>
      <param name="id">The ID of the syndication feed.</param>
      <param name="lastUpdatedTime">The <see cref="T:System.DateTimeOffset" /> that contains the last time the syndication feed was updated.</param>
      <param name="items">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</summary>
      <param name="title">The syndication feed title.</param>
      <param name="description">The syndication feed description.</param>
      <param name="feedAlternateLink">The alternate URI for the syndication feed.</param>
      <param name="id">The ID of the syndication feed.</param>
      <param name="lastUpdatedTime">The <see cref="T:System.DateTimeOffset" /> that contains the last time the syndication feed was updated.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified title, description, and Uniform Resource Identifier (URI).</summary>
      <param name="title">The title of the feed.</param>
      <param name="description">The description of the feed.</param>
      <param name="feedAlternateLink">The URI for the feed.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.Clone(System.Boolean)">
      <summary>Creates a copy of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <param name="cloneItems">A value that specifies whether the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects are cloned.</param>
      <returns>A duplicate <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.CreateCategory">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.CreateItem">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.CreateLink">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.CreatePerson">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.GetAtom10Formatter">
      <summary>Gets an <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> instance.</summary>
      <returns>An <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter">
      <summary>Gets an <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</summary>
      <returns>An <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter(System.Boolean)">
      <summary>Gets a new <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</summary>
      <param name="serializeExtensionsAsAtom">A value that specifies whether to serialize element and attribute extensions with an Atom 1.0 namespace.</param>
      <returns>An <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.Load(System.Xml.XmlReader)">
      <summary>Loads a syndication feed from the specified XML reader.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to load the feed from.</param>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> that contains the loaded contents.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)">
      <summary>Loads a <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />-derived instance from the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <typeparam name="TSyndicationFeed">The syndication feed type.</typeparam>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />-derived instance that contains the feed.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsAtom10(System.Xml.XmlWriter)">
      <summary>Write the syndication feed to the specified <see cref="T:System.Xml.XmlWriter" /> in Atom 1.0 format.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsRss20(System.Xml.XmlWriter)">
      <summary>Write the syndication feed to the specified <see cref="T:System.Xml.XmlWriter" /> in RSS 2.0 format.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Attempts to parse an attribute extension.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML Encountered during read.</exception>
      <returns>A value that specifies whether the attribute extension was parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Attempts to parse an element extension.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="version">The syndication version to use while parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
      <returns>A value that specifies whether the element extension was parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlReader" /> to write to.</param>
      <param name="version">The syndication version to use while writing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the element extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlReader" /> to write to.</param>
      <param name="version">The syndication version to use while writing.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
      <summary>Gets a collection of attribute extensions.</summary>
      <returns>A dictionary that contains a collection of attribute extensions.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Authors">
      <summary>Gets a collection of authors of the feed.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> objects that represents the authors of the feed.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.BaseUri">
      <summary>Gets or sets the base URI for the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <returns>The base URI for the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Categories">
      <summary>Gets a collection of categories for the feed.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> objects that represent the categories for the feed.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors">
      <summary>Gets a collection of the contributors to the feed.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> objects that represents the contributors to the feed.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright">
      <summary>Gets or sets copyright information for the feed.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> object that represents copyright information for the feed.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Description">
      <summary>Gets or sets a description of the feed.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> object that represents the description of the feed.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Documentation">
      <summary>Gets or sets the link to documentation for the feed.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance that contains a link to documentation for the feed.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions">
      <summary>Gets the element extensions for the feed.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> instance that contains the element extensions in the feed.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Generator">
      <summary>Gets or sets the generator of the feed.</summary>
      <returns>The name of the tool that generated the feed.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Id">
      <summary>Gets or sets the ID of the feed.</summary>
      <returns>The ID of the feed.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl">
      <summary>Gets or sets the image URL for the feed.</summary>
      <returns>The URL for the image for the feed.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Items">
      <summary>Gets a collection of the feed items contained in the feed.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Language">
      <summary>Gets or sets the language of the feed.</summary>
      <returns>The name of the language the feed is written in.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime">
      <summary>Gets or sets the time the feed was last updated.</summary>
      <returns>A <see cref="T:System.DateTimeOffset" /> instance set to the time the feed was last updated.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Links">
      <summary>Gets the links associated with the feed.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> objects.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.SkipDays">
      <summary>Gets a collection of strings indicating the set of values in the 'skipDays' element for the feed.</summary>
      <returns>A collection of strings indicating the days when aggregators should skip updating the feed.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.SkipHours">
      <summary>Gets a collection of integers indicating the set of values in the 'skipHours' element for the feed.</summary>
      <returns>A collection of integer numbers indicating the hours where aggregators should skip updating the feed.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.TextInput">
      <summary>Gets or sets the TextInput property for the feed.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationTextInput" /> instance that contains required parameters for the RSS <c>textInput</c> item for the feed.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.TimeToLive">
      <summary>Gets or sets the 'ttl' attribute for the feed.</summary>
      <returns>A integer number indicating the number of minutes the feed can stay cached before refreshing it from the source.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeed.Title">
      <summary>Gets or sets the title of the feed.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance that contains the title of the feed.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationFeedFormatter">
      <summary>An abstract class used as a base class for other formatters, (for example <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" />).</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.#ctor(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <param name="feedToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to write.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Verifies whether the specified <see cref="T:System.Xml.XmlReader" /> contains a valid syndication feed.</summary>
      <param name="reader">An XML reader to check.</param>
      <returns>
        <see langword="true" />, if the XML reader contains a valid syndication feed, otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreateCategory(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> class using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> used to create the new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreateCategory(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> class using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> used to create the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreateFeedInstance">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreateItem(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> used to create the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreateLink(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />.</summary>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to use to create the new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreateLink(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to use to create the new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreatePerson(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance used to create the new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.CreatePerson(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance used to create the new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationCategory,System.Int32)">
      <summary>Loads element extensions into the specified <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> using the specified <see cref="T:System.Xml.XmlReader" /> and maximum extension size.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> to load the element extensions into.</param>
      <param name="maxExtensionSize">The maximum allowable size for an element extension (in bytes).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.Int32)">
      <summary>Loads element extensions into the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> using the specified <see cref="T:System.Xml.XmlReader" /> and maximum extension size.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to load the element extensions into.</param>
      <param name="maxExtensionSize">The maximum allowable size for an element extension (in bytes).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationItem,System.Int32)">
      <summary>Loads element extensions into the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> using the specified <see cref="T:System.Xml.XmlReader" /> and maximum extension size.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to load the element extensions into.</param>
      <param name="maxExtensionSize">The maximum allowable size for an element extension (in bytes).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationLink,System.Int32)">
      <summary>Loads element extensions into the specified <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> using the specified <see cref="T:System.Xml.XmlReader" /> and maximum extension size.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> to load the element extensions into.</param>
      <param name="maxExtensionSize">The maximum allowable size for an element extension (in bytes).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationPerson,System.Int32)">
      <summary>Loads element extensions into the specified <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> using the specified <see cref="T:System.Xml.XmlReader" /> and maximum extension size.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> to load the element extensions into.</param>
      <param name="maxExtensionSize">The maximum allowable size for an element extension (in bytes).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Reads in a <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> from the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.SetFeed(System.ServiceModel.Syndication.SyndicationFeed)">
      <summary>Associates a <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance with the <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" />.</summary>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to associate with the <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.ToString">
      <summary>Gets a string representation of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" /> instance.</summary>
      <returns>The <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Attempts to parse an attribute extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the attribute was parsed successfully; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationFeed,System.String)">
      <summary>Attempts to parse an attribute extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the attribute was parsed successfully; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Attempts to parse an attribute extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the attribute was parsed successfully; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Attempts to parse an attribute extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the attribute was parsed successfully; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Attempts to parse an attribute extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the attribute was parsed successfully; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseContent(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationItem,System.String,System.String,System.ServiceModel.Syndication.SyndicationContent@)">
      <summary>Attempts to parse syndication item content using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to use.</param>
      <param name="contentType">The content type.</param>
      <param name="version">The syndication version to use while parsing.</param>
      <param name="content">The content to parse.</param>
      <returns>
        <see langword="true" /> if the content was parsed successfully; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Attempts to parse an element extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the element was parsed successfully; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.String)">
      <summary>Attempts to parse an element extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the element was parsed successfully; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Attempts to parse an element extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the element was parsed successfully; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Attempts to parse an element extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the element was parsed successfully; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Attempts to parse an element extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the element was parsed successfully; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Writes the attribute extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance that contains the attribute extensions to be written.</param>
      <param name="version">The syndication version to write the attribute extensions in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationFeed,System.String)">
      <summary>Writes the attribute extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance that contains the attribute extensions to be written.</param>
      <param name="version">The syndication version to write the attribute extensions in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Writes the attribute extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance that contains the attribute extensions to be written.</param>
      <param name="version">The syndication version to write the attribute extensions in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Writes the attribute extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance that contains the attribute extensions to be written.</param>
      <param name="version">The syndication version to write the attribute extensions in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Writes the attribute extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance that contains the attribute extensions to be written.</param>
      <param name="version">The syndication version to write the attribute extensions in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Writes the element extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance that contains the element extensions to be written.</param>
      <param name="version">The syndication version the extensions are written in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationFeed,System.String)">
      <summary>Writes the element extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="feed">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance that contains the element extensions to be written.</param>
      <param name="version">The syndication version the extensions are written in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Writes the element extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance that contains the element extensions to be written.</param>
      <param name="version">The syndication version the extensions are written in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Writes the element extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance that contains the element extensions to be written.</param>
      <param name="version">The syndication version the extensions are written in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Writes the element extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance that contains the element extensions to be written.</param>
      <param name="version">The syndication version the extensions are written in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationFeedFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to the specified <see cref="T:System.Xml.XmlWriter" /> instance.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> to.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeedFormatter.DateTimeParser">
      <summary>Delegate that is used by the <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" /> class for converting <see cref="T:System.ServiceModel.Syndication.XmlDateTimeData" /> string data to <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>The <see cref="T:System.ServiceModel.Syndication.TryParseDateTimeCallback" /> that is used for converting string data from <see cref="T:System.ServiceModel.Syndication.XmlDateTimeData" /> to a <see cref="T:System.DateTimeOffset" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeedFormatter.Feed">
      <summary>Gets the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> associated with the formatter.</summary>
      <returns>The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> associated with the formatter.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeedFormatter.UriParser">
      <summary>Delegate that is used by the <see cref="T:System.ServiceModel.Syndication.SyndicationFeedFormatter" /> class for creating <see cref="T:System.Uri" /> instances from string input.</summary>
      <returns>The <see cref="T:System.ServiceModel.Syndication.TryParseUriCallback" /> that is used for creating Uri instances from string input.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationFeedFormatter.Version">
      <summary>Gets the syndication version of the formatter.</summary>
      <returns>The syndication version of the formatter.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationItem">
      <summary>Represents a feed item, for example an RSS <see langword="&lt;item&gt;" /> or an Atom <see langword="&lt;entry&gt;" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.#ctor(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <param name="source">A <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance used to initialize the new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.#ctor(System.String,System.ServiceModel.Syndication.SyndicationContent,System.Uri,System.String,System.DateTimeOffset)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class.</summary>
      <param name="title">The title of the syndication item.</param>
      <param name="content">A <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance containing the content of the syndication item.</param>
      <param name="itemAlternateLink">The alternate URI for the syndication item.</param>
      <param name="id">The ID of the syndication item.</param>
      <param name="lastUpdatedTime">The <see cref="T:System.DateTimeOffset" /> that contains the last time the syndication item was last updated.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class.</summary>
      <param name="title">The title of the syndication item.</param>
      <param name="content">The content of the syndication item.</param>
      <param name="itemAlternateLink">The alternate URI for the syndication item.</param>
      <param name="id">The ID of the syndication item.</param>
      <param name="lastUpdatedTime">The <see cref="T:System.DateTimeOffset" /> that contains the last time the syndication item was last updated.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.#ctor(System.String,System.String,System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class with the specified title, content, and link.</summary>
      <param name="title">The item title.</param>
      <param name="content">The item content.</param>
      <param name="itemAlternateLink">The item URL.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.AddPermalink(System.Uri)">
      <summary>Adds a permalink to the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</summary>
      <param name="permalink">The <see cref="T:System.Uri" /> that points to the content.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.Clone">
      <summary>Creates a copy of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.CreateCategory">
      <summary>Creates a new category.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.CreateLink">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.CreatePerson">
      <summary>Creates a new person.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.GetAtom10Formatter">
      <summary>Gets an <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.GetRss20Formatter">
      <summary>Gets an <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</summary>
      <returns>An <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.GetRss20Formatter(System.Boolean)">
      <summary>Gets an <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</summary>
      <param name="serializeExtensionsAsAtom">A value that specifies whether to serialize element and attribute extensions with an Atom 1.0 namespace.</param>
      <returns>An <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.Load(System.Xml.XmlReader)">
      <summary>Loads a <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance from the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.Load``1(System.Xml.XmlReader)">
      <summary>Loads a <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> derived object from the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <typeparam name="TSyndicationItem">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />-derived class to load.</typeparam>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> derived object that contains the syndication item.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.SaveAsAtom10(System.Xml.XmlWriter)">
      <summary>Write the syndication item to the specified <see cref="T:System.Xml.XmlWriter" /> in Atom 1.0 format.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.SaveAsRss20(System.Xml.XmlWriter)">
      <summary>Write the syndication item to the specified <see cref="T:System.Xml.XmlWriter" /> in RSS 2.0 format.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Attempts to parse an attribute extension.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
      <returns>A value that specifies whether the attribute extension was parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.TryParseContent(System.Xml.XmlReader,System.String,System.String,System.ServiceModel.Syndication.SyndicationContent@)">
      <summary>Attempts to parse content.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="contentType">The content type of the content.</param>
      <param name="version">The syndication version to use while parsing.</param>
      <param name="content">The <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance to load the parsed content into.</param>
      <returns>A value that specifies whether the content was parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Attempts to parse an element extension.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="version">The syndication version to use while parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
      <returns>A value that specifies whether the element extension was parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlReader" /> to write to.</param>
      <param name="version">The syndication version to use while writing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItem.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the element extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specific syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlReader" /> to write to.</param>
      <param name="version">The syndication version to use while writing.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.AttributeExtensions">
      <summary>Gets the attribute extensions for the syndication item.</summary>
      <returns>A dictionary that contains a collection of attribute extensions.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Authors">
      <summary>Gets the authors of the syndication item.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> objects that represent the authors of the syndication item.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.BaseUri">
      <summary>Gets or sets the base Uniform Resource Identifier (URI) for the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <returns>The base URI of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Categories">
      <summary>Gets the syndication categories for the syndication item.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> objects that represent the categories of the syndication item.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Content">
      <summary>Gets or sets the content of the syndication item.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance that contains the content of the syndication item.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Contributors">
      <summary>Gets the contributors of the syndication item.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> objects that represent the contributors of the syndication item.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Copyright">
      <summary>Gets or sets the copyright information for the syndication item.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance that represents copyright information.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.ElementExtensions">
      <summary>Gets the element extensions contained in the syndication item.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> that contains the element extensions.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Id">
      <summary>Gets or sets the ID of the syndication item.</summary>
      <returns>The ID of the syndication item.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.LastUpdatedTime">
      <summary>Gets or sets the last updated time for the syndication item.</summary>
      <returns>A <see cref="T:System.DateTimeOffset" /> instance that represents the time the syndication item was last updated.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Links">
      <summary>Gets the links contained in the syndication item.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> objects.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.PublishDate">
      <summary>Gets or sets the publish date for the syndication item.</summary>
      <returns>A <see cref="T:System.DateTimeOffset" /> object that represents the publish date for the syndication item.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.SourceFeed">
      <summary>Gets or sets the source feed of the syndication item.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance where the syndication item is located.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Summary">
      <summary>Gets or sets the summary of the syndication item.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> that contains a summary of the item.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItem.Title">
      <summary>Gets or sets the title of the syndication item.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> object that contains the title of the syndication item.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationItemFormatter">
      <summary>An abstract class used as a base class for other formatters, (for example, <see cref="T:System.ServiceModel.Syndication.Atom10ItemFormatter" />).</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.#ctor(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <param name="itemToWrite">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to write.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.CanRead(System.Xml.XmlReader)">
      <summary>Verifies whether the specified <see cref="T:System.Xml.XmlReader" /> contains a valid syndication item.</summary>
      <param name="reader">An XML reader to check.</param>
      <returns>
        <see langword="true" />, if the XML reader contains a valid syndication item, otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.CreateCategory(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> class using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> used to create the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" />.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.CreateItemInstance">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.CreateLink(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class.</summary>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to use to create the new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.CreatePerson(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance used to create the new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationCategory,System.Int32)">
      <summary>Loads element extensions into the specified <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> using the specified <see cref="T:System.Xml.XmlReader" /> and maximum extension size.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> to load the element extensions into.</param>
      <param name="maxExtensionSize">The maximum allowable size for an element extension (in bytes).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationItem,System.Int32)">
      <summary>Loads element extensions into the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> using the specified <see cref="T:System.Xml.XmlReader" /> and maximum extension size.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to load the element extensions into.</param>
      <param name="maxExtensionSize">The maximum allowable size for an element extension (in bytes).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationLink,System.Int32)">
      <summary>Loads element extensions into the specified <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> using the specified <see cref="T:System.Xml.XmlReader" /> and maximum extension size.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> to load the element extensions into.</param>
      <param name="maxExtensionSize">The maximum allowable size for an element extension (in bytes).</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.LoadElementExtensions(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationPerson,System.Int32)">
      <summary>Loads element extensions into the specified <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> using the specified <see cref="T:System.Xml.XmlReader" /> and maximum extension size.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> to load the element extensions into.</param>
      <param name="maxExtensionSize">The maximum allowable size for an element extension (in bytes).</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.ReadFrom(System.Xml.XmlReader)">
      <summary>Reads in a <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> from the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.SetItem(System.ServiceModel.Syndication.SyndicationItem)">
      <summary>Associates a <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance with the <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter" />.</summary>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to associate with the <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.ToString">
      <summary>Gets a string representation of the <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter" /> instance.</summary>
      <returns>The <see cref="T:System.ServiceModel.Syndication.SyndicationItemFormatter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Attempts to parse an attribute extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>A value that indicates whether the attribute was parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Attempts to parse an attribute extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>A value that indicates whether the attribute was parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Attempts to parse an attribute extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>A value that indicates whether the attribute was parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseAttribute(System.String,System.String,System.String,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Attempts to parse an attribute extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>A value that indicates whether the attribute was parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseContent(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationItem,System.String,System.String,System.ServiceModel.Syndication.SyndicationContent@)">
      <summary>Attempts to parse syndication item content using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to use.</param>
      <param name="contentType">The content type.</param>
      <param name="version">The syndication version to use while parsing.</param>
      <param name="content">The content to parse.</param>
      <returns>A value that indicates whether the content was parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Attempts to parse an element extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>A value that indicates whether the element was parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Attempts to parse an element extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>A value that indicates whether the element was parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Attempts to parse an element extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>A value that indicates whether the element was parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.TryParseElement(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Attempts to parse an element extension using the specified <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance to use.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>A value that indicates whether the element was parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Writes the attribute extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance that contains the attribute extensions to be written.</param>
      <param name="version">The syndication version to write the attribute extensions in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Writes the attribute extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance that contains the attribute extensions to be written.</param>
      <param name="version">The syndication version to write the attribute extensions in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Writes the attribute extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance that contains the attribute extensions to be written.</param>
      <param name="version">The syndication version to write the attribute extensions in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteAttributeExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Writes the attribute extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance that contains the attribute extensions to be written.</param>
      <param name="version">The syndication version to write the attribute extensions in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationCategory,System.String)">
      <summary>Writes the element extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="category">The <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance that contains the element extensions to be written.</param>
      <param name="version">The syndication version the extensions are written in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.String)">
      <summary>Writes the element extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance that contains the element extensions to be written.</param>
      <param name="version">The syndication version the extensions are written in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationLink,System.String)">
      <summary>Writes the element extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="link">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance that contains the element extensions to be written.</param>
      <param name="version">The syndication version the extensions are written in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteElementExtensions(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationPerson,System.String)">
      <summary>Writes the element extensions in the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance to the specified <see cref="T:System.Xml.XmlWriter" /> in the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the extensions to.</param>
      <param name="person">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance that contains the element extensions to be written.</param>
      <param name="version">The syndication version the extensions are written in.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationItemFormatter.WriteTo(System.Xml.XmlWriter)">
      <summary>Writes the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to the specified <see cref="T:System.Xml.XmlWriter" /> instance.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> to.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItemFormatter.Item">
      <summary>Gets the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> associated with the formatter.</summary>
      <returns>The <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> associated with the formatter.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationItemFormatter.Version">
      <summary>Gets the syndication version of the formatter.</summary>
      <returns>The syndication version of the formatter.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationLink">
      <summary>Represents a link within a syndication feed or item.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.ServiceModel.Syndication.SyndicationLink)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified instance.</summary>
      <param name="source">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance used to initialize the new instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified <see cref="T:System.Uri" />, relation type, title, media type, and length.</summary>
      <param name="uri">The URI to the linked resource.</param>
      <param name="relationshipType">The relationship type.</param>
      <param name="title">The title of the link.</param>
      <param name="mediaType">The media type of the link.</param>
      <param name="length">The length of the linked content.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified <see cref="T:System.Uri" />.</summary>
      <param name="uri">The URI to the linked resource.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.Clone">
      <summary>Creates a copy of the current <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri,System.String)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> object with the specified <see cref="T:System.Uri" /> and media type.</summary>
      <param name="uri">The URI of the linked resource.</param>
      <param name="mediaType">The media type of the link.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> object with the specified <see cref="T:System.Uri" />.</summary>
      <param name="uri">The URI of the linked resource.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.CreateMediaEnclosureLink(System.Uri,System.String,System.Int64)">
      <summary>Creates a media enclosure link with the specified URI, media type, and length.</summary>
      <param name="uri">The URI of the linked resource.</param>
      <param name="mediaType">The media type of the link.</param>
      <param name="length">The length of the linked content.</param>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri,System.String)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> with the specified URI, media type, and relationship type set to <see langword="self" />.</summary>
      <param name="uri">The URI to the linked resource.</param>
      <param name="mediaType">The media type of the link.</param>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> with the specified URI and relationship type set to <see langword="self" />.</summary>
      <param name="uri">The URI to the linked resource.</param>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.GetAbsoluteUri">
      <summary>Gets the absolute URI for the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</summary>
      <returns>A <see cref="T:System.Uri" /> instance that contains the absolute URI of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Attempts to parse an attribute extension.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
      <returns>A value that specifies whether the attribute extension was parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Attempts to parse an element extension.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="version">The syndication version to use while parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
      <returns>A value that specifies whether the element extension was parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlReader" /> to write to.</param>
      <param name="version">The syndication version to use while writing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationLink.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the element extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlReader" /> to write to.</param>
      <param name="version">The syndication version to use while writing.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions">
      <summary>Gets the attribute extensions of the link.</summary>
      <returns>A dictionary that contains a collection of attribute extensions.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.BaseUri">
      <summary>Gets or sets the base URI of the syndication link.</summary>
      <returns>A <see cref="T:System.Uri" /> instance that contains the base URI of the syndication link.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.ElementExtensions">
      <summary>Gets the element extensions for the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> that contains the element extensions for the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.Length">
      <summary>Gets or sets the length of the linked resource in bytes.</summary>
      <returns>The length of the linked resource.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.MediaType">
      <summary>Gets or sets the media type of the linked resource.</summary>
      <returns>The media type of the linked resource.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType">
      <summary>Gets or sets the relationship type of the linked resource.</summary>
      <returns>The relationship type of the linked resource.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.Title">
      <summary>Gets or sets the title of the linked resource.</summary>
      <returns>The title of the linked resource.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationLink.Uri">
      <summary>Gets or sets the URI for the linked resource.</summary>
      <returns>A <see cref="T:System.Uri" /> instance that contains the URI for the linked resource.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationPerson">
      <summary>Represents an author or contributor of syndication content.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor">
      <summary>Initializes a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.ServiceModel.Syndication.SyndicationPerson)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> class with the specified instance.</summary>
      <param name="source">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance to initialize the new instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance with the specified email address, name, and Uniform Resource Identifier (URI).</summary>
      <param name="email">The email address of the person.</param>
      <param name="name">The name of the person.</param>
      <param name="uri">The URI of the person's Web page.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.String)">
      <summary>Initializes a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance with the specified email address.</summary>
      <param name="email">The email address of the person.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.Clone">
      <summary>Creates a copy of the existing <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Attempts to parse an attribute extension.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
      <returns>A value that specifies whether the attribute extension was parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Attempts to parse an element extension.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="version">The syndication version to use while parsing.</param>
      <exception cref="T:System.Xml.XmlException">Invalid XML encountered during read.</exception>
      <returns>A value that specifies whether the element extension was parsed successfully.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlReader" /> to write to.</param>
      <param name="version">The syndication version to use while writing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.SyndicationPerson.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the element extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlReader" /> to write to.</param>
      <param name="version">The syndication version to use while writing.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions">
      <summary>Gets the attribute extensions for the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>A dictionary that contains a collection of attribute extensions.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions">
      <summary>Gets the element extensions for the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> that contains the element extensions.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationPerson.Email">
      <summary>Gets or sets the email address of the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>The email address of the person.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationPerson.Name">
      <summary>Gets or sets the name of the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>The name of the person.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.SyndicationPerson.Uri">
      <summary>Gets or sets the URI of the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      <returns>The URI of the person's Web site.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.SyndicationVersions">
      <summary>A class that represents the syndication versions supported by Windows Communication Foundation (WCF).</summary>
    </member>
    <member name="F:System.ServiceModel.Syndication.SyndicationVersions.Atom10">
      <summary>Represents support for the Atom 1.0 specification.</summary>
    </member>
    <member name="F:System.ServiceModel.Syndication.SyndicationVersions.Rss20">
      <summary>Represents support for the RSS 2.0 specification.</summary>
    </member>
    <member name="T:System.ServiceModel.Syndication.TextSyndicationContent">
      <summary>Represents any <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> content intended to be displayed to an end user.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.TextSyndicationContent.#ctor(System.ServiceModel.Syndication.TextSyndicationContent)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> with the specified <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance.</summary>
      <param name="source">The <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.TextSyndicationContent.#ctor(System.String,System.ServiceModel.Syndication.TextSyndicationContentKind)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> with the specified text and <see cref="T:System.ServiceModel.Syndication.TextSyndicationContentKind" />.</summary>
      <param name="text">The text of the content.</param>
      <param name="textKind">The <see cref="T:System.ServiceModel.Syndication.TextSyndicationContentKind" /> that describes the content.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.TextSyndicationContent.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> with the specified text.</summary>
      <param name="text">The text of the content.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.TextSyndicationContent.Clone">
      <summary>Creates a copy of the existing <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.TextSyndicationContent.WriteContentsTo(System.Xml.XmlWriter)">
      <summary>Writes the contents of the <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.TextSyndicationContent.Text">
      <summary>Gets the text of the <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />.</summary>
      <returns>The text of the <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.TextSyndicationContent.Type">
      <summary>Gets the content type of the <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the kind of Text Syndication Content.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.TextSyndicationContentKind">
      <summary>An enumeration that represents the supported types of text syndication content.</summary>
    </member>
    <member name="F:System.ServiceModel.Syndication.TextSyndicationContentKind.Html">
      <summary>HTML (escaped markup)</summary>
    </member>
    <member name="F:System.ServiceModel.Syndication.TextSyndicationContentKind.Plaintext">
      <summary>Plain text.</summary>
    </member>
    <member name="F:System.ServiceModel.Syndication.TextSyndicationContentKind.XHtml">
      <summary>XML (not escaped)</summary>
    </member>
    <member name="T:System.ServiceModel.Syndication.UrlSyndicationContent">
      <summary>Represents syndication content that consists of a URL to another resource.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.UrlSyndicationContent.#ctor(System.ServiceModel.Syndication.UrlSyndicationContent)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> class with the specified <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> instance.</summary>
      <param name="source">The <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.UrlSyndicationContent.#ctor(System.Uri,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> class with the specified <see cref="T:System.Uri" /> and media type.</summary>
      <param name="url">The <see cref="T:System.Uri" />.</param>
      <param name="mediaType">The media type of the resource referenced by the <see cref="T:System.Uri" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.UrlSyndicationContent.Clone">
      <summary>Creates a copy of the existing <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance that contains the new copy of the <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.UrlSyndicationContent.WriteContentsTo(System.Xml.XmlWriter)">
      <summary>Writes the contents of the <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" /> instance to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.UrlSyndicationContent.Type">
      <summary>Gets the content type of the <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" />.</summary>
      <returns>The content type of the <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.UrlSyndicationContent.Url">
      <summary>Gets the <see cref="T:System.Uri" /> for the <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" />.</summary>
      <returns>A <see cref="T:System.Uri" /> instance that contains the URI for the <see cref="T:System.ServiceModel.Syndication.UrlSyndicationContent" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.Workspace">
      <summary>Represents a workspace within a service document.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Workspace.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Workspace" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.Workspace.#ctor(System.ServiceModel.Syndication.TextSyndicationContent,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.ResourceCollectionInfo})">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Workspace" /> class and initializes it with the specified title and collection.</summary>
      <param name="title">The title of the workspace.</param>
      <param name="collections">The collection the workspace contains.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Workspace.#ctor(System.String,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.ResourceCollectionInfo})">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Workspace" /> class and initializes it with the specified title and collection.</summary>
      <param name="title">The workspace title.</param>
      <param name="collections">The collection the workspace contains.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Workspace.CreateResourceCollection">
      <summary>Creates a new <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" /> instance.</summary>
      <returns>Returns <see cref="T:System.ServiceModel.Syndication.ResourceCollectionInfo" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Workspace.TryParseAttribute(System.String,System.String,System.String,System.String)">
      <summary>Attempts to parse an attribute extension.</summary>
      <param name="name">The name of the element.</param>
      <param name="ns">The namespace of the element.</param>
      <param name="value">The attribute to parse.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the attribute extension was parsed successfully; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Workspace.TryParseElement(System.Xml.XmlReader,System.String)">
      <summary>Attempts to parse an element extension.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="version">The syndication version to use when parsing.</param>
      <returns>
        <see langword="true" /> if the attribute extension was parsed successfully; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.Workspace.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="version">The syndication version to use when writing.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.Workspace.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
      <summary>Writes the element extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
      <param name="version">The syndication version to use when writing.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.Workspace.AttributeExtensions">
      <summary>Gets a collection of attribute extensions.</summary>
      <returns>A collection of attribute extensions.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Workspace.BaseUri">
      <summary>Gets or sets the base URI for the <see cref="T:System.ServiceModel.Syndication.Workspace" /> instance.</summary>
      <returns>The base URI for the <see cref="T:System.ServiceModel.Syndication.Workspace" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Workspace.Collections">
      <summary>Gets the collection associated with the workspace.</summary>
      <returns>The collection associated with the workspace.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Workspace.ElementExtensions">
      <summary>Gets the element extensions contained within the <see cref="T:System.ServiceModel.Syndication.Workspace" /> instance.</summary>
      <returns>The element extensions contained within the <see cref="T:System.ServiceModel.Syndication.Workspace" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.Workspace.Title">
      <summary>Gets or sets the title of the <see cref="T:System.ServiceModel.Syndication.Workspace" /> instance.</summary>
      <returns>The title of the <see cref="T:System.ServiceModel.Syndication.Workspace" /> instance.</returns>
    </member>
    <member name="T:System.ServiceModel.Syndication.XmlSyndicationContent">
      <summary>Represents XML syndication content that is not intended to be displayed in a browser.</summary>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.#ctor(System.ServiceModel.Syndication.XmlSyndicationContent)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> with the specified <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> instance.</summary>
      <param name="source">The <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> instance.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.#ctor(System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> with the specified type, object, and <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
      <param name="type">The type of content.</param>
      <param name="dataContractExtension">The data contract extension.</param>
      <param name="dataContractSerializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> to use.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.#ctor(System.String,System.Object,System.Xml.Serialization.XmlSerializer)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> with the specified type, object and <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="type">The type of content.</param>
      <param name="xmlSerializerExtension">The XML serializer extension.</param>
      <param name="serializer">The <see cref="T:System.Xml.Serialization.XmlSerializer" /> to use.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.#ctor(System.String,System.ServiceModel.Syndication.SyndicationElementExtension)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> with the specified type and <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" />.</summary>
      <param name="type">The type of the content, typically expressed as a MIME content type, for example application/xml or application/xml+customer.</param>
      <param name="extension">The <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> to place in the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.#ctor(System.Xml.XmlReader)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> class.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.Clone">
      <summary>Creates a copy of the existing <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> instance.</summary>
      <returns>A new <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.GetReaderAtContent">
      <summary>Gets a reader from the content of the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />.</summary>
      <returns>An <see cref="T:System.Xml.XmlDictionaryReader" /> from the content of the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.ReadContent``1">
      <summary>Reads the content of the specified type into the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" />.</summary>
      <typeparam name="TContent">The type of content to read.</typeparam>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The input XML cannot be deserialized into the requested type.</exception>
      <returns>An object of the specified type.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.ReadContent``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Reads the content of the specified type into the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> using the specified serializer.</summary>
      <param name="dataContractSerializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> to use.</param>
      <typeparam name="TContent">The type of content to read.</typeparam>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The input XML cannot be deserialized into the requested type.</exception>
      <returns>An object of the specified type.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.ReadContent``1(System.Xml.Serialization.XmlSerializer)">
      <summary>Reads the content of the specified type into the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> using the specified serializer.</summary>
      <param name="serializer">The <see cref="T:System.Xml.Serialization.XmlSerializer" /> to use.</param>
      <typeparam name="TContent">The type of content to read.</typeparam>
      <exception cref="T:System.InvalidOperationException">The input XML cannot be deserialized into the requested type.</exception>
      <returns>An object of the specified type.</returns>
    </member>
    <member name="M:System.ServiceModel.Syndication.XmlSyndicationContent.WriteContentsTo(System.Xml.XmlWriter)">
      <summary>Write the contents of the <see cref="T:System.ServiceModel.Syndication.XmlSyndicationContent" /> to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to.</param>
    </member>
    <member name="P:System.ServiceModel.Syndication.XmlSyndicationContent.Extension">
      <summary>Gets the <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtension" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Syndication.XmlSyndicationContent.Type">
      <summary>Gets the type of the XML syndication content.</summary>
      <returns>The XML syndication content type.</returns>
    </member>
    <member name="T:System.ServiceModel.TcpClientCredentialType">
      <summary>Enumerates the valid credential types for TCP clients.</summary>
    </member>
    <member name="F:System.ServiceModel.TcpClientCredentialType.Certificate">
      <summary>Specifies client authentication using a certificate.</summary>
    </member>
    <member name="F:System.ServiceModel.TcpClientCredentialType.None">
      <summary>Specifies anonymous authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.TcpClientCredentialType.Windows">
      <summary>Specifies client authentication using Windows.</summary>
    </member>
    <member name="T:System.ServiceModel.TcpTransportSecurity">
      <summary>Provides properties that control authentication parameters and protection level for the TCP transport.</summary>
    </member>
    <member name="M:System.ServiceModel.TcpTransportSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.TcpTransportSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.TcpTransportSecurity.ClientCredentialType">
      <summary>Gets or sets the type of client credential used for authentication.</summary>
      <returns>Returns the <see cref="T:System.ServiceModel.TcpClientCredentialType" />.</returns>
    </member>
    <member name="P:System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy">
      <summary>Gets or sets the extended protection policy for the TCP transport.</summary>
      <returns>The extended protection policy for the TCP transport.</returns>
    </member>
    <member name="P:System.ServiceModel.TcpTransportSecurity.ProtectionLevel">
      <summary>Gets or sets the <see cref="T:System.Net.Security.ProtectionLevel" /> for the TCP stream.</summary>
      <returns>Returns the <see cref="T:System.Net.Security.ProtectionLevel" />.</returns>
    </member>
    <member name="P:System.ServiceModel.TcpTransportSecurity.SslProtocols">
      <summary>Specifies the list of SSL/TLS protocols to negotiate when using a client credential type of TcpClientCredentialType.Certificate. The value can be a combination of one of more of the following enumeration members: Ssl3, Tls, Tls11, Tls12.</summary>
      <returns>Returns <see cref="T:System.Security.Authentication.SslProtocols" />.</returns>
    </member>
    <member name="T:System.ServiceModel.TransferMode">
      <summary>Indicates whether a channel uses streamed or buffered modes for the transfer of request and response messages.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.Buffered">
      <summary>The request and response messages are both buffered.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.Streamed">
      <summary>The request and response messages are both streamed.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.StreamedRequest">
      <summary>The request message is streamed and the response message is buffered.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.StreamedResponse">
      <summary>The request message is buffered and the response message is streamed.</summary>
    </member>
    <member name="T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <summary>Contains the message received by a channel and cannot be associated with any callback operation or pending request.</summary>
    </member>
    <member name="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message">
      <summary>Gets the unknown message that caused the event.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> that caused the event.</returns>
    </member>
    <member name="T:System.ServiceModel.UpnEndpointIdentity">
      <summary>Represents a user principal name (UPN) for an identity which is used when the binding utilizes the SSPINegotiate authentication mode.</summary>
    </member>
    <member name="M:System.ServiceModel.UpnEndpointIdentity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.UpnEndpointIdentity" /> class.</summary>
      <param name="upnName">The UPN name.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="upnName" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The claim type of <paramref name="upnName" /> is not <see cref="P:System.IdentityModel.Claims.ClaimTypes.Upn" />.</exception>
    </member>
    <member name="T:System.ServiceModel.WS2007HttpBinding">
      <summary>Represents an interoperable binding that derives from <see cref="T:System.ServiceModel.WSHttpBinding" /> and provides support for the updated versions of the <see cref="P:System.ServiceModel.WSHttpBinding.Security" />, <see cref="T:System.ServiceModel.ReliableSession" />, and <see cref="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow" /> binding elements.</summary>
    </member>
    <member name="M:System.ServiceModel.WS2007HttpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WS2007HttpBinding" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WS2007HttpBinding" /> class with a specified type of security used by the binding and a value that indicates whether a reliable session is enabled.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.SecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
      <param name="reliableSessionEnabled">
        <see langword="true" /> if a reliable session is enabled; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.ServiceModel.SecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WS2007HttpBinding" /> class with a specified type of security used by the binding.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.SecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
    </member>
    <member name="M:System.ServiceModel.WS2007HttpBinding.CreateMessageSecurity">
      <summary>Returns the security binding element from the current binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> from the current binding.</returns>
    </member>
    <member name="T:System.ServiceModel.WSHttpBinding">
      <summary>Represents an interoperable binding that supports distributed transactions and secure, reliable sessions.</summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBinding" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBinding" /> class with a specified type of security used by the binding and a value that indicates whether a reliable session is enabled.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.SecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
      <param name="reliableSessionEnabled">
        <see langword="true" /> if a reliable session is enabled; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBinding" /> class with a specified type of security used by the binding.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.SecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.</summary>
      <param name="parameters">Specifies the requirements for the channel factory built.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type TChannel that satisfies the features specified by the collection.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.CreateBindingElements">
      <summary>Returns an ordered collection of binding elements contained in the current binding.</summary>
      <exception cref="T:System.InvalidOperationException">The transport security mode set cannot provide the reliable session that has been enabled.</exception>
      <returns>The <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the ordered stack of binding elements described by the <see cref="T:System.ServiceModel.WSHttpBinding" /> binding.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.CreateMessageSecurity">
      <summary>Returns the security binding element from the current binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> from the current binding.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.GetTransport">
      <summary>Returns the transport binding element from the current binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> from the current binding.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBinding.AllowCookies">
      <summary>Gets or sets a value that indicates whether the WCF client will automatically store and resend any cookies sent by a single web service.</summary>
      <returns>
        <see langword="true" /> if automatic cookies processing is required; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBinding.Security">
      <summary>Gets the security settings used with this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.WSHttpSecurity" /> that is used with this binding. The default value <see cref="P:System.ServiceModel.WSHttpSecurity.Mode" /> property is <see cref="P:System.ServiceModel.WSHttpSecurity.Message" />.</returns>
    </member>
    <member name="T:System.ServiceModel.WSHttpBindingBase">
      <summary>Provides the base class with members common to the <see cref="T:System.ServiceModel.WSHttpBinding" /> and the <see cref="T:System.ServiceModel.WSFederationHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBindingBase" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBindingBase" /> class with a value that indicates whether a reliable session is enabled.</summary>
      <param name="reliableSessionEnabled">
        <see langword="true" />, if a reliable session is enabled; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.CreateBindingElements">
      <summary>Returns an ordered collection of binding elements contained in the current binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the <see cref="T:System.ServiceModel.Channels.BindingElement" /> objects for the binding.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.CreateMessageSecurity">
      <summary>When implemented in a derived class, returns the <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> from the current binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> from the current binding.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.GetTransport">
      <summary>When implemented in a derived class, returns the transport binding element from the current binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> from the current binding.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal">
      <summary>Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</summary>
      <returns>
        <see langword="true" /> to bypass the proxy server for local addresses; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages that are processed by this binding.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding. The value is always SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize">
      <summary>Gets or sets the maximum amount of memory allocated, in bytes, for the buffer manager that manages the buffers required by endpoints using this binding.</summary>
      <returns>The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding. The default value is 524,288 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size, in bytes, for a message that can be processed by the binding.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">A message exceeded the maximum size allocated.</exception>
      <returns>The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.MessageEncoding">
      <summary>Gets or sets whether MTOM or Text/XML is used to encode SOAP messages.</summary>
      <returns>The value of <see cref="T:System.ServiceModel.WSMessageEncoding" /> that indicates whether MTOM or Text is used to encode SOAP messages. The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.ProxyAddress">
      <summary>Gets or sets the URI address of the HTTP proxy.</summary>
      <returns>A <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy. The default value is <see langword="null" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.ReliableSession">
      <summary>Gets an object that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</summary>
      <returns>The <see cref="T:System.ServiceModel.ReliableSession" /> that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.Scheme">
      <summary>Gets the URI transport scheme for the channels and listeners that are configured with this binding.</summary>
      <returns>"http" if the security mode of the transport binding element is set to <see cref="F:System.ServiceModel.SecurityMode.None" /> or <see cref="F:System.ServiceModel.SecurityMode.Message" />; "https" if the security mode is set otherwise.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.TextEncoding">
      <summary>Gets or sets the character encoding that is used for the message text.</summary>
      <returns>The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used. The default is <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow">
      <summary>Gets or sets a value that indicates whether this binding should support flowing WS-Transactions.</summary>
      <returns>
        <see langword="true" /> if the flowing of transactions is supported; otherwise, <see langword="false" />. The default value is <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</summary>
      <returns>
        <see langword="true" /> if the auto-configured HTTP proxy of the system should be used, if available; otherwise, <see langword="false" />. The default value is <see langword="true" />.</returns>
    </member>
    <member name="T:System.ServiceModel.WSHttpSecurity">
      <summary>Represents the security settings for the <see cref="T:System.ServiceModel.WSHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.WSHttpSecurity.Message">
      <summary>Gets the message-level security settings for this binding.</summary>
      <returns>The message-level security settings for this binding. 
 The default value includes: <see cref="P:System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext" /> with default set to <see langword="true" />, <see cref="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" /> is <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />, <see cref="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" /> is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, and <see cref="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential" /> is <see langword="true" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpSecurity.Mode">
      <summary>Specifies the message <see cref="T:System.ServiceModel.SecurityMode" /> for this binding.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.ServiceModel.WSHttpSecurity.Mode" /> set is not defined.</exception>
      <returns>The <see cref="T:System.ServiceModel.SecurityMode" /> for this binding. The default is <see cref="F:System.ServiceModel.SecurityMode.Message" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpSecurity.Transport">
      <summary>Gets an object that contains the transport-level security settings for this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.HttpTransportSecurity" /> for this binding.  
  
 The default value includes a <see cref="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType" /> of <see cref="F:System.ServiceModel.HttpClientCredentialType.Windows" /> and a <see cref="P:System.ServiceModel.HttpTransportSecurity.ProxyCredentialType" /> of <see cref="F:System.ServiceModel.HttpProxyCredentialType.None" />.</returns>
    </member>
    <member name="T:System.ServiceModel.WSMessageEncoding">
      <summary>Specifies whether Message Transmission Optimization Mechanism (MTOM) or text is used to encode SOAP messages.</summary>
    </member>
    <member name="F:System.ServiceModel.WSMessageEncoding.Mtom">
      <summary>MTOM is used to encode the SOAP messages.</summary>
    </member>
    <member name="F:System.ServiceModel.WSMessageEncoding.Text">
      <summary>Text is used to encode the SOAP messages.</summary>
    </member>
    <member name="T:System.ServiceModel.X509CertificateEndpointIdentity">
      <summary>Represents a certificate identity for the service endpoint. Clients that attempt to communicate with that service endpoint should authenticate the service based on the certificate provided in the endpoint identity.</summary>
    </member>
    <member name="M:System.ServiceModel.X509CertificateEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.X509CertificateEndpointIdentity" /> class using the primary (leaf) certificate and certificates that are part of its trust chain.</summary>
      <param name="primaryCertificate">The primary certificate representing the service's identity.</param>
      <param name="supportingCertificates">The certificates that are part of the trust chain of the primary certificate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="primaryCertificate" /> or <paramref name="supportingCertificates" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ServiceModel.X509CertificateEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.X509CertificateEndpointIdentity" /> class using an existing certificate.</summary>
      <param name="certificate">The certificate to clone.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.ServiceModel.X509CertificateEndpointIdentity.Certificates">
      <summary>Gets the collection of certificates for this identity.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</returns>
    </member>
    <member name="T:System.ServiceModel.XmlSerializerFormatAttribute">
      <summary>Instructs the Windows Communication Foundation (WCF) infrastructure to use the <see cref="T:System.Xml.Serialization.XmlSerializer" /> instead of the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.Style">
      <summary>Gets or sets the SOAP style of the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.OperationFormatStyle" /> values. The default is <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.SupportFaults">
      <summary>Gets or sets a value that indicates that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> should be used for reading and writing faults.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> should be used for reading and writing faults; <see langword="false" /> if the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> should be used. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.Use">
      <summary>Gets or sets a value that specifies the format to use.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.OperationFormatUse" /> values. The default is <see cref="F:System.ServiceModel.OperationFormatUse.Literal" />.</returns>
    </member>
  </members>
</doc>