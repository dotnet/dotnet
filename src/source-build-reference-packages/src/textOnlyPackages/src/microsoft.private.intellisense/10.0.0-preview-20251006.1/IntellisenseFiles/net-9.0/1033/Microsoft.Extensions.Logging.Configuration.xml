<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.Logging.Configuration</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfiguration`1">
      <summary>
            Allows access to configuration section associated with logger provider.</summary>
      <typeparam name="T">The type of logger provider to get configuration for.</typeparam>
    </member>
    <member name="P:Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfiguration`1.Configuration">
      <summary>
            Gets the configuration section for the requested logger provider.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfigurationFactory">
      <summary>
            Allows access to configuration section associated with logger provider</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfigurationFactory.GetConfiguration(System.Type)">
      <summary>
            Returns the configuration section associated with the logger provider.</summary>
      <param name="providerType">The logger provider type.</param>
      <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> for the given <paramref name="providerType" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Logging.Configuration.LoggerProviderOptions">
      <summary>
            Provides a set of helpers to initialize options objects from logger provider configuration.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Configuration.LoggerProviderOptions.RegisterProviderOptions``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <summary>
            Indicates that settings for <typeparamref name="TProvider" /> should be loaded into <typeparamref name="TOptions" /> type.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to register on.</param>
      <typeparam name="TOptions">The options class.</typeparam>
      <typeparam name="TProvider">The provider class.</typeparam>
    </member>
    <member name="T:Microsoft.Extensions.Logging.Configuration.LoggerProviderOptionsChangeTokenSource`2">
      <summary>Creates <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.Primitives.IChangeToken" />s so that <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.Options.IOptionsMonitor`1" /> gets
            notified when <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.Configuration.IConfiguration" /> changes.</summary>
      <typeparam name="TOptions" />
      <typeparam name="TProvider" />
    </member>
    <member name="M:Microsoft.Extensions.Logging.Configuration.LoggerProviderOptionsChangeTokenSource`2.#ctor(Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfiguration{`1})">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.Configuration.LoggerProviderOptionsChangeTokenSource`2" /> class.</summary>
      <param name="providerConfiguration" />
    </member>
    <member name="T:Microsoft.Extensions.Logging.Configuration.LoggingBuilderConfigurationExtensions">
      <summary>
            Extension methods for setting up logging services in an <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.Configuration.LoggingBuilderConfigurationExtensions.AddConfiguration(Microsoft.Extensions.Logging.ILoggingBuilder)">
      <summary>
            Adds services required to consume <see cref="T:Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfigurationFactory" /> or <see cref="T:Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfiguration`1" /></summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to register services on.</param>
    </member>
    <member name="T:Microsoft.Extensions.Logging.LoggingBuilderExtensions">
      <summary>
            Extension methods for setting up logging services in an <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.LoggingBuilderExtensions.AddConfiguration(Microsoft.Extensions.Logging.ILoggingBuilder,Microsoft.Extensions.Configuration.IConfiguration)">
      <summary>
            Configures <see cref="T:Microsoft.Extensions.Logging.LoggerFilterOptions" /> from an instance of <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to use.</param>
      <param name="configuration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> to add.</param>
      <returns>The builder.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.LoggingBuilderExtensions.AddProvider(Microsoft.Extensions.Logging.ILoggingBuilder,Microsoft.Extensions.Logging.ILoggerProvider)">
      <summary>
            Adds the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> to the <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /></summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the <paramref name="provider" /> to.</param>
      <param name="provider">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> to add to the <paramref name="builder" />.</param>
      <returns>The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.LoggingBuilderExtensions.ClearProviders(Microsoft.Extensions.Logging.ILoggingBuilder)">
      <summary>
            Removes all <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />s from <paramref name="builder" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to remove <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />s from.</param>
      <returns>The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.LoggingBuilderExtensions.Configure">
      <summary>Configures the current logging builder instance with the specified logger factory options.</summary>
      <returns>The configured logging builder instance so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.LoggingBuilderExtensions.SetMinimumLevel(Microsoft.Extensions.Logging.ILoggingBuilder,Microsoft.Extensions.Logging.LogLevel)">
      <summary>
            Sets a minimum <see cref="T:Microsoft.Extensions.Logging.LogLevel" /> requirement for log messages to be logged.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to set the minimum level on.</param>
      <param name="level">The <see cref="T:Microsoft.Extensions.Logging.LogLevel" /> to set as the minimum.</param>
      <returns>The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</returns>
    </member>
  </members>
</doc>