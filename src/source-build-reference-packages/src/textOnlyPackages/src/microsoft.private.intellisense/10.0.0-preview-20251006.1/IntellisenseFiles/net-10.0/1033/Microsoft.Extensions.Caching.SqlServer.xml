<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.Caching.SqlServer</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.Caching.SqlServer.SqlServerCache">
      <summary>Distributed cache implementation using Microsoft SQL Server database.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions})">
      <param name="options" />
    </member>
    <member name="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.Get(System.String)">
      <summary>Gets a value with the given key.</summary>
      <param name="key">A string identifying the requested value.</param>
      <returns>The located value or <see langword="null" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.GetAsync(System.String,System.Threading.CancellationToken)">
      <summary>Gets a value with the given key.</summary>
      <param name="key">A string identifying the requested value.</param>
      <param name="token">Optional. The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation, containing the located value or <see langword="null" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.Microsoft#Extensions#Caching#Distributed#IBufferDistributedCache#Set(System.String,System.Buffers.ReadOnlySequence{System.Byte},Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)">
      <param name="key" />
      <param name="value" />
      <param name="options" />
    </member>
    <member name="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.Microsoft#Extensions#Caching#Distributed#IBufferDistributedCache#SetAsync(System.String,System.Buffers.ReadOnlySequence{System.Byte},Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions,System.Threading.CancellationToken)">
      <param name="key" />
      <param name="value" />
      <param name="options" />
      <param name="token" />
    </member>
    <member name="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.Microsoft#Extensions#Caching#Distributed#IBufferDistributedCache#TryGet(System.String,System.Buffers.IBufferWriter{System.Byte})">
      <param name="key" />
      <param name="destination" />
    </member>
    <member name="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.Microsoft#Extensions#Caching#Distributed#IBufferDistributedCache#TryGetAsync(System.String,System.Buffers.IBufferWriter{System.Byte},System.Threading.CancellationToken)">
      <param name="key" />
      <param name="destination" />
      <param name="token" />
    </member>
    <member name="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.Refresh(System.String)">
      <summary>Refreshes a value in the cache based on its key, resetting its sliding expiration timeout (if any).</summary>
      <param name="key">A string identifying the requested value.</param>
    </member>
    <member name="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.RefreshAsync(System.String,System.Threading.CancellationToken)">
      <summary>Refreshes a value in the cache based on its key, resetting its sliding expiration timeout (if any).</summary>
      <param name="key">A string identifying the requested value.</param>
      <param name="token">Optional. The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.Remove(System.String)">
      <summary>Removes the value with the given key.</summary>
      <param name="key">A string identifying the requested value.</param>
    </member>
    <member name="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.RemoveAsync(System.String,System.Threading.CancellationToken)">
      <summary>Removes the value with the given key.</summary>
      <param name="key">A string identifying the requested value.</param>
      <param name="token">Optional. The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)">
      <summary>Sets a value with the given key.</summary>
      <param name="key">A string identifying the requested value.</param>
      <param name="value">The value to set in the cache.</param>
      <param name="options">The cache options for the value.</param>
    </member>
    <member name="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCache.SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions,System.Threading.CancellationToken)">
      <summary>Sets the value with the given key.</summary>
      <param name="key">A string identifying the requested value.</param>
      <param name="value">The value to set in the cache.</param>
      <param name="options">The cache options for the value.</param>
      <param name="token">Optional. The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions">
      <summary>Configuration options for <see cref="T:Microsoft.Extensions.Caching.SqlServer.SqlServerCache" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions.ConnectionString">
      <summary>The connection string to the database.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions.DefaultSlidingExpiration">
      <summary>The default sliding expiration set for a cache entry if neither Absolute or SlidingExpiration has been set explicitly.
            By default, its 20 minutes.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions.ExpiredItemsDeletionInterval">
      <summary>The periodic interval to scan and delete expired items in the cache. Default is 30 minutes.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions.Microsoft#Extensions#Options#IOptions{Microsoft#Extensions#Caching#SqlServer#SqlServerCacheOptions}#Value">
      <summary>Gets the default configured <typeparamref name="TOptions" /> instance.</summary>
      <returns>An object that represents the SQL Server cache options.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions.SchemaName">
      <summary>The schema name of the table.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions.SystemClock">
      <summary>An abstraction to represent the clock of a machine in order to enable unit testing.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions.TableName">
      <summary>Name of the table where the cache items are stored.</summary>
    </member>
    <member name="T:Microsoft.Extensions.DependencyInjection.SqlServerCachingServicesExtensions">
      <summary>Extension methods for setting up Microsoft SQL Server distributed cache services in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.SqlServerCachingServicesExtensions.AddDistributedSqlServerCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions})">
      <summary>Adds Microsoft SQL Server distributed caching services to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add services to.</param>
      <param name="setupAction">An <see cref="T:System.Action`1" /> to configure the provided <see cref="T:Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions" />.</param>
      <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
    </member>
  </members>
</doc>