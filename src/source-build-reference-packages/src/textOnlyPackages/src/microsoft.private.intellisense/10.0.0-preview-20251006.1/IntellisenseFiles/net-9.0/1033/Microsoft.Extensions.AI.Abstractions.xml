<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.AI.Abstractions</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary">
      <summary>Provides a dictionary used as the AdditionalProperties dictionary on Microsoft.Extensions.AI objects.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary" /> class.</summary>
      <param name="dictionary" />
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary" /> class.</summary>
      <param name="collection" />
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary.Clone">
      <summary>Creates a shallow clone of the properties dictionary.</summary>
      <returns>
            A shallow clone of the properties dictionary. The instance will not be the same as the current instance,
            but it will contain all of the same key-value pairs.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1">
      <summary>Provides a dictionary used as the AdditionalProperties dictionary on Microsoft.Extensions.AI objects.</summary>
      <typeparam name="TValue">The type of the values in the dictionary.</typeparam>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.#ctor(System.Collections.Generic.IDictionary{System.String,`0})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1" /> class.</summary>
      <param name="dictionary" />
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,`0}})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1" /> class.</summary>
      <param name="collection" />
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Add(System.String,`0)">
      <summary>Adds an element with the provided key and value to the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref>.</summary>
      <param name="key">The object to use as the key of the element to add.</param>
      <param name="value">The object to use as the value of the element to add.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Clear">
      <summary>Removes all items from the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Clone">
      <summary>Creates a shallow clone of the properties dictionary.</summary>
      <returns>
            A shallow clone of the properties dictionary. The instance will not be the same as the current instance,
            but it will contain all of the same key-value pairs.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.ContainsKey(System.String)">
      <summary>Determines whether the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref> contains an element with the specified key.</summary>
      <param name="key">The key to locate in the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref>.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref> contains an element with the key; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1" />.</summary>
      <returns>An <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Enumerator" /> that enumerates the contents of the <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Remove(System.String)">
      <summary>Removes the element with the specified key from the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref>.</summary>
      <param name="key">The key of the element to remove.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the element is successfully removed; otherwise, <code data-dev-comment-type="langword">false</code>.  This method also returns <code data-dev-comment-type="langword">false</code> if <code data-dev-comment-type="paramref">key</code> was not found in the original <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;System#String,TValue&gt;&gt;#Add(System.Collections.Generic.KeyValuePair{System.String,`0})">
      <summary>Adds an item to the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</summary>
      <param name="item">The object to add to the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;System#String,TValue&gt;&gt;#Contains(System.Collections.Generic.KeyValuePair{System.String,`0})">
      <summary>Determines whether the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> contains a specific value.</summary>
      <param name="item">The object to locate in the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if <code data-dev-comment-type="paramref">item</code> is found in the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;System#String,TValue&gt;&gt;#CopyTo(System.Collections.Generic.KeyValuePair{System.String,`0}[],System.Int32)">
      <summary>Copies the elements of the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> to an <xref data-throw-if-not-resolved="true" uid="System.Array"></xref>, starting at a particular <xref data-throw-if-not-resolved="true" uid="System.Array"></xref> index.</summary>
      <param name="array">The one-dimensional <xref data-throw-if-not-resolved="true" uid="System.Array"></xref> that is the destination of the elements copied from <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>. The <xref data-throw-if-not-resolved="true" uid="System.Array"></xref> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <code data-dev-comment-type="paramref">array</code> at which copying begins.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;System#String,TValue&gt;&gt;#Remove(System.Collections.Generic.KeyValuePair{System.String,`0})">
      <summary>Removes the first occurrence of a specific object from the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</summary>
      <param name="item">The object to remove from the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if <code data-dev-comment-type="paramref">item</code> was successfully removed from the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>; otherwise, <code data-dev-comment-type="langword">false</code>. This method also returns <code data-dev-comment-type="langword">false</code> if <code data-dev-comment-type="paramref">item</code> is not found in the original <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#IDictionary&lt;System#String,TValue&gt;#TryGetValue(System.String,`0@)">
      <summary>Gets the value associated with the specified key.</summary>
      <param name="key">The key whose value to get.</param>
      <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <code data-dev-comment-type="paramref">value</code> parameter. This parameter is passed uninitialized.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the object that implements <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref> contains an element with the specified key; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,TValue&gt;&gt;#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#IReadOnlyDictionary&lt;System#String,TValue&gt;#TryGetValue(System.String,`0@)">
      <summary>Gets the value that is associated with the specified key.</summary>
      <param name="key">The key to locate.</param>
      <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <code data-dev-comment-type="paramref">value</code> parameter. This parameter is passed uninitialized.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the object that implements the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IReadOnlyDictionary`2"></xref> interface contains an element that has the specified key; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <xref data-throw-if-not-resolved="true" uid="System.Collections.IEnumerator"></xref> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.TryAdd(System.String,`0)">
      <summary>Attempts to add the specified key and value to the dictionary.</summary>
      <param name="key">The key of the element to add.</param>
      <param name="value">The value of the element to add.</param>
      <returns>
        <see langword="true" /> if the key/value pair was added to the dictionary successfully; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.TryGetValue(System.String,`0@)">
      <summary>Gets the value associated with the specified key.</summary>
      <param name="key" />
      <param name="value" />
      <returns>
        <see langword="true" /> if the <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1" /> contains an element with the specified key; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.TryGetValue``1(System.String,``0@)">
      <summary>Attempts to extract a typed value from the dictionary.</summary>
      <param name="key">The key to locate.</param>
      <param name="value">
            When this method returns, contains the value retrieved from the dictionary, if found and successfully converted to the requested type;
            otherwise, the default value of <typeparamref name="T" />.</param>
      <typeparam name="T">The type of the value to be retrieved.</typeparam>
      <returns>
        <see langword="true" /> if a non-<see langword="null" /> value was found for <paramref name="key" />
            in the dictionary and converted to the requested type; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Count">
      <summary>Gets the number of elements contained in the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</summary>
      <returns>The number of elements contained in the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Item(System.String)">
      <summary>Gets or sets the element with the specified key.</summary>
      <param name="key">The key of the element to get or set.</param>
      <returns>The element with the specified key.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Keys">
      <summary>Gets an <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> containing the keys of the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref>.</summary>
      <returns>An <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> containing the keys of the object that implements <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref>.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;System#String,TValue&gt;&gt;#IsReadOnly">
      <summary>Gets a value indicating whether the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> is read-only.</summary>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> is read-only; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#IReadOnlyDictionary&lt;System#String,TValue&gt;#Keys">
      <summary>Gets an enumerable collection that contains the keys in the read-only dictionary.</summary>
      <returns>An enumerable collection that contains the keys in the read-only dictionary.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.System#Collections#Generic#IReadOnlyDictionary&lt;System#String,TValue&gt;#Values">
      <summary>Gets an enumerable collection that contains the values in the read-only dictionary.</summary>
      <returns>An enumerable collection that contains the values in the read-only dictionary.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Values">
      <summary>Gets an <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> containing the values in the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref>.</summary>
      <returns>An <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> containing the values in the object that implements <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref>.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Enumerator">
      <summary>Enumerates the elements of an <see cref="T:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1" />.</summary>
      <typeparam name="TValue" />
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Enumerator.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the collection.</summary>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the enumerator was successfully advanced to the next element; <code data-dev-comment-type="langword">false</code> if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Enumerator.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Enumerator.Current">
      <summary>Gets the element in the collection at the current position of the enumerator.</summary>
      <returns>The element in the collection at the current position of the enumerator.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AdditionalPropertiesDictionary`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the element in the collection at the current position of the enumerator.</summary>
      <returns>The element in the collection at the current position of the enumerator.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.AIAnnotation">
      <summary>
            Represents an annotation on content.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIAnnotation.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AIAnnotation" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIAnnotation.AdditionalProperties">
      <summary>
            Gets or sets additional metadata specific to the provider or source type.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIAnnotation.AnnotatedRegions">
      <summary>Gets or sets any target regions for the annotation, pointing to where in the associated <see cref="T:Microsoft.Extensions.AI.AIContent" /> this annotation applies.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIAnnotation.RawRepresentation">
      <summary>Gets or sets the raw representation of the annotation from an underlying implementation.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.AIContent">
      <summary>Represents content used by AI services.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIContent.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AIContent" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIContent.AdditionalProperties">
      <summary>Gets or sets additional properties for the content.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIContent.Annotations">
      <summary>
            Gets or sets a list of annotations on this content.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIContent.RawRepresentation">
      <summary>Gets or sets the raw representation of the content from an underlying implementation.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.AIFunction">
      <summary>Represents a function that can be described to an AI service and invoked.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AIFunction" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunction.AsDeclarationOnly">
      <summary>Creates a <see cref="T:Microsoft.Extensions.AI.AIFunctionDeclaration" /> representation of this <see cref="T:Microsoft.Extensions.AI.AIFunction" /> that can't be invoked.</summary>
      <returns>The created instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)">
      <summary>Invokes the <see cref="T:Microsoft.Extensions.AI.AIFunction" /> and returns its result.</summary>
      <param name="arguments">The arguments to pass to the function's invocation.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>The result of the function's execution.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunction.InvokeCoreAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)">
      <summary>Invokes the <see cref="T:Microsoft.Extensions.AI.AIFunction" /> and returns its result.</summary>
      <param name="arguments">The arguments to pass to the function's invocation.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests.</param>
      <returns>The result of the function's execution.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunction.JsonSerializerOptions">
      <summary>Gets a <see cref="P:Microsoft.Extensions.AI.AIFunction.JsonSerializerOptions" /> that can be used to marshal function parameters.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunction.UnderlyingMethod">
      <summary>
            Gets the underlying <see cref="T:System.Reflection.MethodInfo" /> that this <see cref="T:Microsoft.Extensions.AI.AIFunction" /> might be wrapping.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.AIFunctionArguments">
      <summary>Represents arguments to be used with <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionArguments.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> class, and uses the default comparer for key comparisons.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionArguments.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEqualityComparer{System.String})">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> class containing
            the specified <paramref name="arguments" />.</summary>
      <param name="arguments">The arguments represented by this instance.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to be used.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionArguments.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> class containing
            the specified <paramref name="arguments" />.</summary>
      <param name="arguments">The arguments represented by this instance.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionArguments.#ctor(System.Collections.Generic.IEqualityComparer{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AIFunctionArguments" /> class.</summary>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to use for key comparisons.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionArguments.Add(System.String,System.Object)">
      <summary>Adds an element with the provided key and value to the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref>.</summary>
      <param name="key">The object to use as the key of the element to add.</param>
      <param name="value">The object to use as the value of the element to add.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionArguments.Clear">
      <summary>Removes all items from the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionArguments.ContainsKey(System.String)">
      <summary>Determines whether the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref> contains an element with the specified key.</summary>
      <param name="key">The key to locate in the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref>.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref> contains an element with the key; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionArguments.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copies the elements of the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> to an <xref data-throw-if-not-resolved="true" uid="System.Array"></xref>, starting at a particular <xref data-throw-if-not-resolved="true" uid="System.Array"></xref> index.</summary>
      <param name="array">The one-dimensional <xref data-throw-if-not-resolved="true" uid="System.Array"></xref> that is the destination of the elements copied from <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>. The <xref data-throw-if-not-resolved="true" uid="System.Array"></xref> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <code data-dev-comment-type="paramref">array</code> at which copying begins.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionArguments.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionArguments.Remove(System.String)">
      <summary>Removes the element with the specified key from the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref>.</summary>
      <param name="key">The key of the element to remove.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the element is successfully removed; otherwise, <code data-dev-comment-type="langword">false</code>.  This method also returns <code data-dev-comment-type="langword">false</code> if <code data-dev-comment-type="paramref">key</code> was not found in the original <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionArguments.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Adds an item to the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</summary>
      <param name="item">The object to add to the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionArguments.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determines whether the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> contains a specific value.</summary>
      <param name="item">The object to locate in the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if <code data-dev-comment-type="paramref">item</code> is found in the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionArguments.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Removes the first occurrence of a specific object from the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</summary>
      <param name="item">The object to remove from the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if <code data-dev-comment-type="paramref">item</code> was successfully removed from the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>; otherwise, <code data-dev-comment-type="langword">false</code>. This method also returns <code data-dev-comment-type="langword">false</code> if <code data-dev-comment-type="paramref">item</code> is not found in the original <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionArguments.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <xref data-throw-if-not-resolved="true" uid="System.Collections.IEnumerator"></xref> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionArguments.TryGetValue(System.String,System.Object@)">
      <param name="key" />
      <param name="value" />
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionArguments.Context">
      <summary>Gets or sets additional context associated with these arguments.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionArguments.Count">
      <summary>Gets the number of elements contained in the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</summary>
      <returns>The number of elements contained in the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionArguments.Item(System.String)">
      <summary>Gets or sets the element with the specified key.</summary>
      <param name="key">The key of the element to get or set.</param>
      <returns>The element with the specified key.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionArguments.Keys">
      <summary>Gets an <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> containing the keys of the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref>.</summary>
      <returns>An <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> containing the keys of the object that implements <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref>.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionArguments.Services">
      <summary>Gets or sets services optionally associated with these arguments.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionArguments.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#IsReadOnly">
      <summary>Gets a value indicating whether the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> is read-only.</summary>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> is read-only; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionArguments.System#Collections#Generic#IReadOnlyDictionary&lt;System#String,System#Object&gt;#Keys">
      <summary>Gets an enumerable collection that contains the keys in the read-only dictionary.</summary>
      <returns>An enumerable collection that contains the keys in the read-only dictionary.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionArguments.System#Collections#Generic#IReadOnlyDictionary&lt;System#String,System#Object&gt;#Values">
      <summary>Gets an enumerable collection that contains the values in the read-only dictionary.</summary>
      <returns>An enumerable collection that contains the values in the read-only dictionary.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionArguments.Values">
      <summary>Gets an <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> containing the values in the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref>.</summary>
      <returns>An <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> containing the values in the object that implements <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IDictionary`2"></xref>.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.AIFunctionDeclaration">
      <summary>Represents a function that can be described to an AI service.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionDeclaration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AIFunctionDeclaration" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionDeclaration.JsonSchema">
      <summary>Gets a JSON Schema describing the function and its input parameters.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionDeclaration.ReturnJsonSchema">
      <summary>Gets a JSON Schema describing the function's return value.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.AIFunctionFactory">
      <summary>Provides factory methods for creating commonly-used implementations of <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionFactory.Create(System.Delegate,Microsoft.Extensions.AI.AIFunctionFactoryOptions)">
      <summary>Creates an <see cref="T:Microsoft.Extensions.AI.AIFunction" /> instance for a method, specified via a delegate.</summary>
      <param name="method">The method to be represented via the created <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</param>
      <param name="options">Metadata to use to override defaults inferred from <paramref name="method" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Text.Json.JsonException">A parameter to <paramref name="method" /> is not serializable.</exception>
      <returns>The created <see cref="T:Microsoft.Extensions.AI.AIFunction" /> for invoking <paramref name="method" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionFactory.Create(System.Delegate,System.String,System.String,System.Text.Json.JsonSerializerOptions)">
      <summary>Creates an <see cref="T:Microsoft.Extensions.AI.AIFunction" /> instance for a method, specified via a delegate.</summary>
      <param name="method">The method to be represented via the created <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</param>
      <param name="name">
            The name to use for the <see cref="T:Microsoft.Extensions.AI.AIFunction" />. If <see langword="null" />, the name will be derived from
            the name of <paramref name="method" />.</param>
      <param name="description">
            The description to use for the <see cref="T:Microsoft.Extensions.AI.AIFunction" />. If <see langword="null" />, a description will be derived from
            any <see cref="T:System.ComponentModel.DescriptionAttribute" /> on <paramref name="method" />, if available.</param>
      <param name="serializerOptions">The <see cref="T:System.Text.Json.JsonSerializerOptions" /> used to marshal function parameters and any return value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Text.Json.JsonException">A parameter to <paramref name="method" /> is not serializable.</exception>
      <returns>The created <see cref="T:Microsoft.Extensions.AI.AIFunction" /> for invoking <paramref name="method" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionFactory.Create(System.Reflection.MethodInfo,System.Func{Microsoft.Extensions.AI.AIFunctionArguments,System.Object},Microsoft.Extensions.AI.AIFunctionFactoryOptions)">
      <summary>
            Creates an <see cref="T:Microsoft.Extensions.AI.AIFunction" /> instance for a method, specified via a <see cref="T:System.Reflection.MethodInfo" /> for
            an instance method and a <see cref="T:System.Func`2" /> for constructing an instance of
            the receiver object each time the <see cref="T:Microsoft.Extensions.AI.AIFunction" /> is invoked.</summary>
      <param name="method">The instance method to be represented via the created <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</param>
      <param name="createInstanceFunc">
            Callback used on each function invocation to create an instance of the type on which the instance method <paramref name="method" />
            will be invoked. If the returned instance is <see cref="T:System.IAsyncDisposable" /> or <see cref="T:System.IDisposable" />, it will be disposed of
            after <paramref name="method" /> completes its invocation.</param>
      <param name="options">Metadata to use to override defaults inferred from <paramref name="method" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="createInstanceFunc" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="method" /> contains a parameter without a parameter name.</exception>
      <exception cref="T:System.Text.Json.JsonException">A parameter to <paramref name="method" /> or its return type is not serializable.</exception>
      <returns>The created <see cref="T:Microsoft.Extensions.AI.AIFunction" /> for invoking <paramref name="method" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionFactory.Create(System.Reflection.MethodInfo,System.Object,Microsoft.Extensions.AI.AIFunctionFactoryOptions)">
      <summary>
            Creates an <see cref="T:Microsoft.Extensions.AI.AIFunction" /> instance for a method, specified via an <see cref="T:System.Reflection.MethodInfo" /> instance
            and an optional target object if the method is an instance method.</summary>
      <param name="method">The method to be represented via the created <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</param>
      <param name="target">
            The target object for the <paramref name="method" /> if it represents an instance method.
            This should be <see langword="null" /> if and only if <paramref name="method" /> is a static method.</param>
      <param name="options">Metadata to use to override defaults inferred from <paramref name="method" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> represents an instance method but <paramref name="target" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="method" /> contains a parameter without a parameter name.</exception>
      <exception cref="T:System.Text.Json.JsonException">A parameter to <paramref name="method" /> or its return type is not serializable.</exception>
      <returns>The created <see cref="T:Microsoft.Extensions.AI.AIFunction" /> for invoking <paramref name="method" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionFactory.Create(System.Reflection.MethodInfo,System.Object,System.String,System.String,System.Text.Json.JsonSerializerOptions)">
      <summary>
            Creates an <see cref="T:Microsoft.Extensions.AI.AIFunction" /> instance for a method, specified via an <see cref="T:System.Reflection.MethodInfo" /> instance
            and an optional target object if the method is an instance method.</summary>
      <param name="method">The method to be represented via the created <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</param>
      <param name="target">
            The target object for the <paramref name="method" /> if it represents an instance method.
            This should be <see langword="null" /> if and only if <paramref name="method" /> is a static method.</param>
      <param name="name">
            The name to use for the <see cref="T:Microsoft.Extensions.AI.AIFunction" />. If <see langword="null" />, the name will be derived from
            the name of <paramref name="method" />.</param>
      <param name="description">
            The description to use for the <see cref="T:Microsoft.Extensions.AI.AIFunction" />. If <see langword="null" />, a description will be derived from
            any <see cref="T:System.ComponentModel.DescriptionAttribute" /> on <paramref name="method" />, if available.</param>
      <param name="serializerOptions">The <see cref="T:System.Text.Json.JsonSerializerOptions" /> used to marshal function parameters and return value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> represents an instance method but <paramref name="target" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="method" /> contains a parameter without a parameter name.</exception>
      <exception cref="T:System.Text.Json.JsonException">A parameter to <paramref name="method" /> or its return type is not serializable.</exception>
      <returns>The created <see cref="T:Microsoft.Extensions.AI.AIFunction" /> for invoking <paramref name="method" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionFactory.CreateDeclaration(System.String,System.String,System.Text.Json.JsonElement,System.Nullable{System.Text.Json.JsonElement})">
      <summary>Creates an <see cref="T:Microsoft.Extensions.AI.AIFunctionDeclaration" /> using the specified parameters as the implementation of its corresponding properties.</summary>
      <param name="name">The name of the function.</param>
      <param name="description">A description of the function, suitable for use in describing the purpose to a model.</param>
      <param name="jsonSchema">A JSON schema describing the function and its input parameters.</param>
      <param name="returnJsonSchema">A JSON schema describing the function's return value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is <see langword="null" />.</exception>
      <returns>The created <see cref="T:Microsoft.Extensions.AI.AIFunctionDeclaration" /> that describes a function.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.AIFunctionFactoryOptions">
      <summary>
            Represents options that can be provided when creating an <see cref="T:Microsoft.Extensions.AI.AIFunction" /> from a method.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionFactoryOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AIFunctionFactoryOptions" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.AdditionalProperties">
      <summary>
            Gets or sets additional values to store on the resulting <see cref="P:Microsoft.Extensions.AI.AITool.AdditionalProperties" /> property.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ConfigureParameterBinding">
      <summary>Gets or sets a delegate used to determine how a particular parameter to the function should be bound.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.Description">
      <summary>Gets or sets the description to use for the function.</summary>
      <returns>
            The description for the function. The default value is a description derived from the passed <see cref="T:System.Delegate" /> or <see cref="T:System.Reflection.MethodInfo" />, if possible
            (for example, via a <see cref="T:System.ComponentModel.DescriptionAttribute" /> on the method).</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ExcludeResultSchema">
      <summary>
            Gets or sets a value indicating whether a schema should be created for the function's result type, if possible, and included as <see cref="P:Microsoft.Extensions.AI.AIFunctionDeclaration.ReturnJsonSchema" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.JsonSchemaCreateOptions">
      <summary>
            Gets or sets the <see cref="T:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions" /> governing the generation of JSON schemas for the function.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.MarshalResult">
      <summary>Gets or sets a delegate used to determine the <see cref="T:System.Object" /> returned by <see cref="M:Microsoft.Extensions.AI.AIFunction.InvokeAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.Name">
      <summary>Gets or sets the name to use for the function.</summary>
      <returns>
            The name to use for the function. The default value is a name derived from the method represented by the passed <see cref="T:System.Delegate" /> or <see cref="T:System.Reflection.MethodInfo" />.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.SerializerOptions">
      <summary>Gets or sets the <see cref="T:System.Text.Json.JsonSerializerOptions" /> used to marshal .NET values being passed to the underlying delegate.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ParameterBindingOptions">
      <summary>Provides configuration options produced by the <see cref="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ConfigureParameterBinding" /> delegate.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ParameterBindingOptions.Equals(Microsoft.Extensions.AI.AIFunctionFactoryOptions.ParameterBindingOptions)">
      <param name="other" />
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ParameterBindingOptions.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ParameterBindingOptions.GetHashCode" />
    <member name="M:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ParameterBindingOptions.op_Equality(Microsoft.Extensions.AI.AIFunctionFactoryOptions.ParameterBindingOptions,Microsoft.Extensions.AI.AIFunctionFactoryOptions.ParameterBindingOptions)">
      <param name="left" />
      <param name="right" />
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ParameterBindingOptions.op_Inequality(Microsoft.Extensions.AI.AIFunctionFactoryOptions.ParameterBindingOptions,Microsoft.Extensions.AI.AIFunctionFactoryOptions.ParameterBindingOptions)">
      <param name="left" />
      <param name="right" />
    </member>
    <member name="M:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ParameterBindingOptions.ToString" />
    <member name="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ParameterBindingOptions.BindParameter">
      <summary>Gets a delegate used to determine the value for a bound parameter.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIFunctionFactoryOptions.ParameterBindingOptions.ExcludeFromSchema">
      <summary>Gets a value indicating whether the parameter should be excluded from the generated schema.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.AIJsonSchemaCreateContext">
      <summary>
            Defines the context in which a JSON schema within a type graph is being generated.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaCreateContext.GetCustomAttribute``1(System.Boolean)">
      <summary>
            Retrieves a custom attribute of a specified type that is applied to the specified schema node context.</summary>
      <param name="inherit">If <see langword="true" />, specifies to also search the ancestors of the context members for custom attributes.</param>
      <typeparam name="TAttribute">The type of attribute to search for.</typeparam>
      <returns>The first occurrence of <typeparamref name="TAttribute" /> if found, or <see langword="null" /> otherwise.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateContext.BaseTypeInfo">
      <summary>
            Gets the type info for the polymorphic base type if generated as a derived type.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateContext.DeclaringType">
      <summary>
            Gets the declaring type of the property or parameter being processed.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateContext.ParameterAttributeProvider">
      <summary>
            Gets the <see cref="T:System.Reflection.ICustomAttributeProvider" /> of the
            constructor parameter associated with the accompanying <see cref="P:Microsoft.Extensions.AI.AIJsonSchemaCreateContext.PropertyInfo" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateContext.Path">
      <summary>
            Gets the path to the schema document currently being generated.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateContext.PropertyAttributeProvider">
      <summary>
            Gets the <see cref="T:System.Reflection.ICustomAttributeProvider" /> corresponding to the property or field being processed.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateContext.PropertyInfo">
      <summary>
            Gets the <see cref="T:System.Text.Json.Serialization.Metadata.JsonPropertyInfo" /> if the schema is being generated for a property.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateContext.TypeInfo">
      <summary>
            Gets the <see cref="T:System.Text.Json.Serialization.Metadata.JsonTypeInfo" /> for the type being processed.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions">
      <summary>
            Provides options for configuring the behavior of <see cref="T:Microsoft.Extensions.AI.AIJsonUtilities" /> JSON schema creation functionality.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.#ctor" />
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.{Clone}$" />
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.Equals(Microsoft.Extensions.AI.AIJsonSchemaCreateOptions)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the current object is equal to the <code data-dev-comment-type="paramref">other</code> parameter; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the specified object  is equal to the current object; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.GetHashCode">
      <summary>Serves as the default hash function.</summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.op_Equality(Microsoft.Extensions.AI.AIJsonSchemaCreateOptions,Microsoft.Extensions.AI.AIJsonSchemaCreateOptions)">
      <param name="left" />
      <param name="right" />
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.op_Inequality(Microsoft.Extensions.AI.AIJsonSchemaCreateOptions,Microsoft.Extensions.AI.AIJsonSchemaCreateOptions)">
      <param name="left" />
      <param name="right" />
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.ToString" />
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.Default">
      <summary>
            Gets the default options instance.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.IncludeParameter">
      <summary>
            Gets a callback that is invoked for every parameter in the <see cref="T:System.Reflection.MethodBase" /> provided to
            <see cref="M:Microsoft.Extensions.AI.AIJsonUtilities.CreateFunctionJsonSchema(System.Reflection.MethodBase,System.String,System.String,System.Text.Json.JsonSerializerOptions,Microsoft.Extensions.AI.AIJsonSchemaCreateOptions)" /> in order to determine whether it should
            be included in the generated schema.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.IncludeSchemaKeyword">
      <summary>
            Gets a value indicating whether to include the $schema keyword in created schemas.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.TransformOptions">
      <summary>
            Gets a <see cref="T:Microsoft.Extensions.AI.AIJsonSchemaTransformOptions" /> governing transformations on the JSON schema after it has been generated.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaCreateOptions.TransformSchemaNode">
      <summary>
            Gets a callback that is invoked for every schema that is generated within the type graph.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.AIJsonSchemaTransformCache">
      <summary>
            Defines a cache for JSON schemas transformed according to the specified <see cref="T:Microsoft.Extensions.AI.AIJsonSchemaTransformOptions" /> policy.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaTransformCache.#ctor(Microsoft.Extensions.AI.AIJsonSchemaTransformOptions)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AIJsonSchemaTransformCache" /> class with the specified options.</summary>
      <param name="transformOptions">The options governing schema transformation.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaTransformCache.GetOrCreateTransformedSchema(Microsoft.Extensions.AI.AIFunction)">
      <summary>
            Gets or creates a transformed JSON schema for the specified <see cref="T:Microsoft.Extensions.AI.AIFunction" /> instance.</summary>
      <param name="function">The function whose JSON schema we want to transform.</param>
      <returns>The transformed JSON schema corresponding to <see cref="P:Microsoft.Extensions.AI.AIJsonSchemaTransformCache.TransformOptions" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaTransformCache.GetOrCreateTransformedSchema(Microsoft.Extensions.AI.AIFunctionDeclaration)">
      <summary>
            Gets or creates a transformed JSON schema for the specified <see cref="T:Microsoft.Extensions.AI.AIFunctionDeclaration" /> instance.</summary>
      <param name="function">The function whose JSON schema we want to transform.</param>
      <returns>The transformed JSON schema corresponding to <see cref="P:Microsoft.Extensions.AI.AIJsonSchemaTransformCache.TransformOptions" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaTransformCache.GetOrCreateTransformedSchema(Microsoft.Extensions.AI.ChatResponseFormatJson)">
      <summary>
            Gets or creates a transformed JSON schema for the specified <see cref="T:Microsoft.Extensions.AI.ChatResponseFormatJson" /> instance.</summary>
      <param name="responseFormat">The response format whose JSON schema we want to transform.</param>
      <returns>The transformed JSON schema corresponding to <see cref="P:Microsoft.Extensions.AI.AIJsonSchemaTransformCache.TransformOptions" />.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaTransformCache.TransformOptions">
      <summary>
            Gets the options governing schema transformation.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.AIJsonSchemaTransformContext">
      <summary>
            Defines the context for transforming a schema node withing a larger schema document.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaTransformContext.IsCollectionElementSchema">
      <summary>
            Gets a value indicating whether the current schema is a collection element.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaTransformContext.IsDictionaryValueSchema">
      <summary>
            Gets a value indicating whether the current schema is a dictionary value.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaTransformContext.Path">
      <summary>
            Gets the path to the schema document currently being generated.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaTransformContext.PropertyName">
      <summary>
            Gets the containing property name if the current schema is a property of an object.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.AIJsonSchemaTransformOptions">
      <summary>
            Provides options for configuring the behavior of <see cref="T:Microsoft.Extensions.AI.AIJsonUtilities" /> JSON schema transformation functionality.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaTransformOptions.#ctor" />
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaTransformOptions.{Clone}$" />
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaTransformOptions.Equals(Microsoft.Extensions.AI.AIJsonSchemaTransformOptions)">
      <param name="other" />
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaTransformOptions.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaTransformOptions.GetHashCode" />
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaTransformOptions.op_Equality(Microsoft.Extensions.AI.AIJsonSchemaTransformOptions,Microsoft.Extensions.AI.AIJsonSchemaTransformOptions)">
      <param name="left" />
      <param name="right" />
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaTransformOptions.op_Inequality(Microsoft.Extensions.AI.AIJsonSchemaTransformOptions,Microsoft.Extensions.AI.AIJsonSchemaTransformOptions)">
      <param name="left" />
      <param name="right" />
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonSchemaTransformOptions.ToString" />
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaTransformOptions.ConvertBooleanSchemas">
      <summary>
            Gets a value indicating whether to convert boolean schemas to equivalent object-based representations.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaTransformOptions.DisallowAdditionalProperties">
      <summary>
            Gets a value indicating whether to generate schemas with the additionalProperties set to false for .NET objects.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaTransformOptions.MoveDefaultKeywordToDescription">
      <summary>
            Gets a value indicating whether to move the default keyword to the description field in the schema.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaTransformOptions.RequireAllProperties">
      <summary>
            Gets a value indicating whether to mark all properties as required in the schema.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaTransformOptions.TransformSchemaNode">
      <summary>
            Gets a callback that is invoked for every schema that is generated within the type graph.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonSchemaTransformOptions.UseNullableKeyword">
      <summary>
            Gets a value indicating whether to substitute nullable "type" keywords with OpenAPI 3.0 style "nullable" keywords in the schema.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.AIJsonUtilities">
      <summary>Provides a collection of utility methods for marshalling JSON data.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonUtilities.AddAIContentType(System.Text.Json.JsonSerializerOptions,System.Type,System.String)">
      <summary>
            Adds a custom content type to the polymorphic configuration for <see cref="T:Microsoft.Extensions.AI.AIContent" />.</summary>
      <param name="options">The options instance to configure.</param>
      <param name="contentType">The custom content type to configure.</param>
      <param name="typeDiscriminatorId">The type discriminator id for the content type.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" />, <paramref name="contentType" />, or <paramref name="typeDiscriminatorId" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="contentType" /> is a built-in content type or does not derived from <see cref="T:Microsoft.Extensions.AI.AIContent" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="options" /> is a read-only instance.</exception>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonUtilities.AddAIContentType``1(System.Text.Json.JsonSerializerOptions,System.String)">
      <summary>
            Adds a custom content type to the polymorphic configuration for <see cref="T:Microsoft.Extensions.AI.AIContent" />.</summary>
      <param name="options">The options instance to configure.</param>
      <param name="typeDiscriminatorId">The type discriminator id for the content type.</param>
      <typeparam name="TContent">The custom content type to configure.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> or <paramref name="typeDiscriminatorId" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TContent" /> is a built-in content type.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="options" /> is a read-only instance.</exception>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonUtilities.CreateFunctionJsonSchema(System.Reflection.MethodBase,System.String,System.String,System.Text.Json.JsonSerializerOptions,Microsoft.Extensions.AI.AIJsonSchemaCreateOptions)">
      <summary>
            Determines a JSON schema for the provided method.</summary>
      <param name="method">The method from which to extract schema information.</param>
      <param name="title">The title keyword used by the method schema.</param>
      <param name="description">The description keyword used by the method schema.</param>
      <param name="serializerOptions">The options used to extract the schema from the specified type.</param>
      <param name="inferenceOptions">The options controlling schema creation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> is <see langword="null" />.</exception>
      <returns>A JSON schema document encoded as a <see cref="T:System.Text.Json.JsonElement" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonUtilities.CreateJsonSchema(System.Type,System.String,System.Boolean,System.Object,System.Text.Json.JsonSerializerOptions,Microsoft.Extensions.AI.AIJsonSchemaCreateOptions)">
      <summary>Creates a JSON schema for the specified type.</summary>
      <param name="type">The type for which to generate the schema.</param>
      <param name="description">The description of the parameter.</param>
      <param name="hasDefaultValue">
        <see langword="true" /> if the parameter is optional; otherwise, <see langword="false" />.</param>
      <param name="defaultValue">The default value of the optional parameter, if applicable.</param>
      <param name="serializerOptions">The options used to extract the schema from the specified type.</param>
      <param name="inferenceOptions">The options controlling schema creation.</param>
      <returns>A <see cref="T:System.Text.Json.JsonElement" /> representing the schema.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonUtilities.HashDataToString(System.ReadOnlySpan{System.Object},System.Text.Json.JsonSerializerOptions)">
      <summary>Serializes the supplied values and computes a string hash of the resulting JSON.</summary>
      <param name="values">The data to serialize and from which a hash should be computed.</param>
      <param name="serializerOptions">
            The <see cref="T:System.Text.Json.JsonSerializerOptions" /> to use for serializing the values.
            If <see langword="null" />, <see cref="P:Microsoft.Extensions.AI.AIJsonUtilities.DefaultOptions" /> will be used.</param>
      <returns>A string that will be used as a cache key.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AIJsonUtilities.TransformSchema(System.Text.Json.JsonElement,Microsoft.Extensions.AI.AIJsonSchemaTransformOptions)">
      <summary>
            Transforms the given JSON schema based on the provided options.</summary>
      <param name="schema">The schema document to transform.</param>
      <param name="transformOptions">The options governing schema transformation.</param>
      <returns>A new schema document with transformations applied.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AIJsonUtilities.DefaultOptions">
      <summary>
            Gets the <see cref="T:System.Text.Json.JsonSerializerOptions" /> singleton used as the default in JSON serialization operations.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.AITool">
      <summary>Represents a tool that can be specified to an AI service.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AITool.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AITool" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AITool.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.AITool.AdditionalProperties">
      <summary>Gets any additional properties associated with the tool.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AITool.Description">
      <summary>Gets a description of the tool, suitable for use in describing the purpose to a model.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.AITool.Name">
      <summary>Gets the name of the tool.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.AnnotatedRegion">
      <summary>Describes the portion of an associated <see cref="T:Microsoft.Extensions.AI.AIContent" /> to which an annotation applies.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AnnotatedRegion.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AnnotatedRegion" /> class.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.ApprovalRequiredAIFunction">
      <summary>
            Represents an <see cref="T:Microsoft.Extensions.AI.AIFunction" /> that can be described to an AI service and invoked, but for which
            the invoker should obtain user approval before the function is actually invoked.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ApprovalRequiredAIFunction.#ctor(Microsoft.Extensions.AI.AIFunction)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ApprovalRequiredAIFunction" /> class.</summary>
      <param name="innerFunction">The <see cref="T:Microsoft.Extensions.AI.AIFunction" /> represented by this instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerFunction" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:Microsoft.Extensions.AI.AutoChatToolMode">
      <summary>
            Indicates that an <see cref="T:Microsoft.Extensions.AI.IChatClient" /> is free to select any of the available tools, or none at all.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AutoChatToolMode.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.AutoChatToolMode" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.AutoChatToolMode.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the specified object  is equal to the current object; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.AutoChatToolMode.GetHashCode">
      <summary>Serves as the default hash function.</summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.BinaryEmbedding">
      <summary>Represents an embedding composed of a bit vector.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.BinaryEmbedding.#ctor(System.Collections.BitArray)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.BinaryEmbedding" /> class with the embedding vector.</summary>
      <param name="vector">The embedding vector this embedding represents.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:Microsoft.Extensions.AI.BinaryEmbedding.Dimensions">
      <summary>Gets the dimensionality of the embedding vector.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.BinaryEmbedding.Vector">
      <summary>Gets or sets the embedding vector this embedding represents.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.BinaryEmbedding.VectorConverter">
      <summary>Provides a <see cref="T:System.Text.Json.Serialization.JsonConverter`1" /> for serializing <see cref="T:System.Collections.BitArray" /> instances.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.BinaryEmbedding.VectorConverter.#ctor" />
    <member name="M:Microsoft.Extensions.AI.BinaryEmbedding.VectorConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
      <summary>Reads and converts the JSON to type <code data-dev-comment-type="typeparamref">T</code>.</summary>
      <param name="reader">The reader.</param>
      <param name="typeToConvert">The type to convert.</param>
      <param name="options">An object that specifies serialization options to use.</param>
      <returns>The converted value.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.BinaryEmbedding.VectorConverter.Write(System.Text.Json.Utf8JsonWriter,System.Collections.BitArray,System.Text.Json.JsonSerializerOptions)">
      <summary>Writes a specified value as JSON.</summary>
      <param name="writer">The writer to write to.</param>
      <param name="value">The value to convert to JSON.</param>
      <param name="options">An object that specifies serialization options to use.</param>
    </member>
    <member name="T:Microsoft.Extensions.AI.ChatClientExtensions">
      <summary>Provides a collection of static methods for extending <see cref="T:Microsoft.Extensions.AI.IChatClient" /> instances.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatClientExtensions.GetRequiredService(Microsoft.Extensions.AI.IChatClient,System.Type,System.Object)">
      <summary>
            Asks the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> for an object of the specified type <paramref name="serviceType" />
            and throws an exception if one isn't available.</summary>
      <param name="client">The client.</param>
      <param name="serviceType">The type of object being requested.</param>
      <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">No service of the requested type for the specified key is available.</exception>
      <returns>The found object.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatClientExtensions.GetRequiredService``1(Microsoft.Extensions.AI.IChatClient,System.Object)">
      <summary>
            Asks the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> for an object of type <typeparamref name="TService" />
            and throws an exception if one isn't available.</summary>
      <param name="client">The client.</param>
      <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
      <typeparam name="TService">The type of the object to be retrieved.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="client" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">No service of the requested type for the specified key is available.</exception>
      <returns>The found object.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatClientExtensions.GetResponseAsync(Microsoft.Extensions.AI.IChatClient,Microsoft.Extensions.AI.ChatMessage,Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
      <summary>Sends a chat message and returns the response messages.</summary>
      <param name="client">The chat client.</param>
      <param name="chatMessage">The chat message to send.</param>
      <param name="options">The chat options to configure the request.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chatMessage" /> is <see langword="null" />.</exception>
      <returns>The response messages generated by the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatClientExtensions.GetResponseAsync(Microsoft.Extensions.AI.IChatClient,System.String,Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
      <summary>Sends a user chat text message and returns the response messages.</summary>
      <param name="client">The chat client.</param>
      <param name="chatMessage">The text content for the chat message to send.</param>
      <param name="options">The chat options to configure the request.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chatMessage" /> is <see langword="null" />.</exception>
      <returns>The response messages generated by the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatClientExtensions.GetService``1(Microsoft.Extensions.AI.IChatClient,System.Object)">
      <summary>Asks the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> for an object of type <typeparamref name="TService" />.</summary>
      <param name="client">The client.</param>
      <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
      <typeparam name="TService">The type of the object to be retrieved.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="client" /> is <see langword="null" />.</exception>
      <returns>The found object, otherwise <see langword="null" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatClientExtensions.GetStreamingResponseAsync(Microsoft.Extensions.AI.IChatClient,Microsoft.Extensions.AI.ChatMessage,Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
      <summary>Sends a chat message and streams the response messages.</summary>
      <param name="client">The chat client.</param>
      <param name="chatMessage">The chat message to send.</param>
      <param name="options">The chat options to configure the request.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chatMessage" /> is <see langword="null" />.</exception>
      <returns>The response messages generated by the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatClientExtensions.GetStreamingResponseAsync(Microsoft.Extensions.AI.IChatClient,System.String,Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
      <summary>Sends a user chat text message and streams the response messages.</summary>
      <param name="client">The chat client.</param>
      <param name="chatMessage">The text content for the chat message to send.</param>
      <param name="options">The chat options to configure the request.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chatMessage" /> is <see langword="null" />.</exception>
      <returns>The response messages generated by the client.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.ChatClientMetadata">
      <summary>Provides metadata about an <see cref="T:Microsoft.Extensions.AI.IChatClient" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatClientMetadata.#ctor(System.String,System.Uri,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatClientMetadata" /> class.</summary>
      <param name="providerName">
            The name of the chat provider, if applicable. Where possible, this should map to the
            appropriate name defined in the OpenTelemetry Semantic Conventions for Generative AI systems.</param>
      <param name="providerUri">The URL for accessing the chat provider, if applicable.</param>
      <param name="defaultModelId">The ID of the chat model used by default, if applicable.</param>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatClientMetadata.DefaultModelId">
      <summary>Gets the ID of the default model used by this chat client.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatClientMetadata.ProviderName">
      <summary>Gets the name of the chat provider.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatClientMetadata.ProviderUri">
      <summary>Gets the URL for accessing the chat provider.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.ChatFinishReason">
      <summary>Represents the reason a chat response completed.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatFinishReason.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatFinishReason" /> struct with a string that describes the reason.</summary>
      <param name="value">The reason value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is empty or composed entirely of whitespace.</exception>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatFinishReason.Equals(Microsoft.Extensions.AI.ChatFinishReason)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the current object is equal to the <code data-dev-comment-type="paramref">other</code> parameter; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatFinishReason.Equals(System.Object)">
      <summary>Indicates whether this instance and a specified object are equal.</summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if <code data-dev-comment-type="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatFinishReason.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatFinishReason.op_Equality(Microsoft.Extensions.AI.ChatFinishReason,Microsoft.Extensions.AI.ChatFinishReason)">
      <summary>
            Compares two instances.</summary>
      <param name="left">The left argument of the comparison.</param>
      <param name="right">The right argument of the comparison.</param>
      <returns>
        <see langword="true" /> if the two instances are equal; <see langword="false" /> if they aren't equal.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatFinishReason.op_Inequality(Microsoft.Extensions.AI.ChatFinishReason,Microsoft.Extensions.AI.ChatFinishReason)">
      <summary>
            Compares two instances.</summary>
      <param name="left">The left argument of the comparison.</param>
      <param name="right">The right argument of the comparison.</param>
      <returns>
        <see langword="true" /> if the two instances aren't equal; <see langword="false" /> if they are equal.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatFinishReason.ToString">
      <summary>Gets the <see cref="P:Microsoft.Extensions.AI.ChatFinishReason.Value" /> of the finish reason.</summary>
      <returns>The <see cref="P:Microsoft.Extensions.AI.ChatFinishReason.Value" /> of the finish reason.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatFinishReason.ContentFilter">
      <summary>Gets a <see cref="T:Microsoft.Extensions.AI.ChatFinishReason" /> representing the model filtering content, whether for safety, prohibited content, sensitive content, or other such issues.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatFinishReason.Length">
      <summary>Gets a <see cref="T:Microsoft.Extensions.AI.ChatFinishReason" /> representing the model reaching the maximum length allowed for the request and/or response (typically in terms of tokens).</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatFinishReason.Stop">
      <summary>Gets a <see cref="T:Microsoft.Extensions.AI.ChatFinishReason" /> representing the model encountering a natural stop point or provided stop sequence.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatFinishReason.ToolCalls">
      <summary>Gets a <see cref="T:Microsoft.Extensions.AI.ChatFinishReason" /> representing the model requesting the use of a tool that was defined in the request.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatFinishReason.Value">
      <summary>Gets the finish reason value.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.ChatFinishReason.Converter">
      <summary>Provides a <see cref="T:System.Text.Json.Serialization.JsonConverter`1" /> for serializing <see cref="T:Microsoft.Extensions.AI.ChatFinishReason" /> instances.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatFinishReason.Converter.#ctor" />
    <member name="M:Microsoft.Extensions.AI.ChatFinishReason.Converter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
      <summary>Reads and converts the JSON to type <code data-dev-comment-type="typeparamref">T</code>.</summary>
      <param name="reader">The reader.</param>
      <param name="typeToConvert">The type to convert.</param>
      <param name="options">An object that specifies serialization options to use.</param>
      <returns>The converted value.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatFinishReason.Converter.Write(System.Text.Json.Utf8JsonWriter,Microsoft.Extensions.AI.ChatFinishReason,System.Text.Json.JsonSerializerOptions)">
      <summary>Writes a specified value as JSON.</summary>
      <param name="writer">The writer to write to.</param>
      <param name="value">The value to convert to JSON.</param>
      <param name="options">An object that specifies serialization options to use.</param>
    </member>
    <member name="T:Microsoft.Extensions.AI.ChatMessage">
      <summary>Represents a chat message used by an <see cref="T:Microsoft.Extensions.AI.IChatClient" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatMessage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatMessage" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatMessage.#ctor(Microsoft.Extensions.AI.ChatRole,System.Collections.Generic.IList{Microsoft.Extensions.AI.AIContent})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatMessage" /> class.</summary>
      <param name="role">The role of the author of the message.</param>
      <param name="contents">The contents for this message.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatMessage.#ctor(Microsoft.Extensions.AI.ChatRole,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatMessage" /> class.</summary>
      <param name="role">The role of the author of the message.</param>
      <param name="content">The text content of the message.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatMessage.Clone">
      <summary>Clones the <see cref="T:Microsoft.Extensions.AI.ChatMessage" /> to a new <see cref="T:Microsoft.Extensions.AI.ChatMessage" /> instance.</summary>
      <returns>A shallow clone of the original message object.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatMessage.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatMessage.AdditionalProperties">
      <summary>Gets or sets any additional properties associated with the message.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatMessage.AuthorName">
      <summary>Gets or sets the name of the author of the message.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatMessage.Contents">
      <summary>Gets or sets the chat message content items.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatMessage.CreatedAt">
      <summary>Gets or sets a timestamp for the chat message.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatMessage.MessageId">
      <summary>Gets or sets the ID of the chat message.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatMessage.RawRepresentation">
      <summary>Gets or sets the raw representation of the chat message from an underlying implementation.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatMessage.Role">
      <summary>Gets or sets the role of the author of the message.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatMessage.Text">
      <summary>Gets the text of this message.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.ChatOptions">
      <summary>Represents the options for a chat request.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatOptions.#ctor" />
    <member name="M:Microsoft.Extensions.AI.ChatOptions.Clone">
      <summary>Produces a clone of the current <see cref="T:Microsoft.Extensions.AI.ChatOptions" /> instance.</summary>
      <returns>A clone of the current <see cref="T:Microsoft.Extensions.AI.ChatOptions" /> instance.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatOptions.AdditionalProperties">
      <summary>Gets or sets any additional properties associated with the options.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatOptions.AllowMultipleToolCalls">
      <summary>
            Gets or sets a flag to indicate whether a single response is allowed to include multiple tool calls.
            If <see langword="false" />, the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> is asked to return a maximum of one tool call per request.
            If <see langword="true" />, there is no limit.
            If <see langword="null" />, the provider may select its own default.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatOptions.ConversationId">
      <summary>Gets or sets an optional identifier used to associate a request with an existing conversation.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatOptions.FrequencyPenalty">
      <summary>
            Gets or sets the penalty for repeated tokens in chat responses proportional to how many times they've appeared.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatOptions.Instructions">
      <summary>Gets or sets additional per-request instructions to be provided to the <see cref="T:Microsoft.Extensions.AI.IChatClient" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatOptions.MaxOutputTokens">
      <summary>Gets or sets the maximum number of tokens in the generated chat response.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatOptions.ModelId">
      <summary>Gets or sets the model ID for the chat request.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatOptions.PresencePenalty">
      <summary>
            Gets or sets a value that influences the probability of generated tokens appearing based on their existing presence in generated text.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatOptions.RawRepresentationFactory">
      <summary>
            Gets or sets a callback responsible for creating the raw representation of the chat options from an underlying implementation.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatOptions.ResponseFormat">
      <summary>
            Gets or sets the response format for the chat request.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatOptions.Seed">
      <summary>Gets or sets a seed value used by a service to control the reproducibility of results.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatOptions.StopSequences">
      <summary>
            Gets or sets the list of stop sequences.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatOptions.Temperature">
      <summary>Gets or sets the temperature for generating chat responses.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatOptions.ToolMode">
      <summary>Gets or sets the tool mode for the chat request.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatOptions.Tools">
      <summary>Gets or sets the list of tools to include with a chat request.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatOptions.TopK">
      <summary>
            Gets or sets the number of most probable tokens that the model considers when generating the next part of the text.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatOptions.TopP">
      <summary>Gets or sets the "nucleus sampling" factor (or "top p") for generating chat responses.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.ChatResponse">
      <summary>Represents the response to a chat request.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponse.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatResponse" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponse.#ctor(Microsoft.Extensions.AI.ChatMessage)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatResponse" /> class.</summary>
      <param name="message">The response message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponse.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatResponse" /> class.</summary>
      <param name="messages">The response messages.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponse.ToChatResponseUpdates">
      <summary>Creates an array of <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instances that represent this <see cref="T:Microsoft.Extensions.AI.ChatResponse" />.</summary>
      <returns>An array of <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instances that may be used to represent this <see cref="T:Microsoft.Extensions.AI.ChatResponse" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponse.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponse.AdditionalProperties">
      <summary>Gets or sets any additional properties associated with the chat response.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponse.ConversationId">
      <summary>Gets or sets an identifier for the state of the conversation.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponse.CreatedAt">
      <summary>Gets or sets a timestamp for the chat response.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponse.FinishReason">
      <summary>Gets or sets the reason for the chat response.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponse.Messages">
      <summary>Gets or sets the chat response messages.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponse.ModelId">
      <summary>Gets or sets the model ID used in the creation of the chat response.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponse.RawRepresentation">
      <summary>Gets or sets the raw representation of the chat response from an underlying implementation.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponse.ResponseId">
      <summary>Gets or sets the ID of the chat response.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponse.Text">
      <summary>Gets the text of the response.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponse.Usage">
      <summary>Gets or sets usage details for the chat response.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.ChatResponseExtensions">
      <summary>
            Provides extension methods for working with <see cref="T:Microsoft.Extensions.AI.ChatResponse" /> and <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instances.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponseExtensions.AddMessages(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatResponse)">
      <summary>Adds all of the messages from <paramref name="response" /> into <paramref name="list" />.</summary>
      <param name="list">The destination list to which the messages from <paramref name="response" /> should be added.</param>
      <param name="response">The response containing the messages to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="response" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponseExtensions.AddMessages(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatResponseUpdate,System.Func{Microsoft.Extensions.AI.AIContent,System.Boolean})">
      <summary>Converts the <paramref name="update" /> into a <see cref="T:Microsoft.Extensions.AI.ChatMessage" /> instance and adds it to <paramref name="list" />.</summary>
      <param name="list">The destination list to which the newly constructed message should be added.</param>
      <param name="update">The <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instance to convert to a message and add to the list.</param>
      <param name="filter">A predicate to filter which <see cref="T:Microsoft.Extensions.AI.AIContent" /> gets included in the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="update" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponseExtensions.AddMessages(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatResponseUpdate})">
      <summary>Converts the <paramref name="updates" /> into <see cref="T:Microsoft.Extensions.AI.ChatMessage" /> instances and adds them to <paramref name="list" />.</summary>
      <param name="list">The destination list to which the newly constructed messages should be added.</param>
      <param name="updates">The <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instances to convert to messages and add to the list.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="updates" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponseExtensions.AddMessagesAsync(System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},System.Collections.Generic.IAsyncEnumerable{Microsoft.Extensions.AI.ChatResponseUpdate},System.Threading.CancellationToken)">
      <summary>Converts the <paramref name="updates" /> into <see cref="T:Microsoft.Extensions.AI.ChatMessage" /> instances and adds them to <paramref name="list" />.</summary>
      <param name="list">The list to which the newly constructed messages should be added.</param>
      <param name="updates">The <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instances to convert to messages and add to the list.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="updates" /> is <see langword="null" />.</exception>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the completion of the operation.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponseExtensions.ToChatResponse(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatResponseUpdate})">
      <summary>Combines <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instances into a single <see cref="T:Microsoft.Extensions.AI.ChatResponse" />.</summary>
      <param name="updates">The updates to be combined.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="updates" /> is <see langword="null" />.</exception>
      <returns>The combined <see cref="T:Microsoft.Extensions.AI.ChatResponse" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponseExtensions.ToChatResponseAsync(System.Collections.Generic.IAsyncEnumerable{Microsoft.Extensions.AI.ChatResponseUpdate},System.Threading.CancellationToken)">
      <summary>Combines <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> instances into a single <see cref="T:Microsoft.Extensions.AI.ChatResponse" />.</summary>
      <param name="updates">The updates to be combined.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="updates" /> is <see langword="null" />.</exception>
      <returns>The combined <see cref="T:Microsoft.Extensions.AI.ChatResponse" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.ChatResponseFormat">
      <summary>Represents the response format that is desired by the caller.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponseFormat.ForJsonSchema(System.Text.Json.JsonElement,System.String,System.String)">
      <summary>Creates a <see cref="T:Microsoft.Extensions.AI.ChatResponseFormatJson" /> representing structured JSON data with the specified schema.</summary>
      <param name="schema">The JSON schema.</param>
      <param name="schemaName">An optional name of the schema. For example, if the schema represents a particular class, this could be the name of the class.</param>
      <param name="schemaDescription">An optional description of the schema.</param>
      <returns>The <see cref="T:Microsoft.Extensions.AI.ChatResponseFormatJson" /> instance.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponseFormat.Json">
      <summary>Gets a singleton instance representing structured JSON data but without any particular schema.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponseFormat.Text">
      <summary>Gets a singleton instance representing unstructured textual data.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.ChatResponseFormatJson">
      <summary>Represents a response format for structured JSON data.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponseFormatJson.#ctor(System.Nullable{System.Text.Json.JsonElement},System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatResponseFormatJson" /> class with the specified schema.</summary>
      <param name="schema">The schema to associate with the JSON response.</param>
      <param name="schemaName">A name for the schema.</param>
      <param name="schemaDescription">A description of the schema.</param>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponseFormatJson.Schema">
      <summary>Gets the JSON schema associated with the response, or <see langword="null" /> if there is none.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponseFormatJson.SchemaDescription">
      <summary>Gets a description of the schema.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponseFormatJson.SchemaName">
      <summary>Gets a name for the schema.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.ChatResponseFormatText">
      <summary>Represents a response format with no constraints around the format.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponseFormatText.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatResponseFormatText" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponseFormatText.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the specified object  is equal to the current object; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponseFormatText.GetHashCode">
      <summary>Serves as the default hash function.</summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.ChatResponseUpdate">
      <summary>
            Represents a single streaming response chunk from an <see cref="T:Microsoft.Extensions.AI.IChatClient" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponseUpdate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponseUpdate.#ctor(System.Nullable{Microsoft.Extensions.AI.ChatRole},System.Collections.Generic.IList{Microsoft.Extensions.AI.AIContent})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> class.</summary>
      <param name="role">The role of the author of the update.</param>
      <param name="contents">The contents of the update.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponseUpdate.#ctor(System.Nullable{Microsoft.Extensions.AI.ChatRole},System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatResponseUpdate" /> class.</summary>
      <param name="role">The role of the author of the update.</param>
      <param name="content">The text content of the update.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatResponseUpdate.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.AdditionalProperties">
      <summary>Gets or sets additional properties for the update.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.AuthorName">
      <summary>Gets or sets the name of the author of the response update.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.Contents">
      <summary>Gets or sets the chat response update content items.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.ConversationId">
      <summary>Gets or sets an identifier for the state of the conversation of which this update is a part.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.CreatedAt">
      <summary>Gets or sets a timestamp for the response update.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.FinishReason">
      <summary>Gets or sets the finish reason for the operation.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.MessageId">
      <summary>Gets or sets the ID of the message of which this update is a part.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.ModelId">
      <summary>Gets or sets the model ID associated with this response update.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.RawRepresentation">
      <summary>Gets or sets the raw representation of the response update from an underlying implementation.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.ResponseId">
      <summary>Gets or sets the ID of the response of which this update is a part.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.Role">
      <summary>Gets or sets the role of the author of the response update.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatResponseUpdate.Text">
      <summary>Gets the text of this update.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.ChatRole">
      <summary>
            Describes the intended purpose of a message within a chat interaction.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatRole.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ChatRole" /> struct with the provided value.</summary>
      <param name="value">The value to associate with this <see cref="T:Microsoft.Extensions.AI.ChatRole" />.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatRole.Equals(Microsoft.Extensions.AI.ChatRole)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the current object is equal to the <code data-dev-comment-type="paramref">other</code> parameter; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatRole.Equals(System.Object)">
      <summary>Indicates whether this instance and a specified object are equal.</summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if <code data-dev-comment-type="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatRole.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatRole.op_Equality(Microsoft.Extensions.AI.ChatRole,Microsoft.Extensions.AI.ChatRole)">
      <summary>
            Returns a value indicating whether two <see cref="T:Microsoft.Extensions.AI.ChatRole" /> instances are equivalent, as determined by a
            case-insensitive comparison of their values.</summary>
      <param name="left">The first <see cref="T:Microsoft.Extensions.AI.ChatRole" /> instance to compare.</param>
      <param name="right">The second <see cref="T:Microsoft.Extensions.AI.ChatRole" /> instance to compare.</param>
      <returns>
        <see langword="true" /> if left and right are both <see langword="null" /> or have equivalent values; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatRole.op_Inequality(Microsoft.Extensions.AI.ChatRole,Microsoft.Extensions.AI.ChatRole)">
      <summary>
            Returns a value indicating whether two <see cref="T:Microsoft.Extensions.AI.ChatRole" /> instances are not equivalent, as determined by a
            case-insensitive comparison of their values.</summary>
      <param name="left">The first <see cref="T:Microsoft.Extensions.AI.ChatRole" /> instance to compare.</param>
      <param name="right">The second <see cref="T:Microsoft.Extensions.AI.ChatRole" /> instance to compare.</param>
      <returns>
        <see langword="true" /> if left and right have different values; <see langword="false" /> if they have equivalent values or are both <see langword="null" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatRole.ToString">
      <summary>Returns the fully qualified type name of this instance.</summary>
      <returns>The fully qualified type name.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatRole.Assistant">
      <summary>Gets the role that provides responses to system-instructed, user-prompted input.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatRole.System">
      <summary>Gets the role that instructs or sets the behavior of the system.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatRole.Tool">
      <summary>Gets the role that provides additional information and references in response to tool use requests.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatRole.User">
      <summary>Gets the role that provides user input for chat interactions.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatRole.Value">
      <summary>
            Gets the value associated with this <see cref="T:Microsoft.Extensions.AI.ChatRole" />.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.ChatRole.Converter">
      <summary>Provides a <see cref="T:System.Text.Json.Serialization.JsonConverter`1" /> for serializing <see cref="T:Microsoft.Extensions.AI.ChatRole" /> instances.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatRole.Converter.#ctor" />
    <member name="M:Microsoft.Extensions.AI.ChatRole.Converter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
      <summary>Reads and converts the JSON to type <code data-dev-comment-type="typeparamref">T</code>.</summary>
      <param name="reader">The reader.</param>
      <param name="typeToConvert">The type to convert.</param>
      <param name="options">An object that specifies serialization options to use.</param>
      <returns>The converted value.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatRole.Converter.Write(System.Text.Json.Utf8JsonWriter,Microsoft.Extensions.AI.ChatRole,System.Text.Json.JsonSerializerOptions)">
      <summary>Writes a specified value as JSON.</summary>
      <param name="writer">The writer to write to.</param>
      <param name="value">The value to convert to JSON.</param>
      <param name="options">An object that specifies serialization options to use.</param>
    </member>
    <member name="T:Microsoft.Extensions.AI.ChatToolMode">
      <summary>
            Describes how tools should be selected by a <see cref="T:Microsoft.Extensions.AI.IChatClient" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ChatToolMode.RequireSpecific(System.String)">
      <summary>
            Instantiates a <see cref="T:Microsoft.Extensions.AI.ChatToolMode" /> indicating that tool usage is required,
            and that the specified function name must be selected.</summary>
      <param name="functionName">The name of the required function.</param>
      <returns>An instance of <see cref="T:Microsoft.Extensions.AI.RequiredChatToolMode" /> for the specified function name.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatToolMode.Auto">
      <summary>
            Gets a predefined <see cref="T:Microsoft.Extensions.AI.ChatToolMode" /> indicating that tool usage is optional.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatToolMode.None">
      <summary>
            Gets a predefined <see cref="T:Microsoft.Extensions.AI.ChatToolMode" /> indicating that tool usage is unsupported.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ChatToolMode.RequireAny">
      <summary>
            Gets a predefined <see cref="T:Microsoft.Extensions.AI.ChatToolMode" /> indicating that tool usage is required,
            but that any tool can be selected. At least one tool must be provided in <see cref="P:Microsoft.Extensions.AI.ChatOptions.Tools" />.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.CitationAnnotation">
      <summary>
            Represents an annotation that links content to source references,
            such as documents, URLs, files, or tool outputs.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.CitationAnnotation.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.CitationAnnotation" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.CitationAnnotation.FileId">
      <summary>Gets or sets a source identifier associated with the annotation.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.CitationAnnotation.Snippet">
      <summary>
            Gets or sets a snippet or excerpt from the source that was cited.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.CitationAnnotation.Title">
      <summary>
            Gets or sets the title or name of the source.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.CitationAnnotation.ToolName">
      <summary>Gets or sets the name of any tool involved in the production of the associated content.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.CitationAnnotation.Url">
      <summary>
            Gets or sets a URI from which the source material was retrieved.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.DataContent">
      <summary>
            Represents binary content with an associated media type (also known as MIME type).</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.DataContent.#ctor(System.ReadOnlyMemory{System.Byte},System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.DataContent" /> class.</summary>
      <param name="data">The byte contents.</param>
      <param name="mediaType">The media type (also known as MIME type) represented by the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mediaType" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mediaType" /> is empty or composed entirely of whitespace.</exception>
    </member>
    <member name="M:Microsoft.Extensions.AI.DataContent.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.DataContent" /> class.</summary>
      <param name="uri">The data URI containing the content.</param>
      <param name="mediaType">The media type (also known as MIME type) represented by the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mediaType" /> is an invalid media type.</exception>
    </member>
    <member name="M:Microsoft.Extensions.AI.DataContent.#ctor(System.Uri,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.DataContent" /> class.</summary>
      <param name="uri">The data URI containing the content.</param>
      <param name="mediaType">
            The media type (also known as MIME type) represented by the content. If not provided,
            it must be provided as part of the <paramref name="uri" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mediaType" /> is an invalid media type.</exception>
    </member>
    <member name="M:Microsoft.Extensions.AI.DataContent.HasTopLevelMediaType(System.String)">
      <summary>
            Determines whether the <see cref="P:Microsoft.Extensions.AI.DataContent.MediaType" />'s top-level type matches the specified <paramref name="topLevelType" />.</summary>
      <param name="topLevelType">The type to compare against <see cref="P:Microsoft.Extensions.AI.DataContent.MediaType" />.</param>
      <returns>
        <see langword="true" /> if the type portion of <see cref="P:Microsoft.Extensions.AI.DataContent.MediaType" /> matches the specified value; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.DataContent.Base64Data">
      <summary>Gets the data represented by this instance as a Base64 character sequence.</summary>
      <returns>The base64 representation of the data.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.DataContent.Data">
      <summary>Gets the data represented by this instance.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.DataContent.MediaType">
      <summary>Gets the media type (also known as MIME type) of the content.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.DataContent.Name">
      <summary>Gets or sets an optional name associated with the data.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.DataContent.Uri">
      <summary>Gets the data URI for this <see cref="T:Microsoft.Extensions.AI.DataContent" />.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.DelegatingAIFunction">
      <summary>
            Provides an optional base class for an <see cref="T:Microsoft.Extensions.AI.AIFunction" /> that passes through calls to another instance.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingAIFunction.#ctor(Microsoft.Extensions.AI.AIFunction)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.DelegatingAIFunction" /> class as a wrapper around <paramref name="innerFunction" />.</summary>
      <param name="innerFunction">The inner AI function to which all calls are delegated by default.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerFunction" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingAIFunction.InvokeCoreAsync(Microsoft.Extensions.AI.AIFunctionArguments,System.Threading.CancellationToken)">
      <summary>Invokes the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.AIFunction"></xref> and returns its result.</summary>
      <param name="arguments">The arguments to pass to the function's invocation.</param>
      <param name="cancellationToken">The <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> to monitor for cancellation requests.</param>
      <returns>The result of the function's execution.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingAIFunction.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.DelegatingAIFunction.AdditionalProperties">
      <summary>Gets any additional properties associated with the tool.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.DelegatingAIFunction.Description">
      <summary>Gets a description of the tool, suitable for use in describing the purpose to a model.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.DelegatingAIFunction.InnerFunction">
      <summary>Gets the inner <see cref="T:Microsoft.Extensions.AI.AIFunction" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.DelegatingAIFunction.JsonSchema">
      <summary>Gets a JSON Schema describing the function and its input parameters.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.DelegatingAIFunction.JsonSerializerOptions">
      <summary>Gets a <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.AIFunction.JsonSerializerOptions"></xref> that can be used to marshal function parameters.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.DelegatingAIFunction.Name">
      <summary>Gets the name of the tool.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.DelegatingAIFunction.ReturnJsonSchema">
      <summary>Gets a JSON Schema describing the function's return value.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.DelegatingAIFunction.UnderlyingMethod">
      <summary>Gets the underlying <xref data-throw-if-not-resolved="true" uid="System.Reflection.MethodInfo"></xref> that this <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.AIFunction"></xref> might be wrapping.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.DelegatingChatClient">
      <summary>
            Provides an optional base class for an <see cref="T:Microsoft.Extensions.AI.IChatClient" /> that passes through calls to another instance.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingChatClient.#ctor(Microsoft.Extensions.AI.IChatClient)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.DelegatingChatClient" /> class.</summary>
      <param name="innerClient">The wrapped client instance.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingChatClient.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingChatClient.Dispose(System.Boolean)">
      <summary>Provides a mechanism for releasing unmanaged resources.</summary>
      <param name="disposing">
        <see langword="true" /> if being called from <see cref="M:Microsoft.Extensions.AI.DelegatingChatClient.Dispose" />; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingChatClient.GetResponseAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
      <summary>Sends chat messages and returns the response.</summary>
      <param name="messages">The sequence of chat messages to send.</param>
      <param name="options">The chat options with which to configure the request.</param>
      <param name="cancellationToken">The <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> to monitor for cancellation requests. The default is <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken.None"></xref>.</param>
      <returns>The response messages generated by the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingChatClient.GetService(System.Type,System.Object)">
      <summary>Asks the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.IChatClient"></xref> for an object of the specified type <code data-dev-comment-type="paramref">serviceType</code>.</summary>
      <param name="serviceType">The type of object being requested.</param>
      <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
      <returns>The found object, otherwise <code data-dev-comment-type="langword">null</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingChatClient.GetStreamingResponseAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
      <summary>Sends chat messages and streams the response.</summary>
      <param name="messages">The sequence of chat messages to send.</param>
      <param name="options">The chat options with which to configure the request.</param>
      <param name="cancellationToken">The <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> to monitor for cancellation requests. The default is <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken.None"></xref>.</param>
      <returns>The response messages generated by the client.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.DelegatingChatClient.InnerClient">
      <summary>Gets the inner <see cref="T:Microsoft.Extensions.AI.IChatClient" />.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2">
      <summary>
            Provides an optional base class for an <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" /> that passes through calls to another instance.</summary>
      <typeparam name="TInput">The type of the input passed to the generator.</typeparam>
      <typeparam name="TEmbedding">The type of the embedding instance produced by the generator.</typeparam>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.#ctor(Microsoft.Extensions.AI.IEmbeddingGenerator{`0,`1})">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2" /> class.</summary>
      <param name="innerGenerator">The wrapped generator instance.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.Dispose(System.Boolean)">
      <summary>Provides a mechanism for releasing unmanaged resources.</summary>
      <param name="disposing">
        <see langword="true" /> if being called from <see cref="M:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.Dispose" />; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.GenerateAsync(System.Collections.Generic.IEnumerable{`0},Microsoft.Extensions.AI.EmbeddingGenerationOptions,System.Threading.CancellationToken)">
      <summary>Generates embeddings for each of the supplied <code data-dev-comment-type="paramref">values</code>.</summary>
      <param name="values">The sequence of values for which to generate embeddings.</param>
      <param name="options">The embedding generation options with which to configure the request.</param>
      <param name="cancellationToken">The <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> to monitor for cancellation requests. The default is <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken.None"></xref>.</param>
      <returns>The generated embeddings.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.GetService(System.Type,System.Object)">
      <summary>Asks the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.IEmbeddingGenerator`2"></xref> for an object of the specified type <code data-dev-comment-type="paramref">serviceType</code>.</summary>
      <param name="serviceType">The type of object being requested.</param>
      <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
      <returns>The found object, otherwise <code data-dev-comment-type="langword">null</code>.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.DelegatingEmbeddingGenerator`2.InnerGenerator">
      <summary>Gets the inner <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" />.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.DelegatingImageGenerator">
      <summary>
            Provides an optional base class for an <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> that passes through calls to another instance.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingImageGenerator.#ctor(Microsoft.Extensions.AI.IImageGenerator)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.DelegatingImageGenerator" /> class.</summary>
      <param name="innerGenerator">The wrapped generator instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerGenerator" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingImageGenerator.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingImageGenerator.Dispose(System.Boolean)">
      <summary>Provides a mechanism for releasing unmanaged resources.</summary>
      <param name="disposing">
        <see langword="true" /> if being called from <see cref="M:Microsoft.Extensions.AI.DelegatingImageGenerator.Dispose" />; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingImageGenerator.GenerateAsync(Microsoft.Extensions.AI.ImageGenerationRequest,Microsoft.Extensions.AI.ImageGenerationOptions,System.Threading.CancellationToken)">
      <summary>Sends an image generation request and returns the generated image as a <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.ImageGenerationResponse"></xref>.</summary>
      <param name="request">The image generation request containing the prompt and optional original images for editing.</param>
      <param name="options">The image generation options to configure the request.</param>
      <param name="cancellationToken">The <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> to monitor for cancellation requests. The default is <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken.None"></xref>.</param>
      <returns>The images generated by the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.ImageGenerationRequest"></xref>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingImageGenerator.GetService(System.Type,System.Object)">
      <summary>Asks the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.IImageGenerator"></xref> for an object of the specified type <code data-dev-comment-type="paramref">serviceType</code>.</summary>
      <param name="serviceType">The type of object being requested.</param>
      <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
      <returns>The found object, otherwise <code data-dev-comment-type="langword">null</code>.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.DelegatingImageGenerator.InnerGenerator">
      <summary>Gets the inner <see cref="T:Microsoft.Extensions.AI.IImageGenerator" />.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.DelegatingSpeechToTextClient">
      <summary>
            Provides an optional base class for an <see cref="T:Microsoft.Extensions.AI.ISpeechToTextClient" /> that passes through calls to another instance.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingSpeechToTextClient.#ctor(Microsoft.Extensions.AI.ISpeechToTextClient)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.DelegatingSpeechToTextClient" /> class.</summary>
      <param name="innerClient">The wrapped client instance.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingSpeechToTextClient.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingSpeechToTextClient.Dispose(System.Boolean)">
      <summary>Provides a mechanism for releasing unmanaged resources.</summary>
      <param name="disposing">
        <see langword="true" /> if being called from <see cref="M:Microsoft.Extensions.AI.DelegatingSpeechToTextClient.Dispose" />; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingSpeechToTextClient.GetService(System.Type,System.Object)">
      <summary>Asks the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.ISpeechToTextClient"></xref> for an object of the specified type <code data-dev-comment-type="paramref">serviceType</code>.</summary>
      <param name="serviceType">The type of object being requested.</param>
      <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
      <returns>The found object, otherwise <code data-dev-comment-type="langword">null</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingSpeechToTextClient.GetStreamingTextAsync(System.IO.Stream,Microsoft.Extensions.AI.SpeechToTextOptions,System.Threading.CancellationToken)">
      <summary>Sends audio speech content to the model and streams back the generated text.</summary>
      <param name="audioSpeechStream">The audio speech stream to send.</param>
      <param name="options">The speech to text options to configure the request.</param>
      <param name="cancellationToken">The <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> to monitor for cancellation requests. The default is <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken.None"></xref>.</param>
      <returns>The text updates representing the streamed output.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.DelegatingSpeechToTextClient.GetTextAsync(System.IO.Stream,Microsoft.Extensions.AI.SpeechToTextOptions,System.Threading.CancellationToken)">
      <summary>Sends audio speech content to the model and returns the generated text.</summary>
      <param name="audioSpeechStream">The audio speech stream to send.</param>
      <param name="options">The speech to text options to configure the request.</param>
      <param name="cancellationToken">The <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> to monitor for cancellation requests. The default is <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken.None"></xref>.</param>
      <returns>The text generated.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.DelegatingSpeechToTextClient.InnerClient">
      <summary>Gets the inner <see cref="T:Microsoft.Extensions.AI.ISpeechToTextClient" />.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.Embedding">
      <summary>Represents an embedding generated by a <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.Embedding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Embedding" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Embedding.AdditionalProperties">
      <summary>Gets or sets any additional properties associated with the embedding.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Embedding.CreatedAt">
      <summary>Gets or sets a timestamp at which the embedding was created.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Embedding.Dimensions">
      <summary>Gets the dimensionality of the embedding vector.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Embedding.ModelId">
      <summary>Gets or sets the model ID using in the creation of the embedding.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.Embedding`1">
      <summary>Represents an embedding composed of a vector of <typeparamref name="T" /> values.</summary>
      <typeparam name="T">The type of the values in the embedding vector.</typeparam>
    </member>
    <member name="M:Microsoft.Extensions.AI.Embedding`1.#ctor(System.ReadOnlyMemory{`0})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Embedding`1" /> class with the embedding vector.</summary>
      <param name="vector">The embedding vector this embedding represents.</param>
    </member>
    <member name="P:Microsoft.Extensions.AI.Embedding`1.Dimensions">
      <summary>Gets the dimensionality of the embedding vector.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Embedding`1.Vector">
      <summary>Gets or sets the embedding vector this embedding represents.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.EmbeddingGenerationOptions">
      <summary>Represents the options for an embedding generation request.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.EmbeddingGenerationOptions.#ctor" />
    <member name="M:Microsoft.Extensions.AI.EmbeddingGenerationOptions.Clone">
      <summary>Produces a clone of the current <see cref="T:Microsoft.Extensions.AI.EmbeddingGenerationOptions" /> instance.</summary>
      <returns>A clone of the current <see cref="T:Microsoft.Extensions.AI.EmbeddingGenerationOptions" /> instance.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.EmbeddingGenerationOptions.AdditionalProperties">
      <summary>Gets or sets additional properties for the embedding generation request.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.EmbeddingGenerationOptions.Dimensions">
      <summary>Gets or sets the number of dimensions requested in the embedding.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.EmbeddingGenerationOptions.ModelId">
      <summary>Gets or sets the model ID for the embedding generation request.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.EmbeddingGenerationOptions.RawRepresentationFactory">
      <summary>
            Gets or sets a callback responsible for creating the raw representation of the embedding generation options from an underlying implementation.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.EmbeddingGeneratorExtensions">
      <summary>Provides a collection of static methods for extending <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" /> instances.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.EmbeddingGeneratorExtensions.GenerateAndZipAsync``2(Microsoft.Extensions.AI.IEmbeddingGenerator{``0,``1},System.Collections.Generic.IEnumerable{``0},Microsoft.Extensions.AI.EmbeddingGenerationOptions,System.Threading.CancellationToken)">
      <summary>
            Generates embeddings for each of the supplied <paramref name="values" /> and produces a list that pairs
            each input value with its resulting embedding.</summary>
      <param name="generator">The embedding generator.</param>
      <param name="values">The collection of values for which to generate embeddings.</param>
      <param name="options">The embedding generation options to configure the request.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <typeparam name="TInput">The type from which embeddings will be generated.</typeparam>
      <typeparam name="TEmbedding">The type of embedding to generate.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">The generator did not produce one embedding for each input value.</exception>
      <returns>An array containing tuples of the input values and the associated generated embeddings.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.EmbeddingGeneratorExtensions.GenerateAsync``2(Microsoft.Extensions.AI.IEmbeddingGenerator{``0,``1},``0,Microsoft.Extensions.AI.EmbeddingGenerationOptions,System.Threading.CancellationToken)">
      <summary>Generates an embedding from the specified <paramref name="value" />.</summary>
      <param name="generator">The embedding generator.</param>
      <param name="value">A value from which an embedding will be generated.</param>
      <param name="options">The embedding generation options to configure the request.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <typeparam name="TInput">The type from which embeddings will be generated.</typeparam>
      <typeparam name="TEmbedding">The type of embedding to generate.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">The generator did not produce exactly one embedding.</exception>
      <returns>
            The generated embedding for the specified <paramref name="value" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.EmbeddingGeneratorExtensions.GenerateVectorAsync``2(Microsoft.Extensions.AI.IEmbeddingGenerator{``0,Microsoft.Extensions.AI.Embedding{``1}},``0,Microsoft.Extensions.AI.EmbeddingGenerationOptions,System.Threading.CancellationToken)">
      <summary>Generates an embedding vector from the specified <paramref name="value" />.</summary>
      <param name="generator">The embedding generator.</param>
      <param name="value">A value from which an embedding will be generated.</param>
      <param name="options">The embedding generation options to configure the request.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <typeparam name="TInput">The type from which embeddings will be generated.</typeparam>
      <typeparam name="TEmbeddingElement">The numeric type of the embedding data.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">The generator did not produce exactly one embedding.</exception>
      <returns>The generated embedding for the specified <paramref name="value" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.EmbeddingGeneratorExtensions.GetRequiredService(Microsoft.Extensions.AI.IEmbeddingGenerator,System.Type,System.Object)">
      <summary>
            Asks the <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" /> for an object of the specified type <paramref name="serviceType" />
            and throws an exception if one isn't available.</summary>
      <param name="generator">The generator.</param>
      <param name="serviceType">The type of object being requested.</param>
      <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">No service of the requested type for the specified key is available.</exception>
      <returns>The found object.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.EmbeddingGeneratorExtensions.GetRequiredService``1(Microsoft.Extensions.AI.IEmbeddingGenerator,System.Object)">
      <summary>
            Asks the <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" /> for an object of type <typeparamref name="TService" />
            and throws an exception if one isn't available.</summary>
      <param name="generator">The generator.</param>
      <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
      <typeparam name="TService">The type of the object to be retrieved.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="generator" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">No service of the requested type for the specified key is available.</exception>
      <returns>The found object.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.EmbeddingGeneratorExtensions.GetService``1(Microsoft.Extensions.AI.IEmbeddingGenerator,System.Object)">
      <summary>Asks the <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" /> for an object of type <typeparamref name="TService" />.</summary>
      <param name="generator">The generator.</param>
      <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
      <typeparam name="TService">The type of the object to be retrieved.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="generator" /> is <see langword="null" />.</exception>
      <returns>The found object, otherwise <see langword="null" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.EmbeddingGeneratorMetadata">
      <summary>Provides metadata about an <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.EmbeddingGeneratorMetadata.#ctor(System.String,System.Uri,System.String,System.Nullable{System.Int32})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.EmbeddingGeneratorMetadata" /> class.</summary>
      <param name="providerName">
            The name of the embedding generation provider, if applicable. Where possible, this should map to the
            appropriate name defined in the OpenTelemetry Semantic Conventions for Generative AI systems.</param>
      <param name="providerUri">The URL for accessing the embedding generation provider, if applicable.</param>
      <param name="defaultModelId">The ID of the default embedding generation model used, if applicable.</param>
      <param name="defaultModelDimensions">The number of dimensions in vectors produced by the default model, if applicable.</param>
    </member>
    <member name="P:Microsoft.Extensions.AI.EmbeddingGeneratorMetadata.DefaultModelDimensions">
      <summary>Gets the number of dimensions in the embeddings produced by the default model.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.EmbeddingGeneratorMetadata.DefaultModelId">
      <summary>Gets the ID of the default model used by this embedding generator.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.EmbeddingGeneratorMetadata.ProviderName">
      <summary>Gets the name of the embedding generation provider.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.EmbeddingGeneratorMetadata.ProviderUri">
      <summary>Gets the URL for accessing the embedding generation provider.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.ErrorContent">
      <summary>Represents an error.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ErrorContent.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ErrorContent" /> class with the specified error message.</summary>
      <param name="message">The error message to store in this content.</param>
    </member>
    <member name="P:Microsoft.Extensions.AI.ErrorContent.Details">
      <summary>Gets or sets additional details about the error.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ErrorContent.ErrorCode">
      <summary>Gets or sets an error code associated with the error.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ErrorContent.Message">
      <summary>Gets or sets the error message.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.FunctionApprovalRequestContent">
      <summary>
            Represents a request for user approval of a function call.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.FunctionApprovalRequestContent.#ctor(System.String,Microsoft.Extensions.AI.FunctionCallContent)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.FunctionApprovalRequestContent" /> class.</summary>
      <param name="id">The ID that uniquely identifies the function approval request/response pair.</param>
      <param name="functionCall">The function call that requires user approval.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="functionCall" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> is empty or composed entirely of whitespace.</exception>
    </member>
    <member name="M:Microsoft.Extensions.AI.FunctionApprovalRequestContent.CreateResponse(System.Boolean)">
      <summary>
            Creates a <see cref="T:Microsoft.Extensions.AI.FunctionApprovalResponseContent" /> to indicate whether the function call is approved or rejected based on the value of <paramref name="approved" />.</summary>
      <param name="approved">
        <see langword="true" /> if the function call is approved; otherwise, <see langword="false" />.</param>
      <returns>The <see cref="T:Microsoft.Extensions.AI.FunctionApprovalResponseContent" /> representing the approval response.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.FunctionApprovalRequestContent.FunctionCall">
      <summary>
            Gets the function call that pre-invoke approval is required for.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.FunctionApprovalResponseContent">
      <summary>
            Represents a response to a function approval request.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.FunctionApprovalResponseContent.#ctor(System.String,System.Boolean,Microsoft.Extensions.AI.FunctionCallContent)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.FunctionApprovalResponseContent" /> class.</summary>
      <param name="id">The ID that uniquely identifies the function approval request/response pair.</param>
      <param name="approved">
        <see langword="true" /> if the function call is approved; otherwise, <see langword="false" />.</param>
      <param name="functionCall">The function call that requires user approval.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="functionCall" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> is empty or composed entirely of whitespace.</exception>
    </member>
    <member name="P:Microsoft.Extensions.AI.FunctionApprovalResponseContent.Approved">
      <summary>
            Gets a value indicating whether the user approved the request.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.FunctionApprovalResponseContent.FunctionCall">
      <summary>
            Gets the function call for which approval was requested.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.FunctionCallContent">
      <summary>
            Represents a function call request.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.FunctionCallContent.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.FunctionCallContent" /> class.</summary>
      <param name="callId">The function call ID.</param>
      <param name="name">The function name.</param>
      <param name="arguments">The function original arguments.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.FunctionCallContent.CreateFromParsedArguments``1(``0,System.String,System.String,System.Func{``0,System.Collections.Generic.IDictionary{System.String,System.Object}})">
      <summary>
            Creates a new instance of <see cref="T:Microsoft.Extensions.AI.FunctionCallContent" /> parsing arguments using a specified encoding and parser.</summary>
      <param name="encodedArguments">The input arguments encoded in <typeparamref name="TEncoding" />.</param>
      <param name="callId">The function call ID.</param>
      <param name="name">The function name.</param>
      <param name="argumentParser">The parsing implementation converting the encoding to a dictionary of arguments.</param>
      <typeparam name="TEncoding">The encoding format from which to parse function call arguments.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="argumentParser" /> is <see langword="null" />.</exception>
      <returns>A new instance of <see cref="T:Microsoft.Extensions.AI.FunctionCallContent" /> containing the parse result.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.FunctionCallContent.Arguments">
      <summary>
            Gets or sets the arguments requested to be provided to the function.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.FunctionCallContent.CallId">
      <summary>
            Gets the function call ID.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.FunctionCallContent.Exception">
      <summary>
            Gets or sets any exception that occurred while mapping the original function call data to this class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.FunctionCallContent.Name">
      <summary>
            Gets the name of the function requested.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.FunctionResultContent">
      <summary>
            Represents the result of a function call.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.FunctionResultContent.#ctor(System.String,System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.FunctionResultContent" /> class.</summary>
      <param name="callId">The function call ID for which this is the result.</param>
      <param name="result">
        <see langword="null" /> if the function returned <see langword="null" /> or was void-returning
            and thus had no result, or if the function call failed. Typically, however, to provide meaningfully representative
            information to an AI service, a human-readable representation of those conditions should be supplied.</param>
    </member>
    <member name="P:Microsoft.Extensions.AI.FunctionResultContent.CallId">
      <summary>
            Gets the ID of the function call for which this is the result.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.FunctionResultContent.Exception">
      <summary>
            Gets or sets an exception that occurred if the function call failed.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.FunctionResultContent.Result">
      <summary>
            Gets or sets the result of the function call, or a generic error message if the function call failed.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.GeneratedEmbeddings`1">
      <summary>Represents the result of an operation to generate embeddings.</summary>
      <typeparam name="TEmbedding">Specifies the type of the generated embeddings.</typeparam>
    </member>
    <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.GeneratedEmbeddings`1" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.GeneratedEmbeddings`1" /> class that contains all of the embeddings from the specified collection.</summary>
      <param name="embeddings">The collection whose embeddings are copied to the new list.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.GeneratedEmbeddings`1" /> class with the specified capacity.</summary>
      <param name="capacity">The number of embeddings that the new list can initially store.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.Add(`0)">
      <summary>Adds an item to the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</summary>
      <param name="item">The object to add to the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
      <summary>Adds the embeddings from the specified collection to the end of this list.</summary>
      <param name="items">The collection whose elements should be added to this list.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.Clear">
      <summary>Removes all items from the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.Contains(`0)">
      <summary>Determines whether the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> contains a specific value.</summary>
      <param name="item">The object to locate in the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if <code data-dev-comment-type="paramref">item</code> is found in the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the elements of the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> to an <xref data-throw-if-not-resolved="true" uid="System.Array"></xref>, starting at a particular <xref data-throw-if-not-resolved="true" uid="System.Array"></xref> index.</summary>
      <param name="array">The one-dimensional <xref data-throw-if-not-resolved="true" uid="System.Array"></xref> that is the destination of the elements copied from <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>. The <xref data-throw-if-not-resolved="true" uid="System.Array"></xref> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <code data-dev-comment-type="paramref">array</code> at which copying begins.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.IndexOf(`0)">
      <summary>Determines the index of a specific item in the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IList`1"></xref>.</summary>
      <param name="item">The object to locate in the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IList`1"></xref>.</param>
      <returns>The index of <code data-dev-comment-type="paramref">item</code> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.Insert(System.Int32,`0)">
      <summary>Inserts an item to the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IList`1"></xref> at the specified index.</summary>
      <param name="index">The zero-based index at which <code data-dev-comment-type="paramref">item</code> should be inserted.</param>
      <param name="item">The object to insert into the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IList`1"></xref>.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.Remove(`0)">
      <summary>Removes the first occurrence of a specific object from the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</summary>
      <param name="item">The object to remove from the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if <code data-dev-comment-type="paramref">item</code> was successfully removed from the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>; otherwise, <code data-dev-comment-type="langword">false</code>. This method also returns <code data-dev-comment-type="langword">false</code> if <code data-dev-comment-type="paramref">item</code> is not found in the original <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.RemoveAt(System.Int32)">
      <summary>Removes the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IList`1"></xref> item at the specified index.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.GeneratedEmbeddings`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <xref data-throw-if-not-resolved="true" uid="System.Collections.IEnumerator"></xref> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.GeneratedEmbeddings`1.AdditionalProperties">
      <summary>Gets or sets any additional properties associated with the embeddings.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.GeneratedEmbeddings`1.Count">
      <summary>Gets the number of elements contained in the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</summary>
      <returns>The number of elements contained in the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref>.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.GeneratedEmbeddings`1.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <param name="index">The zero-based index of the element to get or set.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.GeneratedEmbeddings`1.System#Collections#Generic#ICollection&lt;TEmbedding&gt;#IsReadOnly">
      <summary>Gets a value indicating whether the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> is read-only.</summary>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.ICollection`1"></xref> is read-only; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.GeneratedEmbeddings`1.Usage">
      <summary>Gets or sets usage details for the embeddings' generation.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.HostedCodeInterpreterTool">
      <summary>Represents a hosted tool that can be specified to an AI service to enable it to execute code it generates.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.HostedCodeInterpreterTool.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.HostedCodeInterpreterTool" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.HostedCodeInterpreterTool.Inputs">
      <summary>Gets or sets a collection of <see cref="T:Microsoft.Extensions.AI.AIContent" /> to be used as input to the code interpreter tool.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.HostedFileContent">
      <summary>
            Represents a file that is hosted by the AI service.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.HostedFileContent.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.HostedFileContent" /> class.</summary>
      <param name="fileId">The ID of the hosted file.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileId" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileId" /> is empty or composed entirely of whitespace.</exception>
    </member>
    <member name="P:Microsoft.Extensions.AI.HostedFileContent.FileId">
      <summary>
            Gets or sets the ID of the hosted file.</summary>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is empty or composed entirely of whitespace.</exception>
    </member>
    <member name="T:Microsoft.Extensions.AI.HostedFileSearchTool">
      <summary>Represents a hosted tool that can be specified to an AI service to enable it to perform file search operations.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.HostedFileSearchTool.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.HostedFileSearchTool" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.HostedFileSearchTool.Inputs">
      <summary>Gets or sets a collection of <see cref="T:Microsoft.Extensions.AI.AIContent" /> to be used as input to the file search tool.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.HostedFileSearchTool.MaximumResultCount">
      <summary>Gets or sets a requested bound on the number of matches the tool should produce.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.HostedMcpServerTool">
      <summary>
            Represents a hosted MCP server tool that can be specified to an AI service.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.HostedMcpServerTool.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.HostedMcpServerTool" /> class.</summary>
      <param name="serverName">The name of the remote MCP server.</param>
      <param name="url">The URL of the remote MCP server.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverName" /> or <paramref name="url" /> are <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="serverName" /> is empty or composed entirely of whitespace.</exception>
    </member>
    <member name="M:Microsoft.Extensions.AI.HostedMcpServerTool.#ctor(System.String,System.Uri)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.HostedMcpServerTool" /> class.</summary>
      <param name="serverName">The name of the remote MCP server.</param>
      <param name="url">The URL of the remote MCP server.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverName" /> or <paramref name="url" /> are <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="serverName" /> is empty or composed entirely of whitespace.</exception>
    </member>
    <member name="P:Microsoft.Extensions.AI.HostedMcpServerTool.AllowedTools">
      <summary>
            Gets or sets the list of tools allowed to be used by the AI service.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.HostedMcpServerTool.ApprovalMode">
      <summary>
            Gets or sets the approval mode that indicates when the AI service should require user approval for tool calls to the remote MCP server.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.HostedMcpServerTool.Headers">
      <summary>
            Gets or sets the HTTP headers that the AI service should use when calling the remote MCP server.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.HostedMcpServerTool.ServerDescription">
      <summary>
            Gets or sets the description of the remote MCP server, used to provide more context to the AI service.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.HostedMcpServerTool.ServerName">
      <summary>
            Gets the name of the remote MCP server that is used to identify it.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.HostedMcpServerTool.Url">
      <summary>
            Gets the URL of the remote MCP server.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.HostedMcpServerToolAlwaysRequireApprovalMode">
      <summary>
            Indicates that approval is always required for tool calls to a hosted MCP server.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.HostedMcpServerToolAlwaysRequireApprovalMode.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.HostedMcpServerToolAlwaysRequireApprovalMode" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.HostedMcpServerToolAlwaysRequireApprovalMode.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the specified object  is equal to the current object; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.HostedMcpServerToolAlwaysRequireApprovalMode.GetHashCode">
      <summary>Serves as the default hash function.</summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.HostedMcpServerToolApprovalMode">
      <summary>
            Describes how approval is required for tool calls to a hosted MCP server.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.HostedMcpServerToolApprovalMode.RequireSpecific(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
      <summary>
            Instantiates a <see cref="T:Microsoft.Extensions.AI.HostedMcpServerToolApprovalMode" /> that specifies approval behavior for individual tool names.</summary>
      <param name="alwaysRequireApprovalToolNames">The list of tools names that always require approval.</param>
      <param name="neverRequireApprovalToolNames">The list of tools names that never require approval.</param>
      <returns>An instance of <see cref="T:Microsoft.Extensions.AI.HostedMcpServerToolRequireSpecificApprovalMode" /> for the specified tool names.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.HostedMcpServerToolApprovalMode.AlwaysRequire">
      <summary>
            Gets a predefined <see cref="T:Microsoft.Extensions.AI.HostedMcpServerToolApprovalMode" /> indicating that all tool calls to a hosted MCP server always require approval.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.HostedMcpServerToolApprovalMode.NeverRequire">
      <summary>
            Gets a predefined <see cref="T:Microsoft.Extensions.AI.HostedMcpServerToolApprovalMode" /> indicating that all tool calls to a hosted MCP server never require approval.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.HostedMcpServerToolNeverRequireApprovalMode">
      <summary>
            Indicates that approval is never required for tool calls to a hosted MCP server.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.HostedMcpServerToolNeverRequireApprovalMode.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.HostedMcpServerToolNeverRequireApprovalMode" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.HostedMcpServerToolNeverRequireApprovalMode.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the specified object  is equal to the current object; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.HostedMcpServerToolNeverRequireApprovalMode.GetHashCode">
      <summary>Serves as the default hash function.</summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.HostedMcpServerToolRequireSpecificApprovalMode">
      <summary>
            Represents a mode where approval behavior is specified for individual tool names.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.HostedMcpServerToolRequireSpecificApprovalMode.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.HostedMcpServerToolRequireSpecificApprovalMode" /> class that specifies approval behavior for individual tool names.</summary>
      <param name="alwaysRequireApprovalToolNames">The list of tools names that always require approval.</param>
      <param name="neverRequireApprovalToolNames">The list of tools names that never require approval.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.HostedMcpServerToolRequireSpecificApprovalMode.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the specified object  is equal to the current object; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.HostedMcpServerToolRequireSpecificApprovalMode.GetHashCode">
      <summary>Serves as the default hash function.</summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.HostedMcpServerToolRequireSpecificApprovalMode.AlwaysRequireApprovalToolNames">
      <summary>
            Gets or sets the list of tool names that always require approval.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.HostedMcpServerToolRequireSpecificApprovalMode.NeverRequireApprovalToolNames">
      <summary>
            Gets or sets the list of tool names that never require approval.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.HostedVectorStoreContent">
      <summary>
            Represents a vector store that is hosted by the AI service.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.HostedVectorStoreContent.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.HostedVectorStoreContent" /> class.</summary>
      <param name="vectorStoreId">The ID of the hosted file store.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vectorStoreId" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="vectorStoreId" /> is empty or composed entirely of whitespace.</exception>
    </member>
    <member name="P:Microsoft.Extensions.AI.HostedVectorStoreContent.VectorStoreId">
      <summary>
            Gets or sets the ID of the hosted vector store.</summary>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is empty or composed entirely of whitespace.</exception>
    </member>
    <member name="T:Microsoft.Extensions.AI.HostedWebSearchTool">
      <summary>Represents a hosted tool that can be specified to an AI service to enable it to perform web searches.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.HostedWebSearchTool.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.HostedWebSearchTool" /> class.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.IChatClient">
      <summary>Represents a chat client.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.IChatClient.GetResponseAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
      <summary>Sends chat messages and returns the response.</summary>
      <param name="messages">The sequence of chat messages to send.</param>
      <param name="options">The chat options with which to configure the request.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messages" /> is <see langword="null" />.</exception>
      <returns>The response messages generated by the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.IChatClient.GetService(System.Type,System.Object)">
      <summary>Asks the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> for an object of the specified type <paramref name="serviceType" />.</summary>
      <param name="serviceType">The type of object being requested.</param>
      <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is <see langword="null" />.</exception>
      <returns>The found object, otherwise <see langword="null" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.IChatClient.GetStreamingResponseAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatOptions,System.Threading.CancellationToken)">
      <summary>Sends chat messages and streams the response.</summary>
      <param name="messages">The sequence of chat messages to send.</param>
      <param name="options">The chat options with which to configure the request.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messages" /> is <see langword="null" />.</exception>
      <returns>The response messages generated by the client.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.IChatReducer">
      <summary>
            Represents a reducer capable of shrinking the size of a list of chat messages.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.IChatReducer.ReduceAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},System.Threading.CancellationToken)">
      <summary>Reduces the size of a list of chat messages.</summary>
      <param name="messages">The messages to reduce.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests.</param>
      <returns>The new list of messages.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.IEmbeddingGenerator">
      <summary>Represents a generator of embeddings.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.IEmbeddingGenerator.GetService(System.Type,System.Object)">
      <summary>Asks the <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" /> for an object of the specified type <paramref name="serviceType" />.</summary>
      <param name="serviceType">The type of object being requested.</param>
      <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is <see langword="null" />.</exception>
      <returns>The found object, otherwise <see langword="null" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2">
      <summary>Represents a generator of embeddings.</summary>
      <typeparam name="TInput">The type from which embeddings will be generated.</typeparam>
      <typeparam name="TEmbedding">The type of embeddings to generate.</typeparam>
    </member>
    <member name="M:Microsoft.Extensions.AI.IEmbeddingGenerator`2.GenerateAsync(System.Collections.Generic.IEnumerable{`0},Microsoft.Extensions.AI.EmbeddingGenerationOptions,System.Threading.CancellationToken)">
      <summary>Generates embeddings for each of the supplied <paramref name="values" />.</summary>
      <param name="values">The sequence of values for which to generate embeddings.</param>
      <param name="options">The embedding generation options with which to configure the request.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" />.</exception>
      <returns>The generated embeddings.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.IImageGenerator">
      <summary>
            Represents a generator of images.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.IImageGenerator.GenerateAsync(Microsoft.Extensions.AI.ImageGenerationRequest,Microsoft.Extensions.AI.ImageGenerationOptions,System.Threading.CancellationToken)">
      <summary>
            Sends an image generation request and returns the generated image as a <see cref="T:Microsoft.Extensions.AI.ImageGenerationResponse" />.</summary>
      <param name="request">The image generation request containing the prompt and optional original images for editing.</param>
      <param name="options">The image generation options to configure the request.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> is <see langword="null" />.</exception>
      <returns>The images generated by the <see cref="T:Microsoft.Extensions.AI.ImageGenerationRequest" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.IImageGenerator.GetService(System.Type,System.Object)">
      <summary>Asks the <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> for an object of the specified type <paramref name="serviceType" />.</summary>
      <param name="serviceType">The type of object being requested.</param>
      <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is <see langword="null" />.</exception>
      <returns>The found object, otherwise <see langword="null" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.ImageGenerationOptions">
      <summary>Represents the options for an image generation request.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ImageGenerationOptions.#ctor" />
    <member name="M:Microsoft.Extensions.AI.ImageGenerationOptions.Clone">
      <summary>Produces a clone of the current <see cref="T:Microsoft.Extensions.AI.ImageGenerationOptions" /> instance.</summary>
      <returns>A clone of the current <see cref="T:Microsoft.Extensions.AI.ImageGenerationOptions" /> instance.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.ImageGenerationOptions.Count">
      <summary>
            Gets or sets the number of images to generate.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ImageGenerationOptions.ImageSize">
      <summary>
            Gets or sets the size of the generated image.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ImageGenerationOptions.MediaType">
      <summary>
            Gets or sets the media type (also known as MIME type) of the generated image.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ImageGenerationOptions.ModelId">
      <summary>
            Gets or sets the model ID to use for image generation.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ImageGenerationOptions.RawRepresentationFactory">
      <summary>
            Gets or sets a callback responsible for creating the raw representation of the image generation options from an underlying implementation.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ImageGenerationOptions.ResponseFormat">
      <summary>
            Gets or sets the response format of the generated image.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.ImageGenerationRequest">
      <summary>Represents a request for image generation.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ImageGenerationRequest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ImageGenerationRequest" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ImageGenerationRequest.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.AIContent})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ImageGenerationRequest" /> class.</summary>
      <param name="prompt">The prompt to guide the image generation.</param>
      <param name="originalImages">The original images to base edits on.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.ImageGenerationRequest.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ImageGenerationRequest" /> class.</summary>
      <param name="prompt">The prompt to guide the image generation.</param>
    </member>
    <member name="P:Microsoft.Extensions.AI.ImageGenerationRequest.OriginalImages">
      <summary>
            Gets or sets the original images to base edits on.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ImageGenerationRequest.Prompt">
      <summary>Gets or sets the prompt to guide the image generation.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.ImageGenerationResponse">
      <summary>Represents the result of an image generation request.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ImageGenerationResponse.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ImageGenerationResponse" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ImageGenerationResponse.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.AI.AIContent})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ImageGenerationResponse" /> class.</summary>
      <param name="contents">The contents for this response.</param>
    </member>
    <member name="P:Microsoft.Extensions.AI.ImageGenerationResponse.Contents">
      <summary>
            Gets or sets the generated content items.  Content will typically be DataContent for
            images streamed from the generator or UriContent for remotely hosted images, but may also
            be provider specific content types that represent the generated images.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ImageGenerationResponse.RawRepresentation">
      <summary>Gets or sets the raw representation of the image generation response from an underlying implementation.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.ImageGenerationResponseFormat">
      <summary>
            Represents the requested response format of the generated image.</summary>
    </member>
    <member name="F:Microsoft.Extensions.AI.ImageGenerationResponseFormat.Data">
      <summary>
            The generated image is returned as in-memory image data.</summary>
    </member>
    <member name="F:Microsoft.Extensions.AI.ImageGenerationResponseFormat.Hosted">
      <summary>
            The generated image is returned as a hosted resource identifier, which can be used to retrieve the image later.</summary>
    </member>
    <member name="F:Microsoft.Extensions.AI.ImageGenerationResponseFormat.Uri">
      <summary>
            The generated image is returned as a URI pointing to the image resource.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.ImageGeneratorExtensions">
      <summary>Extensions for <see cref="T:Microsoft.Extensions.AI.IImageGenerator" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ImageGeneratorExtensions.EditImageAsync(Microsoft.Extensions.AI.IImageGenerator,Microsoft.Extensions.AI.DataContent,System.String,Microsoft.Extensions.AI.ImageGenerationOptions,System.Threading.CancellationToken)">
      <summary>
            Edits a single image based on the original image and the specified prompt.</summary>
      <param name="generator">The image generator.</param>
      <param name="originalImage">The single image to base edits on.</param>
      <param name="prompt">The prompt to guide the image generation.</param>
      <param name="options">The image generation options to configure the request.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="generator" />, <paramref name="originalImage" />, or <paramref name="prompt" /> are <see langword="null" />.</exception>
      <returns>The images generated by the generator.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ImageGeneratorExtensions.EditImageAsync(Microsoft.Extensions.AI.IImageGenerator,System.ReadOnlyMemory{System.Byte},System.String,System.String,Microsoft.Extensions.AI.ImageGenerationOptions,System.Threading.CancellationToken)">
      <summary>
            Edits a single image based on a byte array and the specified prompt.</summary>
      <param name="generator">The image generator.</param>
      <param name="originalImageData">The byte array containing the image data to base edits on.</param>
      <param name="fileName">The filename for the image data.</param>
      <param name="prompt">The prompt to guide the image generation.</param>
      <param name="options">The image generation options to configure the request.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="generator" />, <paramref name="fileName" />, or <paramref name="prompt" /> are <see langword="null" />.</exception>
      <returns>The images generated by the generator.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ImageGeneratorExtensions.EditImagesAsync(Microsoft.Extensions.AI.IImageGenerator,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.AIContent},System.String,Microsoft.Extensions.AI.ImageGenerationOptions,System.Threading.CancellationToken)">
      <summary>
            Edits images based on original images and a text prompt.</summary>
      <param name="generator">The image generator.</param>
      <param name="originalImages">The images to base edits on.</param>
      <param name="prompt">The prompt to guide the image editing.</param>
      <param name="options">The image generation options to configure the request.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="generator" />, <paramref name="originalImages" />, or <paramref name="prompt" /> are <see langword="null" />.</exception>
      <returns>The images generated by the generator.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ImageGeneratorExtensions.GenerateImagesAsync(Microsoft.Extensions.AI.IImageGenerator,System.String,Microsoft.Extensions.AI.ImageGenerationOptions,System.Threading.CancellationToken)">
      <summary>
            Generates images based on a text prompt.</summary>
      <param name="generator">The image generator.</param>
      <param name="prompt">The prompt to guide the image generation.</param>
      <param name="options">The image generation options to configure the request.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="generator" /> or <paramref name="prompt" /> are <see langword="null" />.</exception>
      <returns>The images generated by the generator.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ImageGeneratorExtensions.GetRequiredService(Microsoft.Extensions.AI.IImageGenerator,System.Type,System.Object)">
      <summary>
            Asks the <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> for an object of the specified type <paramref name="serviceType" />
            and throws an exception if one isn't available.</summary>
      <param name="generator">The generator.</param>
      <param name="serviceType">The type of object being requested.</param>
      <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">No service of the requested type for the specified key is available.</exception>
      <returns>The found object.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ImageGeneratorExtensions.GetRequiredService``1(Microsoft.Extensions.AI.IImageGenerator,System.Object)">
      <summary>
            Asks the <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> for an object of type <typeparamref name="TService" />
            and throws an exception if one isn't available.</summary>
      <param name="generator">The generator.</param>
      <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
      <typeparam name="TService">The type of the object to be retrieved.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="generator" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">No service of the requested type for the specified key is available.</exception>
      <returns>The found object.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ImageGeneratorExtensions.GetService``1(Microsoft.Extensions.AI.IImageGenerator,System.Object)">
      <summary>Asks the <see cref="T:Microsoft.Extensions.AI.IImageGenerator" /> for an object of type <typeparamref name="TService" />.</summary>
      <param name="generator">The generator.</param>
      <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
      <typeparam name="TService">The type of the object to be retrieved.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="generator" /> is <see langword="null" />.</exception>
      <returns>The found object, otherwise <see langword="null" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.ImageGeneratorMetadata">
      <summary>Provides metadata about an <see cref="T:Microsoft.Extensions.AI.IImageGenerator" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ImageGeneratorMetadata.#ctor(System.String,System.Uri,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.ImageGeneratorMetadata" /> class.</summary>
      <param name="providerName">
            The name of the image generation provider, if applicable. Where possible, this should map to the
            appropriate name defined in the OpenTelemetry Semantic Conventions for Generative AI systems.</param>
      <param name="providerUri">The URL for accessing the image generation provider, if applicable.</param>
      <param name="defaultModelId">The ID of the image generation model used by default, if applicable.</param>
    </member>
    <member name="P:Microsoft.Extensions.AI.ImageGeneratorMetadata.DefaultModelId">
      <summary>Gets the ID of the default model used by this image generator.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ImageGeneratorMetadata.ProviderName">
      <summary>Gets the name of the image generation provider.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.ImageGeneratorMetadata.ProviderUri">
      <summary>Gets the URL for accessing the image generation provider.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.ISpeechToTextClient">
      <summary>Represents a speech to text client.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.ISpeechToTextClient.GetService(System.Type,System.Object)">
      <summary>Asks the <see cref="T:Microsoft.Extensions.AI.ISpeechToTextClient" /> for an object of the specified type <paramref name="serviceType" />.</summary>
      <param name="serviceType">The type of object being requested.</param>
      <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is <see langword="null" />.</exception>
      <returns>The found object, otherwise <see langword="null" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ISpeechToTextClient.GetStreamingTextAsync(System.IO.Stream,Microsoft.Extensions.AI.SpeechToTextOptions,System.Threading.CancellationToken)">
      <summary>Sends audio speech content to the model and streams back the generated text.</summary>
      <param name="audioSpeechStream">The audio speech stream to send.</param>
      <param name="options">The speech to text options to configure the request.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>The text updates representing the streamed output.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.ISpeechToTextClient.GetTextAsync(System.IO.Stream,Microsoft.Extensions.AI.SpeechToTextOptions,System.Threading.CancellationToken)">
      <summary>Sends audio speech content to the model and returns the generated text.</summary>
      <param name="audioSpeechStream">The audio speech stream to send.</param>
      <param name="options">The speech to text options to configure the request.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>The text generated.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.McpServerToolApprovalRequestContent">
      <summary>
            Represents a request for user approval of an MCP server tool call.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.McpServerToolApprovalRequestContent.#ctor(System.String,Microsoft.Extensions.AI.McpServerToolCallContent)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.McpServerToolApprovalRequestContent" /> class.</summary>
      <param name="id">The ID that uniquely identifies the MCP server tool approval request/response pair.</param>
      <param name="toolCall">The tool call that requires user approval.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="toolCall" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> is empty or composed entirely of whitespace.</exception>
    </member>
    <member name="M:Microsoft.Extensions.AI.McpServerToolApprovalRequestContent.CreateResponse(System.Boolean)">
      <summary>
            Creates a <see cref="T:Microsoft.Extensions.AI.McpServerToolApprovalResponseContent" /> to indicate whether the function call is approved or rejected based on the value of <paramref name="approved" />.</summary>
      <param name="approved">
        <see langword="true" /> if the function call is approved; otherwise, <see langword="false" />.</param>
      <returns>The <see cref="T:Microsoft.Extensions.AI.FunctionApprovalResponseContent" /> representing the approval response.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.McpServerToolApprovalRequestContent.ToolCall">
      <summary>
            Gets the tool call that pre-invoke approval is required for.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.McpServerToolApprovalResponseContent">
      <summary>
            Represents a response to an MCP server tool approval request.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.McpServerToolApprovalResponseContent.#ctor(System.String,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.McpServerToolApprovalResponseContent" /> class.</summary>
      <param name="id">The ID that uniquely identifies the MCP server tool approval request/response pair.</param>
      <param name="approved">
        <see langword="true" /> if the MCP server tool call is approved; otherwise, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> is empty or composed entirely of whitespace.</exception>
    </member>
    <member name="P:Microsoft.Extensions.AI.McpServerToolApprovalResponseContent.Approved">
      <summary>
            Gets a value indicating whether the user approved the request.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.McpServerToolCallContent">
      <summary>
            Represents a tool call request to a MCP server.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.McpServerToolCallContent.#ctor(System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.McpServerToolCallContent" /> class.</summary>
      <param name="callId">The tool call ID.</param>
      <param name="toolName">The tool name.</param>
      <param name="serverName">The MCP server name.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callId" />, <paramref name="toolName" />, or <paramref name="serverName" /> are <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="callId" />, <paramref name="toolName" />, or <paramref name="serverName" /> are empty or composed entirely of whitespace.</exception>
    </member>
    <member name="P:Microsoft.Extensions.AI.McpServerToolCallContent.Arguments">
      <summary>
            Gets or sets the arguments used for the tool call.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.McpServerToolCallContent.CallId">
      <summary>
            Gets the tool call ID.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.McpServerToolCallContent.ServerName">
      <summary>
            Gets the name of the MCP server.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.McpServerToolCallContent.ToolName">
      <summary>
            Gets the name of the tool called.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.McpServerToolResultContent">
      <summary>
            Represents the result of a MCP server tool call.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.McpServerToolResultContent.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.McpServerToolResultContent" /> class.</summary>
      <param name="callId">The tool call ID.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callId" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="callId" /> is empty or composed entirely of whitespace.</exception>
    </member>
    <member name="P:Microsoft.Extensions.AI.McpServerToolResultContent.CallId">
      <summary>
            Gets the tool call ID.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.McpServerToolResultContent.Output">
      <summary>
            Gets or sets the output of the tool call.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.NoneChatToolMode">
      <summary>
            Indicates that an <see cref="T:Microsoft.Extensions.AI.IChatClient" /> should not request the invocation of any tools.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.NoneChatToolMode.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.NoneChatToolMode" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.NoneChatToolMode.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the specified object  is equal to the current object; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.NoneChatToolMode.GetHashCode">
      <summary>Serves as the default hash function.</summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.RequiredChatToolMode">
      <summary>
            Represents a mode where a chat tool must be called. This class can optionally nominate a specific function
            or indicate that any of the functions can be selected.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.RequiredChatToolMode.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.RequiredChatToolMode" /> class that requires a specific tool to be called.</summary>
      <param name="requiredFunctionName">The name of the tool that must be called.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="requiredFunctionName" /> is empty or composed entirely of whitespace.</exception>
    </member>
    <member name="M:Microsoft.Extensions.AI.RequiredChatToolMode.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the specified object  is equal to the current object; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.RequiredChatToolMode.GetHashCode">
      <summary>Serves as the default hash function.</summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.RequiredChatToolMode.RequiredFunctionName">
      <summary>
            Gets the name of a specific tool that must be called.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.SpeechToTextClientExtensions">
      <summary>Extensions for <see cref="T:Microsoft.Extensions.AI.ISpeechToTextClient" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextClientExtensions.GetService``1(Microsoft.Extensions.AI.ISpeechToTextClient,System.Object)">
      <summary>Asks the <see cref="T:Microsoft.Extensions.AI.ISpeechToTextClient" /> for an object of type <typeparamref name="TService" />.</summary>
      <param name="client">The client.</param>
      <param name="serviceKey">An optional key that can be used to help identify the target service.</param>
      <typeparam name="TService">The type of the object to be retrieved.</typeparam>
      <returns>The found object, otherwise <see langword="null" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextClientExtensions.GetStreamingTextAsync(Microsoft.Extensions.AI.ISpeechToTextClient,Microsoft.Extensions.AI.DataContent,Microsoft.Extensions.AI.SpeechToTextOptions,System.Threading.CancellationToken)">
      <summary>Generates text from speech providing a single audio speech <see cref="T:Microsoft.Extensions.AI.DataContent" />.</summary>
      <param name="client">The client.</param>
      <param name="audioSpeechContent">The single audio speech content.</param>
      <param name="options">The speech to text options to configure the request.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>The text generated by the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextClientExtensions.GetTextAsync(Microsoft.Extensions.AI.ISpeechToTextClient,Microsoft.Extensions.AI.DataContent,Microsoft.Extensions.AI.SpeechToTextOptions,System.Threading.CancellationToken)">
      <summary>Generates text from speech providing a single audio speech <see cref="T:Microsoft.Extensions.AI.DataContent" />.</summary>
      <param name="client">The client.</param>
      <param name="audioSpeechContent">The single audio speech content.</param>
      <param name="options">The speech to text options to configure the request.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>The text generated by the client.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.SpeechToTextClientMetadata">
      <summary>Provides metadata about an <see cref="T:Microsoft.Extensions.AI.ISpeechToTextClient" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextClientMetadata.#ctor(System.String,System.Uri,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.SpeechToTextClientMetadata" /> class.</summary>
      <param name="providerName">
            The name of the speech to text  provider, if applicable. Where possible, this should map to the
            appropriate name defined in the OpenTelemetry Semantic Conventions for Generative AI systems.</param>
      <param name="providerUri">The URL for accessing the speech to text  provider, if applicable.</param>
      <param name="defaultModelId">The ID of the speech to text used by default, if applicable.</param>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextClientMetadata.DefaultModelId">
      <summary>Gets the ID of the default model used by this speech to text client.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextClientMetadata.ProviderName">
      <summary>Gets the name of the speech to text provider.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextClientMetadata.ProviderUri">
      <summary>Gets the URL for accessing the speech to text provider.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.SpeechToTextOptions">
      <summary>Represents the options for an speech to text request.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextOptions.#ctor" />
    <member name="M:Microsoft.Extensions.AI.SpeechToTextOptions.Clone">
      <summary>Produces a clone of the current <see cref="T:Microsoft.Extensions.AI.SpeechToTextOptions" /> instance.</summary>
      <returns>A clone of the current <see cref="T:Microsoft.Extensions.AI.SpeechToTextOptions" /> instance.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextOptions.AdditionalProperties">
      <summary>Gets or sets any additional properties associated with the options.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextOptions.ModelId">
      <summary>Gets or sets the model ID for the speech to text.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextOptions.RawRepresentationFactory">
      <summary>
            Gets or sets a callback responsible for creating the raw representation of the embedding generation options from an underlying implementation.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextOptions.SpeechLanguage">
      <summary>Gets or sets the language of source speech.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextOptions.SpeechSampleRate">
      <summary>Gets or sets the sample rate of the speech input audio.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextOptions.TextLanguage">
      <summary>Gets or sets the language for the target generated text.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.SpeechToTextResponse">
      <summary>Represents the result of an speech to text request.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponse.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponse" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponse.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.AI.AIContent})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponse" /> class.</summary>
      <param name="contents">The contents for this response.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponse.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponse" /> class.</summary>
      <param name="content">Content of the response.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponse.ToSpeechToTextResponseUpdates">
      <summary>Creates an array of <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdate" /> instances that represent this <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponse" />.</summary>
      <returns>An array of <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdate" /> instances that may be used to represent this <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponse" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponse.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponse.AdditionalProperties">
      <summary>Gets or sets any additional properties associated with the speech to text response.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponse.Contents">
      <summary>Gets or sets the generated content items.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponse.EndTime">
      <summary>Gets or sets the end time of the text segment in relation to the full audio speech length.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponse.ModelId">
      <summary>Gets or sets the model ID used in the creation of the speech to text response.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponse.RawRepresentation">
      <summary>Gets or sets the raw representation of the speech to text response from an underlying implementation.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponse.ResponseId">
      <summary>Gets or sets the ID of the speech to text response.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponse.StartTime">
      <summary>Gets or sets the start time of the text segment in relation to the full audio speech length.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponse.Text">
      <summary>Gets the text of this speech to text response.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponse.Usage">
      <summary>Gets or sets usage details for the speech to text response.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdate">
      <summary>
            Represents a single streaming response chunk from an <see cref="T:Microsoft.Extensions.AI.ISpeechToTextClient" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponseUpdate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdate" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponseUpdate.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.AI.AIContent})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdate" /> class.</summary>
      <param name="contents">The contents for this message.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponseUpdate.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdate" /> class.</summary>
      <param name="content">Content of the message.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponseUpdate.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponseUpdate.AdditionalProperties">
      <summary>Gets or sets additional properties for the update.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponseUpdate.Contents">
      <summary>Gets or sets the generated content items.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponseUpdate.EndTime">
      <summary>Gets or sets the end time of the text segment associated with this update in relation to the full audio speech length.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponseUpdate.Kind">
      <summary>Gets or sets the kind of the generated text update.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponseUpdate.ModelId">
      <summary>Gets or sets the model ID using in the creation of the speech to text of which this update is a part.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponseUpdate.RawRepresentation">
      <summary>Gets or sets the raw representation of the generated text update from an underlying implementation.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponseUpdate.ResponseId">
      <summary>Gets or sets the ID of the generated text response of which this update is a part.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponseUpdate.StartTime">
      <summary>Gets or sets the start time of the text segment associated with this update in relation to the full audio speech length.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponseUpdate.Text">
      <summary>Gets the text of this speech to text response.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdateExtensions">
      <summary>
            Provides extension methods for working with <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdate" /> instances.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponseUpdateExtensions.ToSpeechToTextResponse(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.SpeechToTextResponseUpdate})">
      <summary>Combines <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdate" /> instances into a single <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponse" />.</summary>
      <param name="updates">The updates to be combined.</param>
      <returns>The combined <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponse" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponseUpdateExtensions.ToSpeechToTextResponseAsync(System.Collections.Generic.IAsyncEnumerable{Microsoft.Extensions.AI.SpeechToTextResponseUpdate},System.Threading.CancellationToken)">
      <summary>Combines <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdate" /> instances into a single <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponse" />.</summary>
      <param name="updates">The updates to be combined.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to monitor for cancellation requests. The default is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>The combined <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponse" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind">
      <summary>
            Describes the intended purpose of a specific update during streaming of speech to text updates.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind" /> struct with the provided value.</summary>
      <param name="value">The value to associate with this <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind" />.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind.Equals(Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if the current object is equal to the <code data-dev-comment-type="paramref">other</code> parameter; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind.Equals(System.Object)">
      <summary>Indicates whether this instance and a specified object are equal.</summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>
        <code data-dev-comment-type="langword">true</code> if <code data-dev-comment-type="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <code data-dev-comment-type="langword">false</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind.op_Equality(Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind,Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind)">
      <summary>
            Returns a value indicating whether two <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind" /> instances are equivalent, as determined by a
            case-insensitive comparison of their values.</summary>
      <param name="left">The first <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind" /> instance to compare.</param>
      <param name="right">The second <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind" /> instance to compare.</param>
      <returns>
        <see langword="true" /> if left and right are both null or have equivalent values; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind.op_Inequality(Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind,Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind)">
      <summary>
            Returns a value indicating whether two <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind" /> instances are not equivalent, as determined by a
            case-insensitive comparison of their values.</summary>
      <param name="left">The first <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind" /> instance to compare.</param>
      <param name="right">The second <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind" /> instance to compare.</param>
      <returns>
        <see langword="true" /> if left and right have different values; <see langword="false" /> if they have equivalent values or are both null.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind.ToString">
      <summary>Returns the fully qualified type name of this instance.</summary>
      <returns>The fully qualified type name.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind.Error">
      <summary>Gets when a non-blocking error occurs during speech to text updates.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind.SessionClose">
      <summary>Gets when the generated text session is closed.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind.SessionOpen">
      <summary>Gets when the generated text session is opened.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind.TextUpdated">
      <summary>Gets when the text was generated after small period of silence.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind.TextUpdating">
      <summary>Gets when the text update is in progress, without waiting for silence.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind.Value">
      <summary>
            Gets the value associated with this <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind" />.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind.Converter">
      <summary>Provides a <see cref="T:System.Text.Json.Serialization.JsonConverter`1" /> for serializing <see cref="T:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind" /> instances.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind.Converter.#ctor" />
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind.Converter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
      <summary>Reads and converts the JSON to type <code data-dev-comment-type="typeparamref">T</code>.</summary>
      <param name="reader">The reader.</param>
      <param name="typeToConvert">The type to convert.</param>
      <param name="options">An object that specifies serialization options to use.</param>
      <returns>The converted value.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind.Converter.Write(System.Text.Json.Utf8JsonWriter,Microsoft.Extensions.AI.SpeechToTextResponseUpdateKind,System.Text.Json.JsonSerializerOptions)">
      <summary>Writes a specified value as JSON.</summary>
      <param name="writer">The writer to write to.</param>
      <param name="value">The value to convert to JSON.</param>
      <param name="options">An object that specifies serialization options to use.</param>
    </member>
    <member name="T:Microsoft.Extensions.AI.TextContent">
      <summary>
            Represents text content in a chat.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.TextContent.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.TextContent" /> class.</summary>
      <param name="text">The text content.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.TextContent.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.TextContent.Text">
      <summary>
            Gets or sets the text content.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.TextReasoningContent">
      <summary>
            Represents text reasoning content in a chat.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.TextReasoningContent.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.TextReasoningContent" /> class.</summary>
      <param name="text">The text reasoning content.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.TextReasoningContent.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.TextReasoningContent.Text">
      <summary>
            Gets or sets the text reasoning content.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.TextSpanAnnotatedRegion">
      <summary>Describes a location in the associated <see cref="T:Microsoft.Extensions.AI.AIContent" /> based on starting and ending character indices.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.TextSpanAnnotatedRegion.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.TextSpanAnnotatedRegion" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.TextSpanAnnotatedRegion.EndIndex">
      <summary>
            Gets or sets the end character index (exclusive) of the annotated span in the <see cref="T:Microsoft.Extensions.AI.AIContent" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.TextSpanAnnotatedRegion.StartIndex">
      <summary>
            Gets or sets the start character index (inclusive) of the annotated span in the <see cref="T:Microsoft.Extensions.AI.AIContent" />.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.UriContent">
      <summary>
            Represents a URL, typically to hosted content such as an image, audio, or video.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.UriContent.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.UriContent" /> class.</summary>
      <param name="uri">The URI to the represented content.</param>
      <param name="mediaType">The media type (also known as MIME type) represented by the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mediaType" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mediaType" /> is an invalid media type.</exception>
      <exception cref="T:System.UriFormat">
        <paramref name="uri" /> is an invalid URL.</exception>
    </member>
    <member name="M:Microsoft.Extensions.AI.UriContent.#ctor(System.Uri,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.UriContent" /> class.</summary>
      <param name="uri">The URI to the represented content.</param>
      <param name="mediaType">The media type (also known as MIME type) represented by the content.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mediaType" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mediaType" /> is an invalid media type.</exception>
    </member>
    <member name="M:Microsoft.Extensions.AI.UriContent.HasTopLevelMediaType(System.String)">
      <summary>
            Determines whether the <see cref="P:Microsoft.Extensions.AI.UriContent.MediaType" />'s top-level type matches the specified <paramref name="topLevelType" />.</summary>
      <param name="topLevelType">The type to compare against <see cref="P:Microsoft.Extensions.AI.UriContent.MediaType" />.</param>
      <returns>
        <see langword="true" /> if the type portion of <see cref="P:Microsoft.Extensions.AI.UriContent.MediaType" /> matches the specified value; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.UriContent.MediaType">
      <summary>Gets or sets the media type (also known as MIME type) for this content.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.UriContent.Uri">
      <summary>Gets or sets the <see cref="P:Microsoft.Extensions.AI.UriContent.Uri" /> for this content.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.UsageContent">
      <summary>
            Represents usage information associated with a chat request and response.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.UsageContent.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.UsageContent" /> class with an empty <see cref="T:Microsoft.Extensions.AI.UsageDetails" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.UsageContent.#ctor(Microsoft.Extensions.AI.UsageDetails)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.UsageContent" /> class with the specified <see cref="T:Microsoft.Extensions.AI.UsageDetails" /> instance.</summary>
      <param name="details">The usage details to store in this content.</param>
    </member>
    <member name="P:Microsoft.Extensions.AI.UsageContent.Details">
      <summary>Gets or sets the usage information.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.UsageDetails">
      <summary>Provides usage details about a request/response.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.UsageDetails.#ctor" />
    <member name="M:Microsoft.Extensions.AI.UsageDetails.Add(Microsoft.Extensions.AI.UsageDetails)">
      <summary>Adds usage data from another <see cref="T:Microsoft.Extensions.AI.UsageDetails" /> into this instance.</summary>
      <param name="usage">The source <see cref="T:Microsoft.Extensions.AI.UsageDetails" /> with which to augment this instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="usage" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:Microsoft.Extensions.AI.UsageDetails.AdditionalCounts">
      <summary>Gets or sets a dictionary of additional usage counts.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.UsageDetails.InputTokenCount">
      <summary>Gets or sets the number of tokens in the input.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.UsageDetails.OutputTokenCount">
      <summary>Gets or sets the number of tokens in the output.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.UsageDetails.TotalTokenCount">
      <summary>Gets or sets the total number of tokens used to produce the response.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.UserInputRequestContent">
      <summary>
            Represents a request for user input.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.UserInputRequestContent.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.UserInputRequestContent" /> class.</summary>
      <param name="id">The ID that uniquely identifies the user input request/response pair.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> is empty or composed entirely of whitespace.</exception>
    </member>
    <member name="P:Microsoft.Extensions.AI.UserInputRequestContent.Id">
      <summary>
            Gets the ID that uniquely identifies the user input request/response pair.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.UserInputResponseContent">
      <summary>
            Represents the response to a request for user input.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.UserInputResponseContent.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.UserInputResponseContent" /> class.</summary>
      <param name="id">The ID that uniquely identifies the user input request/response pair.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> is empty or composed entirely of whitespace.</exception>
    </member>
    <member name="P:Microsoft.Extensions.AI.UserInputResponseContent.Id">
      <summary>
            Gets the ID that uniquely identifies the user input request/response pair.</summary>
    </member>
  </members>
</doc>