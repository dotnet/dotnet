<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Cryptography.Cose</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.Cose.CoseHeaderLabel">
      <summary>Represents a COSE header label.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderLabel.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Cose.CoseHeaderLabel" /> struct.</summary>
      <param name="label">The header label as an integer.</param>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderLabel.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Cose.CoseHeaderLabel" /> struct.</summary>
      <param name="label">The header label as a text string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="label" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderLabel.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="obj">The object to compare to this instance.</param>
      <returns>
        <see langword="true" /> if value is an instance of <see cref="T:System.Security.Cryptography.Cose.CoseHeaderLabel" /> and equals the value of this instance; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderLabel.Equals(System.Security.Cryptography.Cose.CoseHeaderLabel)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderLabel.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderLabel.op_Equality(System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderLabel)">
      <summary>Determines whether two specified header label instances are equal.</summary>
      <param name="left">The first object to compare.</param>
      <param name="right">The second object to compare.</param>
      <returns>
        <see langword="true" /> if left and right represent the same label; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderLabel.op_Inequality(System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderLabel)">
      <summary>Determines whether two specified header label instances are not equal.</summary>
      <param name="left">The first object to compare.</param>
      <param name="right">The second object to compare.</param>
      <returns>
        <see langword="true" /> if left and right do not represent the same label; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseHeaderLabel.Algorithm">
      <summary>Gets a header label that represents the known header parameter "alg".</summary>
      <returns>A header label that represents the known header parameter "alg".</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseHeaderLabel.ContentType">
      <summary>Gets a header label that represents the known header parameter "content type".</summary>
      <returns>A header label&gt; that represents the known header parameter "content type".</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders">
      <summary>Gets a header label that represents the known header parameter "crit".</summary>
      <returns>A header label that represents the known header parameter "crit".</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseHeaderLabel.KeyIdentifier">
      <summary>Gets a header label that represents the known header parameter "kid".</summary>
      <returns>A header label that represents the known header parameter "kid".</returns>
    </member>
    <member name="T:System.Security.Cryptography.Cose.CoseHeaderMap">
      <summary>Represents a collection of header parameters of a COSE message.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Cose.CoseHeaderMap" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.Add(System.Collections.Generic.KeyValuePair{System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue})">
      <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.InvalidOperationException">The header map is read-only.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" />'s value is not a valid CBOR value.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.Add(System.Security.Cryptography.Cose.CoseHeaderLabel,System.Byte[])">
      <summary>Adds the specified label and value to the header map.</summary>
      <param name="label">The label for the header to add.</param>
      <param name="value">The value of the header to add.</param>
      <exception cref="T:System.InvalidOperationException">The header map is read-only.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.Add(System.Security.Cryptography.Cose.CoseHeaderLabel,System.Int32)">
      <summary>Adds the specified label and value to the header map.</summary>
      <param name="label">The label for the header to add.</param>
      <param name="value">The value of the header to add.</param>
      <exception cref="T:System.InvalidOperationException">The header map is read-only.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.Add(System.Security.Cryptography.Cose.CoseHeaderLabel,System.ReadOnlySpan{System.Byte})">
      <summary>Adds the specified label and value to the header map.</summary>
      <param name="label">The label for the header to add.</param>
      <param name="value">The value of the header to add.</param>
      <exception cref="T:System.InvalidOperationException">The header map is read-only.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.Add(System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue)">
      <summary>Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key">The object to use as the key of the element to add.</param>
      <param name="value">The object to use as the value of the element to add.</param>
      <exception cref="T:System.InvalidOperationException">The header map is read-only.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not a valid CBOR value.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.Add(System.Security.Cryptography.Cose.CoseHeaderLabel,System.String)">
      <summary>Adds the specified label and value to the header map.</summary>
      <param name="label">The label for the header to add.</param>
      <param name="value">The value of the header to add.</param>
      <exception cref="T:System.InvalidOperationException">The header map is read-only.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.Clear">
      <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <exception cref="T:System.InvalidOperationException">The header map is read-only.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.Contains(System.Collections.Generic.KeyValuePair{System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue})">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.</summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.ContainsKey(System.Security.Cryptography.Cose.CoseHeaderLabel)">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.</summary>
      <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the key; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.CopyTo(System.Collections.Generic.KeyValuePair{System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue}[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.GetValueAsBytes(System.Security.Cryptography.Cose.CoseHeaderLabel,System.Span{System.Byte})">
      <summary>Gets the value associated with the specified label, as a byte string.</summary>
      <param name="label">The label of the value to get.</param>
      <param name="destination">The buffer in which to write the value.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destination" /> is too small to hold the value.</exception>
      <exception cref="T:System.InvalidOperationException">The value could not be decoded as byte string.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
        <paramref name="label" /> is not found.</exception>
      <returns>The number of bytes written to <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.GetValueAsBytes(System.Security.Cryptography.Cose.CoseHeaderLabel)">
      <summary>Gets the value associated with the specified label, as a byte string.</summary>
      <param name="label">The label of the value to get.</param>
      <exception cref="T:System.InvalidOperationException">The value could not be decoded as byte string.</exception>
      <returns>The value associated with the specified label, as a byte string.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.GetValueAsInt32(System.Security.Cryptography.Cose.CoseHeaderLabel)">
      <summary>Gets the value associated with the specified label, as a signed integer.</summary>
      <param name="label">The label of the value to get.</param>
      <exception cref="T:System.InvalidOperationException">The value could not be decoded as a 32-bit signed integer.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
        <paramref name="label" /> is not found.</exception>
      <returns>The value associated with the specified label, as a signed integer.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.GetValueAsString(System.Security.Cryptography.Cose.CoseHeaderLabel)">
      <summary>Gets the value associated with the specified label, as a text string.</summary>
      <param name="label">The label of the value to get.</param>
      <exception cref="T:System.InvalidOperationException">The value could not be decoded as text string.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
        <paramref name="label" /> is not found.</exception>
      <returns>The value associated with the specified label, as a text string.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.Remove(System.Collections.Generic.KeyValuePair{System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue})">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.InvalidOperationException">The header map is read-only.</exception>
      <returns>
        <see langword="true" /> if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.Remove(System.Security.Cryptography.Cose.CoseHeaderLabel)">
      <summary>Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="label">The label of the element to remove.</param>
      <exception cref="T:System.InvalidOperationException">The header map is read-only.</exception>
      <returns>
        <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if <paramref name="label" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderMap.TryGetValue(System.Security.Cryptography.Cose.CoseHeaderLabel,System.Security.Cryptography.Cose.CoseHeaderValue@)">
      <summary>Gets the value associated with the specified key.</summary>
      <param name="key">The key whose value to get.</param>
      <param name="value">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param>
      <returns>
        <see langword="true" /> if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseHeaderMap.Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseHeaderMap.IsReadOnly">
      <summary>Gets a value that indicates whether the header map is read-only.</summary>
      <returns>
        <see langword="true" /> if the header map is read-only; otherwise, <see langword="false" /></returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseHeaderMap.Item(System.Security.Cryptography.Cose.CoseHeaderLabel)">
      <summary>Gets or sets the element with the specified key.</summary>
      <param name="key">The key of the element to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The property is set and the <see cref="T:System.Security.Cryptography.Cose.CoseHeaderMap" /> is read-only.</exception>
      <exception cref="T:System.ArgumentException">The property is set and the encoded bytes in the specified <see cref="T:System.Security.Cryptography.Cose.CoseHeaderValue" /> contain trailing data or more than one CBOR value.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and <paramref name="key" /> is not found.</exception>
      <returns>The element with the specified key.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseHeaderMap.Keys">
      <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseHeaderMap.System#Collections#Generic#IReadOnlyDictionary&lt;System#Security#Cryptography#Cose#CoseHeaderLabel,System#Security#Cryptography#Cose#CoseHeaderValue&gt;#Keys">
      <summary>Gets an enumerable collection that contains the keys in the read-only dictionary.</summary>
      <returns>An enumerable collection that contains the keys in the read-only dictionary.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseHeaderMap.System#Collections#Generic#IReadOnlyDictionary&lt;System#Security#Cryptography#Cose#CoseHeaderLabel,System#Security#Cryptography#Cose#CoseHeaderValue&gt;#Values">
      <summary>Gets an enumerable collection that contains the values in the read-only dictionary.</summary>
      <returns>An enumerable collection that contains the values in the read-only dictionary.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseHeaderMap.Values">
      <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Cose.CoseHeaderValue">
      <summary>Represents a COSE header value.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderValue.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to the specified instance.</summary>
      <param name="obj">The object to compare to this instance.</param>
      <returns>
        <see langword="true" /> if the value parameter equals the value of this instance; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderValue.Equals(System.Security.Cryptography.Cose.CoseHeaderValue)">
      <summary>Indicates whether the current object is equal to another object of the same type.</summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderValue.FromBytes(System.Byte[])">
      <summary>Creates a <see cref="T:System.Security.Cryptography.Cose.CoseHeaderValue" /> instance from a byte array.</summary>
      <param name="value">The bytes to be encoded and that the instance will represent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.</exception>
      <returns>An instance that represents the CBOR-encoded <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderValue.FromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>Creates a <see cref="T:System.Security.Cryptography.Cose.CoseHeaderValue" /> instance from a span of bytes.</summary>
      <param name="value">The bytes to be encoded and that the instance will represent.</param>
      <returns>An instance that represents the CBOR-encoded <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderValue.FromEncodedValue(System.Byte[])">
      <summary>Creates a <see cref="T:System.Security.Cryptography.Cose.CoseHeaderValue" /> instance from a CBOR-encoded value.</summary>
      <param name="encodedValue">A CBOR-encoded value to represent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encodedValue" /> is <see langword="null" />.</exception>
      <returns>An instance that represents the encoded value.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderValue.FromEncodedValue(System.ReadOnlySpan{System.Byte})">
      <summary>Creates a <see cref="T:System.Security.Cryptography.Cose.CoseHeaderValue" /> instance from a CBOR-encoded value.</summary>
      <param name="encodedValue">A CBOR-encoded value to represent.</param>
      <returns>An instance that represents the encoded value.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderValue.FromInt32(System.Int32)">
      <summary>Creates a <see cref="T:System.Security.Cryptography.Cose.CoseHeaderValue" /> instance from a signed integer.</summary>
      <param name="value">The value to represent.</param>
      <returns>An instance that represents the specified value.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderValue.FromString(System.String)">
      <summary>Creates a <see cref="T:System.Security.Cryptography.Cose.CoseHeaderValue" /> instance from a string.</summary>
      <param name="value">The value to represent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.</exception>
      <returns>An instance that represents the specified value.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderValue.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderValue.GetValueAsBytes">
      <summary>Gets the CBOR-encoded value as a byte string.</summary>
      <exception cref="T:System.InvalidOperationException">The value could not be decoded as byte string.</exception>
      <returns>The decoded value as a byte array.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderValue.GetValueAsBytes(System.Span{System.Byte})">
      <summary>Gets the CBOR-encoded value as a byte string.</summary>
      <param name="destination">The buffer in which to write the decoded value.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destination" /> is too small to hold the value.</exception>
      <exception cref="T:System.InvalidOperationException">The value could not be decoded as byte string.</exception>
      <returns>The number of bytes written to <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderValue.GetValueAsInt32">
      <summary>Gets the value as a signed integer.</summary>
      <exception cref="T:System.InvalidOperationException">The value could not be decoded as a 32-bit signed integer.</exception>
      <returns>The value as a signed integer.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderValue.GetValueAsString">
      <summary>Gets the value as a text string.</summary>
      <exception cref="T:System.InvalidOperationException">The value could not be decoded as text string.</exception>
      <returns>The value as a text string.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderValue.op_Equality(System.Security.Cryptography.Cose.CoseHeaderValue,System.Security.Cryptography.Cose.CoseHeaderValue)">
      <summary>Determines whether two specified header value instances are equal.</summary>
      <param name="left">The first object to compare.</param>
      <param name="right">The second object to compare.</param>
      <returns>
        <see langword="true" /> if left and right represent the same value; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseHeaderValue.op_Inequality(System.Security.Cryptography.Cose.CoseHeaderValue,System.Security.Cryptography.Cose.CoseHeaderValue)">
      <summary>Determines whether two specified header value instances are not equal.</summary>
      <param name="left">The first object to compare.</param>
      <param name="right">The second object to compare.</param>
      <returns>
        <see langword="true" /> if left and right do not represent the same value; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseHeaderValue.EncodedValue">
      <summary>Gets the CBOR-encoded value of this instance.</summary>
      <returns>A view of the CBOR-encoded value as a contiguous region of memory.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Cose.CoseKey" />
    <member name="M:System.Security.Cryptography.Cose.CoseKey.#ctor(System.Security.Cryptography.ECDsa,System.Security.Cryptography.HashAlgorithmName)">
      <param name="key" />
      <param name="hashAlgorithm" />
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseKey.#ctor(System.Security.Cryptography.MLDsa)">
      <param name="key" />
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseKey.#ctor(System.Security.Cryptography.RSA,System.Security.Cryptography.RSASignaturePadding,System.Security.Cryptography.HashAlgorithmName)">
      <param name="key" />
      <param name="signaturePadding" />
      <param name="hashAlgorithm" />
    </member>
    <member name="T:System.Security.Cryptography.Cose.CoseMessage">
      <summary>Represents a COSE message as described in RFC 8152.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMessage.DecodeMultiSign(System.Byte[])">
      <summary>Decodes a CBOR payload as a COSE_Sign message.</summary>
      <param name="cborPayload">The sequence of bytes to decode.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cborPayload" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="cborPayload" /> could not be decoded as a COSE_Sign message.</exception>
      <returns>The decoded message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMessage.DecodeMultiSign(System.ReadOnlySpan{System.Byte})">
      <summary>Decodes a CBOR payload as a COSE_Sign message.</summary>
      <param name="cborPayload">The sequence of bytes to decode.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="cborPayload" /> could not be decoded as a COSE_Sign message.</exception>
      <returns>The decoded message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMessage.DecodeSign1(System.Byte[])">
      <summary>Decodes a CBOR payload as a COSE_Sign1 message.</summary>
      <param name="cborPayload">The sequence of bytes to decode.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cborPayload" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="cborPayload" /> could not be decoded as a COSE_Sign1 message.</exception>
      <returns>The decoded message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMessage.DecodeSign1(System.ReadOnlySpan{System.Byte})">
      <summary>Decodes a CBOR payload as a COSE_Sign1 message.</summary>
      <param name="cborPayload">The sequence of CBOR-encoded bytes to decode.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="cborPayload" /> could not be decoded as a COSE_Sign1 message.</exception>
      <returns>The decoded message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMessage.Encode">
      <summary>Encodes this message as CBOR.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseMessage.UnprotectedHeaders" /> collections have one or more labels in common.</exception>
      <returns>The message encoded as CBOR.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMessage.Encode(System.Span{System.Byte})">
      <summary>Encodes this message as CBOR.</summary>
      <param name="destination">The buffer in which to write the encoded value.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destination" /> is too small to hold the value.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseMessage.UnprotectedHeaders" /> collections have one or more labels in common.</exception>
      <returns>The number of bytes written to <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMessage.GetEncodedLength">
      <summary>When overriden in a derived class, calculates the number of bytes produced by encoding this <see cref="T:System.Security.Cryptography.Cose.CoseMessage" />.</summary>
      <returns>The number of bytes produced by encoding this message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMessage.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>When overriden in a derived class, attempts to encode this message into the specified buffer.</summary>
      <param name="destination">The buffer in which to write the encoded value.</param>
      <param name="bytesWritten">On success, receives the number of bytes written to <paramref name="destination" />. This parameter is treated as uninitialized.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseMessage.UnprotectedHeaders" /> collections have one or more labels in common.</exception>
      <returns>
        <see langword="true" /> if <paramref name="destination" /> had sufficient length to receive the value; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseMessage.Content">
      <summary>Gets the content of this message or <see langword="null" /> if the content was detached from the message.</summary>
      <returns>A region of memory that contains the content of this message or <see langword="null" /> if the content was detached from the message.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders">
      <summary>Gets the protected header parameters associated with this message.</summary>
      <returns>A collection of protected header parameters associated with this message.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseMessage.RawProtectedHeaders">
      <summary>Gets the raw bytes of the protected header parameters associated with this message.</summary>
      <returns>A region of memory that contains the raw bytes of the protected header parameters associated with this message.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseMessage.UnprotectedHeaders">
      <summary>Gets the unprotected header parameters associated with this message.</summary>
      <returns>A collection of unprotected header parameters associated with this message.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Cose.CoseMultiSignMessage">
      <summary>Represents a multiple signature COSE_Sign message.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMultiSignMessage.AddSignatureForDetached(System.Byte[],System.Security.Cryptography.Cose.CoseSigner,System.Byte[])">
      <summary>Adds a signature for the specified content to this message.</summary>
      <param name="detachedContent">The content to sign.</param>
      <param name="signer">The signer information used to sign the content.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="detachedContent" /> or <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">

                The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <exception cref="T:System.InvalidOperationException">The content is embedded on this message, use an overload that uses embedded content.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMultiSignMessage.AddSignatureForDetached(System.IO.Stream,System.Security.Cryptography.Cose.CoseSigner,System.ReadOnlySpan{System.Byte})">
      <summary>Adds a signature for the specified content to this message.</summary>
      <param name="detachedContent">The content to sign.</param>
      <param name="signer">The signer information used to sign the content.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="detachedContent" /> or <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="detachedContent" /> does not support reading or seeking.

-or-

The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <exception cref="T:System.InvalidOperationException">The content is embedded on this message, use an overload that uses embedded content.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMultiSignMessage.AddSignatureForDetached(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.Cose.CoseSigner,System.ReadOnlySpan{System.Byte})">
      <summary>Adds a signature for the specified content to this message.</summary>
      <param name="detachedContent">The content to sign.</param>
      <param name="signer">The signer information used to sign the content.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">

                The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <exception cref="T:System.InvalidOperationException">The content is embedded on this message, use an overload that uses embedded content.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMultiSignMessage.AddSignatureForDetachedAsync(System.IO.Stream,System.Security.Cryptography.Cose.CoseSigner,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Asynchronously adds a signature for the specified content to this message.</summary>
      <param name="detachedContent">The content to sign.</param>
      <param name="signer">The signer information used to sign the content.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="detachedContent" /> or <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="detachedContent" /> does not support reading or seeking.

-or-

The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <exception cref="T:System.InvalidOperationException">The content is embedded on this message, use an overload that uses embedded content.</exception>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>A task that represents the asynchronous operation.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMultiSignMessage.AddSignatureForEmbedded(System.Security.Cryptography.Cose.CoseSigner,System.Byte[])">
      <summary>Adds a signature for the content embedded in this message.</summary>
      <param name="signer">The signer information used to sign the content.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">

                The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <exception cref="T:System.InvalidOperationException">The content is detached from this message, use an overload that accepts a detached content.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMultiSignMessage.AddSignatureForEmbedded(System.Security.Cryptography.Cose.CoseSigner,System.ReadOnlySpan{System.Byte})">
      <summary>Adds a signature for the content embedded in this message.</summary>
      <param name="signer">The signer information used to sign the content.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">

                The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <exception cref="T:System.InvalidOperationException">The content is detached from this message, use an overload that accepts a detached content.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMultiSignMessage.GetEncodedLength">
      <summary>Calculates the number of bytes produced by encoding this message.</summary>
      <returns>The number of bytes produced by encoding this message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMultiSignMessage.RemoveSignature(System.Int32)">
      <summary>Removes the signature at the specified index from the message.</summary>
      <param name="index">The zero-based index of the signature to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0.

-or-

<paramref name="index" /> is equal to or greater than the number of elements in <see cref="P:System.Security.Cryptography.Cose.CoseMultiSignMessage.Signatures" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMultiSignMessage.RemoveSignature(System.Security.Cryptography.Cose.CoseSignature)">
      <summary>Removes the specified signature from the message.</summary>
      <param name="signature">The signature to remove from the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signature" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMultiSignMessage.SignDetached(System.Byte[],System.Security.Cryptography.Cose.CoseSigner,System.Security.Cryptography.Cose.CoseHeaderMap,System.Security.Cryptography.Cose.CoseHeaderMap,System.Byte[])">
      <summary>Signs the specified content and encodes it as a COSE_Sign message with detached content.</summary>
      <param name="detachedContent">The content to sign.</param>
      <param name="signer">The signer information used to sign <paramref name="detachedContent" />.</param>
      <param name="protectedHeaders">The protected header parameters to append to the message's content layer.</param>
      <param name="unprotectedHeaders">The unprotected header parameters to append to the message's content layer.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="detachedContent" /> or <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">

                The <paramref name="protectedHeaders" /> and <paramref name="unprotectedHeaders" /> collections have one or more labels in common.

-or-

The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <returns>The encoded message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMultiSignMessage.SignDetached(System.IO.Stream,System.Security.Cryptography.Cose.CoseSigner,System.Security.Cryptography.Cose.CoseHeaderMap,System.Security.Cryptography.Cose.CoseHeaderMap,System.ReadOnlySpan{System.Byte})">
      <summary>Signs the specified content and encodes it as a COSE_Sign message with detached content.</summary>
      <param name="detachedContent">The content to sign.</param>
      <param name="signer">The signer information used to sign <paramref name="detachedContent" />.</param>
      <param name="protectedHeaders">The protected header parameters to append to the message's content layer.</param>
      <param name="unprotectedHeaders">The unprotected header parameters to append to the message's content layer.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="detachedContent" /> or <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="detachedContent" /> does not support reading or seeking.

-or-

The <paramref name="protectedHeaders" /> and <paramref name="unprotectedHeaders" /> collections have one or more labels in common.

-or-

The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <returns>The encoded message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMultiSignMessage.SignDetached(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.Cose.CoseSigner,System.Security.Cryptography.Cose.CoseHeaderMap,System.Security.Cryptography.Cose.CoseHeaderMap,System.ReadOnlySpan{System.Byte})">
      <summary>Signs the specified content and encodes it as a COSE_Sign message with detached content.</summary>
      <param name="detachedContent">The content to sign.</param>
      <param name="signer">The signer information used to sign <paramref name="detachedContent" />.</param>
      <param name="protectedHeaders">The protected header parameters to append to the message's content layer.</param>
      <param name="unprotectedHeaders">The unprotected header parameters to append to the message's content layer.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">

                The <paramref name="protectedHeaders" /> and <paramref name="unprotectedHeaders" /> collections have one or more labels in common.

-or-

The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <returns>The encoded message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMultiSignMessage.SignDetachedAsync(System.IO.Stream,System.Security.Cryptography.Cose.CoseSigner,System.Security.Cryptography.Cose.CoseHeaderMap,System.Security.Cryptography.Cose.CoseHeaderMap,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Asynchronously signs the specified content and encodes it as a COSE_Sign message with detached content.</summary>
      <param name="detachedContent">The content to sign.</param>
      <param name="signer">The signer information used to sign <paramref name="detachedContent" />.</param>
      <param name="protectedHeaders">The protected header parameters to append to the message's content layer.</param>
      <param name="unprotectedHeaders">The unprotected header parameters to append to the message's content layer.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="detachedContent" /> or <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="detachedContent" /> does not support reading or seeking.

-or-

The <paramref name="protectedHeaders" /> and <paramref name="unprotectedHeaders" /> collections have one or more labels in common.

-or-

The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>A task that represents the asynchronous operation. The value of its <see cref="P:System.Threading.Tasks.Task`1.Result" /> property contains the encoded message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMultiSignMessage.SignEmbedded(System.Byte[],System.Security.Cryptography.Cose.CoseSigner,System.Security.Cryptography.Cose.CoseHeaderMap,System.Security.Cryptography.Cose.CoseHeaderMap,System.Byte[])">
      <summary>Signs the specified content and encodes it as a COSE_Sign message with embedded content.</summary>
      <param name="embeddedContent">The content to sign and to include in the message.</param>
      <param name="signer">The signer information used to sign <paramref name="embeddedContent" />.</param>
      <param name="protectedHeaders">The protected header parameters to append to the message's content layer.</param>
      <param name="unprotectedHeaders">The unprotected header parameters to append to the message's content layer.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="embeddedContent" /> or <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">

                The <paramref name="protectedHeaders" /> and <paramref name="unprotectedHeaders" /> collections have one or more labels in common.

-or-

The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <returns>The encoded message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMultiSignMessage.SignEmbedded(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.Cose.CoseSigner,System.Security.Cryptography.Cose.CoseHeaderMap,System.Security.Cryptography.Cose.CoseHeaderMap,System.ReadOnlySpan{System.Byte})">
      <summary>Signs the specified content and encodes it as a COSE_Sign message with detached content.</summary>
      <param name="embeddedContent">The content to sign and to include in the message.</param>
      <param name="signer">The signer information used to sign <paramref name="embeddedContent" />.</param>
      <param name="protectedHeaders">The protected header parameters to append to the message's content layer.</param>
      <param name="unprotectedHeaders">The unprotected header parameters to append to the message's content layer.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">

                The <paramref name="protectedHeaders" /> and <paramref name="unprotectedHeaders" /> collections have one or more labels in common.

-or-

The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <returns>The encoded message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMultiSignMessage.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>Attempts to encode this message into the specified buffer.</summary>
      <param name="destination">The buffer in which to write the encoded value.</param>
      <param name="bytesWritten">On success, receives the number of bytes written to <paramref name="destination" />.</param>
      <exception cref="T:System.InvalidOperationException">

                The <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseMessage.UnprotectedHeaders" /> collections have one or more labels in common.

-or-

The message does not contain at least one signature.</exception>
      <returns>
        <see langword="true" /> if <paramref name="destination" /> had sufficient length to receive the value; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMultiSignMessage.TrySignDetached(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Security.Cryptography.Cose.CoseSigner,System.Int32@,System.Security.Cryptography.Cose.CoseHeaderMap,System.Security.Cryptography.Cose.CoseHeaderMap,System.ReadOnlySpan{System.Byte})">
      <summary>Attempts to sign the specified content and encode it as a COSE_Sign message with detached content into the specified buffer.</summary>
      <param name="detachedContent">The content to sign.</param>
      <param name="destination">The buffer in which to write the encoded bytes.</param>
      <param name="signer">The signer information used to sign <paramref name="detachedContent" />.</param>
      <param name="bytesWritten">On success, receives the number of bytes written to <paramref name="destination" />.</param>
      <param name="protectedHeaders">The protected header parameters to append to the message's content layer.</param>
      <param name="unprotectedHeaders">The unprotected header parameters to append to the message's content layer.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">

                The <paramref name="protectedHeaders" /> and <paramref name="unprotectedHeaders" /> collections have one or more labels in common.

-or-

The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <returns>
        <see langword="true" /> if <paramref name="destination" /> had sufficient length to receive the encoded message; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseMultiSignMessage.TrySignEmbedded(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Security.Cryptography.Cose.CoseSigner,System.Int32@,System.Security.Cryptography.Cose.CoseHeaderMap,System.Security.Cryptography.Cose.CoseHeaderMap,System.ReadOnlySpan{System.Byte})">
      <summary>Signs the specified content and encodes it as a COSE_Sign message with embedded content.</summary>
      <param name="embeddedContent">The content to sign and to include in the message.</param>
      <param name="destination">The buffer in which to write the encoded bytes.</param>
      <param name="signer">The signer information used to sign <paramref name="embeddedContent" />.</param>
      <param name="bytesWritten">On success, receives the number of bytes written to <paramref name="destination" />.</param>
      <param name="protectedHeaders">The protected header parameters to append to the message's content layer.</param>
      <param name="unprotectedHeaders">The unprotected header parameters to append to the message's content layer.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">

                The <paramref name="protectedHeaders" /> and <paramref name="unprotectedHeaders" /> collections have one or more labels in common.

-or-

The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <returns>
        <see langword="true" /> if <paramref name="destination" /> had sufficient length to receive the encoded message; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseMultiSignMessage.Signatures">
      <summary>Gets a read-only collection of signatures associated with this message.</summary>
      <returns>A read-only collection of signatures associated with this message.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Cose.CoseSign1Message">
      <summary>Represents a single-signature COSE_Sign1 message.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.GetEncodedLength">
      <summary>Calculates the number of bytes produced by encoding this message.</summary>
      <returns>The number of bytes produced by encoding this message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.SignDetached(System.Byte[],System.Security.Cryptography.Cose.CoseSigner,System.Byte[])">
      <summary>Signs the specified content and encodes it as a COSE_Sign1 message with detached content.</summary>
      <param name="detachedContent">The content to sign.</param>
      <param name="signer">The signer information used to sign <paramref name="detachedContent" />.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="detachedContent" /> or <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">

                The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <returns>The encoded message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.SignDetached(System.IO.Stream,System.Security.Cryptography.Cose.CoseSigner,System.ReadOnlySpan{System.Byte})">
      <summary>Signs the specified content and encodes it as a COSE_Sign1 message with detached content.</summary>
      <param name="detachedContent">The content to sign.</param>
      <param name="signer">The signer information used to sign <paramref name="detachedContent" />.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="detachedContent" /> or <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="detachedContent" /> does not support reading or seeking.

-or-

The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <returns>The encoded message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.SignDetached(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.Cose.CoseSigner,System.ReadOnlySpan{System.Byte})">
      <summary>Signs the specified content and encodes it as a COSE_Sign1 message with detached content.</summary>
      <param name="detachedContent">The content to sign.</param>
      <param name="signer">The signer information used to sign <paramref name="detachedContent" />.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">

                The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <returns>The encoded message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.SignDetachedAsync(System.IO.Stream,System.Security.Cryptography.Cose.CoseSigner,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Asynchronously signs the specified content and encodes it as a COSE_Sign1 message with detached content.</summary>
      <param name="detachedContent">The content to sign.</param>
      <param name="signer">The signer information used to sign <paramref name="detachedContent" />.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="detachedContent" /> or <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="detachedContent" /> does not support reading or seeking.

-or-

The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>A task that represents the asynchronous operation. The value of its <see cref="P:System.Threading.Tasks.Task`1.Result" /> property contains the encoded message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.SignEmbedded(System.Byte[],System.Security.Cryptography.Cose.CoseSigner,System.Byte[])">
      <summary>Signs the specified content and encodes it as a COSE_Sign1 message with embedded content.</summary>
      <param name="embeddedContent">The content to sign and to include in the message.</param>
      <param name="signer">The signer information used to sign <paramref name="embeddedContent" />.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="embeddedContent" /> or <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">

                The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <returns>The encoded message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.SignEmbedded(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.Cose.CoseSigner,System.ReadOnlySpan{System.Byte})">
      <summary>Signs the specified content and encodes it as a COSE_Sign1 message with embedded content.</summary>
      <param name="embeddedContent">The content to sign and to include in the message.</param>
      <param name="signer">The signer information used to sign <paramref name="embeddedContent" />.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">

                The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <returns>The encoded message.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>Attempts to encode this message into the specified buffer.</summary>
      <param name="destination">The buffer in which to write the encoded value.</param>
      <param name="bytesWritten">On success, receives the number of bytes written to <paramref name="destination" />.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseMessage.UnprotectedHeaders" /> collections have one or more labels in common.</exception>
      <returns>
        <see langword="true" /> if <paramref name="destination" /> had sufficient length to receive the value; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.TrySignDetached(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Security.Cryptography.Cose.CoseSigner,System.Int32@,System.ReadOnlySpan{System.Byte})">
      <summary>Attempts to sign the specified content and encode it as a COSE_Sign1 message with detached content into the specified buffer.</summary>
      <param name="detachedContent">The content to sign.</param>
      <param name="destination">The buffer in which to write the encoded bytes.</param>
      <param name="signer">The signer information used to sign <paramref name="detachedContent" />.</param>
      <param name="bytesWritten">On success, receives the number of bytes written to <paramref name="destination" />.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">

                The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <returns>
        <see langword="true" /> if <paramref name="destination" /> had sufficient length to receive the encoded message; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.TrySignEmbedded(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Security.Cryptography.Cose.CoseSigner,System.Int32@,System.ReadOnlySpan{System.Byte})">
      <summary>Attempts to sign the specified content and encode it as a COSE_Sign1 message with embedded content into the specified buffer.</summary>
      <param name="embeddedContent">The content to sign and to include in the message.</param>
      <param name="destination">The buffer in which to write the encoded bytes.</param>
      <param name="signer">The signer information used to sign <paramref name="embeddedContent" />.</param>
      <param name="bytesWritten">On success, receives the number of bytes written to <paramref name="destination" />.</param>
      <param name="associatedData">The extra data associated with the signature, which must also be provided during verification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signer" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">

                The <see cref="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders" /> and <see cref="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders" /> collections in <paramref name="signer" /> have one or more labels in common.

-or-

One or more of the labels specified in a <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.CriticalHeaders" /> header is missing.</exception>
      <returns>
        <see langword="true" /> if <paramref name="destination" /> had sufficient length to receive the encoded message; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.VerifyDetached(System.Security.Cryptography.AsymmetricAlgorithm,System.Byte[],System.Byte[])">
      <summary>Verifies that the signature is valid for the content using the specified key.</summary>
      <param name="key">The public key that is associated with the private key that was used to sign the content.</param>
      <param name="detachedContent">The content that was previously signed.</param>
      <param name="associatedData">The extra data associated with the signature, which must match the value provided during signing.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> or <paramref name="detachedContent" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is of an unsupported type.</exception>
      <exception cref="T:System.InvalidOperationException">The content is embedded on this message, use an overload that uses embedded content.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> does not have a value for the <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.Algorithm" /> header.

-or-

The algorithm protected header was incorrectly formatted.

-or-

The algorithm protected header was not one of the values supported by this implementation.

-or-

The algorithm protected header doesn't match with the algorithms supported by the specified <paramref name="key" />.</exception>
      <returns>
        <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.VerifyDetached(System.Security.Cryptography.AsymmetricAlgorithm,System.IO.Stream,System.ReadOnlySpan{System.Byte})">
      <summary>Verifies that the signature is valid for the content using the specified key.</summary>
      <param name="key">The public key that is associated with the private key that was used to sign the content.</param>
      <param name="detachedContent">The content that was previously signed.</param>
      <param name="associatedData">The extra data associated with the signature, which must match the value provided during signing.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> or <paramref name="detachedContent" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is of an unsupported type.

-or-

<paramref name="detachedContent" /> does not support reading or seeking.</exception>
      <exception cref="T:System.InvalidOperationException">The content is embedded on this message, use an overload that uses embedded content.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> does not have a value for the <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.Algorithm" /> header.

-or-

The algorithm protected header was incorrectly formatted.

-or-

The algorithm protected header was not one of the values supported by this implementation.

-or-

The algorithm protected header doesn't match with the algorithms supported by the specified <paramref name="key" />.</exception>
      <returns>
        <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.VerifyDetached(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <summary>Verifies that the signature is valid for the content using the specified key.</summary>
      <param name="key">The public key that is associated with the private key that was used to sign the content.</param>
      <param name="detachedContent">The content that was previously signed.</param>
      <param name="associatedData">The extra data associated with the signature, which must match the value provided during signing.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is of an unsupported type.</exception>
      <exception cref="T:System.InvalidOperationException">The content is embedded on this message, use an overload that uses embedded content.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> does not have a value for the <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.Algorithm" /> header.

-or-

The algorithm protected header was incorrectly formatted.

-or-

The algorithm protected header was not one of the values supported by this implementation.

-or-

The algorithm protected header doesn't match with the algorithms supported by the specified <paramref name="key" />.</exception>
      <returns>
        <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.VerifyDetached(System.Security.Cryptography.Cose.CoseKey,System.Byte[],System.Byte[])">
      <param name="key" />
      <param name="detachedContent" />
      <param name="associatedData" />
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.VerifyDetached(System.Security.Cryptography.Cose.CoseKey,System.IO.Stream,System.ReadOnlySpan{System.Byte})">
      <param name="key" />
      <param name="detachedContent" />
      <param name="associatedData" />
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.VerifyDetached(System.Security.Cryptography.Cose.CoseKey,System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="key" />
      <param name="detachedContent" />
      <param name="associatedData" />
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.VerifyDetachedAsync(System.Security.Cryptography.AsymmetricAlgorithm,System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Asynchronously verifies that the signature is valid for the content using the specified key.</summary>
      <param name="key">The public key that is associated with the private key that was used to sign the content.</param>
      <param name="detachedContent">The content that was previously signed.</param>
      <param name="associatedData">The extra data associated with the signature, which must match the value provided during signing.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> or <paramref name="detachedContent" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is of an unsupported type.

-or-

<paramref name="detachedContent" /> does not support reading or seeking.</exception>
      <exception cref="T:System.InvalidOperationException">The content is embedded on this message, use an overload that uses embedded content.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> does not have a value for the <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.Algorithm" /> header.

-or-

The algorithm protected header was incorrectly formatted.

-or-

The algorithm protected header was not one of the values supported by this implementation.

-or-

The algorithm protected header doesn't match with the algorithms supported by the specified <paramref name="key" />.</exception>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>A task whose <see cref="T:System.Threading.Tasks.Task`1" /> property is <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.VerifyDetachedAsync(System.Security.Cryptography.Cose.CoseKey,System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <param name="key" />
      <param name="detachedContent" />
      <param name="associatedData" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.VerifyEmbedded(System.Security.Cryptography.AsymmetricAlgorithm,System.Byte[])">
      <summary>Verifies that the signature is valid for the content using the specified key.</summary>
      <param name="key">The public key that is associated with the private key that was used to sign the content.</param>
      <param name="associatedData">The extra data associated with the signature, which must match the value provided during signing.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is of an unsupported type.</exception>
      <exception cref="T:System.InvalidOperationException">The content is detached from this message, use an overload that accepts a detached content.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> does not have a value for the <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.Algorithm" /> header.

-or-

The algorithm protected header was incorrectly formatted.

-or-

The algorithm protected header was not one of the values supported by this implementation.

-or-

The algorithm protected header doesn't match with the algorithms supported by the specified <paramref name="key" />.</exception>
      <returns>
        <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.VerifyEmbedded(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Byte})">
      <summary>Verifies that the signature is valid for the content using the specified key.</summary>
      <param name="key">The public key that is associated with the private key that was used to sign the content.</param>
      <param name="associatedData">The extra data associated with the signature, which must match the value provided during signing.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is of an unsupported type.</exception>
      <exception cref="T:System.InvalidOperationException">The content is detached from this message, use an overload that accepts a detached content.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> does not have a value for the <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.Algorithm" /> header.

-or-

The algorithm protected header was incorrectly formatted.

-or-

The algorithm protected header was not one of the values supported by this implementation.

-or-

The algorithm protected header doesn't match with the algorithms supported by the specified <paramref name="key" />.</exception>
      <returns>
        <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSign1Message.VerifyEmbedded(System.Security.Cryptography.Cose.CoseKey,System.ReadOnlySpan{System.Byte})">
      <param name="key" />
      <param name="associatedData" />
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseSign1Message.Signature">
      <summary>Gets the digital signature.</summary>
      <returns>A region of memory that contains the digital signature.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Cose.CoseSignature">
      <summary>Represents a COSE_Signature that carries one signature and information about that signature associated with a <see cref="T:System.Security.Cryptography.Cose.CoseMultiSignMessage" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSignature.VerifyDetached(System.Security.Cryptography.AsymmetricAlgorithm,System.Byte[],System.Byte[])">
      <summary>Verifies that the signature is valid for the message's content using the specified key.</summary>
      <param name="key">The private key used to sign the content.</param>
      <param name="detachedContent">The content that was previously signed.</param>
      <param name="associatedData">The extra data associated with the signature, which must match the value provided during signing.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> or <paramref name="detachedContent" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is of an unsupported type.</exception>
      <exception cref="T:System.InvalidOperationException">The content is embedded on the associated message, use an overload that uses embedded content.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> does not have a value for the <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.Algorithm" /> header.

-or-

The algorithm protected header was incorrectly formatted.

-or-

The algorithm protected header was not one of the values supported by this implementation.

-or-

The algorithm protected header doesn't match with the algorithms supported by the specified <paramref name="key" />.</exception>
      <returns>
        <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSignature.VerifyDetached(System.Security.Cryptography.AsymmetricAlgorithm,System.IO.Stream,System.ReadOnlySpan{System.Byte})">
      <summary>Verifies that the signature is valid for the message's content using the specified key.</summary>
      <param name="key">The private key used to sign the content.</param>
      <param name="detachedContent">The content that was previously signed.</param>
      <param name="associatedData">The extra data associated with the signature, which must match the value provided during signing.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> or <paramref name="detachedContent" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is of an unsupported type.

-or-

<paramref name="detachedContent" /> does not support reading or seeking.</exception>
      <exception cref="T:System.InvalidOperationException">The content is embedded on the associated message, use an overload that uses embedded content.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> does not have a value for the <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.Algorithm" /> header.

-or-

The algorithm protected header was incorrectly formatted.

-or-

The algorithm protected header was not one of the values supported by this implementation.

-or-

The algorithm protected header doesn't match with the algorithms supported by the specified <paramref name="key" />.</exception>
      <returns>
        <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSignature.VerifyDetached(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <summary>Verifies that the signature is valid for the message's content using the specified key.</summary>
      <param name="key">The private key used to sign the content.</param>
      <param name="detachedContent">The content that was previously signed.</param>
      <param name="associatedData">The extra data associated with the signature, which must match the value provided during signing.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is of an unsupported type.</exception>
      <exception cref="T:System.InvalidOperationException">The content is embedded on the associated message, use an overload that uses embedded content.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> does not have a value for the <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.Algorithm" /> header.

-or-

The algorithm protected header was incorrectly formatted.

-or-

The algorithm protected header was not one of the values supported by this implementation.

-or-

The algorithm protected header doesn't match with the algorithms supported by the specified <paramref name="key" />.</exception>
      <returns>
        <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSignature.VerifyDetached(System.Security.Cryptography.Cose.CoseKey,System.Byte[],System.Byte[])">
      <param name="key" />
      <param name="detachedContent" />
      <param name="associatedData" />
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSignature.VerifyDetached(System.Security.Cryptography.Cose.CoseKey,System.IO.Stream,System.ReadOnlySpan{System.Byte})">
      <param name="key" />
      <param name="detachedContent" />
      <param name="associatedData" />
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSignature.VerifyDetached(System.Security.Cryptography.Cose.CoseKey,System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="key" />
      <param name="detachedContent" />
      <param name="associatedData" />
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSignature.VerifyDetachedAsync(System.Security.Cryptography.AsymmetricAlgorithm,System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Asynchronously verifies that the signature is valid for the message's content using the specified key.</summary>
      <param name="key">The private key used to sign the content.</param>
      <param name="detachedContent">The content that was previously signed.</param>
      <param name="associatedData">The extra data associated with the signature, which must match the value provided during signing.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> or <paramref name="detachedContent" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is of an unsupported type.

-or-

<paramref name="detachedContent" /> does not support reading or seeking.</exception>
      <exception cref="T:System.InvalidOperationException">The content is embedded on the associated message, use an overload that uses embedded content.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> does not have a value for the <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.Algorithm" /> header.

-or-

The algorithm protected header was incorrectly formatted.

-or-

The algorithm protected header was not one of the values supported by this implementation.

-or-

The algorithm protected header doesn't match with the algorithms supported by the specified <paramref name="key" />.</exception>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>A task whose <see cref="T:System.Threading.Tasks.Task`1" /> property is <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSignature.VerifyDetachedAsync(System.Security.Cryptography.Cose.CoseKey,System.IO.Stream,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <param name="key" />
      <param name="detachedContent" />
      <param name="associatedData" />
      <param name="cancellationToken" />
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSignature.VerifyEmbedded(System.Security.Cryptography.AsymmetricAlgorithm,System.Byte[])">
      <summary>Verifies that the signature is valid for the message's content using the specified key.</summary>
      <param name="key">The private key used to sign the content.</param>
      <param name="associatedData">The extra data associated with the signature, which must match the value provided during signing.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is of an unsupported type.</exception>
      <exception cref="T:System.InvalidOperationException">The content is detached from the associated message, use an overload that accepts a detached content.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> does not have a value for the <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.Algorithm" /> header.

-or-

The algorithm protected header was incorrectly formatted.

-or-

The algorithm protected header was not one of the values supported by this implementation.

-or-

The algorithm protected header doesn't match with the algorithms supported by the specified <paramref name="key" />.</exception>
      <returns>
        <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSignature.VerifyEmbedded(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Byte})">
      <summary>Verifies that the signature is valid for the message's content using the specified key.</summary>
      <param name="key">The private key used to sign the content.</param>
      <param name="associatedData">The extra data associated with the signature, which must match the value provided during signing.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is of an unsupported type.</exception>
      <exception cref="T:System.InvalidOperationException">The content is detached from the associated message, use an overload that accepts a detached content.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Cose.CoseMessage.ProtectedHeaders" /> does not have a value for the <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.Algorithm" /> header.

-or-

The algorithm protected header was incorrectly formatted.

-or-

The algorithm protected header was not one of the values supported by this implementation.

-or-

The algorithm protected header doesn't match with the algorithms supported by the specified <paramref name="key" />.</exception>
      <returns>
        <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSignature.VerifyEmbedded(System.Security.Cryptography.Cose.CoseKey,System.ReadOnlySpan{System.Byte})">
      <param name="key" />
      <param name="associatedData" />
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseSignature.ProtectedHeaders">
      <summary>Gets the protected header parameters associated with this instance.</summary>
      <returns>A collection of protected header parameters associated with this instance.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseSignature.RawProtectedHeaders">
      <summary>Gets the raw bytes of the protected header parameters associated with this instance.</summary>
      <returns>A region of memory that contains the raw bytes of the protected header parameters associated with this instance.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseSignature.Signature">
      <summary>Gets the digital signature.</summary>
      <returns>A region of memory that contains the digital signature.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseSignature.UnprotectedHeaders">
      <summary>Gets the unprotected header parameters associated with this instance.</summary>
      <returns>A collection of unprotected header parameters associated with this instance.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Cose.CoseSigner">
      <summary>Provides signing information to be used with sign operations in <see cref="T:System.Security.Cryptography.Cose.CoseSign1Message" /> and <see cref="T:System.Security.Cryptography.Cose.CoseMultiSignMessage" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSigner.#ctor(System.Security.Cryptography.AsymmetricAlgorithm,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Cose.CoseHeaderMap,System.Security.Cryptography.Cose.CoseHeaderMap)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Cose.CoseSigner" /> class.</summary>
      <param name="key">The private key to use for signing.</param>
      <param name="hashAlgorithm">The hash algorithm to use to create the hash value for signing.</param>
      <param name="protectedHeaders">The collection of protected header parameters to append to the message when signing.</param>
      <param name="unprotectedHeaders">The collection of unprotected header parameters to append to the message when signing.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is <see cref="T:System.Security.Cryptography.RSA" />, use <see cref="M:System.Security.Cryptography.Cose.CoseSigner.#ctor(System.Security.Cryptography.RSA,System.Security.Cryptography.RSASignaturePadding,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Cose.CoseHeaderMap,System.Security.Cryptography.Cose.CoseHeaderMap)" /> to specify a signature padding.

-or-

<paramref name="key" /> is of an unsupported type.

-or-

<paramref name="protectedHeaders" /> contains a value with the <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.Algorithm" /> label, but the value was incorrect based on the <paramref name="key" /> and <paramref name="hashAlgorithm" />.

-or-

<paramref name="unprotectedHeaders" /> specifies a value with the <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.Algorithm" /> label.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSigner.#ctor(System.Security.Cryptography.Cose.CoseKey,System.Security.Cryptography.Cose.CoseHeaderMap,System.Security.Cryptography.Cose.CoseHeaderMap)">
      <param name="key" />
      <param name="protectedHeaders" />
      <param name="unprotectedHeaders" />
    </member>
    <member name="M:System.Security.Cryptography.Cose.CoseSigner.#ctor(System.Security.Cryptography.RSA,System.Security.Cryptography.RSASignaturePadding,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Cose.CoseHeaderMap,System.Security.Cryptography.Cose.CoseHeaderMap)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Cose.CoseSigner" /> class.</summary>
      <param name="key">The private key to use for signing.</param>
      <param name="signaturePadding">The padding mode to use when signing.</param>
      <param name="hashAlgorithm">The hash algorithm to use to create the hash value for signing.</param>
      <param name="protectedHeaders">The collection of protected header parameters to append to the message when signing.</param>
      <param name="unprotectedHeaders">The collection of unprotected header parameters to append to the message when signing.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="protectedHeaders" /> contains a value with the <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.Algorithm" /> label, but the value was incorrect based on the <paramref name="key" />, <paramref name="signaturePadding" /> and <paramref name="hashAlgorithm" />.

-or-

<paramref name="unprotectedHeaders" /> specifies a value with the <see cref="P:System.Security.Cryptography.Cose.CoseHeaderLabel.Algorithm" /> label.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseSigner.HashAlgorithm">
      <summary>Gets the hash algorithm to use to create the hash value for signing.</summary>
      <returns>The hash algorithm to use to create the hash value for signing.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseSigner.Key">
      <summary>Gets the private key to use during signing.</summary>
      <returns>The private key to use during signing.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseSigner.ProtectedHeaders">
      <summary>Gets the protected header parameters to append to the message when signing.</summary>
      <returns>A collection of protected header parameters to append to the message when signing.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseSigner.RSASignaturePadding">
      <summary>Gets the padding mode to use when signing.</summary>
      <returns>The padding mode to use when signing.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Cose.CoseSigner.UnprotectedHeaders">
      <summary>Gets the unprotected header parameters to append to the message when signing.</summary>
      <returns>A collection of unprotected header parameters to append to the message when signing.</returns>
    </member>
  </members>
</doc>