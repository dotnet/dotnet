<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.AI.Evaluation.Reporting</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails">
      <summary>
            A class that records details related to all LLM chat conversation turns involved in the execution of a particular
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails.#ctor(Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails[])">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> class.</summary>
      <param name="turnDetails">
            An array of <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> objects.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails})">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> class.</summary>
      <param name="turnDetails">
            An enumeration of <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> objects.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails})">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> class.</summary>
      <param name="turnDetails">
            A list of <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> objects.</param>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails.TurnDetails">
      <summary>
            Gets or sets the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> for the LLM chat conversation turns recorded in this
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> object.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetailsExtensions">
      <summary>
            Extension methods for <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetailsExtensions.AddTurnDetails(Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails,Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails[])">
      <summary>
            Adds <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> for one or more LLM chat conversation turns to the
            <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails.TurnDetails" /> collection.</summary>
      <param name="chatDetails">
            The <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> object to which the <paramref name="turnDetails" /> are to be added.</param>
      <param name="turnDetails">
            The <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> for one or more LLM chat conversation turns.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetailsExtensions.AddTurnDetails(Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails})">
      <summary>
            Adds <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> for one or more LLM chat conversation turns to the
            <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails.TurnDetails" /> collection.</summary>
      <param name="chatDetails">
            The <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> object to which the <paramref name="turnDetails" /> are to be added.</param>
      <param name="turnDetails">
            The <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> for one or more LLM chat conversation turns.</param>
    </member>
    <member name="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails">
      <summary>
            A class that records details related to a particular LLM chat conversation turn involved in the execution of a
            particular <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />.</summary>
      <param name="latency">
            The duration between the time when the request was sent to the LLM and the time when the response was received for
            the chat conversation turn.</param>
      <param name="model">
            The model that was used in the creation of the response for the chat conversation turn. Can be
            <see langword="null" /> if this information was not available via <see cref="P:Microsoft.Extensions.AI.ChatResponse.ModelId" />.</param>
      <param name="usage">
            Usage details for the chat conversation turn (including input and output token counts). Can be
            <see langword="null" /> if usage details were not available via <see cref="P:Microsoft.Extensions.AI.ChatResponse.Usage" />.</param>
      <param name="cacheKey">
            The cache key for the cached model response for the chat conversation turn if response caching was enabled;
            <see langword="null" /> otherwise.</param>
      <param name="cacheHit">
        <see langword="true" /> if response caching was enabled and the model response for the chat conversation turn was
            retrieved from the cache; <see langword="false" /> if response caching was enabled and the model response was not
            retrieved from the cache; <see langword="null" /> if response caching was disabled.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.#ctor(System.TimeSpan,System.String,Microsoft.Extensions.AI.UsageDetails,System.String,System.Nullable{System.Boolean})">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> class.</summary>
      <param name="latency">
            The duration between the time when the request was sent to the LLM and the time when the response was received
            for the chat conversation turn.</param>
      <param name="model">
            The model that was used in the creation of the response for the chat conversation turn. Can be
            <see langword="null" /> if this information was not available via <see cref="P:Microsoft.Extensions.AI.ChatResponse.ModelId" />.</param>
      <param name="usage">
            Usage details for the chat conversation turn (including input and output token counts). Can be
            <see langword="null" /> if usage details were not available via <see cref="P:Microsoft.Extensions.AI.ChatResponse.Usage" />.</param>
      <param name="cacheKey">
            The cache key for the cached model response for the chat conversation turn if response caching was enabled;
            <see langword="null" /> otherwise.</param>
      <param name="cacheHit">
        <see langword="true" /> if response caching was enabled and the model response for the chat conversation turn
            was retrieved from the cache; <see langword="false" /> if response caching was enabled and the model response
            was not retrieved from the cache; <see langword="null" /> if response caching was disabled.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.#ctor(System.TimeSpan,System.String,System.String,Microsoft.Extensions.AI.UsageDetails,System.String,System.Nullable{System.Boolean})">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails" /> class.</summary>
      <param name="latency">
            The duration between the time when the request was sent to the LLM and the time when the response was received
            for the chat conversation turn.</param>
      <param name="model">
            The model that was used in the creation of the response for the chat conversation turn. Can be
            <see langword="null" /> if this information was not available via <see cref="P:Microsoft.Extensions.AI.ChatResponse.ModelId" />.</param>
      <param name="modelProvider">
            The name of the provider for the model identified by <paramref name="model" />. Can be <see langword="null" />
            if this information was not available via the <see cref="T:Microsoft.Extensions.AI.ChatClientMetadata" /> for the
            <see cref="T:Microsoft.Extensions.AI.IChatClient" />.</param>
      <param name="usage">
            Usage details for the chat conversation turn (including input and output token counts). Can be
            <see langword="null" /> if usage details were not available via <see cref="P:Microsoft.Extensions.AI.ChatResponse.Usage" />.</param>
      <param name="cacheKey">
            The cache key for the cached model response for the chat conversation turn if response caching was enabled;
            <see langword="null" /> otherwise.</param>
      <param name="cacheHit">
        <see langword="true" /> if response caching was enabled and the model response for the chat conversation turn
            was retrieved from the cache; <see langword="false" /> if response caching was enabled and the model response
            was not retrieved from the cache; <see langword="null" /> if response caching was disabled.</param>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.CacheHit">
      <summary>
            Gets or sets a value indicating whether the model response was retrieved from the cache.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.CacheKey">
      <summary>
            Gets or sets the cache key for the cached model response for the chat conversation turn.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.Latency">
      <summary>
            Gets or sets the duration between the time when the request was sent to the LLM and the time when the response
            was received for the chat conversation turn.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.Model">
      <summary>
            Gets or sets the model that was used in the creation of the response for the chat conversation turn.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.ModelProvider">
      <summary>
            Gets or sets the name of the provider for the model identified by <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.Model" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ChatTurnDetails.Usage">
      <summary>
            Gets or sets usage details for the chat conversation turn (including input and output token counts).</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.Evaluation.Reporting.Defaults">
      <summary>
            A static class that contains default values for various reporting artifacts.</summary>
    </member>
    <member name="F:Microsoft.Extensions.AI.Evaluation.Reporting.Defaults.DefaultExecutionName">
      <summary>
            The default execution name that should be used if one was not specified as part of the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" />.</summary>
    </member>
    <member name="F:Microsoft.Extensions.AI.Evaluation.Reporting.Defaults.DefaultIterationName">
      <summary>
            The default iteration name that should be used if one was not specified when creating a
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> via
            <see cref="M:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration.CreateScenarioRunAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.Defaults.DefaultTimeToLiveForCacheEntries">
      <summary>
            Gets a <see cref="T:System.TimeSpan" /> that specifies the default amount of time that cached AI responses should survive
            in the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResponseCacheProvider" />'s cache before they are considered expired and evicted.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.Evaluation.Reporting.Formats.Html.HtmlReportWriter">
      <summary>
            An <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationReportWriter" /> that generates an HTML report containing all the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s present in the supplied <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s and writes it to the
            specified <paramref name="reportFilePath" />.</summary>
      <param name="reportFilePath">
            The path to a file where the report will be written. If the file already exists, it will be overwritten.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.Formats.Html.HtmlReportWriter.#ctor(System.String)">
      <summary>
            An <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationReportWriter" /> that generates an HTML report containing all the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s present in the supplied <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s and writes it to the
            specified <paramref name="reportFilePath" />.</summary>
      <param name="reportFilePath">
            The path to a file where the report will be written. If the file already exists, it will be overwritten.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.Formats.Html.HtmlReportWriter.WriteReportAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult},System.Threading.CancellationToken)">
      <summary>Writes a report containing all the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.EvaluationMetric"></xref>s present in the supplied
<code data-dev-comment-type="paramref">scenarioRunResults</code>s.</summary>
      <param name="scenarioRunResults">An enumeration of <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult"></xref>s.</param>
      <param name="cancellationToken">A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> that can cancel the operation.</param>
      <returns>A <xref data-throw-if-not-resolved="true" uid="System.Threading.Tasks.ValueTask"></xref> that represents the asynchronous operation.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.Evaluation.Reporting.Formats.Json.JsonReportWriter">
      <summary>
            An <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationReportWriter" /> that generates a JSON report containing all the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s present in the supplied <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s and writes it to the
            specified <paramref name="reportFilePath" />.</summary>
      <param name="reportFilePath">
            The path to a file where the report will be written. If the file already exists, it will be overwritten.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.Formats.Json.JsonReportWriter.#ctor(System.String)">
      <summary>
            An <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationReportWriter" /> that generates a JSON report containing all the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s present in the supplied <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s and writes it to the
            specified <paramref name="reportFilePath" />.</summary>
      <param name="reportFilePath">
            The path to a file where the report will be written. If the file already exists, it will be overwritten.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.Formats.Json.JsonReportWriter.WriteReportAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult},System.Threading.CancellationToken)">
      <summary>Writes a report containing all the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.EvaluationMetric"></xref>s present in the supplied
<code data-dev-comment-type="paramref">scenarioRunResults</code>s.</summary>
      <param name="scenarioRunResults">An enumeration of <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult"></xref>s.</param>
      <param name="cancellationToken">A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> that can cancel the operation.</param>
      <returns>A <xref data-throw-if-not-resolved="true" uid="System.Threading.Tasks.ValueTask"></xref> that represents the asynchronous operation.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationReportWriter">
      <summary>
            Generates a report containing all the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s present in the supplied
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationReportWriter.WriteReportAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult},System.Threading.CancellationToken)">
      <summary>
            Writes a report containing all the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s present in the supplied
            <paramref name="scenarioRunResults" />s.</summary>
      <param name="scenarioRunResults">An enumeration of <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s.</param>
      <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can cancel the operation.</param>
      <returns>A <see cref="T:System.Threading.Tasks.ValueTask" /> that represents the asynchronous operation.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResponseCacheProvider">
      <summary>
            Provides a way to get the <see cref="T:Microsoft.Extensions.Caching.Distributed.IDistributedCache" /> that caches the AI responses associated with a particular
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResponseCacheProvider.DeleteExpiredCacheEntriesAsync(System.Threading.CancellationToken)">
      <summary>
            Deletes expired cache entries for all <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />s.</summary>
      <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can cancel the operation.</param>
      <returns>A <see cref="T:System.Threading.Tasks.ValueTask" /> that represents the asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResponseCacheProvider.GetCacheAsync(System.String,System.String,System.Threading.CancellationToken)">
      <summary>
            Returns an <see cref="T:Microsoft.Extensions.Caching.Distributed.IDistributedCache" /> that caches all the AI responses associated with the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> with the supplied <paramref name="scenarioName" /> and
            <paramref name="iterationName" />.</summary>
      <param name="scenarioName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName" />.</param>
      <param name="iterationName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName" />.</param>
      <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can cancel the operation.</param>
      <returns>
            An <see cref="T:Microsoft.Extensions.Caching.Distributed.IDistributedCache" /> that caches all the AI responses associated with the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> with the supplied <paramref name="scenarioName" /> and
            <paramref name="iterationName" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResponseCacheProvider.ResetAsync(System.Threading.CancellationToken)">
      <summary>
            Deletes cached AI responses for all <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />s.</summary>
      <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can cancel the operation.</param>
      <returns>A <see cref="T:System.Threading.Tasks.ValueTask" /> that represents the asynchronous operation.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResultStore">
      <summary>
            Represents a store for <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResultStore.DeleteResultsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
      <summary>
            Deletes <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s for <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />s filtered by the specified
            <paramref name="executionName" />, <paramref name="scenarioName" />, and <paramref name="iterationName" /> from
            the store.</summary>
      <param name="executionName">
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" /> by which the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s should be filtered.
            If omitted, all <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" />s are considered.</param>
      <param name="scenarioName">
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName" /> by which the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s should be filtered.
            If omitted, all <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName" />s that are in scope based on the specified
            <paramref name="executionName" /> filter are considered.</param>
      <param name="iterationName">
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName" /> by which the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s should be filtered.
            If omitted, all <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName" />s that are in scope based on the specified
            <paramref name="executionName" />, and <paramref name="scenarioName" /> filters are considered.</param>
      <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can cancel the operation.</param>
      <returns>A <see cref="T:System.Threading.Tasks.ValueTask" /> that represents the asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResultStore.GetIterationNamesAsync(System.String,System.String,System.Threading.CancellationToken)">
      <summary>
            Gets the <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName" />s present in the scenario with the specified
            <paramref name="scenarioName" /> under the execution with the specified <paramref name="executionName" />.</summary>
      <param name="executionName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" />.</param>
      <param name="scenarioName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName" />.</param>
      <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can cancel the operation.</param>
      <returns>
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName" />s present in the scenario with the specified
            <paramref name="scenarioName" /> under the execution with the specified <paramref name="executionName" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResultStore.GetLatestExecutionNamesAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
      <summary>
            Gets the <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" />s of the most recent <paramref name="count" /> executions from
            the store (ordered from most recent to least recent).</summary>
      <param name="count">The number of <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" />s to retrieve.</param>
      <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can cancel the operation.</param>
      <returns>
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" />s of the most recent <paramref name="count" /> executions from the
            store (ordered from most recent to least recent).</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResultStore.GetScenarioNamesAsync(System.String,System.Threading.CancellationToken)">
      <summary>
            Gets the <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName" />s present in the execution with the specified
            <paramref name="executionName" />.</summary>
      <param name="executionName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" />.</param>
      <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can cancel the operation.</param>
      <returns>
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName" />s present in the execution with the specified
            <paramref name="executionName" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResultStore.ReadResultsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
      <summary>
            Returns <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s for <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />s filtered by the specified
            <paramref name="executionName" />, <paramref name="scenarioName" />, and <paramref name="iterationName" /> from
            the store.</summary>
      <param name="executionName">
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" /> by which the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s should be filtered.
            If omitted, all <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" />s are considered.</param>
      <param name="scenarioName">
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName" /> by which the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s should be filtered.
            If omitted, all <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName" />s that are in scope based on the specified
            <paramref name="executionName" /> filter are considered.</param>
      <param name="iterationName">
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName" /> by which the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s should be filtered.
            If omitted, all <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName" />s that are in scope based on the specified
            <paramref name="executionName" />, and <paramref name="scenarioName" /> filters are considered.</param>
      <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can cancel the operation.</param>
      <returns>The matching <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResultStore.WriteResultsAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult},System.Threading.CancellationToken)">
      <summary>
            Writes the supplied <paramref name="results" />s to the store.</summary>
      <param name="results">The <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s to be written.</param>
      <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can cancel the operation.</param>
      <returns>A <see cref="T:System.Threading.Tasks.ValueTask" /> that represents the asynchronous operation.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration">
      <summary>
            Represents the configuration for a set of <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />s that defines the set of
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s that should be invoked, the <see cref="T:Microsoft.Extensions.AI.Evaluation.ChatConfiguration" /> that should be
            used by these <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s, how the resulting <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s should be persisted,
            and how AI responses should be cached.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.IEvaluator},Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResultStore,Microsoft.Extensions.AI.Evaluation.ChatConfiguration,Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResponseCacheProvider,System.Collections.Generic.IEnumerable{System.String},System.String,System.Func{Microsoft.Extensions.AI.Evaluation.EvaluationMetric,Microsoft.Extensions.AI.Evaluation.EvaluationMetricInterpretation},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" /> class.</summary>
      <param name="evaluators">
            The set of <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s that should be invoked to evaluate AI responses.</param>
      <param name="resultStore">
            The <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResultStore" /> that should be used to persist the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s.</param>
      <param name="chatConfiguration">
            A <see cref="T:Microsoft.Extensions.AI.Evaluation.ChatConfiguration" /> that specifies the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> that is used by
            AI-based <paramref name="evaluators" /> included in this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" />. Can be omitted if
            none of the included <paramref name="evaluators" /> are AI-based.</param>
      <param name="responseCacheProvider">
            The <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResponseCacheProvider" /> that should be used to cache AI responses. If omitted, AI
            responses will not be cached.</param>
      <param name="cachingKeys">
            An optional collection of unique strings that should be hashed when generating the cache keys for cached AI
            responses. See <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration.CachingKeys" /> for more information about this concept.</param>
      <param name="executionName">
            The name of the current execution. See <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" /> for more information about this
            concept. Uses a fixed default value <c>"Default"</c> if omitted.</param>
      <param name="evaluationMetricInterpreter">
            An optional function that can be used to override <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetricInterpretation" />s for
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s returned from evaluations that use this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" />.
            The supplied function can either return a new <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetricInterpretation" /> for any
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" /> that is supplied to it, or return <see langword="null" /> if the
            <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Interpretation" /> should be left unchanged.</param>
      <param name="tags">
            A optional set of text tags applicable to all <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />s created using this
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" />.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration.CreateScenarioRunAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
      <summary>
            Creates a new <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> with the specified <paramref name="scenarioName" /> and
            <paramref name="iterationName" />.</summary>
      <param name="scenarioName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName" />.</param>
      <param name="iterationName">
            The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName" />. Uses default value <c>"1"</c> if omitted.</param>
      <param name="additionalCachingKeys">
            An optional collection of unique strings that should be hashed when generating the cache keys for cached AI
            responses. See <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration.CachingKeys" /> for more information about this concept.</param>
      <param name="additionalTags">
            A optional set of text tags applicable to this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />.</param>
      <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can cancel the operation.</param>
      <returns>
            A new <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> with the specified <paramref name="scenarioName" /> and
            <paramref name="iterationName" />.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration.CachingKeys">
      <summary>
            Gets the collection of unique strings that should be hashed when generating the cache keys for cached AI
            responses.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration.ChatConfiguration">
      <summary>
            Gets a <see cref="T:Microsoft.Extensions.AI.Evaluation.ChatConfiguration" /> that specifies the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> that is used by
            AI-based <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration.Evaluators" /> included in this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration.EvaluationMetricInterpreter">
      <summary>
            Gets a function that can be optionally used to override <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetricInterpretation" />s for
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s returned from evaluations that use this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration.Evaluators">
      <summary>
            Gets the set of <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s that should be invoked to evaluate AI responses.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration.ExecutionName">
      <summary>
            Gets the name of the current execution.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration.ResponseCacheProvider">
      <summary>
            Gets the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResponseCacheProvider" /> that should be used to cache AI responses.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration.ResultStore">
      <summary>
            Gets the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResultStore" /> that should be used to persist the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration.Tags">
      <summary>
            Gets an optional set of text tags applicable to all <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />s created using this
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" />.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun">
      <summary>
            Represents a single execution of a particular iteration of a particular scenario under evaluation.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.DisposeAsync">
      <summary>
            Disposes the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> and writes the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> to the configured
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResultStore" />.</summary>
      <returns>A <see cref="T:System.Threading.Tasks.ValueTask" /> that represents the asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.EvaluateAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatResponse,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)">
      <summary>
            Evaluates the supplied <paramref name="modelResponse" /> and returns an <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" />
            containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.</summary>
      <param name="messages">
            The conversation history including the request that produced the supplied <paramref name="modelResponse" />.</param>
      <param name="modelResponse">The response that is to be evaluated.</param>
      <param name="additionalContext">
            Additional contextual information (beyond that which is available in <paramref name="messages" />) that the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s included in this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> may need to accurately evaluate the
            supplied <paramref name="modelResponse" />.</param>
      <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> that can cancel the evaluation operation.</param>
      <returns>An <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.</returns>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ChatConfiguration">
      <summary>
            Gets a <see cref="T:Microsoft.Extensions.AI.Evaluation.ChatConfiguration" /> that specifies the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> that is used by
            AI-based <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s that are invoked as part of the evaluation of this
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName">
      <summary>
            Gets the name of the execution that this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> represents.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName">
      <summary>
            Gets the name of the iteration that this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> represents.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName">
      <summary>
            Gets the name of the scenario that this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> represents.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunExtensions">
      <summary>
            Extension methods for <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunExtensions.EvaluateAsync(Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun,Microsoft.Extensions.AI.ChatMessage,Microsoft.Extensions.AI.ChatMessage,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)">
      <summary>
            Evaluates the supplied <paramref name="modelResponse" /> and returns an <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" />
            containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.</summary>
      <param name="scenarioRun">The <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> of which this evaluation is a part.</param>
      <param name="userRequest">
            The request that produced the <paramref name="modelResponse" /> that is to be evaluated.</param>
      <param name="modelResponse">The response that is to be evaluated.</param>
      <param name="additionalContext">
            Additional contextual information (beyond that which is available in <paramref name="userRequest" />) that the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s included in this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> may need to accurately evaluate the
            supplied <paramref name="modelResponse" />.</param>
      <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> that can cancel the evaluation operation.</param>
      <returns>An <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunExtensions.EvaluateAsync(Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun,Microsoft.Extensions.AI.ChatMessage,Microsoft.Extensions.AI.ChatResponse,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)">
      <summary>
            Evaluates the supplied <paramref name="modelResponse" /> and returns an <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" />
            containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.</summary>
      <param name="scenarioRun">The <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> of which this evaluation is a part.</param>
      <param name="userRequest">
            The request that produced the <paramref name="modelResponse" /> that is to be evaluated.</param>
      <param name="modelResponse">The response that is to be evaluated.</param>
      <param name="additionalContext">
            Additional contextual information (beyond that which is available in <paramref name="userRequest" />) that the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s included in this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> may need to accurately evaluate the
            supplied <paramref name="modelResponse" />.</param>
      <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> that can cancel the evaluation operation.</param>
      <returns>An <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunExtensions.EvaluateAsync(Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun,Microsoft.Extensions.AI.ChatMessage,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)">
      <summary>
            Evaluates the supplied <paramref name="modelResponse" /> and returns an <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" />
            containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.</summary>
      <param name="scenarioRun">The <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> of which this evaluation is a part.</param>
      <param name="modelResponse">The response that is to be evaluated.</param>
      <param name="additionalContext">
            Additional contextual information that the <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s included in this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />
            may need to accurately evaluate the supplied <paramref name="modelResponse" />.</param>
      <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> that can cancel the evaluation operation.</param>
      <returns>An <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunExtensions.EvaluateAsync(Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun,Microsoft.Extensions.AI.ChatResponse,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)">
      <summary>
            Evaluates the supplied <paramref name="modelResponse" /> and returns an <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" />
            containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.</summary>
      <param name="scenarioRun">The <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> of which this evaluation is a part.</param>
      <param name="modelResponse">The response that is to be evaluated.</param>
      <param name="additionalContext">
            Additional contextual information that the <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s included in this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />
            may need to accurately evaluate the supplied <paramref name="modelResponse" />.</param>
      <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> that can cancel the evaluation operation.</param>
      <returns>An <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunExtensions.EvaluateAsync(Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun,System.String,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)">
      <summary>
            Evaluates the supplied <paramref name="modelResponse" /> and returns an <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" />
            containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.</summary>
      <param name="scenarioRun">The <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> of which this evaluation is a part.</param>
      <param name="modelResponse">The response that is to be evaluated.</param>
      <param name="additionalContext">
            Additional contextual information that the <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s included in this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />
            may need to accurately evaluate the supplied <paramref name="modelResponse" />.</param>
      <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> that can cancel the evaluation operation.</param>
      <returns>An <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunExtensions.EvaluateAsync(Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)">
      <summary>
            Evaluates the supplied <paramref name="modelResponse" /> and returns an <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" />
            containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.</summary>
      <param name="scenarioRun">The <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> of which this evaluation is a part.</param>
      <param name="userRequest">
            The request that produced the <paramref name="modelResponse" /> that is to be evaluated.</param>
      <param name="modelResponse">The response that is to be evaluated.</param>
      <param name="additionalContext">
            Additional contextual information (beyond that which is available in <paramref name="userRequest" />) that the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s included in this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> may need to accurately evaluate the
            supplied <paramref name="modelResponse" />.</param>
      <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> that can cancel the evaluation operation.</param>
      <returns>An <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> containing one or more <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult">
      <summary>
            Represents the results of a single execution of a particular iteration of a particular scenario under evaluation.
            In other words, <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> represents the results of evaluating a <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />
            and includes the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> that is produced when
            <see cref="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.EvaluateAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatResponse,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)" />
            is invoked.</summary>
      <param name="scenarioName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName" />.</param>
      <param name="iterationName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName" />.</param>
      <param name="executionName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" />.</param>
      <param name="creationTime">The time at which this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> was created.</param>
      <param name="messages">
            The conversation history including the request that produced the <paramref name="modelResponse" /> being evaluated.</param>
      <param name="modelResponse">The response being evaluated.</param>
      <param name="evaluationResult">
            The <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> for the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> corresponding to the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> being constructed.</param>
      <param name="chatDetails">
            An optional <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> object that contains details related to all LLM chat conversation
            turns involved in the execution of the the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> corresponding to the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> being constructed. Can be <see langword="null" /> if none of the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s invoked during the execution of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> use an LLM.</param>
      <param name="tags">An optional set of text tags applicable to this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.</param>
      <param name="formatVersion">
            The version of the format used to persist the current <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.#ctor(System.String,System.String,System.String,System.DateTime,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatResponse,Microsoft.Extensions.AI.Evaluation.EvaluationResult,Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> class.</summary>
      <param name="scenarioName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName" />.</param>
      <param name="iterationName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName" />.</param>
      <param name="executionName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" />.</param>
      <param name="creationTime">The time at which this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> was created.</param>
      <param name="messages">
            The conversation history including the request that produced the <paramref name="modelResponse" /> being
            evaluated.</param>
      <param name="modelResponse">The response being evaluated.</param>
      <param name="evaluationResult">
            The <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> for the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> corresponding to the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> being constructed.</param>
      <param name="chatDetails">
            An optional <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> object that contains details related to all LLM chat
            conversation turns involved in the execution of the the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> corresponding to the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> being constructed. Can be <see langword="null" /> if none of the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s invoked during the execution of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> use an LLM.</param>
      <param name="tags">An optional set of text tags applicable to this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.#ctor(System.String,System.String,System.String,System.DateTime,System.Collections.Generic.IList{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatResponse,Microsoft.Extensions.AI.Evaluation.EvaluationResult,Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails,System.Collections.Generic.IList{System.String},System.Nullable{System.Int32})">
      <summary>
            Represents the results of a single execution of a particular iteration of a particular scenario under evaluation.
            In other words, <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> represents the results of evaluating a <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />
            and includes the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> that is produced when
            <see cref="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.EvaluateAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.ChatMessage},Microsoft.Extensions.AI.ChatResponse,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.EvaluationContext},System.Threading.CancellationToken)" />
            is invoked.</summary>
      <param name="scenarioName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName" />.</param>
      <param name="iterationName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName" />.</param>
      <param name="executionName">The <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" />.</param>
      <param name="creationTime">The time at which this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> was created.</param>
      <param name="messages">
            The conversation history including the request that produced the <paramref name="modelResponse" /> being evaluated.</param>
      <param name="modelResponse">The response being evaluated.</param>
      <param name="evaluationResult">
            The <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> for the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> corresponding to the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> being constructed.</param>
      <param name="chatDetails">
            An optional <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> object that contains details related to all LLM chat conversation
            turns involved in the execution of the the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> corresponding to the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> being constructed. Can be <see langword="null" /> if none of the
            <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s invoked during the execution of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> use an LLM.</param>
      <param name="tags">An optional set of text tags applicable to this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.</param>
      <param name="formatVersion">
            The version of the format used to persist the current <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.</param>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ChatDetails">
      <summary>
            Gets or sets an optional <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ChatDetails" /> object that contains details related to all LLM
            chat conversation turns involved in the execution of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> corresponding to this
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.CreationTime">
      <summary>
            Gets or sets the time at which this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> was created.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.EvaluationResult">
      <summary>
            Gets or sets the <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationResult" /> for the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> corresponding to
            this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ExecutionName">
      <summary>
            Gets or sets the <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.FormatVersion">
      <summary>
            Gets or sets the version of the format used to persist the current <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.IterationName">
      <summary>
            Gets or sets the <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.Messages">
      <summary>
            Gets or sets the conversation history including the request that produced the <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ModelResponse" /> being
            evaluated in this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ModelResponse">
      <summary>
            Gets or sets the response being evaluated in this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.ScenarioName">
      <summary>
            Gets or sets the <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult.Tags">
      <summary>
            Gets or sets a set of text tags applicable to this <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.</summary>
    </member>
    <member name="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResultExtensions">
      <summary>
            Extension methods for <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResultExtensions.ContainsDiagnostics(Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult,System.Func{Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic,System.Boolean})">
      <summary>
            Returns <see langword="true" /> if any <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" /> contained in the supplied
            <paramref name="result" /> contains an <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic" /> matching the supplied
            <paramref name="predicate" />; <see langword="false" /> otherwise.</summary>
      <param name="result">The <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" /> that is to be inspected.</param>
      <param name="predicate">
            A predicate that returns <see langword="true" /> if a matching <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic" /> is found;
            <see langword="false" /> otherwise.</param>
      <returns>
        <see langword="true" /> if any <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" /> contained in the supplied
            <paramref name="result" /> contains an <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationDiagnostic" /> matching the supplied
            <paramref name="predicate" />; <see langword="false" /> otherwise.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.DiskBasedReportingConfiguration">
      <summary>
            Contains factory method for creating a <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" /> that persists
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s to disk and also uses the disk to cache AI responses.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.DiskBasedReportingConfiguration.Create(System.String,System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.IEvaluator},Microsoft.Extensions.AI.Evaluation.ChatConfiguration,System.Boolean,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{System.String},System.String,System.Func{Microsoft.Extensions.AI.Evaluation.EvaluationMetric,Microsoft.Extensions.AI.Evaluation.EvaluationMetricInterpretation},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Creates a <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" /> that persists <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s to disk and also
            uses the disk to cache AI responses.</summary>
      <param name="storageRootPath">
            The path to a directory on disk under which the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s and all cached AI responses
            should be stored.</param>
      <param name="evaluators">
            The set of <see cref="T:Microsoft.Extensions.AI.Evaluation.IEvaluator" />s that should be invoked to evaluate AI responses.</param>
      <param name="chatConfiguration">
            A <see cref="T:Microsoft.Extensions.AI.Evaluation.ChatConfiguration" /> that specifies the <see cref="T:Microsoft.Extensions.AI.IChatClient" /> that is used by AI-based
            <paramref name="evaluators" /> included in the returned <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" />. Can be omitted if
            none of the included <paramref name="evaluators" /> are AI-based.</param>
      <param name="enableResponseCaching">
        <see langword="true" /> to enable caching of AI responses; <see langword="false" /> otherwise.</param>
      <param name="timeToLiveForCacheEntries">
            An optional <see cref="T:System.TimeSpan" /> that specifies the maximum amount of time that cached AI responses should
            survive in the cache before they are considered expired and evicted.</param>
      <param name="cachingKeys">
            An optional collection of unique strings that should be hashed when generating the cache keys for cached AI
            responses. See <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration.CachingKeys" /> for more information about this concept.</param>
      <param name="executionName">
            The name of the current execution. See <see cref="P:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName" /> for more information about this
            concept. Uses a fixed default value <c>"Default"</c> if omitted.</param>
      <param name="evaluationMetricInterpreter">
            An optional function that can be used to override <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetricInterpretation" />s for
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" />s returned from evaluations that use the returned
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" />. The supplied function can either return a new
            <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetricInterpretation" /> for any <see cref="T:Microsoft.Extensions.AI.Evaluation.EvaluationMetric" /> that is supplied to it, or
            return <see langword="null" /> if the <see cref="P:Microsoft.Extensions.AI.Evaluation.EvaluationMetric.Interpretation" /> should be left unchanged.</param>
      <param name="tags">
            A optional set of text tags applicable to all <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" />s created using the returned
            <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" />.</param>
      <returns>
            A <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ReportingConfiguration" /> that persists <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s to disk and also uses the
            disk to cache AI responses.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.DiskBasedResponseCacheProvider">
      <summary>
            An <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResponseCacheProvider" /> that returns an <see cref="T:Microsoft.Extensions.Caching.Distributed.IDistributedCache" /> that can cache
            AI responses for a particular <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> under the specified <paramref name="storageRootPath" /> on
            disk.</summary>
      <param name="storageRootPath">
            The path to a directory on disk under which the cached AI responses should be stored.</param>
      <param name="timeToLiveForCacheEntries">
            An optional <see cref="T:System.TimeSpan" /> that specifies the maximum amount of time that cached AI responses should
            survive in the cache before they are considered expired and evicted.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.DiskBasedResponseCacheProvider.#ctor(System.String,System.Nullable{System.TimeSpan})">
      <summary>
            An <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResponseCacheProvider" /> that returns an <see cref="T:Microsoft.Extensions.Caching.Distributed.IDistributedCache" /> that can cache
            AI responses for a particular <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun" /> under the specified <paramref name="storageRootPath" /> on
            disk.</summary>
      <param name="storageRootPath">
            The path to a directory on disk under which the cached AI responses should be stored.</param>
      <param name="timeToLiveForCacheEntries">
            An optional <see cref="T:System.TimeSpan" /> that specifies the maximum amount of time that cached AI responses should
            survive in the cache before they are considered expired and evicted.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.DiskBasedResponseCacheProvider.DeleteExpiredCacheEntriesAsync(System.Threading.CancellationToken)">
      <summary>Deletes expired cache entries for all <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun"></xref>s.</summary>
      <param name="cancellationToken">A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> that can cancel the operation.</param>
      <returns>A <xref data-throw-if-not-resolved="true" uid="System.Threading.Tasks.ValueTask"></xref> that represents the asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.DiskBasedResponseCacheProvider.GetCacheAsync(System.String,System.String,System.Threading.CancellationToken)">
      <summary>Returns an <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.Caching.Distributed.IDistributedCache"></xref> that caches all the AI responses associated with the
<xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun"></xref> with the supplied <code data-dev-comment-type="paramref">scenarioName</code> and
<code data-dev-comment-type="paramref">iterationName</code>.</summary>
      <param name="scenarioName">The <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName"></xref>.</param>
      <param name="iterationName">The <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName"></xref>.</param>
      <param name="cancellationToken">A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> that can cancel the operation.</param>
      <returns>An <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.Caching.Distributed.IDistributedCache"></xref> that caches all the AI responses associated with the
<xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun"></xref> with the supplied <code data-dev-comment-type="paramref">scenarioName</code> and
<code data-dev-comment-type="paramref">iterationName</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.DiskBasedResponseCacheProvider.ResetAsync(System.Threading.CancellationToken)">
      <summary>Deletes cached AI responses for all <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun"></xref>s.</summary>
      <param name="cancellationToken">A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> that can cancel the operation.</param>
      <returns>A <xref data-throw-if-not-resolved="true" uid="System.Threading.Tasks.ValueTask"></xref> that represents the asynchronous operation.</returns>
    </member>
    <member name="T:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.DiskBasedResultStore">
      <summary>
            An <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.IEvaluationResultStore" /> implementation that stores <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s on disk.</summary>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.DiskBasedResultStore.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.DiskBasedResultStore" /> class.</summary>
      <param name="storageRootPath">
            The path to a directory on disk under which the <see cref="T:Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult" />s should be stored.</param>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.DiskBasedResultStore.DeleteResultsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
      <summary>Deletes <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult"></xref>s for <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun"></xref>s filtered by the specified
<code data-dev-comment-type="paramref">executionName</code>, <code data-dev-comment-type="paramref">scenarioName</code>, and <code data-dev-comment-type="paramref">iterationName</code> from
the store.</summary>
      <param name="executionName">The <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName"></xref> by which the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult"></xref>s should be filtered.
If omitted, all <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName"></xref>s are considered.</param>
      <param name="scenarioName">The <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName"></xref> by which the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult"></xref>s should be filtered.
If omitted, all <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName"></xref>s that are in scope based on the specified
<code data-dev-comment-type="paramref">executionName</code> filter are considered.</param>
      <param name="iterationName">The <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName"></xref> by which the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult"></xref>s should be filtered.
If omitted, all <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName"></xref>s that are in scope based on the specified
<code data-dev-comment-type="paramref">executionName</code>, and <code data-dev-comment-type="paramref">scenarioName</code> filters are considered.</param>
      <param name="cancellationToken">A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> that can cancel the operation.</param>
      <returns>A <xref data-throw-if-not-resolved="true" uid="System.Threading.Tasks.ValueTask"></xref> that represents the asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.DiskBasedResultStore.GetIterationNamesAsync(System.String,System.String,System.Threading.CancellationToken)">
      <summary>Gets the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName"></xref>s present in the scenario with the specified
<code data-dev-comment-type="paramref">scenarioName</code> under the execution with the specified <code data-dev-comment-type="paramref">executionName</code>.</summary>
      <param name="executionName">The <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName"></xref>.</param>
      <param name="scenarioName">The <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName"></xref>.</param>
      <param name="cancellationToken">A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> that can cancel the operation.</param>
      <returns>The <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName"></xref>s present in the scenario with the specified
<code data-dev-comment-type="paramref">scenarioName</code> under the execution with the specified <code data-dev-comment-type="paramref">executionName</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.DiskBasedResultStore.GetLatestExecutionNamesAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
      <summary>Gets the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName"></xref>s of the most recent <code data-dev-comment-type="paramref">count</code> executions from
the store (ordered from most recent to least recent).</summary>
      <param name="count">The number of <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName"></xref>s to retrieve.</param>
      <param name="cancellationToken">A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> that can cancel the operation.</param>
      <returns>The <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName"></xref>s of the most recent <code data-dev-comment-type="paramref">count</code> executions from the
store (ordered from most recent to least recent).</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.DiskBasedResultStore.GetScenarioNamesAsync(System.String,System.Threading.CancellationToken)">
      <summary>Gets the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName"></xref>s present in the execution with the specified
<code data-dev-comment-type="paramref">executionName</code>.</summary>
      <param name="executionName">The <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName"></xref>.</param>
      <param name="cancellationToken">A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> that can cancel the operation.</param>
      <returns>The <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName"></xref>s present in the execution with the specified
<code data-dev-comment-type="paramref">executionName</code>.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.DiskBasedResultStore.ReadResultsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
      <summary>Returns <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult"></xref>s for <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun"></xref>s filtered by the specified
<code data-dev-comment-type="paramref">executionName</code>, <code data-dev-comment-type="paramref">scenarioName</code>, and <code data-dev-comment-type="paramref">iterationName</code> from
the store.</summary>
      <param name="executionName">The <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName"></xref> by which the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult"></xref>s should be filtered.
If omitted, all <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ExecutionName"></xref>s are considered.</param>
      <param name="scenarioName">The <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName"></xref> by which the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult"></xref>s should be filtered.
If omitted, all <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.ScenarioName"></xref>s that are in scope based on the specified
<code data-dev-comment-type="paramref">executionName</code> filter are considered.</param>
      <param name="iterationName">The <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName"></xref> by which the <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult"></xref>s should be filtered.
If omitted, all <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRun.IterationName"></xref>s that are in scope based on the specified
<code data-dev-comment-type="paramref">executionName</code>, and <code data-dev-comment-type="paramref">scenarioName</code> filters are considered.</param>
      <param name="cancellationToken">A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> that can cancel the operation.</param>
      <returns>The matching <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult"></xref>s.</returns>
    </member>
    <member name="M:Microsoft.Extensions.AI.Evaluation.Reporting.Storage.DiskBasedResultStore.WriteResultsAsync(System.Collections.Generic.IEnumerable{Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult},System.Threading.CancellationToken)">
      <summary>Writes the supplied <code data-dev-comment-type="paramref">results</code>s to the store.</summary>
      <param name="results">The <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.AI.Evaluation.Reporting.ScenarioRunResult"></xref>s to be written.</param>
      <param name="cancellationToken">A <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref> that can cancel the operation.</param>
      <returns>A <xref data-throw-if-not-resolved="true" uid="System.Threading.Tasks.ValueTask"></xref> that represents the asynchronous operation.</returns>
    </member>
  </members>
</doc>