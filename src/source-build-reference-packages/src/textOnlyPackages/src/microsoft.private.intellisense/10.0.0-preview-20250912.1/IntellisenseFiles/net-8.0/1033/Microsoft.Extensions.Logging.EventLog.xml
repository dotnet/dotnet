<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.Logging.EventLog</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider">
      <summary>
            The provider for the <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogLogger" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.#ctor(Microsoft.Extensions.Logging.EventLog.EventLogSettings)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider" /> class.</summary>
      <param name="settings">The <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogSettings" />.</param>
    </member>
    <member name="M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Logging.EventLog.EventLogSettings})">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider" /> class.</summary>
      <param name="options">The <see cref="T:Microsoft.Extensions.Options.IOptions`1" />.</param>
    </member>
    <member name="M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.CreateLogger(System.String)">
      <summary>Creates a new <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.Logging.ILogger" /> instance.</summary>
      <param name="name" />
      <returns>The instance of <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.Logging.ILogger"></xref> that was created.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider.SetScopeProvider(Microsoft.Extensions.Logging.IExternalScopeProvider)">
      <summary>Sets external scope information source for logger provider.</summary>
      <param name="scopeProvider">The provider of scope data.</param>
    </member>
    <member name="T:Microsoft.Extensions.Logging.EventLog.EventLogSettings">
      <summary>
            Settings for <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogLogger" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.EventLog.EventLogSettings.#ctor" />
    <member name="P:Microsoft.Extensions.Logging.EventLog.EventLogSettings.Filter">
      <summary>
            Gets or sets the function used to filter events based on the log level.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.EventLog.EventLogSettings.LogName">
      <summary>
            Gets or sets the name of the event log. If <see langword="null" /> or not specified, "Application" is the default.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.EventLog.EventLogSettings.MachineName">
      <summary>
            Gets or sets the name of the machine with the event log. If <see langword="null" /> or not specified, local machine is the default.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.EventLog.EventLogSettings.SourceName">
      <summary>
            Gets or sets the name of the event log source. If <see langword="null" /> or not specified, ".NET Runtime" is the default.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions">
      <summary>
            Extension methods for the <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggingBuilder,Microsoft.Extensions.Logging.EventLog.EventLogSettings)">
      <summary>
            Adds an event logger. Use <paramref name="settings" /> to enable logging for specific log levels.</summary>
      <param name="builder">The extension method argument.</param>
      <param name="settings">The <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogSettings" />.</param>
      <returns>The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.EventLog.EventLogSettings})">
      <summary>
            Adds an event logger. Use <paramref name="configure" /> to enable logging for specific log levels.</summary>
      <param name="builder">The extension method argument.</param>
      <param name="configure">A delegate to configure the <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogSettings" />.</param>
      <returns>The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggingBuilder)">
      <summary>
            Adds an event logger named 'EventLog' to the factory.</summary>
      <param name="builder">The extension method argument.</param>
      <returns>The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</returns>
    </member>
  </members>
</doc>