<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.Http</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions">
      <summary>
            Extension methods for configuring an <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddAsKeyed(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
      <summary>
            Registers a named <see cref="T:System.Net.Http.HttpClient" /> and the related handler pipeline <see cref="T:System.Net.Http.HttpMessageHandler" /> as keyed
            services with the client's name as the key, and a lifetime provided in the <paramref name="lifetime" /> parameter.
            By default, the lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="lifetime">Lifetime of the keyed services registered.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddDefaultLogger(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)">
      <summary>
            Adds back the default logging for a named <see cref="T:System.Net.Http.HttpClient" />, if it was removed previously by calling <see cref="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.RemoveAllLoggers(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddHttpMessageHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.IServiceProvider,System.Net.Http.DelegatingHandler})">
      <summary>
            Adds a delegate that will be used to create an additional message handler for a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="configureHandler">A delegate that is used to create a <see cref="T:System.Net.Http.DelegatingHandler" />.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddHttpMessageHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.Net.Http.DelegatingHandler})">
      <summary>
            Adds a delegate that will be used to create an additional message handler for a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="configureHandler">A delegate that is used to create a <see cref="T:System.Net.Http.DelegatingHandler" />.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddHttpMessageHandler``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)">
      <summary>
            Adds an additional message handler from the dependency injection container for a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <typeparam name="THandler">
            The type of the <see cref="T:System.Net.Http.DelegatingHandler" />. The handler type must be registered as a transient service.</typeparam>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddLogger(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.IServiceProvider,Microsoft.Extensions.Http.Logging.IHttpClientLogger},System.Boolean)">
      <summary>
            Adds a delegate that will be used to create an additional logger for a named <see cref="T:System.Net.Http.HttpClient" />. The custom logger would be invoked
            from a dedicated logging DelegatingHandler on every request of the corresponding named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="httpClientLoggerFactory">A delegate that is used to create a custom logger. The logger should implement
            <see cref="T:Microsoft.Extensions.Http.Logging.IHttpClientLogger" /> or <see cref="T:Microsoft.Extensions.Http.Logging.IHttpClientAsyncLogger" />.</param>
      <param name="wrapHandlersPipeline">Whether the logging handler with the custom logger would be added to the top
            or to the bottom of the additional handlers chains.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddLogger``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Boolean)">
      <summary>
            Adds a delegate that will be used to create an additional logger for a named <see cref="T:System.Net.Http.HttpClient" />. The custom logger would be invoked
            from a dedicated logging DelegatingHandler on every request of the corresponding named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="wrapHandlersPipeline">Whether the logging handler with the custom logger would be added to the top
            or to the bottom of the additional handlers chains.</param>
      <typeparam name="TLogger">
            The service type of the custom logger as it was registered in DI. The logger should implement <see cref="T:Microsoft.Extensions.Http.Logging.IHttpClientLogger" />
            or <see cref="T:Microsoft.Extensions.Http.Logging.IHttpClientAsyncLogger" />.</typeparam>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.Net.Http.HttpClient,``0})">
      <summary>
            Configures a binding between the <typeparamref name="TClient" /> type and the named <see cref="T:System.Net.Http.HttpClient" />
            associated with the <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="factory">A factory function that will be used to construct the typed client.</param>
      <typeparam name="TClient">
            The type of the typed client. They type specified will be registered in the service collection as
            a transient service.</typeparam>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.Net.Http.HttpClient,System.IServiceProvider,``0})">
      <summary>
            Configures a binding between the <typeparamref name="TClient" /> type and the named <see cref="T:System.Net.Http.HttpClient" />
            associated with the <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="factory">A factory function that will be used to construct the typed client.</param>
      <typeparam name="TClient">
            The type of the typed client. They type specified will be registered in the service collection as
            a transient service.</typeparam>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)">
      <summary>
            Configures a binding between the <typeparamref name="TClient" /> type and the named <see cref="T:System.Net.Http.HttpClient" />
            associated with the <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <typeparam name="TClient">
            The type of the typed client. The type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</typeparam>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``2(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)">
      <summary>
            Configures a binding between the <typeparamref name="TClient" /> type and the named <see cref="T:System.Net.Http.HttpClient" />
            associated with the <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />. The created instances will be of type
            <typeparamref name="TImplementation" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <typeparam name="TClient">
            The declared type of the typed client. They type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</typeparam>
      <typeparam name="TImplementation">
            The implementation type of the typed client. The type specified by will be instantiated by the
            <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />.</typeparam>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigureAdditionalHttpMessageHandlers(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{System.Collections.Generic.IList{System.Net.Http.DelegatingHandler},System.IServiceProvider})">
      <summary>
            Adds a delegate that will be used to configure additional message handlers using <see cref="T:Microsoft.Extensions.Http.HttpMessageHandlerBuilder" />
            for a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="configureAdditionalHandlers">A delegate that is used to configure a collection of <see cref="T:System.Net.Http.DelegatingHandler" />s.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigureHttpClient(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{System.IServiceProvider,System.Net.Http.HttpClient})">
      <summary>
            Adds a delegate that will be used to configure a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigureHttpClient(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{System.Net.Http.HttpClient})">
      <summary>
            Adds a delegate that will be used to configure a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigureHttpMessageHandlerBuilder(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{Microsoft.Extensions.Http.HttpMessageHandlerBuilder})">
      <summary>
            Adds a delegate that will be used to configure message handlers using <see cref="T:Microsoft.Extensions.Http.HttpMessageHandlerBuilder" />
            for a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="configureBuilder">A delegate that is used to configure an <see cref="T:Microsoft.Extensions.Http.HttpMessageHandlerBuilder" />.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigurePrimaryHttpMessageHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{System.Net.Http.HttpMessageHandler,System.IServiceProvider})">
      <summary>
            Adds a delegate that will be used to configure the primary <see cref="T:System.Net.Http.HttpMessageHandler" /> for a
            named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="configureHandler">A delegate that is used to configure a previously set or default primary <see cref="T:System.Net.Http.HttpMessageHandler" />.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigurePrimaryHttpMessageHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.IServiceProvider,System.Net.Http.HttpMessageHandler})">
      <summary>
            Adds a delegate that will be used to configure the primary <see cref="T:System.Net.Http.HttpMessageHandler" /> for a
            named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="configureHandler">A delegate that is used to create an <see cref="T:System.Net.Http.HttpMessageHandler" />.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigurePrimaryHttpMessageHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.Net.Http.HttpMessageHandler})">
      <summary>
            Adds a delegate that will be used to configure the primary <see cref="T:System.Net.Http.HttpMessageHandler" /> for a
            named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="configureHandler">A delegate that is used to create an <see cref="T:System.Net.Http.HttpMessageHandler" />.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigurePrimaryHttpMessageHandler``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)">
      <summary>
            Configures the primary <see cref="T:System.Net.Http.HttpMessageHandler" /> from the dependency injection container
            for a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <typeparam name="THandler">
            The type of the <see cref="T:System.Net.Http.DelegatingHandler" />. The handler type must be registered as a transient service.</typeparam>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.RedactLoggedHeaders(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Sets the collection of HTTP headers names for which values should be redacted before logging.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="redactedLoggedHeaderNames">The collection of HTTP headers names for which values should be redacted before logging.</param>
      <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.RedactLoggedHeaders(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.String,System.Boolean})">
      <summary>
            Sets the <see cref="T:System.Func`2" /> which determines whether to redact the HTTP header value given its corresponding header name before logging.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="shouldRedactHeaderValue">The <see cref="T:System.Func`2" /> which determines whether to redact the HTTP header value given its corresponding header name before logging.</param>
      <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.RemoveAllLoggers(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)">
      <summary>
            Removes all previously added loggers for a named <see cref="T:System.Net.Http.HttpClient" />, including default ones.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.RemoveAsKeyed(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)">
      <summary>
            Removes the keyed registrations for the named <see cref="T:System.Net.Http.HttpClient" /> and <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.SetHandlerLifetime(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.TimeSpan)">
      <summary>
            Sets the length of time that a <see cref="T:System.Net.Http.HttpMessageHandler" /> instance can be reused. Each named
            client can have its own configured handler lifetime value. The default value is two minutes. Set the lifetime to
            <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> to disable handler expiry.</summary>
      <param name="builder" />
      <param name="handlerLifetime" />
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.UseSocketsHttpHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{Microsoft.Extensions.DependencyInjection.ISocketsHttpHandlerBuilder})">
      <summary>
            Adds or updates <see cref="T:System.Net.Http.SocketsHttpHandler" /> as a primary handler for a named <see cref="T:System.Net.Http.HttpClient" />
            and configures it using <see cref="T:Microsoft.Extensions.DependencyInjection.ISocketsHttpHandlerBuilder" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="configureBuilder">Delegate that is used to set up the configuration of the primary <see cref="T:System.Net.Http.SocketsHttpHandler" />
            on <see cref="T:Microsoft.Extensions.DependencyInjection.ISocketsHttpHandlerBuilder" /> that will later be applied on the primary handler during its creation.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.UseSocketsHttpHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{System.Net.Http.SocketsHttpHandler,System.IServiceProvider})">
      <summary>
            Adds or updates <see cref="T:System.Net.Http.SocketsHttpHandler" /> as a primary handler for a named <see cref="T:System.Net.Http.HttpClient" />. If provided,
            also adds a delegate that will be used to configure the primary <see cref="T:System.Net.Http.SocketsHttpHandler" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <param name="configureHandler">Optional delegate that is used to configure the primary <see cref="T:System.Net.Http.SocketsHttpHandler" />.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="T:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions">
      <summary>
            Extension methods to configure an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> for <see cref="T:System.Net.Http.IHttpClientFactory" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{System.IServiceProvider,System.Net.Http.HttpClient})">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
      <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{System.Net.Http.HttpClient})">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
      <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{System.IServiceProvider,System.Net.Http.HttpClient})">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />. The client name will
            be set to the type name of <typeparamref name="TClient" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
      <typeparam name="TClient">
            The type of the typed client. The type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</typeparam>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{System.Net.Http.HttpClient})">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />. The client name will
            be set to the type name of <typeparamref name="TClient" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
      <typeparam name="TClient">
            The type of the typed client. The type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</typeparam>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{System.IServiceProvider,System.Net.Http.HttpClient})">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
      <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
      <typeparam name="TClient">
            The type of the typed client. The type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</typeparam>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{System.Net.Http.HttpClient})">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
      <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
      <typeparam name="TClient">
            The type of the typed client. The type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</typeparam>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
      <typeparam name="TClient">
            The type of the typed client. The type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</typeparam>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />. The client name
            will be set to the type name of <typeparamref name="TClient" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <typeparam name="TClient">
            The type of the typed client. The type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</typeparam>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{System.IServiceProvider,System.Net.Http.HttpClient})">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />. The client name will
            be set to the type name of <typeparamref name="TClient" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
      <typeparam name="TClient">
            The type of the typed client. The type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</typeparam>
      <typeparam name="TImplementation">
            The implementation type of the typed client. The type specified will be instantiated by the
            <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />.</typeparam>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{System.Net.Http.HttpClient})">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />. The client name will
            be set to the type name of <typeparamref name="TClient" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
      <typeparam name="TClient">
            The type of the typed client. The type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</typeparam>
      <typeparam name="TImplementation">
            The implementation type of the typed client. The type specified will be instantiated by the
            <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />.</typeparam>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.Net.Http.HttpClient,``1})">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <param name="factory">A delegate that is used to create an instance of <typeparamref name="TClient" />.</param>
      <typeparam name="TClient">
            The type of the typed client. The type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</typeparam>
      <typeparam name="TImplementation">
            The implementation type of the typed client.</typeparam>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.Net.Http.HttpClient,System.IServiceProvider,``1})">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <param name="factory">A delegate that is used to create an instance of <typeparamref name="TClient" />.</param>
      <typeparam name="TClient">
            The type of the typed client. The type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</typeparam>
      <typeparam name="TImplementation">
            The implementation type of the typed client.</typeparam>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{System.IServiceProvider,System.Net.Http.HttpClient})">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
      <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
      <typeparam name="TClient">
            The type of the typed client. The type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</typeparam>
      <typeparam name="TImplementation">
            The implementation type of the typed client. The type specified will be instantiated by the
            <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />.</typeparam>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{System.Net.Http.HttpClient})">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
      <param name="configureClient">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</param>
      <typeparam name="TClient">
            The type of the typed client. The type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</typeparam>
      <typeparam name="TImplementation">
            The implementation type of the typed client. The type specified will be instantiated by the
            <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />.</typeparam>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Func{System.Net.Http.HttpClient,``1})">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
      <param name="factory">A delegate that is used to create an instance of <typeparamref name="TClient" />.</param>
      <typeparam name="TClient">
            The type of the typed client. The type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</typeparam>
      <typeparam name="TImplementation">
            The implementation type of the typed client.</typeparam>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Func{System.Net.Http.HttpClient,System.IServiceProvider,``1})">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
      <param name="factory">A delegate that is used to create an instance of <typeparamref name="TClient" />.</param>
      <typeparam name="TClient">
            The type of the typed client. The type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</typeparam>
      <typeparam name="TImplementation">
            The implementation type of the typed client.</typeparam>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <param name="name">The logical name of the <see cref="T:System.Net.Http.HttpClient" /> to configure.</param>
      <typeparam name="TClient">
            The type of the typed client. The type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</typeparam>
      <typeparam name="TImplementation">
            The implementation type of the typed client. The type specified will be instantiated by the
            <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />.</typeparam>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <summary>
            Adds the <see cref="T:System.Net.Http.IHttpClientFactory" /> and related services to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> and configures
            a binding between the <typeparamref name="TClient" /> type and a named <see cref="T:System.Net.Http.HttpClient" />. The client name will
            be set to the type name of <typeparamref name="TClient" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <typeparam name="TClient">
            The type of the typed client. The type specified will be registered in the service collection as
            a transient service. See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</typeparam>
      <typeparam name="TImplementation">
            The implementation type of the typed client. The type specified will be instantiated by the
            <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />.</typeparam>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.ConfigureHttpClientDefaults(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IHttpClientBuilder})">
      <summary>
            Adds a delegate that will be used to configure all <see cref="T:System.Net.Http.HttpClient" /> instances.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <param name="configure">A delegate that is used to configure an <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
      <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder">
      <summary>
            A builder for configuring named <see cref="T:System.Net.Http.HttpClient" /> instances returned by <see cref="T:System.Net.Http.IHttpClientFactory" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder.Name">
      <summary>
            Gets the name of the client configured by this builder.</summary>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder.Services">
      <summary>
            Gets the application service collection.</summary>
    </member>
    <member name="T:Microsoft.Extensions.DependencyInjection.ISocketsHttpHandlerBuilder">
      <summary>
            Configures <see cref="T:System.Net.Http.SocketsHttpHandler" /> for a named
            <see cref="T:System.Net.Http.HttpClient" /> instances returned by <see cref="T:System.Net.Http.IHttpClientFactory" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.ISocketsHttpHandlerBuilder.Name">
      <summary>
            Gets the name of the client for a handler configured by this builder.</summary>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.ISocketsHttpHandlerBuilder.Services">
      <summary>
            Gets the application service collection.</summary>
    </member>
    <member name="T:Microsoft.Extensions.DependencyInjection.SocketsHttpHandlerBuilderExtensions">
      <summary>
            Extension methods to configure <see cref="T:System.Net.Http.SocketsHttpHandler" /> for a named
            <see cref="T:System.Net.Http.HttpClient" /> instances returned by <see cref="T:System.Net.Http.IHttpClientFactory" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.SocketsHttpHandlerBuilderExtensions.Configure(Microsoft.Extensions.DependencyInjection.ISocketsHttpHandlerBuilder,Microsoft.Extensions.Configuration.IConfiguration)">
      <summary>
            Uses <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> to configure the primary <see cref="T:System.Net.Http.SocketsHttpHandler" /> for a
            named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.ISocketsHttpHandlerBuilder" />.</param>
      <param name="configuration">Configuration containing properties of <see cref="T:System.Net.Http.SocketsHttpHandler" />.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.ISocketsHttpHandlerBuilder" /> that can be used to configure the handler.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.SocketsHttpHandlerBuilderExtensions.Configure(Microsoft.Extensions.DependencyInjection.ISocketsHttpHandlerBuilder,System.Action{System.Net.Http.SocketsHttpHandler,System.IServiceProvider})">
      <summary>
            Adds a delegate that will be used to configure the primary <see cref="T:System.Net.Http.SocketsHttpHandler" /> for a
            named <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.ISocketsHttpHandlerBuilder" />.</param>
      <param name="configure">A delegate that is used to modify a <see cref="T:System.Net.Http.SocketsHttpHandler" />.</param>
      <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.ISocketsHttpHandlerBuilder" /> that can be used to configure the handler.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Http.HttpClientFactoryOptions">
      <summary>
            Provides options for configuring the default <see cref="T:System.Net.Http.IHttpClientFactory" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.HttpClientFactoryOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Http.HttpClientFactoryOptions" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.HttpClientFactoryOptions.HandlerLifetime">
      <summary>
            Gets or sets the length of time that a <see cref="T:System.Net.Http.HttpMessageHandler" /> instance can be reused. Each named
            client can have its own configured handler lifetime value. The default value of this property is two minutes.
            Set the lifetime to <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> to disable handler expiry.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.HttpClientFactoryOptions.HttpClientActions">
      <summary>
            Gets a list of operations used to configure an <see cref="T:System.Net.Http.HttpClient" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.HttpClientFactoryOptions.HttpMessageHandlerBuilderActions">
      <summary>
            Gets a list of operations used to configure an <see cref="T:Microsoft.Extensions.Http.HttpMessageHandlerBuilder" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.HttpClientFactoryOptions.ShouldRedactHeaderValue">
      <summary>
            Gets or sets the <see cref="T:System.Func`2" /> that determines whether to redact the HTTP header value before logging.</summary>
      <returns>A delegate that takes a string that represents an HTTP header value and returns a boolean that indicates whether the value should be redacted or not.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Http.HttpClientFactoryOptions.SuppressHandlerScope">
      <summary>
        <para>
            Gets or sets a value that determines whether the <see cref="T:System.Net.Http.IHttpClientFactory" /> will
            create a dependency injection scope when building an <see cref="T:System.Net.Http.HttpMessageHandler" />.
            If <c>false</c> (default), a scope will be created, otherwise a scope will not be created.</para>
        <para>
            This option is provided for compatibility with existing applications. It is recommended
            to use the default setting for new applications.</para>
      </summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.HttpMessageHandlerBuilder">
      <summary>
            A builder abstraction for configuring <see cref="T:System.Net.Http.HttpMessageHandler" /> instances.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.HttpMessageHandlerBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Http.HttpMessageHandlerBuilder" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.HttpMessageHandlerBuilder.Build">
      <summary>
            Creates an <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
      <returns>
            An <see cref="T:System.Net.Http.HttpMessageHandler" /> built from the <see cref="P:Microsoft.Extensions.Http.HttpMessageHandlerBuilder.PrimaryHandler" /> and
            <see cref="P:Microsoft.Extensions.Http.HttpMessageHandlerBuilder.AdditionalHandlers" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.HttpMessageHandlerBuilder.CreateHandlerPipeline(System.Net.Http.HttpMessageHandler,System.Collections.Generic.IEnumerable{System.Net.Http.DelegatingHandler})">
      <summary>
            Constructs an instance of <see cref="T:System.Net.Http.HttpMessageHandler" /> by chaining <paramref name="additionalHandlers" /> one after another with <paramref name="primaryHandler" /> in the
            end of the chain. The resulting pipeline is used by <see cref="T:System.Net.Http.IHttpClientFactory" /> infrastructure to create <see cref="T:System.Net.Http.HttpClient" /> instances with customized message
            handlers. The resulting pipeline can also be accessed by using <see cref="T:System.Net.Http.IHttpMessageHandlerFactory" /> instead of <see cref="T:System.Net.Http.IHttpClientFactory" />.</summary>
      <param name="primaryHandler">An instance of <see cref="T:System.Net.Http.HttpMessageHandler" /> to operate at the bottom of the handler chain and actually handle the HTTP transport operations.</param>
      <param name="additionalHandlers">An ordered list of <see cref="T:System.Net.Http.DelegatingHandler" /> instances to be invoked as part
            of sending an <see cref="T:System.Net.Http.HttpRequestMessage" /> and receiving an <see cref="T:System.Net.Http.HttpResponseMessage" />.
            The handlers are invoked in a top-down fashion. That is, the first entry is invoked first for
            an outbound request message but last for an inbound response message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="primaryHandler" /> or <paramref name="additionalHandlers" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="additionalHandlers" /> contains a <see langword="null" /> entry.
            -or-
            The <c>DelegatingHandler.InnerHandler</c> property must be <see langword="null" />. <c>DelegatingHandler</c> instances provided to <c>HttpMessageHandlerBuilder</c> must not be reused or cached.</exception>
      <returns>The HTTP message handler chain.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Http.HttpMessageHandlerBuilder.AdditionalHandlers">
      <summary>
            Gets a list of additional <see cref="T:System.Net.Http.DelegatingHandler" /> instances used to configure an
            <see cref="T:System.Net.Http.HttpClient" /> pipeline.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.HttpMessageHandlerBuilder.Name">
      <summary>
            Gets or sets the name of the <see cref="T:System.Net.Http.HttpClient" /> being created.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.HttpMessageHandlerBuilder.PrimaryHandler">
      <summary>
            Gets or sets the primary <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Http.HttpMessageHandlerBuilder.Services">
      <summary>
            Gets an <see cref="T:System.IServiceProvider" /> which can be used to resolve services
            from the dependency injection container.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Http.IHttpMessageHandlerBuilderFilter">
      <summary>
            Used by the <see cref="T:Microsoft.Extensions.Http.DefaultHttpClientFactory" /> to apply additional initialization to the configure the
            <see cref="T:Microsoft.Extensions.Http.HttpMessageHandlerBuilder" /> immediately before <see cref="M:Microsoft.Extensions.Http.HttpMessageHandlerBuilder.Build" />
            is called.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.IHttpMessageHandlerBuilderFilter.Configure(System.Action{Microsoft.Extensions.Http.HttpMessageHandlerBuilder})">
      <summary>
            Applies additional initialization to the <see cref="T:Microsoft.Extensions.Http.HttpMessageHandlerBuilder" /></summary>
      <param name="next">A delegate that will run the next <see cref="T:Microsoft.Extensions.Http.IHttpMessageHandlerBuilderFilter" />.</param>
      <returns>The configured <see cref="T:Microsoft.Extensions.Http.HttpMessageHandlerBuilder" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1">
      <summary>
             A factory abstraction for a component that can create typed client instances with custom
             configuration for a given logical name.</summary>
      <typeparam name="TClient">The type of typed client to create.</typeparam>
    </member>
    <member name="M:Microsoft.Extensions.Http.ITypedHttpClientFactory`1.CreateClient(System.Net.Http.HttpClient)">
      <summary>
            Creates a typed client given an associated <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <param name="httpClient">
            An <see cref="T:System.Net.Http.HttpClient" /> created by the <see cref="T:System.Net.Http.IHttpClientFactory" /> for the named client
            associated with <typeparamref name="TClient" />.</param>
      <returns>An instance of <typeparamref name="TClient" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Http.Logging.IHttpClientAsyncLogger">
      <summary>
            An abstraction for asyncronous custom HTTP request logging for a named <see cref="T:System.Net.Http.HttpClient" /> instances returned by <see cref="T:System.Net.Http.IHttpClientFactory" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Logging.IHttpClientAsyncLogger.LogRequestFailedAsync(System.Object,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage,System.Exception,System.TimeSpan,System.Threading.CancellationToken)">
      <summary>
            Logs the exception happened while sending an HTTP request.</summary>
      <param name="context">The context object that was previously returned by <see cref="M:Microsoft.Extensions.Http.Logging.IHttpClientAsyncLogger.LogRequestStartAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</param>
      <param name="request">The HTTP request message that was sent.</param>
      <param name="response">If available, the HTTP response message that was received, and <see langword="null" /> otherwise.</param>
      <param name="exception">Exception that happened during processing the HTTP request.</param>
      <param name="elapsed">Time elapsed since calling <see cref="M:Microsoft.Extensions.Http.Logging.IHttpClientAsyncLogger.LogRequestStartAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</param>
      <param name="cancellationToken">The cancellation token to cancel operation.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>The task object representing the asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Logging.IHttpClientAsyncLogger.LogRequestStartAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>
            Logs before sending an HTTP request.</summary>
      <param name="request">The HTTP request message that will be sent.</param>
      <param name="cancellationToken">The cancellation token to cancel operation.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>The task object representing the asynchronous operation. The result of the operation is a context object that will
            be passed to a corresponding <see cref="M:Microsoft.Extensions.Http.Logging.IHttpClientAsyncLogger.LogRequestStopAsync(System.Object,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage,System.TimeSpan,System.Threading.CancellationToken)" /> or <see cref="M:Microsoft.Extensions.Http.Logging.IHttpClientAsyncLogger.LogRequestFailedAsync(System.Object,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage,System.Exception,System.TimeSpan,System.Threading.CancellationToken)" />. Can be <see langword="null" />
            if no context object is needed by the implementation.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Logging.IHttpClientAsyncLogger.LogRequestStopAsync(System.Object,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage,System.TimeSpan,System.Threading.CancellationToken)">
      <summary>
            Logs after receiving an HTTP response.</summary>
      <param name="context">The context object that was previously returned by <see cref="M:Microsoft.Extensions.Http.Logging.IHttpClientAsyncLogger.LogRequestStartAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</param>
      <param name="request">The HTTP request message that was sent.</param>
      <param name="response">The HTTP response message that was received.</param>
      <param name="elapsed">Time elapsed since calling <see cref="M:Microsoft.Extensions.Http.Logging.IHttpClientAsyncLogger.LogRequestStartAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</param>
      <param name="cancellationToken">The cancellation token to cancel operation.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>The task object representing the asynchronous operation.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Http.Logging.IHttpClientLogger">
      <summary>
            An abstraction for custom HTTP request logging for a named <see cref="T:System.Net.Http.HttpClient" /> instances returned by <see cref="T:System.Net.Http.IHttpClientFactory" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Logging.IHttpClientLogger.LogRequestFailed(System.Object,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage,System.Exception,System.TimeSpan)">
      <summary>
            Logs the exception happened while sending an HTTP request.</summary>
      <param name="context">The context object that was previously returned by <see cref="M:Microsoft.Extensions.Http.Logging.IHttpClientLogger.LogRequestStart(System.Net.Http.HttpRequestMessage)" />.</param>
      <param name="request">The HTTP request message that was sent.</param>
      <param name="response">If available, the HTTP response message that was received, and <see langword="null" /> otherwise.</param>
      <param name="exception">Exception that happened during processing the HTTP request.</param>
      <param name="elapsed">Time elapsed since calling <see cref="M:Microsoft.Extensions.Http.Logging.IHttpClientLogger.LogRequestStart(System.Net.Http.HttpRequestMessage)" />.</param>
    </member>
    <member name="M:Microsoft.Extensions.Http.Logging.IHttpClientLogger.LogRequestStart(System.Net.Http.HttpRequestMessage)">
      <summary>
            Logs before sending an HTTP request.</summary>
      <param name="request">The HTTP request message that will be sent.</param>
      <returns>A context object that will be passed to a corresponding <see cref="M:Microsoft.Extensions.Http.Logging.IHttpClientLogger.LogRequestStop(System.Object,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage,System.TimeSpan)" /> or <see cref="M:Microsoft.Extensions.Http.Logging.IHttpClientLogger.LogRequestFailed(System.Object,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage,System.Exception,System.TimeSpan)" />. Can be <see langword="null" />
            if no context object is needed by the implementation.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Logging.IHttpClientLogger.LogRequestStop(System.Object,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage,System.TimeSpan)">
      <summary>
            Logs after receiving an HTTP response.</summary>
      <param name="context">The context object that was previously returned by <see cref="M:Microsoft.Extensions.Http.Logging.IHttpClientLogger.LogRequestStart(System.Net.Http.HttpRequestMessage)" />.</param>
      <param name="request">The HTTP request message that was sent.</param>
      <param name="response">The HTTP response message that was received.</param>
      <param name="elapsed">Time elapsed since calling <see cref="M:Microsoft.Extensions.Http.Logging.IHttpClientLogger.LogRequestStart(System.Net.Http.HttpRequestMessage)" />.</param>
    </member>
    <member name="T:Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler">
      <summary>
            Handles logging of the lifecycle for an HTTP request.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Http.HttpClientFactoryOptions)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler" /> class with a specified logger and options.</summary>
      <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to log to.</param>
      <param name="options">The <see cref="T:Microsoft.Extensions.Http.HttpClientFactoryOptions" /> used to configure the <see cref="T:Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler" /> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="logger" /> or <paramref name="options" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.#ctor(Microsoft.Extensions.Logging.ILogger)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler" /> class with a specified logger.</summary>
      <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to log to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="logger" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Sends an HTTP request to the inner handler to send to the server.</summary>
      <param name="request">The HTTP request message to send to the server.</param>
      <param name="cancellationToken">A cancellation token to cancel operation.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>An HTTP response message.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.</summary>
      <param name="request">The HTTP request message to send to the server.</param>
      <param name="cancellationToken">A cancellation token to cancel operation.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>The task object representing the asynchronous operation.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler">
      <summary>
            Handles logging of the lifecycle for an HTTP request within a log scope.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Http.HttpClientFactoryOptions)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler" /> class with a specified logger and options.</summary>
      <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to log to.</param>
      <param name="options">The <see cref="T:Microsoft.Extensions.Http.HttpClientFactoryOptions" /> used to configure the <see cref="T:Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler" /> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="logger" /> or <paramref name="options" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.#ctor(Microsoft.Extensions.Logging.ILogger)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler" /> class with a specified logger.</summary>
      <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to log to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="logger" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Sends an HTTP request to the inner handler to send to the server.</summary>
      <param name="request">The HTTP request message to send to the server.</param>
      <param name="cancellationToken">A cancellation token to cancel operation.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>An HTTP response message.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.</summary>
      <param name="request">The HTTP request message to send to the server.</param>
      <param name="cancellationToken">A cancellation token to cancel operation.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>The task object representing the asynchronous operation.</returns>
    </member>
    <member name="T:System.Net.Http.HttpClientFactoryExtensions">
      <summary>
            Extensions methods for <see cref="T:System.Net.Http.IHttpClientFactory" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientFactoryExtensions.CreateClient(System.Net.Http.IHttpClientFactory)">
      <summary>
            Creates a new <see cref="T:System.Net.Http.HttpClient" /> using the default configuration.</summary>
      <param name="factory">The <see cref="T:System.Net.Http.IHttpClientFactory" />.</param>
      <returns>An <see cref="T:System.Net.Http.HttpClient" /> configured using the default configuration.</returns>
    </member>
    <member name="T:System.Net.Http.HttpMessageHandlerFactoryExtensions">
      <summary>
            Extensions methods for <see cref="T:System.Net.Http.IHttpMessageHandlerFactory" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandlerFactoryExtensions.CreateHandler(System.Net.Http.IHttpMessageHandlerFactory)">
      <summary>
            Creates a new <see cref="T:System.Net.Http.HttpMessageHandler" /> using the default configuration.</summary>
      <param name="factory">The <see cref="T:System.Net.Http.IHttpMessageHandlerFactory" />.</param>
      <returns>An <see cref="T:System.Net.Http.HttpMessageHandler" /> configured using the default configuration.</returns>
    </member>
    <member name="T:System.Net.Http.IHttpClientFactory">
      <summary>
            A factory abstraction for a component that can create <see cref="T:System.Net.Http.HttpClient" /> instances with custom
            configuration for a given logical name.</summary>
    </member>
    <member name="M:System.Net.Http.IHttpClientFactory.CreateClient(System.String)">
      <summary>
            Creates and configures an <see cref="T:System.Net.Http.HttpClient" /> instance using the configuration that corresponds
            to the logical name specified by <paramref name="name" />.</summary>
      <param name="name">The logical name of the client to create.</param>
      <returns>A new <see cref="T:System.Net.Http.HttpClient" /> instance.</returns>
    </member>
    <member name="T:System.Net.Http.IHttpMessageHandlerFactory">
      <summary>
            A factory abstraction for a component that can create <see cref="T:System.Net.Http.HttpMessageHandler" /> instances with custom
            configuration for a given logical name.</summary>
    </member>
    <member name="M:System.Net.Http.IHttpMessageHandlerFactory.CreateHandler(System.String)">
      <summary>
            Creates and configures an <see cref="T:System.Net.Http.HttpMessageHandler" /> instance using the configuration that corresponds
            to the logical name specified by <paramref name="name" />.</summary>
      <param name="name">The logical name of the message handler to create.</param>
      <returns>A new <see cref="T:System.Net.Http.HttpMessageHandler" /> instance.</returns>
    </member>
  </members>
</doc>