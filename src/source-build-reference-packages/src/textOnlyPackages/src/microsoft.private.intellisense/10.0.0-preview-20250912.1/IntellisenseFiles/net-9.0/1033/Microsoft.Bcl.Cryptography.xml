<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Bcl.Cryptography</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.CompositeMLDsa" />
    <member name="M:System.Security.Cryptography.CompositeMLDsa.#ctor(System.Security.Cryptography.CompositeMLDsaAlgorithm)">
      <param name="algorithm" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.Dispose" />
    <member name="M:System.Security.Cryptography.CompositeMLDsa.Dispose(System.Boolean)">
      <param name="disposing" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ExportCompositeMLDsaPrivateKey" />
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ExportCompositeMLDsaPrivateKey(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ExportCompositeMLDsaPrivateKeyCore(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ExportCompositeMLDsaPublicKey" />
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ExportCompositeMLDsaPublicKey(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ExportCompositeMLDsaPublicKeyCore(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <param name="passwordBytes" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ExportEncryptedPkcs8PrivateKey(System.String,System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <param name="passwordBytes" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ExportEncryptedPkcs8PrivateKeyPem(System.String,System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ExportPkcs8PrivateKey" />
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ExportPkcs8PrivateKeyPem" />
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ExportSubjectPublicKeyInfo" />
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ExportSubjectPublicKeyInfoPem" />
    <member name="M:System.Security.Cryptography.CompositeMLDsa.GenerateKey(System.Security.Cryptography.CompositeMLDsaAlgorithm)">
      <param name="algorithm" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ImportCompositeMLDsaPrivateKey(System.Security.Cryptography.CompositeMLDsaAlgorithm,System.Byte[])">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ImportCompositeMLDsaPrivateKey(System.Security.Cryptography.CompositeMLDsaAlgorithm,System.ReadOnlySpan{System.Byte})">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ImportCompositeMLDsaPublicKey(System.Security.Cryptography.CompositeMLDsaAlgorithm,System.Byte[])">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ImportCompositeMLDsaPublicKey(System.Security.Cryptography.CompositeMLDsaAlgorithm,System.ReadOnlySpan{System.Byte})">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="passwordBytes" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})">
      <param name="password" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ImportEncryptedPkcs8PrivateKey(System.String,System.Byte[])">
      <param name="password" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})">
      <param name="source" />
      <param name="passwordBytes" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
      <param name="source" />
      <param name="password" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ImportFromEncryptedPem(System.String,System.Byte[])">
      <param name="source" />
      <param name="passwordBytes" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ImportFromEncryptedPem(System.String,System.String)">
      <param name="source" />
      <param name="password" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ImportFromPem(System.ReadOnlySpan{System.Char})">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ImportFromPem(System.String)">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ImportPkcs8PrivateKey(System.Byte[])">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ImportPkcs8PrivateKey(System.ReadOnlySpan{System.Byte})">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ImportSubjectPublicKeyInfo(System.Byte[])">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.ImportSubjectPublicKeyInfo(System.ReadOnlySpan{System.Byte})">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.IsAlgorithmSupported(System.Security.Cryptography.CompositeMLDsaAlgorithm)">
      <param name="algorithm" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.SignData(System.Byte[],System.Byte[])">
      <param name="data" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.SignData(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="data" />
      <param name="destination" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.SignDataCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})">
      <param name="data" />
      <param name="context" />
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.TryExportCompositeMLDsaPrivateKey(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.TryExportCompositeMLDsaPublicKey(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <param name="passwordBytes" />
      <param name="pbeParameters" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <param name="password" />
      <param name="pbeParameters" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.TryExportEncryptedPkcs8PrivateKey(System.String,System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <param name="password" />
      <param name="pbeParameters" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.TryExportPkcs8PrivateKey(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.TryExportPkcs8PrivateKeyCore(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.TryExportSubjectPublicKeyInfo(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.VerifyData(System.Byte[],System.Byte[],System.Byte[])">
      <param name="data" />
      <param name="signature" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.VerifyData(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="data" />
      <param name="signature" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsa.VerifyDataCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="data" />
      <param name="context" />
      <param name="signature" />
    </member>
    <member name="P:System.Security.Cryptography.CompositeMLDsa.Algorithm" />
    <member name="P:System.Security.Cryptography.CompositeMLDsa.IsSupported" />
    <member name="T:System.Security.Cryptography.CompositeMLDsaAlgorithm" />
    <member name="M:System.Security.Cryptography.CompositeMLDsaAlgorithm.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsaAlgorithm.Equals(System.Security.Cryptography.CompositeMLDsaAlgorithm)">
      <param name="other" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsaAlgorithm.GetHashCode" />
    <member name="M:System.Security.Cryptography.CompositeMLDsaAlgorithm.op_Equality(System.Security.Cryptography.CompositeMLDsaAlgorithm,System.Security.Cryptography.CompositeMLDsaAlgorithm)">
      <param name="left" />
      <param name="right" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsaAlgorithm.op_Inequality(System.Security.Cryptography.CompositeMLDsaAlgorithm,System.Security.Cryptography.CompositeMLDsaAlgorithm)">
      <param name="left" />
      <param name="right" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsaAlgorithm.ToString" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MaxSignatureSizeInBytes" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa44WithECDsaP256" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa44WithEd25519" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa44WithRSA2048Pkcs15" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa44WithRSA2048Pss" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa65WithECDsaBrainpoolP256r1" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa65WithECDsaP256" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa65WithECDsaP384" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa65WithEd25519" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa65WithRSA3072Pkcs15" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa65WithRSA3072Pss" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa65WithRSA4096Pkcs15" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa65WithRSA4096Pss" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa87WithECDsaBrainpoolP384r1" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa87WithECDsaP384" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa87WithECDsaP521" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa87WithEd448" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa87WithRSA3072Pss" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.MLDsa87WithRSA4096Pss" />
    <member name="P:System.Security.Cryptography.CompositeMLDsaAlgorithm.Name" />
    <member name="T:System.Security.Cryptography.CompositeMLDsaCng" />
    <member name="M:System.Security.Cryptography.CompositeMLDsaCng.#ctor(System.Security.Cryptography.CngKey)">
      <param name="key" />
    </member>
    <member name="M:System.Security.Cryptography.CompositeMLDsaCng.GetKey" />
    <member name="T:System.Security.Cryptography.MLDsa" />
    <member name="M:System.Security.Cryptography.MLDsa.#ctor(System.Security.Cryptography.MLDsaAlgorithm)">
      <param name="algorithm" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.Dispose" />
    <member name="M:System.Security.Cryptography.MLDsa.Dispose(System.Boolean)">
      <param name="disposing" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <param name="passwordBytes" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ExportEncryptedPkcs8PrivateKey(System.String,System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <param name="passwordBytes" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ExportEncryptedPkcs8PrivateKeyPem(System.String,System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ExportMLDsaPrivateKey" />
    <member name="M:System.Security.Cryptography.MLDsa.ExportMLDsaPrivateKey(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ExportMLDsaPrivateKeyCore(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ExportMLDsaPrivateSeed" />
    <member name="M:System.Security.Cryptography.MLDsa.ExportMLDsaPrivateSeed(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ExportMLDsaPrivateSeedCore(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ExportMLDsaPublicKey" />
    <member name="M:System.Security.Cryptography.MLDsa.ExportMLDsaPublicKey(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ExportMLDsaPublicKeyCore(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ExportPkcs8PrivateKey" />
    <member name="M:System.Security.Cryptography.MLDsa.ExportPkcs8PrivateKeyPem" />
    <member name="M:System.Security.Cryptography.MLDsa.ExportSubjectPublicKeyInfo" />
    <member name="M:System.Security.Cryptography.MLDsa.ExportSubjectPublicKeyInfoPem" />
    <member name="M:System.Security.Cryptography.MLDsa.GenerateKey(System.Security.Cryptography.MLDsaAlgorithm)">
      <param name="algorithm" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="passwordBytes" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})">
      <param name="password" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ImportEncryptedPkcs8PrivateKey(System.String,System.Byte[])">
      <param name="password" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})">
      <param name="source" />
      <param name="passwordBytes" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
      <param name="source" />
      <param name="password" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ImportFromEncryptedPem(System.String,System.Byte[])">
      <param name="source" />
      <param name="passwordBytes" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ImportFromEncryptedPem(System.String,System.String)">
      <param name="source" />
      <param name="password" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ImportFromPem(System.ReadOnlySpan{System.Char})">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ImportFromPem(System.String)">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ImportMLDsaPrivateKey(System.Security.Cryptography.MLDsaAlgorithm,System.Byte[])">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ImportMLDsaPrivateKey(System.Security.Cryptography.MLDsaAlgorithm,System.ReadOnlySpan{System.Byte})">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ImportMLDsaPrivateSeed(System.Security.Cryptography.MLDsaAlgorithm,System.Byte[])">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ImportMLDsaPrivateSeed(System.Security.Cryptography.MLDsaAlgorithm,System.ReadOnlySpan{System.Byte})">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ImportMLDsaPublicKey(System.Security.Cryptography.MLDsaAlgorithm,System.Byte[])">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ImportMLDsaPublicKey(System.Security.Cryptography.MLDsaAlgorithm,System.ReadOnlySpan{System.Byte})">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ImportPkcs8PrivateKey(System.Byte[])">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ImportPkcs8PrivateKey(System.ReadOnlySpan{System.Byte})">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ImportSubjectPublicKeyInfo(System.Byte[])">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.ImportSubjectPublicKeyInfo(System.ReadOnlySpan{System.Byte})">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.SignData(System.Byte[],System.Byte[])">
      <param name="data" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.SignData(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="data" />
      <param name="destination" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.SignDataCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})">
      <param name="data" />
      <param name="context" />
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.SignMu(System.Byte[])">
      <param name="externalMu" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.SignMu(System.ReadOnlySpan{System.Byte},System.Span{System.Byte})">
      <param name="externalMu" />
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.SignMu(System.ReadOnlySpan{System.Byte})">
      <param name="externalMu" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.SignMuCore(System.ReadOnlySpan{System.Byte},System.Span{System.Byte})">
      <param name="externalMu" />
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.SignPreHash(System.Byte[],System.String,System.Byte[])">
      <param name="hash" />
      <param name="hashAlgorithmOid" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.SignPreHash(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.String,System.ReadOnlySpan{System.Byte})">
      <param name="hash" />
      <param name="destination" />
      <param name="hashAlgorithmOid" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.SignPreHashCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.String,System.Span{System.Byte})">
      <param name="hash" />
      <param name="context" />
      <param name="hashAlgorithmOid" />
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <param name="passwordBytes" />
      <param name="pbeParameters" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <param name="password" />
      <param name="pbeParameters" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.TryExportEncryptedPkcs8PrivateKey(System.String,System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <param name="password" />
      <param name="pbeParameters" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.TryExportPkcs8PrivateKey(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.TryExportPkcs8PrivateKeyCore(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.TryExportSubjectPublicKeyInfo(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.VerifyData(System.Byte[],System.Byte[],System.Byte[])">
      <param name="data" />
      <param name="signature" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.VerifyData(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="data" />
      <param name="signature" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.VerifyDataCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="data" />
      <param name="context" />
      <param name="signature" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.VerifyMu(System.Byte[],System.Byte[])">
      <param name="externalMu" />
      <param name="signature" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.VerifyMu(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="externalMu" />
      <param name="signature" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.VerifyMuCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="externalMu" />
      <param name="signature" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.VerifyPreHash(System.Byte[],System.Byte[],System.String,System.Byte[])">
      <param name="hash" />
      <param name="signature" />
      <param name="hashAlgorithmOid" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.VerifyPreHash(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.String,System.ReadOnlySpan{System.Byte})">
      <param name="hash" />
      <param name="signature" />
      <param name="hashAlgorithmOid" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsa.VerifyPreHashCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.String,System.ReadOnlySpan{System.Byte})">
      <param name="hash" />
      <param name="context" />
      <param name="hashAlgorithmOid" />
      <param name="signature" />
    </member>
    <member name="P:System.Security.Cryptography.MLDsa.Algorithm" />
    <member name="P:System.Security.Cryptography.MLDsa.IsSupported" />
    <member name="T:System.Security.Cryptography.MLDsaAlgorithm" />
    <member name="M:System.Security.Cryptography.MLDsaAlgorithm.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsaAlgorithm.Equals(System.Security.Cryptography.MLDsaAlgorithm)">
      <param name="other" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsaAlgorithm.GetHashCode" />
    <member name="M:System.Security.Cryptography.MLDsaAlgorithm.op_Equality(System.Security.Cryptography.MLDsaAlgorithm,System.Security.Cryptography.MLDsaAlgorithm)">
      <param name="left" />
      <param name="right" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsaAlgorithm.op_Inequality(System.Security.Cryptography.MLDsaAlgorithm,System.Security.Cryptography.MLDsaAlgorithm)">
      <param name="left" />
      <param name="right" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsaAlgorithm.ToString" />
    <member name="P:System.Security.Cryptography.MLDsaAlgorithm.MLDsa44" />
    <member name="P:System.Security.Cryptography.MLDsaAlgorithm.MLDsa65" />
    <member name="P:System.Security.Cryptography.MLDsaAlgorithm.MLDsa87" />
    <member name="P:System.Security.Cryptography.MLDsaAlgorithm.MuSizeInBytes" />
    <member name="P:System.Security.Cryptography.MLDsaAlgorithm.Name" />
    <member name="P:System.Security.Cryptography.MLDsaAlgorithm.PrivateKeySizeInBytes" />
    <member name="P:System.Security.Cryptography.MLDsaAlgorithm.PrivateSeedSizeInBytes" />
    <member name="P:System.Security.Cryptography.MLDsaAlgorithm.PublicKeySizeInBytes" />
    <member name="P:System.Security.Cryptography.MLDsaAlgorithm.SignatureSizeInBytes" />
    <member name="T:System.Security.Cryptography.MLDsaCng" />
    <member name="M:System.Security.Cryptography.MLDsaCng.#ctor(System.Security.Cryptography.CngKey)">
      <param name="key" />
    </member>
    <member name="M:System.Security.Cryptography.MLDsaCng.GetKey" />
    <member name="T:System.Security.Cryptography.MLKem" />
    <member name="M:System.Security.Cryptography.MLKem.#ctor(System.Security.Cryptography.MLKemAlgorithm)">
      <param name="algorithm" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.Decapsulate(System.Byte[])">
      <param name="ciphertext" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.Decapsulate(System.ReadOnlySpan{System.Byte},System.Span{System.Byte})">
      <param name="ciphertext" />
      <param name="sharedSecret" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.DecapsulateCore(System.ReadOnlySpan{System.Byte},System.Span{System.Byte})">
      <param name="ciphertext" />
      <param name="sharedSecret" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.Dispose" />
    <member name="M:System.Security.Cryptography.MLKem.Dispose(System.Boolean)">
      <param name="disposing" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.Encapsulate(System.Byte[]@,System.Byte[]@)">
      <param name="ciphertext" />
      <param name="sharedSecret" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.Encapsulate(System.Span{System.Byte},System.Span{System.Byte})">
      <param name="ciphertext" />
      <param name="sharedSecret" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.EncapsulateCore(System.Span{System.Byte},System.Span{System.Byte})">
      <param name="ciphertext" />
      <param name="sharedSecret" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportDecapsulationKey" />
    <member name="M:System.Security.Cryptography.MLKem.ExportDecapsulationKey(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportDecapsulationKeyCore(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportEncapsulationKey" />
    <member name="M:System.Security.Cryptography.MLKem.ExportEncapsulationKey(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportEncapsulationKeyCore(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <param name="passwordBytes" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportEncryptedPkcs8PrivateKey(System.String,System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <param name="passwordBytes" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportEncryptedPkcs8PrivateKeyPem(System.String,System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportPkcs8PrivateKey" />
    <member name="M:System.Security.Cryptography.MLKem.ExportPkcs8PrivateKeyPem" />
    <member name="M:System.Security.Cryptography.MLKem.ExportPrivateSeed" />
    <member name="M:System.Security.Cryptography.MLKem.ExportPrivateSeed(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportPrivateSeedCore(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ExportSubjectPublicKeyInfo" />
    <member name="M:System.Security.Cryptography.MLKem.ExportSubjectPublicKeyInfoPem" />
    <member name="M:System.Security.Cryptography.MLKem.GenerateKey(System.Security.Cryptography.MLKemAlgorithm)">
      <param name="algorithm" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportDecapsulationKey(System.Security.Cryptography.MLKemAlgorithm,System.Byte[])">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportDecapsulationKey(System.Security.Cryptography.MLKemAlgorithm,System.ReadOnlySpan{System.Byte})">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportEncapsulationKey(System.Security.Cryptography.MLKemAlgorithm,System.Byte[])">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportEncapsulationKey(System.Security.Cryptography.MLKemAlgorithm,System.ReadOnlySpan{System.Byte})">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="passwordBytes" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})">
      <param name="password" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportEncryptedPkcs8PrivateKey(System.String,System.Byte[])">
      <param name="password" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})">
      <param name="source" />
      <param name="passwordBytes" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
      <param name="source" />
      <param name="password" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportFromEncryptedPem(System.String,System.Byte[])">
      <param name="source" />
      <param name="passwordBytes" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportFromEncryptedPem(System.String,System.String)">
      <param name="source" />
      <param name="password" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportFromPem(System.ReadOnlySpan{System.Char})">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportFromPem(System.String)">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportPkcs8PrivateKey(System.Byte[])">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportPkcs8PrivateKey(System.ReadOnlySpan{System.Byte})">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportPrivateSeed(System.Security.Cryptography.MLKemAlgorithm,System.Byte[])">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportPrivateSeed(System.Security.Cryptography.MLKemAlgorithm,System.ReadOnlySpan{System.Byte})">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportSubjectPublicKeyInfo(System.Byte[])">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.ImportSubjectPublicKeyInfo(System.ReadOnlySpan{System.Byte})">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <param name="passwordBytes" />
      <param name="pbeParameters" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <param name="password" />
      <param name="pbeParameters" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.TryExportEncryptedPkcs8PrivateKey(System.String,System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <param name="password" />
      <param name="pbeParameters" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.TryExportPkcs8PrivateKey(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.TryExportPkcs8PrivateKeyCore(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.MLKem.TryExportSubjectPublicKeyInfo(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="P:System.Security.Cryptography.MLKem.Algorithm" />
    <member name="P:System.Security.Cryptography.MLKem.IsSupported" />
    <member name="T:System.Security.Cryptography.MLKemAlgorithm" />
    <member name="M:System.Security.Cryptography.MLKemAlgorithm.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:System.Security.Cryptography.MLKemAlgorithm.Equals(System.Security.Cryptography.MLKemAlgorithm)">
      <param name="other" />
    </member>
    <member name="M:System.Security.Cryptography.MLKemAlgorithm.GetHashCode" />
    <member name="M:System.Security.Cryptography.MLKemAlgorithm.op_Equality(System.Security.Cryptography.MLKemAlgorithm,System.Security.Cryptography.MLKemAlgorithm)">
      <param name="left" />
      <param name="right" />
    </member>
    <member name="M:System.Security.Cryptography.MLKemAlgorithm.op_Inequality(System.Security.Cryptography.MLKemAlgorithm,System.Security.Cryptography.MLKemAlgorithm)">
      <param name="left" />
      <param name="right" />
    </member>
    <member name="M:System.Security.Cryptography.MLKemAlgorithm.ToString" />
    <member name="P:System.Security.Cryptography.MLKemAlgorithm.CiphertextSizeInBytes" />
    <member name="P:System.Security.Cryptography.MLKemAlgorithm.DecapsulationKeySizeInBytes" />
    <member name="P:System.Security.Cryptography.MLKemAlgorithm.EncapsulationKeySizeInBytes" />
    <member name="P:System.Security.Cryptography.MLKemAlgorithm.MLKem1024" />
    <member name="P:System.Security.Cryptography.MLKemAlgorithm.MLKem512" />
    <member name="P:System.Security.Cryptography.MLKemAlgorithm.MLKem768" />
    <member name="P:System.Security.Cryptography.MLKemAlgorithm.Name" />
    <member name="P:System.Security.Cryptography.MLKemAlgorithm.PrivateSeedSizeInBytes" />
    <member name="P:System.Security.Cryptography.MLKemAlgorithm.SharedSecretSizeInBytes" />
    <member name="T:System.Security.Cryptography.MLKemCng" />
    <member name="M:System.Security.Cryptography.MLKemCng.#ctor(System.Security.Cryptography.CngKey)">
      <param name="key" />
    </member>
    <member name="M:System.Security.Cryptography.MLKemCng.GetKey" />
    <member name="T:System.Security.Cryptography.SlhDsa" />
    <member name="M:System.Security.Cryptography.SlhDsa.#ctor(System.Security.Cryptography.SlhDsaAlgorithm)">
      <param name="algorithm" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.Dispose" />
    <member name="M:System.Security.Cryptography.SlhDsa.Dispose(System.Boolean)">
      <param name="disposing" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <param name="passwordBytes" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportEncryptedPkcs8PrivateKey(System.String,System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <param name="passwordBytes" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportEncryptedPkcs8PrivateKeyPem(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportEncryptedPkcs8PrivateKeyPem(System.String,System.Security.Cryptography.PbeParameters)">
      <param name="password" />
      <param name="pbeParameters" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportPkcs8PrivateKey" />
    <member name="M:System.Security.Cryptography.SlhDsa.ExportPkcs8PrivateKeyPem" />
    <member name="M:System.Security.Cryptography.SlhDsa.ExportSlhDsaPrivateKey" />
    <member name="M:System.Security.Cryptography.SlhDsa.ExportSlhDsaPrivateKey(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportSlhDsaPrivateKeyCore(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportSlhDsaPublicKey" />
    <member name="M:System.Security.Cryptography.SlhDsa.ExportSlhDsaPublicKey(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportSlhDsaPublicKeyCore(System.Span{System.Byte})">
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ExportSubjectPublicKeyInfo" />
    <member name="M:System.Security.Cryptography.SlhDsa.ExportSubjectPublicKeyInfoPem" />
    <member name="M:System.Security.Cryptography.SlhDsa.GenerateKey(System.Security.Cryptography.SlhDsaAlgorithm)">
      <param name="algorithm" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="passwordBytes" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})">
      <param name="password" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportEncryptedPkcs8PrivateKey(System.String,System.Byte[])">
      <param name="password" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})">
      <param name="source" />
      <param name="passwordBytes" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
      <param name="source" />
      <param name="password" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportFromEncryptedPem(System.String,System.Byte[])">
      <param name="source" />
      <param name="passwordBytes" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportFromEncryptedPem(System.String,System.String)">
      <param name="source" />
      <param name="password" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportFromPem(System.ReadOnlySpan{System.Char})">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportFromPem(System.String)">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportPkcs8PrivateKey(System.Byte[])">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportPkcs8PrivateKey(System.ReadOnlySpan{System.Byte})">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportSlhDsaPrivateKey(System.Security.Cryptography.SlhDsaAlgorithm,System.Byte[])">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportSlhDsaPrivateKey(System.Security.Cryptography.SlhDsaAlgorithm,System.ReadOnlySpan{System.Byte})">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportSlhDsaPublicKey(System.Security.Cryptography.SlhDsaAlgorithm,System.Byte[])">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportSlhDsaPublicKey(System.Security.Cryptography.SlhDsaAlgorithm,System.ReadOnlySpan{System.Byte})">
      <param name="algorithm" />
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportSubjectPublicKeyInfo(System.Byte[])">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.ImportSubjectPublicKeyInfo(System.ReadOnlySpan{System.Byte})">
      <param name="source" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.SignData(System.Byte[],System.Byte[])">
      <param name="data" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.SignData(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="data" />
      <param name="destination" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.SignDataCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})">
      <param name="data" />
      <param name="context" />
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.SignPreHash(System.Byte[],System.String,System.Byte[])">
      <param name="hash" />
      <param name="hashAlgorithmOid" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.SignPreHash(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.String,System.ReadOnlySpan{System.Byte})">
      <param name="hash" />
      <param name="destination" />
      <param name="hashAlgorithmOid" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.SignPreHashCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.String,System.Span{System.Byte})">
      <param name="hash" />
      <param name="context" />
      <param name="hashAlgorithmOid" />
      <param name="destination" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <param name="passwordBytes" />
      <param name="pbeParameters" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <param name="password" />
      <param name="pbeParameters" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.TryExportEncryptedPkcs8PrivateKey(System.String,System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <param name="password" />
      <param name="pbeParameters" />
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.TryExportPkcs8PrivateKey(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.TryExportPkcs8PrivateKeyCore(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.TryExportSubjectPublicKeyInfo(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.VerifyData(System.Byte[],System.Byte[],System.Byte[])">
      <param name="data" />
      <param name="signature" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.VerifyData(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="data" />
      <param name="signature" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.VerifyDataCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <param name="data" />
      <param name="context" />
      <param name="signature" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.VerifyPreHash(System.Byte[],System.Byte[],System.String,System.Byte[])">
      <param name="hash" />
      <param name="signature" />
      <param name="hashAlgorithmOid" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.VerifyPreHash(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.String,System.ReadOnlySpan{System.Byte})">
      <param name="hash" />
      <param name="signature" />
      <param name="hashAlgorithmOid" />
      <param name="context" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsa.VerifyPreHashCore(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.String,System.ReadOnlySpan{System.Byte})">
      <param name="hash" />
      <param name="context" />
      <param name="hashAlgorithmOid" />
      <param name="signature" />
    </member>
    <member name="P:System.Security.Cryptography.SlhDsa.Algorithm" />
    <member name="P:System.Security.Cryptography.SlhDsa.IsSupported" />
    <member name="T:System.Security.Cryptography.SlhDsaAlgorithm" />
    <member name="M:System.Security.Cryptography.SlhDsaAlgorithm.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsaAlgorithm.Equals(System.Security.Cryptography.SlhDsaAlgorithm)">
      <param name="other" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsaAlgorithm.GetHashCode" />
    <member name="M:System.Security.Cryptography.SlhDsaAlgorithm.op_Equality(System.Security.Cryptography.SlhDsaAlgorithm,System.Security.Cryptography.SlhDsaAlgorithm)">
      <param name="left" />
      <param name="right" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsaAlgorithm.op_Inequality(System.Security.Cryptography.SlhDsaAlgorithm,System.Security.Cryptography.SlhDsaAlgorithm)">
      <param name="left" />
      <param name="right" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsaAlgorithm.ToString" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.Name" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.PrivateKeySizeInBytes" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.PublicKeySizeInBytes" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SignatureSizeInBytes" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaSha2_128f" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaSha2_128s" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaSha2_192f" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaSha2_192s" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaSha2_256f" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaSha2_256s" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaShake128f" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaShake128s" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaShake192f" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaShake192s" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaShake256f" />
    <member name="P:System.Security.Cryptography.SlhDsaAlgorithm.SlhDsaShake256s" />
    <member name="T:System.Security.Cryptography.SlhDsaCng" />
    <member name="M:System.Security.Cryptography.SlhDsaCng.#ctor(System.Security.Cryptography.CngKey)">
      <param name="key" />
    </member>
    <member name="M:System.Security.Cryptography.SlhDsaCng.GetKey" />
    <member name="T:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors" />
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.CompositeMLDsa)">
      <param name="certificate" />
      <param name="privateKey" />
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.MLDsa)">
      <param name="certificate" />
      <param name="privateKey" />
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.MLKem)">
      <param name="certificate" />
      <param name="privateKey" />
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.SlhDsa)">
      <param name="certificate" />
      <param name="privateKey" />
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.GetCompositeMLDsaPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <param name="certificate" />
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.GetCompositeMLDsaPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <param name="certificate" />
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.GetMLDsaPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <param name="certificate" />
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.GetMLDsaPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <param name="certificate" />
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.GetMLKemPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <param name="certificate" />
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.GetMLKemPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <param name="certificate" />
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.GetSlhDsaPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <param name="certificate" />
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateKeyAccessors.GetSlhDsaPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <param name="certificate" />
    </member>
  </members>
</doc>