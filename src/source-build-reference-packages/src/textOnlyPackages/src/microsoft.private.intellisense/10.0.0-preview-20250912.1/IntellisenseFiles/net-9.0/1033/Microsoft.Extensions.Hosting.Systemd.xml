<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.Hosting.Systemd</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.Hosting.Systemd.ISystemdNotifier">
      <summary>
            Provides support to notify systemd about the service status.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Systemd.ISystemdNotifier.Notify(Microsoft.Extensions.Hosting.Systemd.ServiceState)">
      <summary>
            Sends a notification to systemd.</summary>
      <param name="state">The <see cref="T:Microsoft.Extensions.Hosting.Systemd.ServiceState" /> to notify.</param>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.Systemd.ISystemdNotifier.IsEnabled">
      <summary>
            Returns whether systemd is configured to receive service notifications.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.Systemd.ServiceState">
      <summary>
            Describes a service state change.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Hosting.Systemd.ServiceState.Ready">
      <summary>
            Service startup is finished.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Hosting.Systemd.ServiceState.Stopping">
      <summary>
            Service is beginning its shutdown.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Systemd.ServiceState.#ctor(System.String)">
      <summary>
            Create custom ServiceState.</summary>
      <param name="state">A <see cref="T:System.String" /> representation of service state.</param>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Systemd.ServiceState.ToString">
      <summary>
            String representation of service state.</summary>
      <returns>The <see cref="T:System.String" /> representation of the service state.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.Systemd.SystemdHelpers">
      <summary>
            Helper methods for systemd Services.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Systemd.SystemdHelpers.IsSystemdService">
      <summary>
            Checks if the current process is hosted as a systemd Service.</summary>
      <returns>
        <see langword="true" /> if the current process is hosted as a systemd Service; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.Systemd.SystemdLifetime">
      <summary>
            Provides notification messages for application started and stopping, and configures console logging to the systemd format.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Systemd.SystemdLifetime.#ctor(Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime,Microsoft.Extensions.Hosting.Systemd.ISystemdNotifier,Microsoft.Extensions.Logging.ILoggerFactory)">
      <summary>
            Initializes a new <see cref="T:Microsoft.Extensions.Hosting.Systemd.SystemdLifetime" /> instance.</summary>
      <param name="environment">Information about the host.</param>
      <param name="applicationLifetime">The <see cref="T:Microsoft.Extensions.Hosting.IHostApplicationLifetime" /> that tracks the service lifetime.</param>
      <param name="systemdNotifier">The <see cref="T:Microsoft.Extensions.Hosting.Systemd.ISystemdNotifier" /> to notify Systemd about service status.</param>
      <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> used to instantiate the lifetime logger.</param>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Systemd.SystemdLifetime.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Systemd.SystemdLifetime.StopAsync(System.Threading.CancellationToken)">
      <summary>
            Asynchronously stops and shuts down the host. This method is called from <see cref="M:Microsoft.Extensions.Hosting.IHost.StopAsync(System.Threading.CancellationToken)" />.</summary>
      <param name="cancellationToken">
            A cancellation token that indicates when stop should no longer be graceful.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>
            A task that represents the asynchronous stop operation.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Systemd.SystemdLifetime.WaitForStartAsync(System.Threading.CancellationToken)">
      <summary>
            Asynchronously waits until the start operation is complete before continuing. This method is called at the beginning of <see cref="M:Microsoft.Extensions.Hosting.IHost.StartAsync(System.Threading.CancellationToken)" />. This can be used to delay startup until signaled by an external event.</summary>
      <param name="cancellationToken">
            A cancellation token that indicates when stop should no longer be graceful.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>
            A task that represents the waiting for start operation.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.Systemd.SystemdNotifier">
      <summary>
            Provides support to notify systemd about the service status.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Systemd.SystemdNotifier.#ctor">
      <summary>
            Instantiates a new <see cref="T:Microsoft.Extensions.Hosting.Systemd.SystemdNotifier" /> and sets the notify socket path.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Systemd.SystemdNotifier.Notify(Microsoft.Extensions.Hosting.Systemd.ServiceState)">
      <summary>Sends a notification to systemd.</summary>
      <param name="state">The service state to notify.</param>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.Systemd.SystemdNotifier.IsEnabled">
      <summary>Returns whether systemd is configured to receive service notifications.</summary>
      <returns>
        <see langword="true" /> if systemd is configured to receive service notifications; <see langword="false" /> otherwise.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.SystemdHostBuilderExtensions">
      <summary>
            Extension methods for setting up <see cref="T:Microsoft.Extensions.Hosting.Systemd.SystemdLifetime" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.SystemdHostBuilderExtensions.AddSystemd(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <summary>
            Configures the lifetime of the <see cref="T:Microsoft.Extensions.Hosting.IHost" /> built from <paramref name="services" /> to
            <see cref="T:Microsoft.Extensions.Hosting.Systemd.SystemdLifetime" />, provides notification messages for application started
            and stopping, and configures console logging to the systemd format.</summary>
      <param name="services">
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> used to build the <see cref="T:Microsoft.Extensions.Hosting.IHost" />.
            For example, <see cref="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Services" /> or the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> passed to the
            <see cref="M:Microsoft.Extensions.Hosting.IHostBuilder.ConfigureServices(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection})" /> callback.</param>
      <returns>The <paramref name="services" /> instance for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.SystemdHostBuilderExtensions.UseSystemd(Microsoft.Extensions.Hosting.IHostBuilder)">
      <summary>
            Configures the <see cref="T:Microsoft.Extensions.Hosting.IHost" /> lifetime to <see cref="T:Microsoft.Extensions.Hosting.Systemd.SystemdLifetime" />,
            provides notification messages for application started and stopping,
            and configures console logging to the systemd format.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <returns>The <paramref name="hostBuilder" /> instance for chaining.</returns>
    </member>
  </members>
</doc>