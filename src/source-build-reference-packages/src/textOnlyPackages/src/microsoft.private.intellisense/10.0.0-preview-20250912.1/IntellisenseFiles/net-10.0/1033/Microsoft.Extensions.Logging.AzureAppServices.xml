<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.Logging.AzureAppServices</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.Logging.AzureAppServices.AzureBlobLoggerContext" />
    <member name="M:Microsoft.Extensions.Logging.AzureAppServices.AzureBlobLoggerContext.#ctor(System.String,System.String,System.DateTimeOffset)">
      <param name="appName" />
      <param name="identifier" />
      <param name="timestamp" />
    </member>
    <member name="P:Microsoft.Extensions.Logging.AzureAppServices.AzureBlobLoggerContext.AppName" />
    <member name="P:Microsoft.Extensions.Logging.AzureAppServices.AzureBlobLoggerContext.Identifier" />
    <member name="P:Microsoft.Extensions.Logging.AzureAppServices.AzureBlobLoggerContext.Timestamp" />
    <member name="T:Microsoft.Extensions.Logging.AzureAppServices.AzureBlobLoggerOptions">
      <summary>Options for Azure diagnostics blob logging.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.AzureAppServices.AzureBlobLoggerOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Logging.AzureAppServices.AzureBlobLoggerOptions.BlobName">
      <summary>Gets or sets the last section of log blob name.</summary>
      <returns>The default is <c>"applicationLog.txt"</c>.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Logging.AzureAppServices.AzureBlobLoggerOptions.FileNameFormat" />
    <member name="T:Microsoft.Extensions.Logging.AzureAppServices.AzureFileLoggerOptions">
      <summary>Options for Azure diagnostics file logging.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.AzureAppServices.AzureFileLoggerOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Logging.AzureAppServices.AzureFileLoggerOptions.FileName">
      <summary>Gets or sets the prefix of the file name used to store the logging information.</summary>
      <returns>The default is <c>diagnostics-</c>.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Logging.AzureAppServices.AzureFileLoggerOptions.FileSizeLimit">
      <summary>Gets or sets the maximum log size in bytes or null for no limit.</summary>
      <returns>The default is 10 MB.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Logging.AzureAppServices.AzureFileLoggerOptions.RetainedFileCountLimit">
      <summary>Gets or sets the maximum retained file count or null for no limit.</summary>
      <returns>The default is 2.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Logging.AzureAppServices.BatchingLoggerOptions">
      <summary>Options for a logger which batches up log messages.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.AzureAppServices.BatchingLoggerOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Logging.AzureAppServices.BatchingLoggerOptions.BackgroundQueueSize">
      <summary>Gets or sets the maximum size of the background log message queue or null for no limit.</summary>
      <returns>The default is 1000.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Logging.AzureAppServices.BatchingLoggerOptions.BatchSize">
      <summary>Gets or sets the maximum number of events to include in a single batch or null for no limit.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.AzureAppServices.BatchingLoggerOptions.FlushPeriod">
      <summary>Gets or sets the period after which logs will be flushed to the store.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Logging.AzureAppServices.BatchingLoggerOptions.IncludeScopes">
      <summary>Gets or sets a value indicating whether scopes should be included in the message.</summary>
      <returns>The default is <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Logging.AzureAppServices.BatchingLoggerOptions.IsEnabled">
      <summary>Gets or sets a value indicating if the logger accepts and queues writes.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Logging.AzureAppServices.BatchingLoggerProvider">
      <summary>A provider of <see cref="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.BatchingLogger" /> instances.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.AzureAppServices.BatchingLoggerProvider.CreateLogger(System.String)">
      <summary>Creates a <see cref="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.BatchingLogger" /> with the given <paramref name="categoryName" />.</summary>
      <param name="categoryName">The name of the category to create this logger with.</param>
      <returns>The <see cref="T:Microsoft.Extensions.Logging.AzureAppServices.Internal.BatchingLogger" /> that was created.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.AzureAppServices.BatchingLoggerProvider.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.AzureAppServices.BatchingLoggerProvider.IntervalAsync(System.TimeSpan,System.Threading.CancellationToken)">
      <summary>Wait for the given <see cref="T:System.TimeSpan" />.</summary>
      <param name="interval">The amount of time to wait.</param>
      <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can be used to cancel the delay.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> which completes when the <paramref name="interval" /> has passed or the <paramref name="cancellationToken" /> has been canceled.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.AzureAppServices.BatchingLoggerProvider.Microsoft#Extensions#Logging#ISupportExternalScope#SetScopeProvider(Microsoft.Extensions.Logging.IExternalScopeProvider)">
      <summary>Sets the scope on this provider.</summary>
      <param name="scopeProvider">Provides the scope.</param>
    </member>
    <member name="P:Microsoft.Extensions.Logging.AzureAppServices.BatchingLoggerProvider.IsEnabled">
      <summary>Checks if the queue is enabled.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Logging.AzureAppServices.BlobLoggerProvider">
      <summary>The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> implementation that stores messages by appending them to Azure Blob in batches.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.AzureAppServices.BlobLoggerProvider.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Microsoft.Extensions.Logging.AzureAppServices.AzureBlobLoggerOptions})">
      <summary>Creates a new instance of <see cref="T:Microsoft.Extensions.Logging.AzureAppServices.BlobLoggerProvider" />.</summary>
      <param name="options">The options to use when creating a provider.</param>
    </member>
    <member name="T:Microsoft.Extensions.Logging.AzureAppServices.FileLoggerProvider">
      <summary>A <see cref="T:Microsoft.Extensions.Logging.AzureAppServices.BatchingLoggerProvider" /> that writes out to a file.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.AzureAppServices.FileLoggerProvider.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Microsoft.Extensions.Logging.AzureAppServices.AzureFileLoggerOptions})">
      <summary>Creates a new instance of <see cref="T:Microsoft.Extensions.Logging.AzureAppServices.FileLoggerProvider" />.</summary>
      <param name="options">The options to use when creating a provider.</param>
    </member>
    <member name="T:Microsoft.Extensions.Logging.AzureAppServicesLoggerFactoryExtensions">
      <summary>Extension methods for adding Azure diagnostics logger.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.AzureAppServicesLoggerFactoryExtensions.AddAzureWebAppDiagnostics(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.AzureAppServices.AzureBlobLoggerOptions})">
      <param name="builder" />
      <param name="configureBlobLoggerOptions" />
    </member>
    <member name="M:Microsoft.Extensions.Logging.AzureAppServicesLoggerFactoryExtensions.AddAzureWebAppDiagnostics(Microsoft.Extensions.Logging.ILoggingBuilder)">
      <summary>Adds an Azure Web Apps diagnostics logger.</summary>
      <param name="builder">The extension method argument.</param>
    </member>
  </members>
</doc>