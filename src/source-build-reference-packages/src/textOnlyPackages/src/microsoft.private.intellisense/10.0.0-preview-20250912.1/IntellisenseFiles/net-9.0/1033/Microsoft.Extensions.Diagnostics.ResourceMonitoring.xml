<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.Diagnostics.ResourceMonitoring</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.DependencyInjection.ResourceMonitoringServiceCollectionExtensions">
      <summary>
            Lets you configure and register resource monitoring components.</summary>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.ResourceMonitoringServiceCollectionExtensions.AddResourceMonitoring(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitorBuilder})">
      <summary>
            Configures and adds an <see cref="T:Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitor" /> implementation to a service collection.</summary>
      <param name="services">The dependency injection container to add the monitor to.</param>
      <param name="configure">Delegate to configure <see cref="T:Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitorBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException">Either <paramref name="services" /> or <paramref name="configure" /> is <see langword="null" />.</exception>
      <returns>The value of <paramref name="services" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.ResourceMonitoringServiceCollectionExtensions.AddResourceMonitoring(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <summary>
            Configures and adds an <see cref="T:Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitor" /> implementation to a service collection.</summary>
      <param name="services">The dependency injection container to add the monitor to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="services" /> is <see langword="null" />.</exception>
      <returns>The value of <paramref name="services" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitor">
      <summary>
            Provides the ability to sample the system for current resource utilization.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitor.GetUtilization(System.TimeSpan)">
      <summary>
            Gets utilization for the specified time window.</summary>
      <param name="window">A <see cref="T:System.TimeSpan" /> representing the time window for which utilization is requested.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="window" /> is greater than the maximum window size
            configured while adding the service to the services collection.</exception>
      <returns>The utilization during the time window specified by <paramref name="window" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitorBuilder">
      <summary>
            Helps building the resource monitoring infrastructure.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitorBuilder.AddPublisher``1">
      <summary>
            Adds a resource utilization publisher that gets invoked whenever resource utilization is computed.</summary>
      <typeparam name="T">The publisher's implementation type.</typeparam>
      <returns>The value of the object instance.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitorBuilder.Services">
      <summary>
            Gets the service collection being manipulated by the builder.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceUtilizationPublisher">
      <summary>
            Defines the contract for a resource utilization publisher that gets invoked whenever resource utilization is computed.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceUtilizationPublisher.PublishAsync(Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceUtilization,System.Threading.CancellationToken)">
      <summary>
            This method is invoked by the monitoring infrastructure whenever resource utilization is computed.</summary>
      <param name="utilization">A snapshot of the system's current resource utilization.</param>
      <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used to cancel the publish operation.</param>
      <returns>A value task to track the publication operation.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ISnapshotProvider">
      <summary>
            An interface to be implemented by a provider that represents an underlying system and gets resources data about it.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ISnapshotProvider.GetSnapshot">
      <summary>
            Get a snapshot of the resource utilization of the system.</summary>
      <returns>An appropriate sample.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ISnapshotProvider.Resources">
      <summary>
            Gets the static values of CPU and memory limitations defined by the system.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceMonitoringBuilderExtensions">
      <summary>
            Lets you configure and register resource monitoring components.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceMonitoringBuilderExtensions.ConfigureMonitor(Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitorBuilder,Microsoft.Extensions.Configuration.IConfigurationSection)">
      <summary>
            Configures the resource monitor.</summary>
      <param name="builder">The builder instance used to configure the tracker.</param>
      <param name="section">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSection" /> to use for configuring <see cref="T:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceMonitoringOptions" />.</param>
      <exception cref="T:System.ArgumentNullException">Either <paramref name="builder" /> or <paramref name="section" /> is <see langword="null" />.</exception>
      <returns>The value of <paramref name="builder" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceMonitoringBuilderExtensions.ConfigureMonitor(Microsoft.Extensions.Diagnostics.ResourceMonitoring.IResourceMonitorBuilder,System.Action{Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceMonitoringOptions})">
      <summary>
            Configures the resource monitor.</summary>
      <param name="builder">The builder instance used to configure the tracker.</param>
      <param name="configure">Delegate to configure <see cref="T:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceMonitoringOptions" />.</param>
      <exception cref="T:System.ArgumentNullException">Either <paramref name="builder" /> or <paramref name="configure" /> is <see langword="null" />.</exception>
      <returns>The value of <paramref name="builder" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceMonitoringOptions">
      <summary>
            Options to control resource monitoring behavior.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceMonitoringOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceMonitoringOptions.CollectionWindow">
      <summary>
            Gets or sets the maximum time window for which utilization can be requested.</summary>
      <returns>
            The default value is 5 seconds.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceMonitoringOptions.CpuConsumptionRefreshInterval">
      <summary>
            Gets or sets the default interval used for refreshing values reported by <c>"process.cpu.utilization"</c> metrics.</summary>
      <returns>
            The default value is 5 seconds.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceMonitoringOptions.EnableSystemDiskIoMetrics" />
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceMonitoringOptions.MemoryConsumptionRefreshInterval">
      <summary>
            Gets or sets the default interval used for refreshing values reported by <c>"dotnet.process.memory.virtual.utilization"</c> metrics.</summary>
      <returns>
            The default value is 5 seconds.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceMonitoringOptions.PublishingWindow">
      <summary>
            Gets or sets the observation window used to calculate the <see cref="T:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceUtilization" /> instances pushed to publishers.</summary>
      <returns>
            The default value is 5 seconds.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceMonitoringOptions.SamplingInterval">
      <summary>
            Gets or sets the interval at which a new utilization sample is captured.</summary>
      <returns>
            The default value is 1 second.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceMonitoringOptions.SourceIpAddresses">
      <summary>
            Gets or sets the list of source IPv4 addresses to track the connections for in telemetry.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceMonitoringOptions.UseLinuxCalculationV2" />
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceMonitoringOptions.UseZeroToOneRangeForMetrics" />
    <member name="T:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceUtilization">
      <summary>
            Captures resource usage at a given point in time.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceUtilization.#ctor(System.Double,System.UInt64,Microsoft.Extensions.Diagnostics.ResourceMonitoring.SystemResources)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceUtilization" /> struct.</summary>
      <param name="cpuUsedPercentage">CPU utilization.</param>
      <param name="memoryUsedInBytes">Memory used in bytes (instantaneous).</param>
      <param name="systemResources">CPU and memory limits.</param>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceUtilization.CpuUsedPercentage">
      <summary>
            Gets the CPU utilization percentage.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceUtilization.MemoryUsedInBytes">
      <summary>
            Gets the total memory used.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceUtilization.MemoryUsedPercentage">
      <summary>
            Gets the memory utilization percentage.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceUtilization.Snapshot">
      <summary>
            Gets the latest snapshot of the resource utilization of the system.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.ResourceUtilization.SystemResources">
      <summary>
            Gets the CPU and memory limits defined by the underlying system.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Diagnostics.ResourceMonitoring.Snapshot">
      <summary>
            A snapshot of CPU and memory usage taken periodically over time.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Diagnostics.ResourceMonitoring.Snapshot.#ctor(System.TimeSpan,System.TimeSpan,System.TimeSpan,System.UInt64)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Diagnostics.ResourceMonitoring.Snapshot" /> struct.</summary>
      <param name="totalTimeSinceStart">The time at which the snapshot was taken.</param>
      <param name="kernelTimeSinceStart">The amount of kernel time that has elapsed since startup.</param>
      <param name="userTimeSinceStart">The amount of user time that has elapsed since startup.</param>
      <param name="memoryUsageInBytes">The memory usage within the system in bytes.</param>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.Snapshot.KernelTimeSinceStart">
      <summary>
            Gets the amount of kernel time that has elapsed since startup.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.Snapshot.MemoryUsageInBytes">
      <summary>
            Gets the memory usage within the system in bytes.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.Snapshot.TotalTimeSinceStart">
      <summary>
            Gets the total CPU time that has elapsed since startup.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.Snapshot.UserTimeSinceStart">
      <summary>
            Gets the amount of user time that has elapsed since startup.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Diagnostics.ResourceMonitoring.SystemResources">
      <summary>
            Provides information about the CPU and memory limits defined by the underlying system.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Diagnostics.ResourceMonitoring.SystemResources.#ctor(System.Double,System.Double,System.UInt64,System.UInt64)">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Diagnostics.ResourceMonitoring.SystemResources" /> struct.</summary>
      <param name="guaranteedCpuUnits">The CPU units available in the system.</param>
      <param name="maximumCpuUnits">The maximum CPU units available in the system.</param>
      <param name="guaranteedMemoryInBytes">The memory allocated to the system in bytes.</param>
      <param name="maximumMemoryInBytes">The maximum memory allocated to the system in bytes.</param>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.SystemResources.GuaranteedCpuUnits">
      <summary>
            Gets the CPU units available in the system.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.SystemResources.GuaranteedMemoryInBytes">
      <summary>
            Gets the memory allocated to the system in bytes.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.SystemResources.MaximumCpuUnits">
      <summary>
            Gets the maximum CPU units available in the system.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Diagnostics.ResourceMonitoring.SystemResources.MaximumMemoryInBytes">
      <summary>
            Gets the container's request memory limit or the maximum allocated for the VM.</summary>
    </member>
  </members>
</doc>