<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.Hosting.WindowsServices</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.Hosting.WindowsServiceLifetimeHostBuilderExtensions">
      <summary>
            Extension methods for setting up WindowsServiceLifetime.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.WindowsServiceLifetimeHostBuilderExtensions.AddWindowsService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Hosting.WindowsServiceLifetimeOptions})">
      <summary>
            Configures the lifetime of the <see cref="T:Microsoft.Extensions.Hosting.IHost" /> built from <paramref name="services" /> to
            <see cref="T:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime" /> and enables logging to the event log with the application name as the default source name.</summary>
      <param name="services">
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> used to build the <see cref="T:Microsoft.Extensions.Hosting.IHost" />.
            For example, <see cref="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Services" /> or the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> passed to the
            <see cref="M:Microsoft.Extensions.Hosting.IHostBuilder.ConfigureServices(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection})" /> callback.</param>
      <param name="configure">An <see cref="T:System.Action`1" /> to configure the provided <see cref="T:Microsoft.Extensions.Hosting.WindowsServiceLifetimeOptions" />.</param>
      <returns>The <paramref name="services" /> instance for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.WindowsServiceLifetimeHostBuilderExtensions.AddWindowsService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <summary>
            Configures the lifetime of the <see cref="T:Microsoft.Extensions.Hosting.IHost" /> built from <paramref name="services" /> to
            <see cref="T:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime" /> and enables logging to the event log with the application
            name as the default source name.</summary>
      <param name="services">
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> used to build the <see cref="T:Microsoft.Extensions.Hosting.IHost" />.
            For example, <see cref="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Services" /> or the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> passed to the
            <see cref="M:Microsoft.Extensions.Hosting.IHostBuilder.ConfigureServices(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection})" /> callback.</param>
      <returns>The <paramref name="services" /> instance for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.WindowsServiceLifetimeHostBuilderExtensions.UseWindowsService(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.WindowsServiceLifetimeOptions})">
      <summary>
            Sets the host lifetime to <see cref="T:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime" /> and enables logging to the event log with the application
            name as the default source name.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to operate on.</param>
      <param name="configure">An <see cref="T:System.Action`1" /> to configure the provided <see cref="T:Microsoft.Extensions.Hosting.WindowsServiceLifetimeOptions" />.</param>
      <returns>The <paramref name="hostBuilder" /> instance for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.WindowsServiceLifetimeHostBuilderExtensions.UseWindowsService(Microsoft.Extensions.Hosting.IHostBuilder)">
      <summary>
            Sets the host lifetime to <see cref="T:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime" /> and enables logging to the event log with
            the application name as the default source name.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to operate on.</param>
      <returns>The <paramref name="hostBuilder" /> instance for chaining.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.WindowsServiceLifetimeOptions">
      <summary>
            Specifies options to configure the lifetime of a Windows service.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.WindowsServiceLifetimeOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Hosting.WindowsServiceLifetimeOptions.ServiceName">
      <summary>
            The name used to identify the service to the system.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceHelpers">
      <summary>
            Helper methods for Windows Services.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceHelpers.IsWindowsService">
      <summary>
            Check if the current process is hosted as a Windows Service.</summary>
      <returns>
        <see langword="true" /> if the current process is hosted as a Windows Service; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime">
      <summary>
            Listens for shutdown signal and tracks the status of the Windows service.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.#ctor(Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.HostOptions},Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.WindowsServiceLifetimeOptions})">
      <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime" /> class.</summary>
      <param name="environment">Information about the host.</param>
      <param name="applicationLifetime">The <see cref="T:Microsoft.Extensions.Hosting.IHostApplicationLifetime" /> that tracks the service lifetime.</param>
      <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> used to instantiate the lifetime logger.</param>
      <param name="optionsAccessor">The <see cref="T:Microsoft.Extensions.Options.IOptions`1" /> containing options for the service.</param>
      <param name="windowsServiceOptionsAccessor">The Windows service options used to find the service name.</param>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.#ctor(Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.HostOptions})">
      <summary>
            Initializes a new <see cref="T:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime" /> instance.</summary>
      <param name="environment">Information about the host.</param>
      <param name="applicationLifetime">The <see cref="T:Microsoft.Extensions.Hosting.IHostApplicationLifetime" /> that tracks the service lifetime.</param>
      <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> used to instantiate the lifetime logger.</param>
      <param name="optionsAccessor">The <see cref="T:Microsoft.Extensions.Options.IOptions`1" /> containing options for the service.</param>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the <see cref="T:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime" />.</summary>
      <param name="disposing">
        <see langword="true" /> only when called from <see cref="M:System.IDisposable.Dispose" />; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.OnShutdown">
      <summary>
            Executes when a Shutdown command is sent to the service by the Service Control Manager (SCM).</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.OnStart(System.String[])">
      <summary>When implemented in a derived class, executes when a Start command is sent to the service by the Service Control Manager (SCM) or when the operating system starts (for a service that starts automatically). Specifies actions to take when the service starts.</summary>
      <param name="args">Data passed by the start command.</param>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.OnStop">
      <summary>
            Executes when a Stop command is sent to the service by the Service Control Manager (SCM).</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.StopAsync(System.Threading.CancellationToken)">
      <summary>
            Asynchronously stops and shuts down the host. This method is called from <see cref="M:Microsoft.Extensions.Hosting.IHost.StopAsync(System.Threading.CancellationToken)" />.</summary>
      <param name="cancellationToken">
            A cancellation token that indicates when stop should no longer be graceful.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>
            A task that represents the asynchronous stop operation.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.WindowsServices.WindowsServiceLifetime.WaitForStartAsync(System.Threading.CancellationToken)">
      <summary>
            Asynchronously waits until start is complete before continuing. This method is called at the beginning of <see cref="M:Microsoft.Extensions.Hosting.IHost.StartAsync(System.Threading.CancellationToken)" />. This can be used to delay startup until signaled by an external event.</summary>
      <param name="cancellationToken">
            A cancellation token that indicates when stop should no longer be graceful.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>
            A task that represents the asynchronous waiting for start operation.</returns>
    </member>
  </members>
</doc>