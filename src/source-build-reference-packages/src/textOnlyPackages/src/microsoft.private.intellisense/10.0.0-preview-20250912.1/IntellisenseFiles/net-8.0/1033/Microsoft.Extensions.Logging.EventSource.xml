<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.Logging.EventSource</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.Logging.EventSource.EventSourceLoggerProvider">
      <summary>
            The provider for the <see cref="T:Microsoft.Extensions.Logging.EventSource.EventSourceLogger" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.EventSource.EventSourceLoggerProvider.#ctor(Microsoft.Extensions.Logging.EventSource.LoggingEventSource)">
      <summary>
            Creates an instance of <see cref="T:Microsoft.Extensions.Logging.EventSource.EventSourceLoggerProvider" />.</summary>
      <param name="eventSource">The logging event source.</param>
    </member>
    <member name="M:Microsoft.Extensions.Logging.EventSource.EventSourceLoggerProvider.CreateLogger(System.String)">
      <summary>Creates a new <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.Logging.ILogger" /> instance.</summary>
      <param name="categoryName">The category name for messages produced by the logger.</param>
      <returns>The instance of <xref data-throw-if-not-resolved="true" uid="Microsoft.Extensions.Logging.ILogger"></xref> that was created.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Logging.EventSource.EventSourceLoggerProvider.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Logging.EventSource.LoggingEventSource">
      <summary>
            Bridges all ILogger-based logging to EventSource/EventListener logging.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Logging.EventSource.LoggingEventSource.Keywords">
      <summary>
            Defines the different ways data can be formatted in an event.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Logging.EventSource.LoggingEventSource.Keywords.FormattedMessage">
      <summary>
            Turns on the 'FormatMessage' event when ILogger.Log() is called. Provides the formatted string version of the information.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Logging.EventSource.LoggingEventSource.Keywords.JsonMessage">
      <summary>
            Turns on the 'MessageJson' event when ILogger.Log() is called. Provides a JSON representation of the Arguments.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Logging.EventSource.LoggingEventSource.Keywords.Message">
      <summary>
            Turns on the 'Message' event when ILogger.Log() is called. Provides information in a programmatic (unformatted) way.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Logging.EventSource.LoggingEventSource.Keywords.Meta">
      <summary>
            Events about the LoggingEventSource itself (that is, they did not come from ILogger).</summary>
    </member>
    <member name="T:Microsoft.Extensions.Logging.EventSourceLoggerFactoryExtensions">
      <summary>
            Extension methods for the <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> class.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Logging.EventSourceLoggerFactoryExtensions.AddEventSourceLogger(Microsoft.Extensions.Logging.ILoggingBuilder)">
      <summary>
            Adds a logger that writes messages to the <see cref="T:Microsoft.Extensions.Logging.EventSource.LoggingEventSource" /> instance.</summary>
      <param name="builder">The extension method argument.</param>
      <returns>The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</returns>
    </member>
  </members>
</doc>