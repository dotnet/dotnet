<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.Caching.StackExchangeRedis</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache" />
    <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions})">
      <param name="optionsAccessor" />
    </member>
    <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.Get(System.String)">
      <summary>Gets a value with the given key.</summary>
      <param name="key">A string identifying the requested value.</param>
      <returns>The located value or <see langword="null" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.GetAsync(System.String,System.Threading.CancellationToken)">
      <summary>Gets a value with the given key.</summary>
      <param name="key">A string identifying the requested value.</param>
      <param name="token">Optional. The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation, containing the located value or <see langword="null" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.Microsoft#Extensions#Caching#Distributed#IBufferDistributedCache#Set(System.String,System.Buffers.ReadOnlySequence{System.Byte},Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)">
      <param name="key" />
      <param name="value" />
      <param name="options" />
    </member>
    <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.Microsoft#Extensions#Caching#Distributed#IBufferDistributedCache#SetAsync(System.String,System.Buffers.ReadOnlySequence{System.Byte},Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions,System.Threading.CancellationToken)">
      <param name="key" />
      <param name="value" />
      <param name="options" />
      <param name="token" />
    </member>
    <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.Microsoft#Extensions#Caching#Distributed#IBufferDistributedCache#TryGet(System.String,System.Buffers.IBufferWriter{System.Byte})">
      <param name="key" />
      <param name="destination" />
    </member>
    <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.Microsoft#Extensions#Caching#Distributed#IBufferDistributedCache#TryGetAsync(System.String,System.Buffers.IBufferWriter{System.Byte},System.Threading.CancellationToken)">
      <param name="key" />
      <param name="destination" />
      <param name="token" />
    </member>
    <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.Refresh(System.String)">
      <summary>Refreshes a value in the cache based on its key, resetting its sliding expiration timeout (if any).</summary>
      <param name="key">A string identifying the requested value.</param>
    </member>
    <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.RefreshAsync(System.String,System.Threading.CancellationToken)">
      <summary>Refreshes a value in the cache based on its key, resetting its sliding expiration timeout (if any).</summary>
      <param name="key">A string identifying the requested value.</param>
      <param name="token">Optional. The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.Remove(System.String)">
      <summary>Removes the value with the given key.</summary>
      <param name="key">A string identifying the requested value.</param>
    </member>
    <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.RemoveAsync(System.String,System.Threading.CancellationToken)">
      <summary>Removes the value with the given key.</summary>
      <param name="key">A string identifying the requested value.</param>
      <param name="token">Optional. The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)">
      <summary>Sets a value with the given key.</summary>
      <param name="key">A string identifying the requested value.</param>
      <param name="value">The value to set in the cache.</param>
      <param name="options">The cache options for the value.</param>
    </member>
    <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions,System.Threading.CancellationToken)">
      <summary>Sets the value with the given key.</summary>
      <param name="key">A string identifying the requested value.</param>
      <param name="value">The value to set in the cache.</param>
      <param name="options">The cache options for the value.</param>
      <param name="token">Optional. The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
      <exception cref="T:System.OperationCanceledException">The cancellation token was canceled. This exception is stored into the returned task.</exception>
      <returns>The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions">
      <summary>Configuration options for <see cref="T:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions.#ctor" />
    <member name="P:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions.Configuration">
      <summary>The configuration used to connect to Redis.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions.ConfigurationOptions">
      <summary>The configuration used to connect to Redis.
            This is preferred over Configuration.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions.ConnectionMultiplexerFactory" />
    <member name="P:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions.InstanceName">
      <summary>The Redis instance name.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions.Microsoft#Extensions#Options#IOptions{Microsoft#Extensions#Caching#StackExchangeRedis#RedisCacheOptions}#Value">
      <summary>Gets the default configured <typeparamref name="TOptions" /> instance.</summary>
      <returns>An object that represents the Redis cache options.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions.ProfilingSession" />
    <member name="T:Microsoft.Extensions.DependencyInjection.StackExchangeRedisCacheServiceCollectionExtensions">
      <summary>Extension methods for setting up Redis distributed cache related services in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.StackExchangeRedisCacheServiceCollectionExtensions.AddStackExchangeRedisCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions})">
      <summary>Adds Redis distributed caching services to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</summary>
      <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add services to.</param>
      <param name="setupAction">An <see cref="T:System.Action`1" /> to configure the provided
            <see cref="T:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions" />.</param>
      <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
    </member>
  </members>
</doc>