<Project>

  <Import Project="$([MSBuild]::GetPathOfFileAbove(Directory.Build.props, $(MSBuildThisFileDirectory)..))" />

  <PropertyGroup>
    <TargetFramework>$(NetCurrent)</TargetFramework>
    <IsPackable>false</IsPackable>
    <InnerRepoName>$(MSBuildProjectName)</InnerRepoName>

    <ExternalPackagesDir>$([MSBuild]::NormalizeDirectory('$(RepoRoot)', 'src', 'externalPackages'))</ExternalPackagesDir>
    <KeysDir>$([MSBuild]::NormalizeDirectory('$(ExternalPackagesDir)', 'keys'))</KeysDir>
    <SubmoduleDirectory>$([MSBuild]::NormalizeDirectory('$(ExternalPackagesDir)', 'src'))</SubmoduleDirectory>
    <PatchesDir>$([MSBuild]::NormalizeDirectory('$(ExternalPackagesDir)', 'patches'))</PatchesDir>
    <OriginalProjectDirectory>$([MSBuild]::NormalizeDirectory('$(SubmoduleDirectory)', '$(InnerRepoName)'))</OriginalProjectDirectory>
    <ProjectDirectory>$([MSBuild]::NormalizeDirectory('$(OriginalProjectDirectory)', 'artifacts', 'clone'))</ProjectDirectory>
    <ArtifactsLogRepoDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsLogDir)', '$(InnerRepoName)'))</ArtifactsLogRepoDir>

    <MinimalConsoleLogOutput Condition="'$(MinimalConsoleLogOutput)' == ''">true</MinimalConsoleLogOutput>
    <RepoConsoleLogFile>$(ArtifactsLogRepoDir)$(InnerRepoName).log</RepoConsoleLogFile>
    <RedirectRepoOutputToLog Condition="'$(MinimalConsoleLogOutput)' == 'true'">&gt; $(RepoConsoleLogFile) 2&gt;&amp;1</RedirectRepoOutputToLog>

    <NuGetConfigFile>$(BaseIntermediateOutputPath)NuGet.config</NuGetConfigFile>

    <XPlatSourceBuildTasksName>Microsoft.DotNet.SourceBuild.Tasks.XPlat</XPlatSourceBuildTasksName>
    <XPlatSourceBuildTasksAssembly>$([MSBuild]::NormalizePath('$(ArtifactsBinDir)', '$(XPlatSourceBuildTasksName)', '$(Configuration)', '$(NetCurrent)', '$(XPlatSourceBuildTasksName).dll'))</XPlatSourceBuildTasksAssembly>
  </PropertyGroup>

  <ItemGroup>
    <PatchToApply Include="$(PatchesDir)$(InnerRepoName)/*.patch" />
  </ItemGroup>

  <ItemGroup>
    <EnvironmentVariables Include="DotNetPackageVersionPropsPath=$(PackageVersionPropsPath)" />
    <EnvironmentVariables Include="DotNetRestorePackagesPath=$(PackagesDir)" />

    <!-- Arcade tools.sh picks up DotNetCoreSdkDir, but we can pass DOTNET_INSTALL_DIR directly. -->
    <EnvironmentVariables Include="DOTNET_INSTALL_DIR=$(DotNetRoot)" />
    <EnvironmentVariables Include="DOTNET_PATH=$(DotNetRoot)" />
    <EnvironmentVariables Include="DOTNET_HOST_PATH=$(DotNetTool)" />

    <!-- _InitializeDotNetCli is used by websdk and templating to decide whether to init the SDK -->
    <EnvironmentVariables Include="_InitializeDotNetCli=$(DotNetRoot)" />
    <EnvironmentVariables Include="_DotNetInstallDir=$(DotNetRoot)" />

    <!-- We pass '-ci', but also apply ci mode via env var for edge cases. (E.g. misbehaving inner builds.) -->
    <EnvironmentVariables Include="ContinuousIntegrationBuild=true" />

    <!-- Turn off node reuse for source build because repos use conflicting versions
         of compilers which cause assembly load errors.
         See https://github.com/dotnet/source-build/issues/541 -->
    <EnvironmentVariables Include="MSBUILDDISABLENODEREUSE=1" />

    <!--
      Apply official build versioning to match Microsoft build. These are based on build date, so
      need to be parsed from Maestro++ auto-update and passed through.
    -->
    <EnvironmentVariables Include="OfficialBuildId=$(OfficialBuildId)" />
    <EnvironmentVariables Include="BUILD_BUILDNUMBER=$(OfficialBuildId)" />

    <EnvironmentVariables Include="SourceRoot=$(ProjectDirectory)" />

    <EnvironmentVariables Include="RestoreConfigFile=$(NuGetConfigFile)" />
    
    <!-- Disable restoring transitive aspnetcore and windowsdesktop targeting packs to avoid unnecessary dependencies. -->
    <EnvironmentVariables Include="DisableTransitiveFrameworkReferenceDownloads=true" />
  </ItemGroup>

  <!-- repo-projects depend on the repo tasks project to invoke custom msbuild tasks -->
  <ItemGroup>
    <ProjectReference Include="$(RepoRoot)eng\tasks\$(XPlatSourceBuildTasksName)\$(XPlatSourceBuildTasksName).csproj" ReferenceOutputAssembly="false" SkipGetTargetFrameworkProperties="true" />
  </ItemGroup>

</Project>
