<!-- Whenever altering this or other Source Build files, please include @dotnet/source-build-internal as a reviewer. -->

<Project>

  <PropertyGroup>
    <GitHubRepositoryName>source-build-reference-packages</GitHubRepositoryName>
    <SourceBuildManagedOnly>true</SourceBuildManagedOnly>
  </PropertyGroup>

  <Target Name="TriggerBuildDependencyPackageProjects"
          Condition="'$(DotNetBuildInnerRepo)' == 'true'"
          BeforeTargets="Execute">
    <PropertyGroup>
      <LocalNuGetPackageCacheDirectory Condition="'$(LocalNuGetPackageCacheDirectory)' == ''">$(CurrentRepoSourceBuiltNupkgCacheDir)</LocalNuGetPackageCacheDirectory>
      <_AdditionalDependencyProjectsBuildArgs />
      <_AdditionalDependencyProjectsBuildArgs Condition="'$(RestoreConfigFile)' != ''" >$(_AdditionalDependencyProjectsBuildArgs) /p:RestoreConfigFile=$(RestoreConfigFile)</_AdditionalDependencyProjectsBuildArgs>
    </PropertyGroup>

    <MakeDir Condition="'$(LocalNuGetPackageCacheDirectory)' != ''"
             Directories="$(LocalNuGetPackageCacheDirectory)" />

    <!-- 'SourceBuildOutputDir' must be included as a build parameter in order to correct new SBRPs referencing online feeds when dependent on DependencyPackageProjects. -->
    <!-- See https://github.com/dotnet/source-build-reference-packages/pull/858 -->
    <!-- This command purposefully does not pass DotNetBuildRepo or DotNetBuildOrchestrator, even though that would be the typical pattern for
         inner command args. The issue is that if they are passed, this file will re-imported on the dependency package project invocation,
         and because this target executes before Execute, the build will infinitely recurse. This probably could be fixed in other ways, but
         given that SBRP is slated at some point to get proper support for project refs as a replacement for this invocation, this isn't really worth doing. -->
    <Exec
      Command="./build.sh --configuration $(Configuration) /bl:$(ArtifactsDir)sourcebuild-dependency-projects.binlog /p:LocalNuGetPackageCacheDirectory=$(LocalNuGetPackageCacheDirectory) /p:SourceBuildOutputDir=$(SourceBuildOutputDir) /p:BuildDependencyPackageProjects=true /p:SetUpSourceBuildIntermediateNupkgCache=true /p:DotNetBuildSourceOnly=true /p:DotNetBuildInnerRepo=true /p:MicrosoftNetCoreIlasmPackageRuntimeId=$(MicrosoftNetCoreIlasmPackageRuntimeId) $(_AdditionalDependencyProjectsBuildArgs)"
      WorkingDirectory="$(InnerSourceBuildRepoRoot)"
      EnvironmentVariables="@(InnerBuildEnv)" />
  </Target>

</Project>
