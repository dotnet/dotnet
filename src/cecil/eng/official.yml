# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# Please make sure to check all the converted content, it is your team's responsibility to make sure that the pipeline is still valid and functions as expected.
# This pipeline will be extended to the OneESPT template
# If you are not using the E+D shared hosted pool with windows-2022, replace the pool section with your hosted pool, os, and image name. If you are using a Linux image, you must specify an additional windows image for SDL: https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/1es-pipeline-templates/features/sdlanalysis/overview#how-to-specify-a-windows-pool-for-the-sdl-source-analysis-stage
trigger:
  batch: true
  branches:
    include:
    - main
    - release/*
pr:
  branches:
    include:
    - main
    - release/*
variables:
- name: officialBuild
  value: ${{ and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}
- name: _BuildConfig
  value: Release
- name: _BuildArgs
  value: ''
- name: _DotNetArtifactsCategory
  value: .NETCore
- ${{ if eq(variables.officialBuild, 'true') }}:
  - name: _BuildArgs
    value: ${{ format('{0} /p:OfficialBuildId=$(Build.BuildNumber) /p:Test=false /p:IntegrationTest=false', variables['_BuildArgs']) }}
  - group: DotNet-HelixApi-Access
  - name: Codeql.Enabled
    value: True
  - name: Codeql.TSAEnabled
    value: True
resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: NetCore1ESPool-Internal
      image: 1es-windows-2022-pt
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: build
      displayName: Build
      jobs:
      - template: /eng/common/templates-official/jobs/jobs.yml@self
        parameters:
          enableTelemetry: true
          enablePublishUsingPipelines: true
          enablePublishBuildArtifacts: true
          ${{ if eq(variables.officialBuild, 'false') }}:
            enablePublishTestResults: true
            testResultsFormat: vstest
          enablePublishBuildAssets: true
          enableMicrobuild: true
          enableSourceBuild: true
          jobs:
          - job: Windows_NT
            pool:
              ${{ if eq(variables.officialBuild, 'false') }}:
                vmImage: windows-latest
              ${{ if eq(variables.officialBuild, 'true') }}:
                name: NetCore1ESPool-Internal
                demands: ImageOverride -equals 1es-windows-2022-pt
            variables:
            - ${{ if eq(variables.officialBuild, 'false') }}:
              - _SignType: test
              - _PublishArgs: ''
            - ${{ if eq(variables.officialBuild, 'true') }}:
              - _TeamName: .NET
              - _SignType: real
              - _PublishArgs: /p:DotNetArtifactsCategory=$(_DotNetArtifactsCategory) /p:DotNetPublishUsingPipelines=true
            - DotNetSignType: ${{ format('{0}', variables._SignType) }}
            steps:
            - checkout: self
              submodules: false
            - script: eng\common\cibuild.cmd -projects $(Build.SourcesDirectory)\Mono.Cecil.sln -configuration $(_BuildConfig) $(_BuildArgs) $(_PublishArgs) -integrationTest -nodeReuse "$false"
              env:
                MSBUILDENSURESTDOUTFORTASKPROCESSES: 1
              ${{ if eq(variables.officialBuild, 'false') }}:
                displayName: Build Mono.Cecil.sln $(_BuildConfig)
              ${{ if eq(variables.officialBuild, 'true') }}:
                displayName: Build and publish Mono.Cecil.sln $(_BuildConfig)
          - ${{ if eq(variables.officialBuild, 'false') }}:
            - job: Linux
              condition: eq(variables.officialBuild, 'false')
              pool:
                vmImage: ubuntu-latest
              steps:
              - checkout: self
                submodules: false
              - script: eng/common/cibuild.sh --projects $(Build.SourcesDirectory)/Mono.Cecil.sln --configuration $(_BuildConfig) $(_BuildArgs) --integrationTest --nodeReuse false
                env:
                  MSBUILDENSURESTDOUTFORTASKPROCESSES: 1
                displayName: Build Mono.Cecil.sln $(_BuildConfig)
          - ${{ if eq(variables.officialBuild, 'false') }}:
            - job: macOS
              pool:
                vmImage: macOS-latest
              steps:
              - checkout: self
                submodules: false
              - script: eng/common/cibuild.sh --projects $(Build.SourcesDirectory)/Mono.Cecil.sln --configuration $(_BuildConfig) $(_BuildArgs) --integrationTest --nodeReuse false
                env:
                  MSBUILDENSURESTDOUTFORTASKPROCESSES: 1
                displayName: Build Mono.Cecil.sln $(_BuildConfig)
    - ${{ if eq(variables.officialBuild, 'true') }}:
      - template: /eng/common/templates-official/post-build/post-build.yml@self
        parameters:
          publishingInfraVersion: 3