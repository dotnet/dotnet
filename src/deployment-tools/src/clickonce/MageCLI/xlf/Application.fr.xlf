<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="fr" original="../Application.resx">
    <body>
      <trans-unit id="AddLauncherIsExclusive">
        <source>'addlauncher' command can't be combined with any other command.</source>
        <target state="new">'addlauncher' command can't be combined with any other command.</target>
        <note />
      </trans-unit>
      <trans-unit id="ApplicationCacheCleared">
        <source>Application cache cleared.</source>
        <target state="new">Application cache cleared.</target>
        <note />
      </trans-unit>
      <trans-unit id="ApplicationManifestCannotHaveHostInBrowserTag">
        <source>The specified application manifest includes unsupported HostInBrowser tag.</source>
        <target state="new">The specified application manifest includes unsupported HostInBrowser tag.</target>
        <note />
      </trans-unit>
      <trans-unit id="DefaultAppName">
        <source>New Application</source>
        <target state="new">New Application</target>
        <note />
      </trans-unit>
      <trans-unit id="DeployManifestNotSigned">
        <source>Deployment manifest is not signed - "{0}"</source>
        <target state="new">Deployment manifest is not signed - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="DeployManifestSignatureInvalid">
        <source>Deployment manifest contains invalid signature - "{0}"</source>
        <target state="new">Deployment manifest contains invalid signature - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorApplicactionCachedCleared">
        <source>Failed to clear application cache.</source>
        <target state="new">Failed to clear application cache.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorInvalidSignature">
        <source>Manifest does not have a valid signature.</source>
        <target state="new">Manifest does not have a valid signature.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorInvalidTimestampFormat">
        <source>Timestamp is not encoded as a base64 string.</source>
        <target state="new">Timestamp is not encoded as a base64 string.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorMessage">
        <source>Error</source>
        <target state="new">Error</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorMissingSignatureNode">
        <source>Signature node is missing.</source>
        <target state="new">Signature node is missing.</target>
        <note />
      </trans-unit>
      <trans-unit id="ErrorWritingOutputFile">
        <source>Error writing output file "{0}".</source>
        <target state="new">Error writing output file "{0}".</target>
        <note />
      </trans-unit>
      <trans-unit id="FailedToAddLauncher">
        <source>Failed to add Launcher.</source>
        <target state="new">Failed to add Launcher.</target>
        <note />
      </trans-unit>
      <trans-unit id="FailedToUpdateLauncherResources">
        <source>Failed to update Launcher resources.</source>
        <target state="new">Failed to update Launcher resources.</target>
        <note />
      </trans-unit>
      <trans-unit id="FileNotWriteable">
        <source>Cannot write to file "{0}"</source>
        <target state="new">Cannot write to file "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="FileTypeSpecificOption">
        <source>The "{0}" option can only be used with the following type of files: "{1}"</source>
        <target state="new">The "{0}" option can only be used with the following type of files: "{1}"</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpTerse">
        <source>Commands
  -New &lt;file_type&gt;	          -n
  -Update &lt;file_name&gt;	          -u
  -Sign &lt;file_name&gt;	          -s
  -ClearApplicationCache	  -cc
  -Verify &lt;manifest_file_name&gt;    -ver
  -AddLauncher &lt;binary_to_launch&gt; -al
  -Help [verbose]		  -h -?



Options
  -Algorithm &lt;sha256RSA&gt;            -a
  -AppCodeBase &lt;path&gt;	            -appc
  -AppManifest &lt;path&gt;	            -appm
  -CertFile &lt;file_name&gt;	            -cf
  -CertHash &lt;hash&gt;                  -ch
  -CryptoProvider &lt;name&gt;            -csp
  -FromDirectory &lt;path&gt;	            -fd
  -IconFile &lt;file_path&gt;             -if
  -IncludeProviderURL &lt;true|false&gt;  -ip
  -Install &lt;true|false&gt;             -i 
  -KeyContainer &lt;name&gt;              -kc
  -MinVersion &lt;version #|none&gt;      -mv
  -Name &lt;name&gt;		            -n
  -Password &lt;password&gt;	            -pwd
  -Processor &lt;processor&gt;	    -p
  -ProviderURL &lt;url&gt; 	            -pu
  -Publisher &lt;publisher_name&gt;       -pub
  -SupportURL &lt;support_url&gt;         -s
  -TargetDirectory &lt;path&gt;	    -td
  -TimeStampUri &lt;uri&gt;               -ti
  -ToFile	&lt;file_name&gt;	    -t
  -TrustLevel &lt;level&gt;	            -tr
  -TrustURLParameters &lt;true|false&gt;  -tu
  -UseManifestForTrust &lt;true|false&gt; -um
  -Version &lt;version&gt;	            -v

Use "mage -help verbose" for more detailed help</source>
        <target state="new">Commands
  -New &lt;file_type&gt;	          -n
  -Update &lt;file_name&gt;	          -u
  -Sign &lt;file_name&gt;	          -s
  -ClearApplicationCache	  -cc
  -Verify &lt;manifest_file_name&gt;    -ver
  -AddLauncher &lt;binary_to_launch&gt; -al
  -Help [verbose]		  -h -?



Options
  -Algorithm &lt;sha256RSA&gt;            -a
  -AppCodeBase &lt;path&gt;	            -appc
  -AppManifest &lt;path&gt;	            -appm
  -CertFile &lt;file_name&gt;	            -cf
  -CertHash &lt;hash&gt;                  -ch
  -CryptoProvider &lt;name&gt;            -csp
  -FromDirectory &lt;path&gt;	            -fd
  -IconFile &lt;file_path&gt;             -if
  -IncludeProviderURL &lt;true|false&gt;  -ip
  -Install &lt;true|false&gt;             -i 
  -KeyContainer &lt;name&gt;              -kc
  -MinVersion &lt;version #|none&gt;      -mv
  -Name &lt;name&gt;		            -n
  -Password &lt;password&gt;	            -pwd
  -Processor &lt;processor&gt;	    -p
  -ProviderURL &lt;url&gt; 	            -pu
  -Publisher &lt;publisher_name&gt;       -pub
  -SupportURL &lt;support_url&gt;         -s
  -TargetDirectory &lt;path&gt;	    -td
  -TimeStampUri &lt;uri&gt;               -ti
  -ToFile	&lt;file_name&gt;	    -t
  -TrustLevel &lt;level&gt;	            -tr
  -TrustURLParameters &lt;true|false&gt;  -tu
  -UseManifestForTrust &lt;true|false&gt; -um
  -Version &lt;version&gt;	            -v

Use "mage -help verbose" for more detailed help</target>
        <note />
      </trans-unit>
      <trans-unit id="HelpVerbose">
        <source>Commands:

  -New &lt;file_type&gt;        -n
      Generate a new application manifest, deployment manifest, or trust
      license, using the options listed below.
      Examples:
        -New Application -ToFile MyApp.manifest -Name MyApp -Processor X86
        -New Deployment -ToFile MyApp.application -Name MyApp -Version 1.0.0.0
    
  -Update &lt;file_name&gt;     -u
      Update an existing application manifest, deployment manifest, or trust
      License, updating it as specified by the options listed below.
      Examples:
        -Update MyApp.manifest -FromDirectory bin/release
        -Update MyApp.application -Version 2.1.0.123 -ToFile MyApp21.application 
          
  -Sign &lt;file_name&gt;       -s
      Sign an existing manifest or license with a keypair or an X509
      certificate.
      Examples:
        -Sign MyApp.manifest -CertFile MyCert.pfx -Password mycertpassword
    
  -Verify &lt;manifest_file_name&gt;       -ver
      Verify if the manifest is signed correctly. Cannot be combined with other commands.
      Example:
        -Verify MyApp.manifest
  
  -AddLauncher &lt;binary_to_launch&gt;    -al
      Adds Launcher to target directory and sets its binary to launch.
      Example:
        -AddLauncher myapp.dll -TargetDirectory bin/release

  -ClearApplicationCache  -cc
      Clear the downloaded application cache of all online-only applications. 

  -Help [verbose]         -h -?
      Print usage instructions.
      Examples:
        -Help
        -Help Verbose

Options:

  -Algorithm &lt;sha256RSA&gt;      -a
      Specifies the algorithm to generate digests.
      Example:
         -Algorithm sha256RSA

  -AppCodeBase &lt;path&gt;     -appc
      Specifies the code base of the app manifest to be placed in the
      deployment manifest being generated or updated.
      Example:
         -AppCodeBase 1.0.0.0/myapp.manifest
      
  -AppManifest &lt;path&gt;     -appm
      Specifies the local path to an application manifest that is being
      referenced from the deployment manifest being generated or updated.
      Example:
        -AppManifest MyApp.manifest

  -CertFile &lt;file_name&gt;   -cf
      Specifies the name of an X509 certificate file with which to sign a
      manifest or license file.  This option can be used in conjunction 
      with the -Password option, if the certificate requires a password
      for Personal Information Exchange (PFX) files. If the file does not 
      contain private key a combination of -CryptoProvider and 
      -KeyContainer options is required.
      Example:
        -CertFile MyCert.pfx
        -CertFile MyCert.pfx -Password mycertpassword
        -CertFile PublicKey.cer -KeyContainer name -CryptoProvider MyCspName

  -CertHash &lt;hash&gt;        -ch
      Specifies the hash of an X509 certificate in your local cert store.
      Example:
        -CertHash a1b2c3d4e5f6g7h8i9j0

  -CryptoProvider &lt;name&gt;  -csp
      Specifies the name of cryptographic service provider (CSP) that contains
      the private key container.  This option requires the -KeyContainer option.
      Example:
        -CryptoProvider "Microsoft Enhanced Cryptographic Provider v1.0" -KeyContainer name

  -FromDirectory &lt;path&gt;   -fd
      Specifies the directory to recursively search for files to include in
      an application manifest.  
      Example:
        -FromDirectory bin/release
        
  -IconFile &lt;file_path&gt;   -if
      Specifies relative path and filename for the application icon.
        
  -IncludeProviderURL &lt;true|false&gt; -ip
      Specifies if the deployment manifest will include the deployment 
      provider URL.
      
  -Install &lt;true|false&gt;   -i
      Specifies if the application will be an installed or an online only 
      application.

  -KeyContainer &lt;name&gt;    -kc
      Specifies the key container that contains the name of the private key.
      This option requires the -CryptoProvider option.
      Example:
        -KeyContainer name -CryptoProvider "Microsoft Enhanced Cryptographic Provider v1.0"

  -MinVersion &lt;version #|none&gt;   -mv
      Specifies whether the manifest being generated specifies a minimum version.
      Must be of the form "0.0.0.0".  Specifying "none" removes this from the manifest.
      Example:
        -MinVersion 1.2.3.4
        -MinVersion none

  -Name &lt;name&gt;            -n
      Specifies the name of the application whose manifest is being 
      generated or updated.  Names which include spaces should be enclosed
      in quotes.
      Examples:
        -Name MyApp
        -Name "My Application"
        
  -Password &lt;password&gt;    -pwd
      Specifies the password to use with an X509 certificate when signing
      a manifest or license file.  See example above.

  -Processor &lt;processor&gt;  -p
      Specifies the processor architecture of the application whose manifest
      is being generated or updated.
      Examples:
        -Processor MSIL
        -Processor i386

  -ProviderURL &lt;url&gt;      -pu
      Specifies the provider URL to be use in the deployment manifest being
      generated or updated.
      Example:
        -ProviderURL http://www.whatever.net/application

  -Publisher &lt;publisher_name&gt;    -pub
      Specifies the name of the publisher.  Names which include spaces should 
      be enclosed in quotes.
      Examples:
        -Publisher MyCompany
        -Publisher "My Company"

  -SupportURL &lt;url&gt;       -s
      Specifies the support URL for the application.
      Example:
        -SupportURL http://www.whatever.net/application/support

  -TargetDirectory &lt;path&gt;	  -td
      Specifies the directory to which to add the Launcher.
      Example:
        -TargetDirectory bin/release

  -ToFile &lt;file_name&gt;     -t
      Specifies the name of the file to save the output of a sign, new, or 
      update command.
      Example:
        -ToFile MyApp.manifest

  -TimeStampUri &lt;uri&gt;     -ti
      Specifies the URI to use for timestamping during signing.

  -TrustLevel &lt;level&gt;     -tr
      Specifies the trust level to be included in the application manifest
      being generated or updated. Valid values are: "Internet", "LocalIntranet",
      and "FullTrust".
      Example:
        -TrustLevel FullTrust

  -TrustURLParameters &lt;true|false&gt;  -tu
      Specifies if URL parameters will be trusted and passed to the application.
            
  -UseManifestForTrust &lt;true|false&gt; -um
      Specifies if the application manifest will be used for certification and
      branding information.
            
  -Version &lt;version&gt;                -v
      Specifies the version of the application whose manifest is being 
      generated or updated.  Must be of the form "0.0.0.0".
      Example:
        -Version 1.2.3.2112</source>
        <target state="new">Commands:

  -New &lt;file_type&gt;        -n
      Generate a new application manifest, deployment manifest, or trust
      license, using the options listed below.
      Examples:
        -New Application -ToFile MyApp.manifest -Name MyApp -Processor X86
        -New Deployment -ToFile MyApp.application -Name MyApp -Version 1.0.0.0
    
  -Update &lt;file_name&gt;     -u
      Update an existing application manifest, deployment manifest, or trust
      License, updating it as specified by the options listed below.
      Examples:
        -Update MyApp.manifest -FromDirectory bin/release
        -Update MyApp.application -Version 2.1.0.123 -ToFile MyApp21.application 
          
  -Sign &lt;file_name&gt;       -s
      Sign an existing manifest or license with a keypair or an X509
      certificate.
      Examples:
        -Sign MyApp.manifest -CertFile MyCert.pfx -Password mycertpassword
    
  -Verify &lt;manifest_file_name&gt;       -ver
      Verify if the manifest is signed correctly. Cannot be combined with other commands.
      Example:
        -Verify MyApp.manifest
  
  -AddLauncher &lt;binary_to_launch&gt;    -al
      Adds Launcher to target directory and sets its binary to launch.
      Example:
        -AddLauncher myapp.dll -TargetDirectory bin/release

  -ClearApplicationCache  -cc
      Clear the downloaded application cache of all online-only applications. 

  -Help [verbose]         -h -?
      Print usage instructions.
      Examples:
        -Help
        -Help Verbose

Options:

  -Algorithm &lt;sha256RSA&gt;      -a
      Specifies the algorithm to generate digests.
      Example:
         -Algorithm sha256RSA

  -AppCodeBase &lt;path&gt;     -appc
      Specifies the code base of the app manifest to be placed in the
      deployment manifest being generated or updated.
      Example:
         -AppCodeBase 1.0.0.0/myapp.manifest
      
  -AppManifest &lt;path&gt;     -appm
      Specifies the local path to an application manifest that is being
      referenced from the deployment manifest being generated or updated.
      Example:
        -AppManifest MyApp.manifest

  -CertFile &lt;file_name&gt;   -cf
      Specifies the name of an X509 certificate file with which to sign a
      manifest or license file.  This option can be used in conjunction 
      with the -Password option, if the certificate requires a password
      for Personal Information Exchange (PFX) files. If the file does not 
      contain private key a combination of -CryptoProvider and 
      -KeyContainer options is required.
      Example:
        -CertFile MyCert.pfx
        -CertFile MyCert.pfx -Password mycertpassword
        -CertFile PublicKey.cer -KeyContainer name -CryptoProvider MyCspName

  -CertHash &lt;hash&gt;        -ch
      Specifies the hash of an X509 certificate in your local cert store.
      Example:
        -CertHash a1b2c3d4e5f6g7h8i9j0

  -CryptoProvider &lt;name&gt;  -csp
      Specifies the name of cryptographic service provider (CSP) that contains
      the private key container.  This option requires the -KeyContainer option.
      Example:
        -CryptoProvider "Microsoft Enhanced Cryptographic Provider v1.0" -KeyContainer name

  -FromDirectory &lt;path&gt;   -fd
      Specifies the directory to recursively search for files to include in
      an application manifest.  
      Example:
        -FromDirectory bin/release
        
  -IconFile &lt;file_path&gt;   -if
      Specifies relative path and filename for the application icon.
        
  -IncludeProviderURL &lt;true|false&gt; -ip
      Specifies if the deployment manifest will include the deployment 
      provider URL.
      
  -Install &lt;true|false&gt;   -i
      Specifies if the application will be an installed or an online only 
      application.

  -KeyContainer &lt;name&gt;    -kc
      Specifies the key container that contains the name of the private key.
      This option requires the -CryptoProvider option.
      Example:
        -KeyContainer name -CryptoProvider "Microsoft Enhanced Cryptographic Provider v1.0"

  -MinVersion &lt;version #|none&gt;   -mv
      Specifies whether the manifest being generated specifies a minimum version.
      Must be of the form "0.0.0.0".  Specifying "none" removes this from the manifest.
      Example:
        -MinVersion 1.2.3.4
        -MinVersion none

  -Name &lt;name&gt;            -n
      Specifies the name of the application whose manifest is being 
      generated or updated.  Names which include spaces should be enclosed
      in quotes.
      Examples:
        -Name MyApp
        -Name "My Application"
        
  -Password &lt;password&gt;    -pwd
      Specifies the password to use with an X509 certificate when signing
      a manifest or license file.  See example above.

  -Processor &lt;processor&gt;  -p
      Specifies the processor architecture of the application whose manifest
      is being generated or updated.
      Examples:
        -Processor MSIL
        -Processor i386

  -ProviderURL &lt;url&gt;      -pu
      Specifies the provider URL to be use in the deployment manifest being
      generated or updated.
      Example:
        -ProviderURL http://www.whatever.net/application

  -Publisher &lt;publisher_name&gt;    -pub
      Specifies the name of the publisher.  Names which include spaces should 
      be enclosed in quotes.
      Examples:
        -Publisher MyCompany
        -Publisher "My Company"

  -SupportURL &lt;url&gt;       -s
      Specifies the support URL for the application.
      Example:
        -SupportURL http://www.whatever.net/application/support

  -TargetDirectory &lt;path&gt;	  -td
      Specifies the directory to which to add the Launcher.
      Example:
        -TargetDirectory bin/release

  -ToFile &lt;file_name&gt;     -t
      Specifies the name of the file to save the output of a sign, new, or 
      update command.
      Example:
        -ToFile MyApp.manifest

  -TimeStampUri &lt;uri&gt;     -ti
      Specifies the URI to use for timestamping during signing.

  -TrustLevel &lt;level&gt;     -tr
      Specifies the trust level to be included in the application manifest
      being generated or updated. Valid values are: "Internet", "LocalIntranet",
      and "FullTrust".
      Example:
        -TrustLevel FullTrust

  -TrustURLParameters &lt;true|false&gt;  -tu
      Specifies if URL parameters will be trusted and passed to the application.
            
  -UseManifestForTrust &lt;true|false&gt; -um
      Specifies if the application manifest will be used for certification and
      branding information.
            
  -Version &lt;version&gt;                -v
      Specifies the version of the application whose manifest is being 
      generated or updated.  Must be of the form "0.0.0.0".
      Example:
        -Version 1.2.3.2112</target>
        <note />
      </trans-unit>
      <trans-unit id="InfoMessage">
        <source>Info</source>
        <target state="new">Info</target>
        <note />
      </trans-unit>
      <trans-unit id="InternalError">
        <source>Internal error, please try again.</source>
        <target state="new">Internal error, please try again.</target>
        <note>trailing space is added at run-time</note>
      </trans-unit>
      <trans-unit id="InvalidAddLauncherOption">
        <source>The "{0}" option can not be used with -AddLauncher command.</source>
        <target state="new">The "{0}" option can not be used with -AddLauncher command.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidAlgorithmValue">
        <source>Algorithm has to be sha256RSA. Specified - "{0}".</source>
        <target state="new">Algorithm has to be sha256RSA. Specified - "{0}".</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidBinaryToLaunch">
        <source>Binary to launch cannot include a path, it can only be a filename - {0}.</source>
        <target state="new">Binary to launch cannot include a path, it can only be a filename - {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidCertFile">
        <source>Cert file is not of proper format - "{0}"</source>
        <target state="new">Cert file is not of proper format - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidCertNoPrivateKey">
        <source>This certificate does not contain a private key - "{0}"</source>
        <target state="new">This certificate does not contain a private key - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidCertUsage">
        <source>This certificate cannot be used for signing - "{0}"</source>
        <target state="new">This certificate cannot be used for signing - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidCodebase">
        <source>The codebase is invalid - "{0}"</source>
        <target state="new">The codebase is invalid - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidDirectory">
        <source>Directory not found - "{0}"</source>
        <target state="new">Directory not found - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidFileType">
        <source>Invalid file type, must be "Application", or "Deployment"</source>
        <target state="new">Invalid file type, must be "Application", or "Deployment"</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidHash">
        <source>No cert found matching specified hash - "{0}"</source>
        <target state="new">No cert found matching specified hash - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidIncludeProviderURL">
        <source>The -IncludeProviderURL option must be "true", "false", "t", or "f" - "{0}"</source>
        <target state="new">The -IncludeProviderURL option must be "true", "false", "t", or "f" - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidInputFile">
        <source>Unrecognized file type - "{0}"</source>
        <target state="new">Unrecognized file type - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidInstall">
        <source>The -Install option must be "true", "false", "t", or "f" - "{0}"</source>
        <target state="new">The -Install option must be "true", "false", "t", or "f" - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidKeyFile">
        <source>Key file is not of proper format - "{0}"</source>
        <target state="new">Key file is not of proper format - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidMinVersion">
        <source>The minimum version specified is not valid.</source>
        <target state="new">The minimum version specified is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidNonAddLauncherOption">
        <source>The "{0}" option can only be used with -AddLauncher command.</source>
        <target state="new">The "{0}" option can only be used with -AddLauncher command.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidNonManifestOption">
        <source>The "{0}" option can only be used with the -Update or -New commands.</source>
        <target state="new">The "{0}" option can only be used with the -Update or -New commands.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidPassword">
        <source>Cert password is incorrect - "{0}"</source>
        <target state="new">Cert password is incorrect - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidPath">
        <source>File not found - "{0}"</source>
        <target state="new">File not found - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidProcessor">
        <source>Unknown processor type "{0}".  Supported processor types are:</source>
        <target state="new">Unknown processor type "{0}".  Supported processor types are:</target>
        <note>Will be followed by a list of processor types, after a newline is added at run-time</note>
      </trans-unit>
      <trans-unit id="InvalidRequiredUpdate">
        <source>The -RequiredUpdate option must be "true", "false", "t", or "f" - "{0}"</source>
        <target state="new">The -RequiredUpdate option must be "true", "false", "t", or "f" - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidSigningPlatform">
        <source>Signing is only supported on Windows.</source>
        <target state="new">Signing is only supported on Windows.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidTimestamp">
        <source>The timestamp URI specified is not valid.</source>
        <target state="new">The timestamp URI specified is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidTrustLevel">
        <source>Invalid trust level, must be either "LocalIntranet", "Internet", or "FullTrust" - "{0}"</source>
        <target state="new">Invalid trust level, must be either "LocalIntranet", "Internet", or "FullTrust" - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidTrustURLParameters">
        <source>The -TrustURLParameters option must be "true", "false", "t", or "f" - "{0}"</source>
        <target state="new">The -TrustURLParameters option must be "true", "false", "t", or "f" - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidUrl">
        <source>The URL is not of the proper format - "{0}"</source>
        <target state="new">The URL is not of the proper format - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidUseManifestForTrust">
        <source>The -UseManifestForTrust option must be "true", "false", "t", or "f" - "{0}"</source>
        <target state="new">The -UseManifestForTrust option must be "true", "false", "t", or "f" - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidVersion">
        <source>Version must be of format X.X.X.X (ex 1.0.0.0) - "{0}"</source>
        <target state="new">Version must be of format X.X.X.X (ex 1.0.0.0) - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="LauncherSuccessfullyAdded">
        <source>Launcher successfully added.</source>
        <target state="new">Launcher successfully added.</target>
        <note />
      </trans-unit>
      <trans-unit id="LockedFile">
        <source>Not including locked file {0}</source>
        <target state="new">Not including locked file {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingAddLauncherOption">
        <source>Missing {0} option, it is required with AddLauncher command.</source>
        <target state="new">Missing {0} option, it is required with AddLauncher command.</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingArgument">
        <source>Missing value following the "{0}" option</source>
        <target state="new">Missing value following the "{0}" option</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingBinaryToLaunch">
        <source>Binary to launch cannot be empty.</source>
        <target state="new">Binary to launch cannot be empty.</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingCspOrContainer">
        <source>This certificate does not contain a private key - "{0}", if this is a public key certificate, please provide valid cryptographic service provider and key container names</source>
        <target state="new">This certificate does not contain a private key - "{0}", if this is a public key certificate, please provide valid cryptographic service provider and key container names</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingDeploymentProviderUrl">
        <source>The IncludeProviderURL option is set to true, but no deployment provider Url is provided.</source>
        <target state="new">The IncludeProviderURL option is set to true, but no deployment provider Url is provided.</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingLauncherTemplate">
        <source>Launcher template "{0}" does not exist.</source>
        <target state="new">Launcher template "{0}" does not exist.</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingPassword">
        <source>Missing Password option, this is required when using the CertFile option.</source>
        <target state="new">Missing Password option, this is required when using the CertFile option.</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingUseApplicationManifestForTrustInfo">
        <source>When generating or updating an application manifest, the {0} option can only be used when the UseManifestForTrust option is set to true.</source>
        <target state="new">When generating or updating an application manifest, the {0} option can only be used when the UseManifestForTrust option is set to true.</target>
        <note />
      </trans-unit>
      <trans-unit id="MultipleKeys">
        <source>Only one type of signing method may be specified.</source>
        <target state="new">Only one type of signing method may be specified.</target>
        <note />
      </trans-unit>
      <trans-unit id="NewLicense">
        <source>New License</source>
        <target state="new">New License</target>
        <note />
      </trans-unit>
      <trans-unit id="NoKeySpecified">
        <source>The -Sign command requires one of -CertFile, or -CertHash.</source>
        <target state="new">The -Sign command requires one of -CertFile, or -CertHash.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoOutputFileSpecified">
        <source>No output file was specified.  Please use -ToFile &lt;filename&gt;.</source>
        <target state="new">No output file was specified.  Please use -ToFile &lt;filename&gt;.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoVerb">
        <source>The first argument must be one of the following: -New, -Update, -Sign, -Verify, -AddLauncher</source>
        <target state="new">The first argument must be one of the following: -New, -Update, -Sign, -Verify, -AddLauncher</target>
        <note>"-New, -Update, -Sign, -Verify, -AddLauncher" are command names and should not be translated</note>
      </trans-unit>
      <trans-unit id="NotAllowedCleanCache">
        <source>ClearApplicationCache should not be used with any other switch.</source>
        <target state="new">ClearApplicationCache should not be used with any other switch.</target>
        <note />
      </trans-unit>
      <trans-unit id="ResultSomeErrorsEncountered">
        <source>However, some errors were encountered.</source>
        <target state="new">However, some errors were encountered.</target>
        <note />
      </trans-unit>
      <trans-unit id="ResultSuccessfullyCreated">
        <source>successfully created</source>
        <target state="new">successfully created</target>
        <note />
      </trans-unit>
      <trans-unit id="ResultSuccessfullySigned">
        <source>successfully signed</source>
        <target state="new">successfully signed</target>
        <note />
      </trans-unit>
      <trans-unit id="ResultSuccessfullyUpdated">
        <source>successfully updated</source>
        <target state="new">successfully updated</target>
        <note />
      </trans-unit>
      <trans-unit id="SecurityMessage">
        <source>Mage does not have the security permissions necessary to run.  Ensure that mage is not running from an untrusted source such as a network share or web site.</source>
        <target state="new">Mage does not have the security permissions necessary to run.  Ensure that mage is not running from an untrusted source such as a network share or web site.</target>
        <note />
      </trans-unit>
      <trans-unit id="SignatureValidatedSuccessfully">
        <source>Manifest has a valid signature.</source>
        <target state="new">Manifest has a valid signature.</target>
        <note />
      </trans-unit>
      <trans-unit id="TooManyKeysSpecified">
        <source>Only one of -KeyFile, -CertFile, or -CertHash can be used.</source>
        <target state="new">Only one of -KeyFile, -CertFile, or -CertHash can be used.</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustLevelsNotSupportedOnNETCore">
        <source>Setting trust level is not supported on .NET Core</source>
        <target state="new">Setting trust level is not supported on .NET Core</target>
        <note />
      </trans-unit>
      <trans-unit id="TrustLicenseNotSigned">
        <source>Trust license is not signed - "{0}"</source>
        <target state="new">Trust license is not signed - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="UnableToOpenCertificate">
        <source>Unable to open certificate "{0}":</source>
        <target state="new">Unable to open certificate "{0}":</target>
        <note />
      </trans-unit>
      <trans-unit id="UnableToStartGUI">
        <source>Unable to locate Mage UI - "{0}"</source>
        <target state="new">Unable to locate Mage UI - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="UnrecognizedParameter">
        <source>Parameter not recognized - "{0}"</source>
        <target state="new">Parameter not recognized - "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="VerifyIsExclusive">
        <source>'verify' command can't be combined with any other command.</source>
        <target state="new">'verify' command can't be combined with any other command.</target>
        <note />
      </trans-unit>
      <trans-unit id="WarningMessage">
        <source>Warning</source>
        <target state="new">Warning</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>