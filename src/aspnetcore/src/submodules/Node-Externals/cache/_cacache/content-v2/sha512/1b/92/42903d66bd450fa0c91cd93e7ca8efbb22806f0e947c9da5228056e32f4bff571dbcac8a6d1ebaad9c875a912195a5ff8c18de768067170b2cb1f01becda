{"_id":"comment-parser","_rev":"d83c4bf2-f673-4ec0-9ebc-f357dae0f7bc","name":"comment-parser","dist-tags":{"latest":"1.4.1"},"versions":{"0.1.0":{"_id":"comment-parser@0.1.0","name":"comment-parser","description":"Generic JSDoc-like comment parser.","version":"0.1.0","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"repository":{"type":"git","url":"git@github.com:yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"test":"mocha tests/*"},"directories":{},"devDependencies":{"mocha":"~1.17.1","chai":"~1.9.0"},"dependencies":{"event-stream":"~3.1.0","lodash":"~2.4.1"},"main":"index.js","dist":{"shasum":"e00ca1f468c5334877fb4ee75c9971f462b94048","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.1.0.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"},"maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}]},"0.1.1":{"_id":"comment-parser@0.1.1","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.1.1","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"repository":{"type":"git","url":"git@github.com:yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"test":"mocha tests/*"},"directories":{},"devDependencies":{"mocha":"~1.17.1","chai":"~1.9.0"},"dependencies":{"lodash":"~2.4.1"},"main":"index.js","dist":{"shasum":"4da06f600d0fd5622d4813be242c1490b24a151d","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.1.1.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"},"maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}]},"0.1.2":{"_id":"comment-parser@0.1.2","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.1.2","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"repository":{"type":"git","url":"git@github.com:yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"test":"mocha tests/*"},"directories":{},"devDependencies":{"mocha":"~1.17.1","chai":"~1.9.0"},"dependencies":{"lodash":"~2.4.1"},"main":"index.js","dist":{"shasum":"43420460369d723963142f13c457a4d81c2facf7","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.1.2.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"},"maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}]},"0.2.0":{"_id":"comment-parser@0.2.0","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.2.0","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"repository":{"type":"git","url":"git@github.com:yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"test":"mocha tests/*"},"directories":{},"devDependencies":{"mocha":"~1.17.1","chai":"~1.9.0"},"dependencies":{"lodash":"~2.4.1"},"main":"index.js","dist":{"shasum":"da18efa028982f41d112cac64a191c4a4b77a164","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.2.0.tgz"},"gitHead":"6fbf854082e875b6f54ef3611938a5ac30630e1b","_from":".","_npmVersion":"1.4.13","_npmUser":{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"},"maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}]},"0.2.1":{"_id":"comment-parser@0.2.1","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.2.1","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"repository":{"type":"git","url":"git@github.com:yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"test":"mocha tests/*"},"directories":{},"devDependencies":{"mocha":"~1.17.1","chai":"~1.9.0"},"dependencies":{"lodash":"~2.4.1"},"main":"index.js","dist":{"shasum":"48c296c5bddc3d716ece79381f31bbd20867c3f2","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.2.1.tgz"},"gitHead":"a885ae3580dfc9f9fb4ff886c11c363b2f4b9c65","_from":".","_npmVersion":"1.4.13","_npmUser":{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"},"maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}]},"0.2.2":{"_id":"comment-parser@0.2.2","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.2.2","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"repository":{"type":"git","url":"git@github.com:yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"test":"mocha tests/*"},"directories":{},"devDependencies":{"mocha":"~1.17.1","chai":"~1.9.0"},"dependencies":{"lodash":"~2.4.1"},"main":"index.js","dist":{"shasum":"59ee350cfe837021831235c711bd7874ad4ddb4a","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.2.2.tgz"},"gitHead":"bc8a7822f03eba1d38c4779989c0590f0fe87aaa","_from":".","_npmVersion":"1.4.13","_npmUser":{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"},"maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}]},"0.2.3":{"_id":"comment-parser@0.2.3","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.2.3","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"repository":{"type":"git","url":"git@github.com:yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"test":"mocha tests/*"},"directories":{},"devDependencies":{"mocha":"~1.17.1","chai":"~1.9.0"},"dependencies":{},"main":"index.js","dist":{"shasum":"8d91ef5b748dc147a2209da214e186b28f0ea87a","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.2.3.tgz"},"gitHead":"2b221cd9d9f0e6230304e2da9c9136e73ee8984f","_from":".","_npmVersion":"1.4.13","_npmUser":{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"},"maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}]},"0.2.4":{"_id":"comment-parser@0.2.4","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.2.4","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"repository":{"type":"git","url":"git@github.com:yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"test":"mocha tests/*"},"directories":{},"devDependencies":{"mocha":"~1.17.1","chai":"~1.9.0"},"dependencies":{},"main":"index.js","dist":{"shasum":"ba753c7e08e4d50ab4011cb1d4be5831ec17be99","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.2.4.tgz"},"gitHead":"cc52b71ae3233493e4e1df813b978d25dea5cb1a","_from":".","_npmVersion":"2.1.10","_nodeVersion":"0.10.33","_npmUser":{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"},"maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}]},"0.3.0":{"_id":"comment-parser@0.3.0","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.3.0","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"repository":{"type":"git","url":"git@github.com:yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"test":"jshint --reporter node_modules/jshint-stylish/stylish.js index.js && mocha tests/*","watch":"nodemon -q -w index.js -w tests/ -x npm test"},"directories":{},"devDependencies":{"chai":"~1.9.0","jshint":"^2.5.10","jshint-stylish":"^1.0.0","mocha":"~1.17.1","nodemon":"^1.2.1"},"dependencies":{},"main":"index.js","dist":{"shasum":"797f2b86628915a5ad045b6aa57d42720509e657","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.3.0.tgz"},"gitHead":"49f191f066f6d57bc5239ce9a1d39149f0143884","_from":".","_npmVersion":"2.1.10","_nodeVersion":"0.10.33","_npmUser":{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"},"maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}]},"0.3.1":{"_id":"comment-parser@0.3.1","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.3.1","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"test":"jshint --reporter node_modules/jshint-stylish/stylish.js index.js && mocha tests/*","watch":"nodemon -q -w index.js -w tests/ -x npm test"},"directories":{},"devDependencies":{"chai":"~1.9.0","jshint":"^2.5.10","jshint-stylish":"^1.0.0","mocha":"~1.17.1","nodemon":"^1.2.1"},"dependencies":{"readable-stream":"^2.0.4"},"main":"index.js","dist":{"shasum":"fd657aac8c1492d308c9a6100fc9b49d2435aba1","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.3.1.tgz"},"gitHead":"a4c62837c1a2bf2399379de23268b442ccc51db5","_from":".","_npmVersion":"2.11.3","_nodeVersion":"0.12.7","_npmUser":{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"},"maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}]},"0.3.2":{"_id":"comment-parser@0.3.2","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.3.2","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"test":"jshint --reporter node_modules/jshint-stylish/stylish.js index.js && mocha tests/*","watch":"nodemon -q -w index.js -w parser.js -w tests/ -x npm test"},"directories":{},"devDependencies":{"chai":"~1.9.0","jshint":"^2.5.10","jshint-stylish":"^1.0.0","mocha":"~1.17.1","nodemon":"^1.2.1"},"dependencies":{"readable-stream":"^2.0.4"},"main":"index.js","dist":{"shasum":"3c03f0776b86a36dfd9a0a2c97c6307f332082fe","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.3.2.tgz"},"gitHead":"3ead3322c1b782d1d6f776fa1e20664ef57632bb","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"},"maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser-0.3.2.tgz_1499877573474_0.9505084389820695"}},"0.4.0":{"_id":"comment-parser@0.4.0","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.4.0","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"test":"jshint --reporter node_modules/jshint-stylish/stylish.js index.js && mocha tests/*","watch":"nodemon -q -w index.js -w parser.js -w tests/ -x npm test"},"directories":{},"devDependencies":{"chai":"~1.9.0","jshint":"^2.5.10","jshint-stylish":"^1.0.0","mocha":"~1.17.1","nodemon":"^1.2.1"},"dependencies":{"readable-stream":"^2.0.4"},"main":"index.js","dist":{"shasum":"b274a3c924b6b2e55768f712acd3e3003cb55f57","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.4.0.tgz"},"gitHead":"7fa0cd73f9ed23c5b7e9f0258301a776c663b521","_from":".","_npmVersion":"2.11.3","_nodeVersion":"0.12.7","_npmUser":{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"},"maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmOperationalInternal":{"host":"packages-6-west.internal.npmjs.com","tmp":"tmp/comment-parser-0.4.0.tgz_1454957370745_0.3444726690649986"}},"0.4.1":{"_id":"comment-parser@0.4.1","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.4.1","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"pretest":"eslint .","test":"mocha tests","watch":"nodemon -q -i node_modules -x npm test"},"directories":{},"devDependencies":{"chai":"~1.9.0","eslint":"^4.7.1","eslint-config-standard":"^10.2.1","eslint-plugin-import":"^2.7.0","eslint-plugin-node":"^5.1.1","eslint-plugin-promise":"^3.5.0","eslint-plugin-standard":"^3.0.1","mocha":"^3.5.3","nodemon":"^1.2.1"},"dependencies":{"readable-stream":"^2.0.4"},"main":"index.js","dist":{"shasum":"cec7a6c3e3137aba3e04d8f7b65145597f66188f","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.4.1.tgz"},"gitHead":"18c957ce4664aac2d6e8140be74ecfb84fa27fd4","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"},"maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser-0.4.1.tgz_1505805629521_0.029222230659797788"}},"0.4.2":{"_id":"comment-parser@0.4.2","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.4.2","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"pretest":"eslint .","test":"mocha tests","watch":"nodemon -q -i node_modules -x npm test"},"directories":{},"devDependencies":{"chai":"~1.9.0","eslint":"^4.7.1","eslint-config-standard":"^10.2.1","eslint-plugin-import":"^2.7.0","eslint-plugin-node":"^5.1.1","eslint-plugin-promise":"^3.5.0","eslint-plugin-standard":"^3.0.1","mocha":"^3.5.3","nodemon":"^1.2.1"},"dependencies":{"readable-stream":"^2.0.4"},"main":"index.js","dist":{"shasum":"fa5a3f78013070114866dc7b8e9cf317a9635f74","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.4.2.tgz"},"gitHead":"7f706901a0aa3ac39ec3d8613b85df5220fbc6d4","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.11.3","_npmUser":{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"},"maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser-0.4.2.tgz_1506212774449_0.9942353118676692"}},"0.5.0":{"_id":"comment-parser@0.5.0","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.5.0","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"pretest":"eslint .","test":"mocha tests","watch":"nodemon -q -i node_modules -x npm test"},"directories":{},"devDependencies":{"chai":"~1.9.0","eslint":"^4.7.1","eslint-config-standard":"^10.2.1","eslint-plugin-import":"^2.7.0","eslint-plugin-node":"^5.1.1","eslint-plugin-promise":"^3.5.0","eslint-plugin-standard":"^3.0.1","mocha":"^3.5.3","nodemon":"^1.2.1"},"dependencies":{"readable-stream":"^2.0.4"},"main":"index.js","dist":{"shasum":"e833701804308eedef96c0b5029375b07f4eba1e","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.5.0.tgz"},"gitHead":"55e2f22c21a7bfb58c5810d0d50cb2ab7df9ce3d","_npmVersion":"5.5.1","_nodeVersion":"6.11.3","_npmUser":{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"},"maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser-0.5.0.tgz_1510197046990_0.21625039563514292"}},"0.5.1":{"_id":"comment-parser@0.5.1","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.5.1","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"pretest":"eslint .","test":"mocha tests","watch":"nodemon -q -i node_modules -x npm test"},"directories":{},"devDependencies":{"chai":"~1.9.0","eslint":"^4.7.1","eslint-config-standard":"^10.2.1","eslint-plugin-import":"^2.7.0","eslint-plugin-node":"^5.1.1","eslint-plugin-promise":"^3.5.0","eslint-plugin-standard":"^3.0.1","mocha":"^3.5.3","nodemon":"^1.2.1"},"dependencies":{"readable-stream":"^2.0.4"},"main":"index.js","dist":{"shasum":"041fb38d943ba99b700aff44c13958681eb89adc","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.5.1.tgz"},"gitHead":"f507a98e3a0dbae132188cf4a8ef048ad004aeae","_npmVersion":"6.4.1","_nodeVersion":"8.12.0","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_0.5.1_1544392491742_0.42352785595869746"},"_hasShrinkwrap":false},"0.5.2":{"_id":"comment-parser@0.5.2","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.5.2","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"pretest":"eslint .","test":"mocha tests","watch":"nodemon -q -i node_modules -x npm test"},"directories":{},"devDependencies":{"chai":"^4.2.0","eslint":"^4.7.1","eslint-config-standard":"^10.2.1","eslint-plugin-import":"^2.7.0","eslint-plugin-node":"^5.1.1","eslint-plugin-promise":"^3.5.0","eslint-plugin-standard":"^3.0.1","mocha":"^5.2.0","nodemon":"^1.18.9"},"dependencies":{},"main":"index.js","dist":{"shasum":"97366ee0e282289806d9ed7c18f61c1614aa8235","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.5.2.tgz"},"gitHead":"061940fb63f3b10fbd9073da4c02e98c6435bf0c","_npmVersion":"6.4.1","_nodeVersion":"11.3.0","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_0.5.2_1546424822528_0.2607447312606832"},"_hasShrinkwrap":false},"0.5.3":{"_id":"comment-parser@0.5.3","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.5.3","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"pretest":"eslint .","test":"mocha tests","watch":"nodemon -q -i node_modules -x npm test"},"directories":{},"devDependencies":{"chai":"^4.2.0","eslint":"^4.7.1","eslint-config-standard":"^10.2.1","eslint-plugin-import":"^2.7.0","eslint-plugin-node":"^5.1.1","eslint-plugin-promise":"^3.5.0","eslint-plugin-standard":"^3.0.1","mocha":"^5.2.0","nodemon":"^1.18.9"},"dependencies":{},"main":"index.js","dist":{"shasum":"9faf401d63f0d526c79a8417ceab171259795912","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.5.3.tgz"},"types":"index.d.ts","gitHead":"1ee2815231b5592680094098ce9641f0efc77e5d","_npmVersion":"6.4.1","_nodeVersion":"11.3.0","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_0.5.3_1546798164531_0.7300579034599246"},"_hasShrinkwrap":false},"0.5.4":{"_id":"comment-parser@0.5.4","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.5.4","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"pretest":"eslint .","test":"mocha tests","watch":"nodemon -q -i node_modules -x npm test"},"directories":{},"devDependencies":{"chai":"^4.2.0","eslint":"^4.7.1","eslint-config-standard":"^10.2.1","eslint-plugin-import":"^2.7.0","eslint-plugin-node":"^5.1.1","eslint-plugin-promise":"^3.5.0","eslint-plugin-standard":"^3.0.1","mocha":"^5.2.0","nodemon":"^1.18.9"},"dependencies":{},"main":"index.js","dist":{"shasum":"089840b9cccacad2b769b231ed43081d501b9487","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.5.4.tgz"},"types":"index.d.ts","gitHead":"afd22382dcec49ce71f8bd9863d431d2291485a8","_npmVersion":"6.4.1","_nodeVersion":"11.3.0","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_0.5.4_1546857625714_0.7279094778375019"},"_hasShrinkwrap":false},"0.5.5":{"_id":"comment-parser@0.5.5","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.5.5","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"test:lint":"eslint .","test:unit":"mocha tests","test":"npm run test:lint && npm run test:unit","watch":"nodemon -q -i node_modules -x npm test"},"directories":{},"devDependencies":{"chai":"^4.2.0","eslint":"^5.16.0","eslint-config-standard":"^10.2.1","eslint-plugin-import":"^2.7.0","eslint-plugin-node":"^5.1.1","eslint-plugin-promise":"^3.5.0","eslint-plugin-standard":"^3.0.1","mocha":"^5.2.0","nodemon":"^1.18.9"},"dependencies":{},"main":"index.js","dist":{"shasum":"c2584cae7c2f0afc773e96b2ee98f8c10cbd693d","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.5.5.tgz"},"types":"index.d.ts","gitHead":"52b04db625e7386bd0da8c9bdf17d7c80d581ec1","_nodeVersion":"8.12.0","_npmVersion":"6.9.0","maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_0.5.5_1561008392201_0.7851366932131965"},"_hasShrinkwrap":false},"0.6.0":{"_id":"comment-parser@0.6.0","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.6.0","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"lint:fix":"eslint --fix .","test:lint":"eslint .","test:unit":"mocha tests","test":"npm run test:lint && npm run test:unit","watch":"nodemon -q -i node_modules -x npm test"},"directories":{},"devDependencies":{"chai":"^4.2.0","eslint":"^6.0.1","eslint-config-standard":"^13.0.1","eslint-plugin-import":"^2.18.0","eslint-plugin-node":"^9.1.0","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^4.0.0","mocha":"^6.1.4","nodemon":"^1.19.1"},"dependencies":{},"engines":{"node":">= 6.0.0"},"main":"index.js","dist":{"shasum":"bcde52dc26a4bd317b609146b75b55b7cc3ddf68","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.6.0.tgz"},"types":"index.d.ts","gitHead":"d334eda74376847afbaf6ff9fef74fd3231010b9","_nodeVersion":"8.12.0","_npmVersion":"6.9.0","maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_0.6.0_1563226802883_0.7413080578914921"},"_hasShrinkwrap":false},"0.6.1":{"_id":"comment-parser@0.6.1","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.6.1","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"lint:fix":"eslint --fix .","test:lint":"eslint .","test:unit":"mocha tests","test":"npm run test:lint && npm run test:unit","watch":"nodemon -q -i node_modules -x npm test"},"directories":{},"devDependencies":{"chai":"^4.2.0","eslint":"^6.0.1","eslint-config-standard":"^13.0.1","eslint-plugin-import":"^2.18.0","eslint-plugin-node":"^9.1.0","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^4.0.0","mocha":"^6.1.4","nodemon":"^1.19.1"},"dependencies":{},"engines":{"node":">= 6.0.0"},"main":"index.js","dist":{"shasum":"88040c7c0a57c62e64962c3e888518620a42e7c9","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.6.1.tgz"},"types":"index.d.ts","gitHead":"942ed98e892e2b18688bb6ebeec09f10e9fe01ea","_nodeVersion":"8.12.0","_npmVersion":"6.9.0","maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_0.6.1_1563315518605_0.39357142558607383"},"_hasShrinkwrap":false},"0.6.2":{"_id":"comment-parser@0.6.2","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.6.2","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"lint:fix":"eslint --fix .","test:lint":"eslint .","test:unit":"mocha tests","test":"npm run test:lint && npm run test:unit","watch":"nodemon -q -i node_modules -x npm test"},"directories":{},"devDependencies":{"chai":"^4.2.0","eslint":"^6.0.1","eslint-config-standard":"^13.0.1","eslint-plugin-import":"^2.18.0","eslint-plugin-node":"^9.1.0","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^4.0.0","mocha":"^6.1.4","nodemon":"^1.19.1"},"dependencies":{},"engines":{"node":">= 6.0.0"},"main":"index.js","dist":{"shasum":"b71e8fcacad954bea616779391838150d0096dcb","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.6.2.tgz"},"types":"index.d.ts","gitHead":"e7d81084ca6533661abf48617c40fa5336ba163e","_nodeVersion":"8.12.0","_npmVersion":"6.10.1","maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_0.6.2_1566194835852_0.1452977785142262"},"_hasShrinkwrap":false},"0.7.0":{"_id":"comment-parser@0.7.0","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.7.0","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"typescript":"tsc index.d.ts","lint:fix":"eslint --fix .","test:lint":"eslint .","test:typescript":"tsc index.d.ts","test:unit":"mocha tests","test":"npm run test:typescript && npm run test:lint && npm run test:unit","watch":"nodemon -q -i node_modules -x npm test"},"directories":{},"devDependencies":{"chai":"^4.2.0","eslint":"^6.6.0","eslint-config-standard":"^14.1.0","eslint-plugin-import":"^2.18.2","eslint-plugin-node":"^10.0.0","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^4.0.1","mocha":"^6.2.2","nodemon":"^1.19.4","typescript":"^3.6.4"},"dependencies":{},"engines":{"node":">= 6.0.0"},"main":"index.js","dist":{"shasum":"9dc1f689a60d81fbcaf867d3c9eba3eb061ccfc1","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.7.0.tgz"},"types":"index.d.ts","gitHead":"64abc21fb4c79308b482049fe3098110202fd018","_nodeVersion":"8.12.0","_npmVersion":"6.10.1","maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_0.7.0_1572751251660_0.49917549772302827"},"_hasShrinkwrap":false},"0.7.1":{"_id":"comment-parser@0.7.1","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.7.1","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"typescript":"tsc index.d.ts","lint:fix":"eslint --fix .","test:lint":"eslint .","test:typescript":"tsc index.d.ts","test:unit":"mocha tests","test":"npm run test:typescript && npm run test:lint && npm run test:unit","watch":"nodemon -q -i node_modules -x npm test"},"directories":{},"devDependencies":{"chai":"^4.2.0","eslint":"^6.6.0","eslint-config-standard":"^14.1.0","eslint-plugin-import":"^2.18.2","eslint-plugin-node":"^10.0.0","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^4.0.1","mocha":"^6.2.2","nodemon":"^1.19.4","typescript":"^3.6.4"},"dependencies":{},"engines":{"node":">= 6.0.0"},"main":"index.js","dist":{"shasum":"99607706e369305f89b0268f138fca7e795a60fc","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.7.1.tgz"},"types":"index.d.ts","gitHead":"dec7e915863d058ad477a216706d12b1e0053b74","_nodeVersion":"12.13.0","_npmVersion":"6.12.0","maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_0.7.1_1575437884096_0.6689137541579722"},"_hasShrinkwrap":false},"0.7.2":{"_id":"comment-parser@0.7.2","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.7.2","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"typescript":"tsc index.d.ts","lint:fix":"eslint --fix .","test:lint":"eslint .","test:typescript":"tsc index.d.ts","test:unit":"nyc mocha tests","test":"npm run test:typescript && npm run test:lint && npm run test:unit","watch":"nodemon -q -i node_modules -x npm test"},"directories":{},"devDependencies":{"chai":"^4.2.0","eslint":"^6.6.0","eslint-config-standard":"^14.1.0","eslint-plugin-import":"^2.18.2","eslint-plugin-node":"^10.0.0","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^4.0.1","mocha":"^6.2.2","nodemon":"^1.19.4","nyc":"^14.1.1","typescript":"^3.6.4"},"dependencies":{},"engines":{"node":">= 6.0.0"},"main":"index.js","dist":{"shasum":"baf6d99b42038678b81096f15b630d18142f4b8a","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.7.2.tgz"},"types":"index.d.ts","nyc":{"branches":85,"lines":85,"functions":85,"statements":85,"exclude":["tests"]},"gitHead":"35ecd2c0cf568d843a26ebdac6215fcee12e3544","_nodeVersion":"12.13.1","_npmVersion":"6.12.1","maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_0.7.2_1576782544660_0.9380577148903031"},"_hasShrinkwrap":false},"0.7.3":{"_id":"comment-parser@0.7.3","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.7.3","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"typescript":"tsc index.d.ts","lint:fix":"eslint --fix .","test:lint":"eslint .","test:typescript":"tsc index.d.ts","test:unit":"nyc mocha tests","test":"npm run test:typescript && npm run test:lint && npm run test:unit","watch":"nodemon -q -i node_modules -x npm test"},"directories":{},"devDependencies":{"chai":"^4.2.0","eslint":"^6.8.0","eslint-config-standard":"^14.1.1","eslint-plugin-import":"^2.20.2","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^4.0.1","mocha":"^7.1.2","nodemon":"^2.0.3","nyc":"^15.0.1","readable-stream":"^3.6.0","typescript":"^3.8.3"},"dependencies":{},"engines":{"node":">= 6.0.0"},"main":"index.js","dist":{"shasum":"f526108fe4412d7fb84235929384d75f84bc922d","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.7.3.tgz"},"types":"index.d.ts","nyc":{"branches":85,"lines":85,"functions":85,"statements":85,"exclude":["tests"]},"gitHead":"60b119edbae46387efac518e2fce5c6a0c1703e0","_nodeVersion":"12.13.1","_npmVersion":"6.13.4","maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_0.7.3_1588747279388_0.1829085858422086"},"_hasShrinkwrap":false},"0.7.4":{"_id":"comment-parser@0.7.4","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.7.4","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"typescript":"tsc index.d.ts","lint:fix":"eslint --fix .","test:lint":"eslint .","test:typescript":"tsc index.d.ts","test:unit":"nyc mocha tests","test":"npm run test:typescript && npm run test:lint && npm run test:unit","watch":"nodemon -q -i node_modules -x npm test"},"directories":{},"devDependencies":{"chai":"^4.2.0","eslint":"^6.8.0","eslint-config-standard":"^14.1.1","eslint-plugin-import":"^2.20.2","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^4.0.1","mocha":"^7.1.2","nodemon":"^2.0.3","nyc":"^15.0.1","readable-stream":"^3.6.0","typescript":"^3.8.3"},"dependencies":{},"engines":{"node":">= 6.0.0"},"main":"index.js","dist":{"shasum":"f5eb83cbae323cae6533c057f41d52692361c83a","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.7.4.tgz"},"types":"index.d.ts","nyc":{"branches":85,"lines":85,"functions":85,"statements":85,"exclude":["tests"]},"gitHead":"58aa3e2e84171119952049af423cc1fcf509cc57","_nodeVersion":"12.13.1","_npmVersion":"6.13.4","maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_0.7.4_1588753657841_0.5907975228111726"},"_hasShrinkwrap":false},"0.7.5":{"_id":"comment-parser@0.7.5","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.7.5","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"typescript":"tsc index.d.ts","lint:fix":"eslint --fix .","test:lint":"eslint .","test:typescript":"tsc index.d.ts","test:unit":"nyc mocha tests","test":"npm run test:typescript && npm run test:lint && npm run test:unit","watch":"nodemon -q -i node_modules -x npm test"},"directories":{},"devDependencies":{"chai":"^4.2.0","eslint":"^6.8.0","eslint-config-standard":"^14.1.1","eslint-plugin-import":"^2.20.2","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^4.0.1","mocha":"^7.1.2","nodemon":"^2.0.3","nyc":"^15.0.1","readable-stream":"^3.6.0","typescript":"^3.8.3"},"dependencies":{},"engines":{"node":">= 6.0.0"},"main":"index.js","dist":{"shasum":"06db157a3b34addf8502393743e41897e2c73059","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.7.5.tgz"},"types":"index.d.ts","nyc":{"branches":85,"lines":85,"functions":85,"statements":85,"exclude":["tests"]},"gitHead":"6f4f37bba26437b529c707be30c2167e2143484e","_nodeVersion":"12.13.1","_npmVersion":"6.13.4","maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_0.7.5_1590815419434_0.9757303902774259"},"_hasShrinkwrap":false},"0.7.6":{"_id":"comment-parser@0.7.6","name":"comment-parser","description":"Generic JSDoc-like comment parser. ","version":"0.7.6","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/yavorskiy/comment-parser","author":{"name":"Sergii Iavorskyi","email":"yavorskiy.s@gmail.com","url":"https://github.com/yavorskiy"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/yavorskiy/comment-parser/issues"},"license":"MIT","scripts":{"typescript":"tsc index.d.ts","lint:fix":"eslint --fix .","test:lint":"eslint .","test:typescript":"tsc index.d.ts","test:unit":"nyc mocha tests","test":"npm run test:typescript && npm run test:lint && npm run test:unit","watch":"nodemon -q -i node_modules -x npm test"},"directories":{},"devDependencies":{"chai":"^4.2.0","eslint":"^6.8.0","eslint-config-standard":"^14.1.1","eslint-plugin-import":"^2.20.2","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^4.0.1","mocha":"^7.1.2","nodemon":"^2.0.3","nyc":"^15.0.1","readable-stream":"^3.6.0","typescript":"^3.8.3"},"dependencies":{},"engines":{"node":">= 6.0.0"},"main":"index.js","dist":{"shasum":"0e743a53c8e646c899a1323db31f6cd337b10f12","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-0.7.6.tgz"},"types":"index.d.ts","nyc":{"branches":85,"lines":85,"functions":85,"statements":85,"exclude":["tests"]},"gitHead":"3922d744e9035e6d15de28dd283f303780152bac","_nodeVersion":"12.13.1","_npmVersion":"6.14.5","maintainers":[{"name":"yavorskiys","email":"yavorskiy.s@gmail.com"}],"_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_0.7.6_1597525112029_0.7043764488099822"},"_hasShrinkwrap":false},"1.0.0-beta":{"_id":"comment-parser@1.0.0-beta","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.0.0-beta","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib; tsc","format":"prettier --write src/ tests/","pretest":"rimraf coverage; npm run build","test":"prettier --check src/ tests/ && jest --verbose"},"directories":{},"devDependencies":{"@types/jest":"^26.0.14","jest":"^26.5.3","prettier":"2.1.2","rimraf":"^3.0.2","ts-jest":"^26.4.1","typescript":"^4.0.3"},"dependencies":{},"engines":{"node":">= 10.0.0"},"main":"lib/index.js","dist":{"shasum":"fb2d121c0f2530506d77f1de821df6c1f0ea99aa","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.0.0-beta.tgz"},"readme":"# comment-parser\n\n`comment-parser` is a library helping to handle Generic JSDoc-style comments. It is\n\n- **language-agnostic** – no semantic enforced. You may use it anywhere as long as `/** */` cpmments are supported.\n- **no dependencies** – it is compact and environment-agnostic, can be ran on both server and browser sides\n- **highly customizable** – with a little of code you can deeply customize how comments are parsed\n- **bidirectional** - you can write comment blocks back to the source after updating or formatting\n- **strictly typed** - comes with generated `d.ts` data defenitions since written in TypeScript\n\n```sh\nnpm install comment-parser\n```\n\nLib mainly provides two pieces Parser and Strigifier\n\n## Parser\n\nLets go over string parsing [example](./examples/parse-string)\n\n```\nconst { parse } = require('comment-parser/lib')\n\nconst source = `\n/**\n * Description may go\n * over few lines followed by @tags\n * @param name {string} name parameter\n * @param value {any} value of any type\n */`\n\nconst parsed = parse(source)\n```\n\nLib source code is written in TypeScript and all data shapes are conveniently available for your IDE of choice. All types described below can be found in [types.d.ts](./lib/types.d.ts)\n\nThe input source is fist parsed into lines, then lines split into tokens, and finally, tokens are processed into blocks of tags\n\nBlock\n\n```\n/**\n * Description may go\n * over multiple lines followed by @tags\n * @param {string} name the name parameter\n * @param {any} value the value parameter\n */\n```\n\nBlock description\n\n```\n/**\n * Description may go\n * over multiple lines followed by @tags\n```\n\nBlock tags\n\n```\n * @param {string} name the name parameter\n```\n\n```\n * @param {any} value the value parameter\n */\n```\n\nTokens\n\n```\n| ... | * | ... | @param | ... | value | ... | {any} | ... | value of any type\n```\n\nParsing result is an array of Block objects, see [full output](./examples/parse-string/output.json)\n\n```js\n[{\n  // uppper text of the comment, overall block description\n  description: 'Description may go over multiple lines followed by @tags',\n  // list of block tags: @param, @param\n  tags: [{\n    // tokens.tag without \"@\"\n    tag: 'param',\n    // unwrapped tokens.name\n    name: 'name',\n    // unwrapped tokens.type\n    type: 'string',\n    // true, if tokens.name is [optional]\n    optional: false,\n    // default value if optional [name=default] has one\n    default: undefined,\n    // tokens.description assembled from a siongle or multiple lines\n    description: 'the name parameter',\n    // problems occured while parsing this tag section, subset of ../problems array\n    problems: [],\n    // source lines processed for extracting this tag, subset of ../source array\n    source: [ ... ],\n  }, ... ],\n  // source is an array of `Line` items having the source\n  // line number and `Tokens` that can be assembled back into\n  // the line string preserving original formatting\n  source: [{\n    // source line number\n    number: 1,\n    // source line string\n    source: \"/**\",\n    // source line tokens\n    tokens: {\n      // indentation\n      start: \"\",\n      // delimiter, either '/**', '*/', or ''. Mid lines may have no delimiters\n      delimiter: \"/**\",\n      // space between delimiter and tag\n      postDelimiter: \"\",\n      // tag starting with \"@\"\n      tag: \"\",\n      // space between tag and type\n      postTag: \"\",\n      // name with no whitespaces or \"multiple words\" wrapped into quotes. May occure in [name] and [name=default] forms\n      name: \"\",\n      // space between name and type\n      postName: \"\",\n      // type is has to be {wrapped} into curlies otherwise will be omitted\n      type: \"\",\n      // space between type and description\n      postType: \"\",\n      // description is basicaly rest of the line\n      description: \"\",\n      // closing */ marker if present\n      end: \"\"\n    }\n  }, ... ],\n  // problems occured while parsing the block\n  problems: [],\n}];\n```\n\nWhile `.source[].tokens` are not providing readable annotation information, they are essential for tracing data origins and assembling string blocks with `stringify`\n\n## Stringifier\n\nStringifier is an important piece used by other tools updating the source code. Basically, it assembles tokens back into lines using provided formatter. Stringifier is using only `Block.source` field and doesn't care about the rest. Available formatters are `\"none\"` (default) and `\"align\"`. Also you can provide your custom [Formatter](./lib/strigifier.d.ts) having completely different logic\n\n```js\nconst { parse, stringify } = require('../../lib/');\n\nconst source = `\n  /**\n   * Description may go\n   * over multiple lines followed by @tags\n   * \n* @my-tag {my.type} my-name description line 1\n      description line 2\n    * description line 3\n   */`;\n\nconst parsed = parse(source);\n\nconsole.log(stringify(parsed[0], { format: 'align' }));\n```\n\nwould output following\n\n```\n  /**\n   * Description may go\n   * over multiple lines followed by @tags\n   *\n   * @my-tag {my.type} my-name description line 1\n                               description line 2\n   *                           description line 3\n   */\n```\n","types":"lib/index.d.ts","readmeFilename":"README.md","gitHead":"c83fbd468e675db0efc833e2c8898bb67be4d5bc","_nodeVersion":"12.13.1","_npmVersion":"6.14.8","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.0.0-beta_1605516971261_0.23925296127280204"},"_hasShrinkwrap":false},"1.0.0-beta.0":{"_id":"comment-parser@1.0.0-beta.0","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.0.0-beta.0","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib; tsc","format":"prettier --write src/ tests/","pretest":"rimraf coverage; npm run build","test":"prettier --check src/ tests/ && jest --verbose"},"directories":{},"devDependencies":{"@types/jest":"^26.0.14","jest":"^26.5.3","prettier":"2.1.2","rimraf":"^3.0.2","ts-jest":"^26.4.1","typescript":"^4.0.3"},"dependencies":{},"engines":{"node":">= 10.0.0"},"main":"lib/index.js","dist":{"shasum":"6302982f11a67e777086aaba9b900ed687a57a98","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.0.0-beta.0.tgz"},"readme":"# comment-parser\n\n`comment-parser` is a library helping to handle Generic JSDoc-style comments. It is\n\n- **language-agnostic** – no semantic enforced. You may use it anywhere as long as `/** */` cpmments are supported.\n- **no dependencies** – it is compact and environment-agnostic, can be ran on both server and browser sides\n- **highly customizable** – with a little of code you can deeply customize how comments are parsed\n- **bidirectional** - you can write comment blocks back to the source after updating or formatting\n- **strictly typed** - comes with generated `d.ts` data defenitions since written in TypeScript\n\n```sh\nnpm install comment-parser\n```\n\nLib mainly provides two pieces Parser and Strigifier\n\n## Parser\n\nLets go over string parsing [example](./examples/parse-string)\n\n```\nconst { parse } = require('comment-parser/lib')\n\nconst source = `\n/**\n * Description may go\n * over few lines followed by @tags\n * @param name {string} name parameter\n * @param value {any} value of any type\n */`\n\nconst parsed = parse(source)\n```\n\nLib source code is written in TypeScript and all data shapes are conveniently available for your IDE of choice. All types described below can be found in [types.d.ts](./lib/types.d.ts)\n\nThe input source is fist parsed into lines, then lines split into tokens, and finally, tokens are processed into blocks of tags\n\nBlock\n\n```\n/**\n * Description may go\n * over multiple lines followed by @tags\n * @param {string} name the name parameter\n * @param {any} value the value parameter\n */\n```\n\nBlock description\n\n```\n/**\n * Description may go\n * over multiple lines followed by @tags\n```\n\nBlock tags\n\n```\n * @param {string} name the name parameter\n```\n\n```\n * @param {any} value the value parameter\n */\n```\n\nTokens\n\n```\n| ... | * | ... | @param | ... | value | ... | {any} | ... | value of any type\n```\n\nParsing result is an array of Block objects, see [full output](./examples/parse-string/output.json)\n\n```js\n[{\n  // uppper text of the comment, overall block description\n  description: 'Description may go over multiple lines followed by @tags',\n  // list of block tags: @param, @param\n  tags: [{\n    // tokens.tag without \"@\"\n    tag: 'param',\n    // unwrapped tokens.name\n    name: 'name',\n    // unwrapped tokens.type\n    type: 'string',\n    // true, if tokens.name is [optional]\n    optional: false,\n    // default value if optional [name=default] has one\n    default: undefined,\n    // tokens.description assembled from a siongle or multiple lines\n    description: 'the name parameter',\n    // problems occured while parsing this tag section, subset of ../problems array\n    problems: [],\n    // source lines processed for extracting this tag, subset of ../source array\n    source: [ ... ],\n  }, ... ],\n  // source is an array of `Line` items having the source\n  // line number and `Tokens` that can be assembled back into\n  // the line string preserving original formatting\n  source: [{\n    // source line number\n    number: 1,\n    // source line string\n    source: \"/**\",\n    // source line tokens\n    tokens: {\n      // indentation\n      start: \"\",\n      // delimiter, either '/**', '*/', or ''. Mid lines may have no delimiters\n      delimiter: \"/**\",\n      // space between delimiter and tag\n      postDelimiter: \"\",\n      // tag starting with \"@\"\n      tag: \"\",\n      // space between tag and type\n      postTag: \"\",\n      // name with no whitespaces or \"multiple words\" wrapped into quotes. May occure in [name] and [name=default] forms\n      name: \"\",\n      // space between name and type\n      postName: \"\",\n      // type is has to be {wrapped} into curlies otherwise will be omitted\n      type: \"\",\n      // space between type and description\n      postType: \"\",\n      // description is basicaly rest of the line\n      description: \"\",\n      // closing */ marker if present\n      end: \"\"\n    }\n  }, ... ],\n  // problems occured while parsing the block\n  problems: [],\n}];\n```\n\nWhile `.source[].tokens` are not providing readable annotation information, they are essential for tracing data origins and assembling string blocks with `stringify`\n\n## Stringifier\n\nStringifier is an important piece used by other tools updating the source code. Basically, it assembles tokens back into lines using provided formatter. Stringifier is using only `Block.source` field and doesn't care about the rest. Available formatters are `\"none\"` (default) and `\"align\"`. Also you can provide your custom [Formatter](./lib/strigifier.d.ts) having completely different logic\n\n```js\nconst { parse, stringify } = require('../../lib/');\n\nconst source = `\n  /**\n   * Description may go\n   * over multiple lines followed by @tags\n   * \n* @my-tag {my.type} my-name description line 1\n      description line 2\n    * description line 3\n   */`;\n\nconst parsed = parse(source);\n\nconsole.log(stringify(parsed[0], { format: 'align' }));\n```\n\nwould output following\n\n```\n  /**\n   * Description may go\n   * over multiple lines followed by @tags\n   *\n   * @my-tag {my.type} my-name description line 1\n                               description line 2\n   *                           description line 3\n   */\n```\n","types":"lib/index.d.ts","readmeFilename":"README.md","gitHead":"63a29709f9af8231aec1efd09730d284ea1735b3","_nodeVersion":"12.13.1","_npmVersion":"6.14.8","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.0.0-beta.0_1605517340685_0.04664281587665875"},"_hasShrinkwrap":false},"1.0.0-beta.1":{"_id":"comment-parser@1.0.0-beta.1","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.0.0-beta.1","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.es6.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js","format":"prettier --write src/ tests/","pretest":"rimraf coverage; npm run build","test":"prettier --check src/ tests/ && jest --verbose"},"directories":{},"devDependencies":{"@types/jest":"^26.0.14","jest":"^26.5.3","prettier":"2.1.2","rimraf":"^3.0.2","rollup":"^2.33.3","ts-jest":"^26.4.1","typescript":"^4.0.3"},"dependencies":{},"engines":{"node":">= 10.0.0"},"main":"lib/index.js","dist":{"shasum":"d73aadd30eb3d8e48bb912bccdaccc1ff48eac8b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.0.0-beta.1.tgz"},"readme":"# comment-parser\n\n`comment-parser` is a library helping to handle Generic JSDoc-style comments. It is\n\n- **language-agnostic** – no semantic enforced. You may use it anywhere as long as `/** */` comments are supported.\n- **no dependencies** – it is compact and environment-agnostic, can be ran on both server and browser sides\n- **highly customizable** – with a little of code you can deeply customize how comments are parsed\n- **bidirectional** - you can write comment blocks back to the source after updating or formatting\n- **strictly typed** - comes with generated `d.ts` data definitions since written in TypeScript\n\n```sh\nnpm install comment-parser\n```\n\n### 💡 Check out the [Playground](https://syavorsky.github.io/comment-parser)\n\nLib mainly provides two pieces [Parser](#Parser) and [Stringifier](#Stringifier).\n\n## Parser\n\nLets go over string parsing\n\n```\nconst { parse } = require('comment-parser/lib')\n\nconst source = `\n/**\n * Description may go\n * over few lines followed by @tags\n * @param name {string} name parameter\n * @param value {any} value of any type\n */`\n\nconst parsed = parse(source)\n```\n\nLib source code is written in TypeScript and all data shapes are conveniently available for your IDE of choice. All types described below can be found in [primitives.ts](src/primitives.ts)\n\nThe input source is fist parsed into lines, then lines split into tokens, and finally, tokens are processed into blocks of tags\n\n### Block\n\n```\n/**\n * Description may go\n * over multiple lines followed by @tags\n * @param {string} name the name parameter\n * @param {any} value the value parameter\n */\n```\n\n### Description\n\n```\n/**\n * Description may go\n * over multiple lines followed by @tags\n```\n\n### Tags\n\n```\n * @param {string} name the name parameter\n```\n\n```\n * @param {any} value the value parameter\n */\n```\n\n### Tokens\n\n```\n| ... | * | ... | @param | ... | value | ... | {any} | ... | value of any type\n```\n\n### Result\n\nThe result is an array of Block objects, see the full output on the [playground](https://syavorsky.github.io/comment-parser)\n\n```js\n[{\n  // uppper text of the comment, overall block description\n  description: 'Description may go over multiple lines followed by @tags',\n  // list of block tags: @param, @param\n  tags: [{\n    // tokens.tag without \"@\"\n    tag: 'param',\n    // unwrapped tokens.name\n    name: 'name',\n    // unwrapped tokens.type\n    type: 'string',\n    // true, if tokens.name is [optional]\n    optional: false,\n    // default value if optional [name=default] has one\n    default: undefined,\n    // tokens.description assembled from a siongle or multiple lines\n    description: 'the name parameter',\n    // problems occured while parsing this tag section, subset of ../problems array\n    problems: [],\n    // source lines processed for extracting this tag, \"slice\" of the ../source item reference\n    source: [ ... ],\n  }, ... ],\n  // source is an array of `Line` items having the source\n  // line number and `Tokens` that can be assembled back into\n  // the line string preserving original formatting\n  source: [{\n    // source line number\n    number: 1,\n    // source line string\n    source: \"/**\",\n    // source line tokens\n    tokens: {\n      // indentation\n      start: \"\",\n      // delimiter, either '/**', '*/', or ''. Mid lines may have no delimiters\n      delimiter: \"/**\",\n      // space between delimiter and tag\n      postDelimiter: \"\",\n      // tag starting with \"@\"\n      tag: \"\",\n      // space between tag and type\n      postTag: \"\",\n      // name with no whitespaces or \"multiple words\" wrapped into quotes. May occure in [name] and [name=default] forms\n      name: \"\",\n      // space between name and type\n      postName: \"\",\n      // type is has to be {wrapped} into curlies otherwise will be omitted\n      type: \"\",\n      // space between type and description\n      postType: \"\",\n      // description is basicaly rest of the line\n      description: \"\",\n      // closing */ marker if present\n      end: \"\"\n    }\n  }, ... ],\n  // problems occured while parsing the block\n  problems: [],\n}];\n```\n\nWhile `.source[].tokens` are not providing readable annotation information, they are essential for tracing data origins and assembling string blocks with `stringify`\n\n### options\n\n```ts\ninterface Options {\n  // start count for source line numbers\n  startLine: number;\n  // escaping chars sequence marking wrapped content literal for the parser\n  fence: string;\n  // block and comment description compaction strategy, see Spacer\n  spacing: 'compact' | 'preserve' | Spacer;\n  // tokenizer functions extracting name, type, and description out of tag, see Tokenizer\n  tokenizers: Tokenizer[];\n}\n```\n\nexamples \n- [default config](https://syavorsky.github.io/comment-parser/#parse-defaults)\n- [line numbers control](https://syavorsky.github.io/comment-parser/#parse-line-numbering)\n- [description spacing](https://syavorsky.github.io/comment-parser/#parse-spacing)\n- [escaping](https://syavorsky.github.io/comment-parser/#parse-escaping)\n- [explore the origin source](https://syavorsky.github.io/comment-parser/#parse-source-exploration)\n\n[suggest more examples](https://github.com/syavorsky/comment-parser/issues/new?title=example+suggestion%3A+...&labels=example,parser)\n\n## Stringifier\n\nThe stringifier is an important piece used by other tools updating the source code. It goes over `Block.source[].tokens` and assembles them back to a string. It might be used with various transforms applied to the parsed data before stringifying.\n\n```js\nconst { parse, stringify, transforms: {flow, align, indent} } = require('./lib/');\n\nconst source = `\n  /**\n   * Description may go\n   * over multiple lines followed by @tags\n   * \n* @my-tag {my.type} my-name description line 1\n      description line 2\n    * description line 3\n   */`;\n\nconst parsed = parse(source);\nconst transform = flow(align(), indent(0))\nconsole.log(stringify(transform(parsed[0])));\n```\n\n### Result\n\n```\n/**\n * Description may go\n * over multiple lines followed by @tags\n *\n * @my-tag {my.type} my-name description line 1\n                             description line 2\n *                           description line 3\n */\n```\n\nexamples\n- [format comments](https://syavorsky.github.io/comment-parser/#stringify-formatting)\n\n[suggest more examples](https://github.com/syavorsky/comment-parser/issues/new?title=example+suggestion%3A+...&labels=example,stringifier)\n\n## Migrating from 0.x version\n\nCode of pre-1.0 version is forked into [0.x](https://github.com/syavorsky/comment-parser/tree/0.x) and will phase out eventually. Please file the issue if you find some previously existing functionality can't be achieved with 1.x API. Check out [migration notes](migrate-1.0.md).\n","types":"lib/index.d.ts","readmeFilename":"README.md","gitHead":"e69f1aff2e3fac375189c69adf936790f280775b","_nodeVersion":"12.13.1","_npmVersion":"6.14.8","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.0.0-beta.1_1608934169687_0.36177391204099796"},"_hasShrinkwrap":false},"1.0.0-beta.2":{"_id":"comment-parser@1.0.0-beta.2","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.0.0-beta.2","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.es6.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js","format":"prettier --write src/ tests/","pretest":"rimraf coverage; npm run build","test":"prettier --check src/ tests/ && jest --verbose"},"directories":{},"devDependencies":{"@types/jest":"^26.0.14","jest":"^26.5.3","prettier":"2.1.2","rimraf":"^3.0.2","rollup":"^2.33.3","ts-jest":"^26.4.1","typescript":"^4.0.3"},"dependencies":{},"engines":{"node":">= 10.0.0"},"main":"lib/index.js","dist":{"shasum":"d04d18dc5c0e1787a06cba66559680210ff8b408","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.0.0-beta.2.tgz"},"readme":"# comment-parser\n\n`comment-parser` is a library helping to handle Generic JSDoc-style comments. It is\n\n- **language-agnostic** – no semantic enforced. You may use it anywhere as long as `/** */` comments are supported.\n- **no dependencies** – it is compact and environment-agnostic, can be ran on both server and browser sides\n- **highly customizable** – with a little of code you can deeply customize how comments are parsed\n- **bidirectional** - you can write comment blocks back to the source after updating or formatting\n- **strictly typed** - comes with generated `d.ts` data definitions since written in TypeScript\n\n```sh\nnpm install comment-parser\n```\n\n### 💡 Check out the [Playground](https://syavorsky.github.io/comment-parser)\n\nLib mainly provides two pieces [Parser](#Parser) and [Stringifier](#Stringifier).\n\n## Parser\n\nLets go over string parsing\n\n```\nconst { parse } = require('comment-parser/lib')\n\nconst source = `\n/**\n * Description may go\n * over few lines followed by @tags\n * @param name {string} name parameter\n * @param value {any} value of any type\n */`\n\nconst parsed = parse(source)\n```\n\nLib source code is written in TypeScript and all data shapes are conveniently available for your IDE of choice. All types described below can be found in [primitives.ts](src/primitives.ts)\n\nThe input source is fist parsed into lines, then lines split into tokens, and finally, tokens are processed into blocks of tags\n\n### Block\n\n```\n/**\n * Description may go\n * over multiple lines followed by @tags\n * @param {string} name the name parameter\n * @param {any} value the value parameter\n */\n```\n\n### Description\n\n```\n/**\n * Description may go\n * over multiple lines followed by @tags\n```\n\n### Tags\n\n```\n * @param {string} name the name parameter\n```\n\n```\n * @param {any} value the value parameter\n */\n```\n\n### Tokens\n\n```\n| ... | * | ... | @param | ... | value | ... | {any} | ... | value of any type\n```\n\n### Result\n\nThe result is an array of Block objects, see the full output on the [playground](https://syavorsky.github.io/comment-parser)\n\n```js\n[{\n  // uppper text of the comment, overall block description\n  description: 'Description may go over multiple lines followed by @tags',\n  // list of block tags: @param, @param\n  tags: [{\n    // tokens.tag without \"@\"\n    tag: 'param',\n    // unwrapped tokens.name\n    name: 'name',\n    // unwrapped tokens.type\n    type: 'string',\n    // true, if tokens.name is [optional]\n    optional: false,\n    // default value if optional [name=default] has one\n    default: undefined,\n    // tokens.description assembled from a siongle or multiple lines\n    description: 'the name parameter',\n    // problems occured while parsing this tag section, subset of ../problems array\n    problems: [],\n    // source lines processed for extracting this tag, \"slice\" of the ../source item reference\n    source: [ ... ],\n  }, ... ],\n  // source is an array of `Line` items having the source\n  // line number and `Tokens` that can be assembled back into\n  // the line string preserving original formatting\n  source: [{\n    // source line number\n    number: 1,\n    // source line string\n    source: \"/**\",\n    // source line tokens\n    tokens: {\n      // indentation\n      start: \"\",\n      // delimiter, either '/**', '*/', or ''. Mid lines may have no delimiters\n      delimiter: \"/**\",\n      // space between delimiter and tag\n      postDelimiter: \"\",\n      // tag starting with \"@\"\n      tag: \"\",\n      // space between tag and type\n      postTag: \"\",\n      // name with no whitespaces or \"multiple words\" wrapped into quotes. May occure in [name] and [name=default] forms\n      name: \"\",\n      // space between name and type\n      postName: \"\",\n      // type is has to be {wrapped} into curlies otherwise will be omitted\n      type: \"\",\n      // space between type and description\n      postType: \"\",\n      // description is basicaly rest of the line\n      description: \"\",\n      // closing */ marker if present\n      end: \"\"\n    }\n  }, ... ],\n  // problems occured while parsing the block\n  problems: [],\n}];\n```\n\nWhile `.source[].tokens` are not providing readable annotation information, they are essential for tracing data origins and assembling string blocks with `stringify`\n\n### options\n\n```ts\ninterface Options {\n  // start count for source line numbers\n  startLine: number;\n  // escaping chars sequence marking wrapped content literal for the parser\n  fence: string;\n  // block and comment description compaction strategy, see Spacer\n  spacing: 'compact' | 'preserve' | Spacer;\n  // tokenizer functions extracting name, type, and description out of tag, see Tokenizer\n  tokenizers: Tokenizer[];\n}\n```\n\nexamples \n- [default config](https://syavorsky.github.io/comment-parser/#parse-defaults)\n- [line numbers control](https://syavorsky.github.io/comment-parser/#parse-line-numbering)\n- [description spacing](https://syavorsky.github.io/comment-parser/#parse-spacing)\n- [escaping](https://syavorsky.github.io/comment-parser/#parse-escaping)\n- [explore the origin source](https://syavorsky.github.io/comment-parser/#parse-source-exploration)\n\n[suggest more examples](https://github.com/syavorsky/comment-parser/issues/new?title=example+suggestion%3A+...&labels=example,parser)\n\n## Stringifier\n\nThe stringifier is an important piece used by other tools updating the source code. It goes over `Block.source[].tokens` and assembles them back to a string. It might be used with various transforms applied to the parsed data before stringifying.\n\n```js\nconst { parse, stringify, transforms: {flow, align, indent} } = require('./lib/');\n\nconst source = `\n  /**\n   * Description may go\n   * over multiple lines followed by @tags\n   * \n* @my-tag {my.type} my-name description line 1\n      description line 2\n    * description line 3\n   */`;\n\nconst parsed = parse(source);\nconst transform = flow(align(), indent(0))\nconsole.log(stringify(transform(parsed[0])));\n```\n\n### Result\n\n```\n/**\n * Description may go\n * over multiple lines followed by @tags\n *\n * @my-tag {my.type} my-name description line 1\n                             description line 2\n *                           description line 3\n */\n```\n\nexamples\n- [format comments](https://syavorsky.github.io/comment-parser/#stringify-formatting)\n\n[suggest more examples](https://github.com/syavorsky/comment-parser/issues/new?title=example+suggestion%3A+...&labels=example,stringifier)\n\n## Migrating from 0.x version\n\nCode of pre-1.0 version is forked into [0.x](https://github.com/syavorsky/comment-parser/tree/0.x) and will phase out eventually. Please file the issue if you find some previously existing functionality can't be achieved with 1.x API. Check out [migration notes](migrate-1.0.md).\n","types":"lib/index.d.ts","readmeFilename":"README.md","gitHead":"20c974fbe9f68129d9f6c023f726d2de3ed9fe71","_nodeVersion":"12.13.1","_npmVersion":"6.14.8","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.0.0-beta.2_1608935919160_0.1393269198987377"},"_hasShrinkwrap":false},"1.0.0":{"_id":"comment-parser@1.0.0","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.0.0","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.es6.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js","format":"prettier --write src/ tests/","pretest":"rimraf coverage; npm run build","test":"prettier --check src/ tests/ && jest --verbose"},"directories":{},"devDependencies":{"@types/jest":"^26.0.14","jest":"^26.5.3","prettier":"2.1.2","rimraf":"^3.0.2","rollup":"^2.33.3","ts-jest":"^26.4.1","typescript":"^4.0.3"},"dependencies":{},"engines":{"node":">= 10.0.0"},"main":"lib/index.js","dist":{"shasum":"59bf7173fd4215e37727958af2d88e7118a68aa1","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.0.0.tgz"},"types":"lib/index.d.ts","gitHead":"9dba20d47e0f32e130329be1e93f3502ad3f688a","_nodeVersion":"12.13.1","_npmVersion":"6.14.10","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.0.0_1609919851517_0.13879271671908677"},"_hasShrinkwrap":false},"1.0.1":{"_id":"comment-parser@1.0.1","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.0.1","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.es6.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js","format":"prettier --write src/ tests/","pretest":"rimraf coverage; npm run build","test":"prettier --check src/ tests/ && jest --verbose"},"directories":{},"devDependencies":{"@types/jest":"^26.0.14","jest":"^26.5.3","prettier":"2.1.2","rimraf":"^3.0.2","rollup":"^2.33.3","ts-jest":"^26.4.1","typescript":"^4.0.3"},"dependencies":{},"engines":{"node":">= 10.0.0"},"main":"lib/index.js","dist":{"shasum":"6f40ebc3ac5063cf59b5eb415bc689636134cc4a","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.0.1.tgz"},"types":"lib/index.d.ts","gitHead":"286d1d3bf888f5895d494e1991c07c76efac755f","_nodeVersion":"12.13.1","_npmVersion":"6.14.10","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.0.1_1610140478883_0.9354115614126441"},"_hasShrinkwrap":false},"1.1.0":{"_id":"comment-parser@1.1.0","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.1.0","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.es6.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js","format":"prettier --write src/ tests/","pretest":"rimraf coverage; npm run build","test":"prettier --check src/ tests/ && jest --verbose"},"directories":{},"devDependencies":{"@types/jest":"^26.0.14","jest":"^26.5.3","prettier":"2.1.2","rimraf":"^3.0.2","rollup":"^2.33.3","ts-jest":"^26.4.1","typescript":"^4.0.3"},"dependencies":{},"engines":{"node":">= 10.0.0"},"main":"lib/index.js","dist":{"shasum":"4f6fac17718363653e1cb6d5ded3f093ce51ae4e","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.1.0.tgz"},"readme":"# comment-parser\n\n`comment-parser` is a library helping to handle Generic JSDoc-style comments. It is\n\n- **language-agnostic** – no semantics enforced. You decide what tags are and what they mean. And it can be used with any language supporting `/** */` source comments.\n- **no dependencies** – it is compact and environment-agnostic, can be run on both the server and browser sides\n- **highly customizable** – with a little code you can deeply customize how comments are parsed\n- **bidirectional** - you can write comment blocks back to the source after updating or formatting\n- **strictly typed** - comes with generated `d.ts` data definitions since written in TypeScript\n\n```sh\nnpm install comment-parser\n```\n\n> 💡 Check out the [Playground](https://syavorsky.github.io/comment-parser)\n\n> 💡 Previous version lives in [0.x](https://github.com/syavorsky/comment-parser/tree/0.x) branch\n\nLib mainly provides two pieces [Parser](#Parser) and [Stringifier](#Stringifier).\n\n## Parser\n\nLet's go over string parsing:\n\n```js\nconst { parse } = require('comment-parser/lib')\n\nconst source = `\n/**\n * Description may go\n * over few lines followed by @tags\n * @param {string} name the name parameter\n * @param {any} value the value of any type\n */`\n\nconst parsed = parse(source)\n```\n\nLib source code is written in TypeScript and all data shapes are conveniently available for your IDE of choice. All types described below can be found in [primitives.ts](src/primitives.ts)\n\nThe input source is first parsed into lines, then lines split into tokens, and finally, tokens are processed into blocks of tags\n\n### Block\n\n```js\n/**\n * Description may go\n * over multiple lines followed by @tags\n * @param {string} name the name parameter\n * @param {any} value the value parameter\n */\n```\n\n### Description\n\n```js\n/**\n * Description may go\n * over multiple lines followed by @tags\n```\n\n### Tags\n\n```js\n * @param {string} name the name parameter\n```\n\n```js\n * @param {any} value the value parameter\n */\n```\n\n### Tokens\n\n```\n|line|start|delimiter|postDelimiter|tag   |postTag|name |postName|type    |postType|description                     |end|\n|----|-----|---------|-------------|------|-------|-----|--------|--------|--------|--------------------------------|---|\n|   0|{2}  |/**      |             |      |       |     |        |        |        |                                |   |\n|   1|{3}  |*        |{1}          |      |       |     |        |        |        |Description may go              |   |\n|   2|{3}  |*        |{1}          |      |       |     |        |        |        |over few lines followed by @tags|   |\n|   3|{3}  |*        |{1}          |@param|{1}    |name |{1}     |{string}|{1}     |the name parameter              |   |\n|   4|{3}  |*        |{1}          |@param|{1}    |value|{1}     |{any}   |{1}     |the value of any type           |   |\n|   5|{3}  |         |             |      |       |     |        |        |        |                                |*/ |\n```\n\n### Result\n\nThe result is an array of Block objects, see the full output on the [playground](https://syavorsky.github.io/comment-parser)\n\n```js\n[{\n  // uppper text of the comment, overall block description\n  description: 'Description may go over multiple lines followed by @tags',\n  // list of block tags: @param, @param\n  tags: [{\n    // tokens.tag without \"@\"\n    tag: 'param',\n    // unwrapped tokens.name\n    name: 'name',\n    // unwrapped tokens.type\n    type: 'string',\n    // true, if tokens.name is [optional]\n    optional: false,\n    // default value if optional [name=default] has one\n    default: undefined,\n    // tokens.description assembled from a siongle or multiple lines\n    description: 'the name parameter',\n    // problems occured while parsing this tag section, subset of ../problems array\n    problems: [],\n    // source lines processed for extracting this tag, \"slice\" of the ../source item reference\n    source: [ ... ],\n  }, ... ],\n  // source is an array of `Line` items having the source\n  // line number and `Tokens` that can be assembled back into\n  // the line string preserving original formatting\n  source: [{\n    // source line number\n    number: 1,\n    // source line string\n    source: \"/**\",\n    // source line tokens\n    tokens: {\n      // indentation\n      start: \"\",\n      // delimiter, either '/**', '*/', or ''. Mid lines may have no delimiters\n      delimiter: \"/**\",\n      // space between delimiter and tag\n      postDelimiter: \"\",\n      // tag starting with \"@\"\n      tag: \"\",\n      // space between tag and type\n      postTag: \"\",\n      // name with no whitespaces or \"multiple words\" wrapped into quotes. May occure in [name] and [name=default] forms\n      name: \"\",\n      // space between name and type\n      postName: \"\",\n      // type is has to be {wrapped} into curlies otherwise will be omitted\n      type: \"\",\n      // space between type and description\n      postType: \"\",\n      // description is basicaly rest of the line\n      description: \"\",\n      // closing */ marker if present\n      end: \"\"\n    }\n  }, ... ],\n  // problems occured while parsing the block\n  problems: [],\n}];\n```\n\nWhile `.source[].tokens` are not providing readable annotation information, they are essential for tracing data origins and assembling string blocks with `stringify`\n\n### options\n\n```ts\ninterface Options {\n  // start count for source line numbers\n  startLine: number;\n  // escaping chars sequence marking wrapped content literal for the parser\n  fence: string;\n  // block and comment description compaction strategy\n  spacing: 'compact' | 'preserve';\n  // tokenizer functions extracting name, type, and description out of tag, see Tokenizer\n  tokenizers: Tokenizer[];\n}\n```\n\nexamples\n- [default config](https://syavorsky.github.io/comment-parser/#parse-defaults)\n- [line numbers control](https://syavorsky.github.io/comment-parser/#parse-line-numbering)\n- [description spacing](https://syavorsky.github.io/comment-parser/#parse-spacing)\n- [escaping](https://syavorsky.github.io/comment-parser/#parse-escaping)\n- [explore the origin source](https://syavorsky.github.io/comment-parser/#parse-source-exploration)\n\n[suggest more examples](https://github.com/syavorsky/comment-parser/issues/new?title=example+suggestion%3A+...&labels=example,parser)\n\n## Stringifier\n\nThe stringifier is an important piece used by other tools updating the source code. It goes over `Block.source[].tokens` items and assembles them back to the string. It might be used with various transforms applied before stringifying.\n\n```js\nconst { parse, stringify, transforms: {flow, align, indent} } = require('comment-parser');\n\nconst source = `\n  /**\n   * Description may go\n   * over multiple lines followed by @tags\n   *\n* @my-tag {my.type} my-name description line 1\n      description line 2\n    * description line 3\n   */`;\n\nconst parsed = parse(source);\nconst transform = flow(align(), indent(0))\nconsole.log(stringify(transform(parsed[0])));\n```\n\n### Result\n\n```js\n/**\n * Description may go\n * over multiple lines followed by @tags\n *\n * @my-tag {my.type} my-name description line 1\n                             description line 2\n *                           description line 3\n */\n```\n\nexamples\n- [format comments](https://syavorsky.github.io/comment-parser/#stringify-formatting)\n\n[suggest more examples](https://github.com/syavorsky/comment-parser/issues/new?title=example+suggestion%3A+...&labels=example,stringifier)\n\n## Migrating from 0.x version\n\nCode of pre-1.0 version is forked into [0.x](https://github.com/syavorsky/comment-parser/tree/0.x) and will phase out eventually. Please file the issue if you find some previously existing functionality can't be achieved with 1.x API. Check out [migration notes](migrate-1.0.md).\n","types":"lib/index.d.ts","readmeFilename":"README.md","gitHead":"89a6422036f490d1038676336010c34a42ade1aa","_nodeVersion":"12.13.1","_npmVersion":"6.14.11","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.1.0_1610879993711_0.9404737703858541"},"_hasShrinkwrap":false},"1.1.1":{"_id":"comment-parser@1.1.1","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.1.1","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.es6.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js","format":"prettier --write src/ tests/","pretest":"rimraf coverage; npm run build","test":"prettier --check src/ tests/ && jest --verbose"},"directories":{},"devDependencies":{"@types/jest":"^26.0.14","jest":"^26.5.3","prettier":"2.1.2","rimraf":"^3.0.2","rollup":"^2.33.3","ts-jest":"^26.4.1","typescript":"^4.0.3"},"dependencies":{},"engines":{"node":">= 10.0.0"},"main":"lib/index.js","dist":{"shasum":"c0581d520677e2cfab1a568e94ea0400df9fe4bd","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.1.1.tgz"},"types":"lib/index.d.ts","gitHead":"91080ee7394ab9fdecbab309c9f76200fae77fb4","_nodeVersion":"12.13.1","_npmVersion":"6.14.11","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.1.1_1610951555578_0.3726196766409773"},"_hasShrinkwrap":false},"1.1.2":{"_id":"comment-parser@1.1.2","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.1.2","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.es6.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js","format":"prettier --write src/ tests/","pretest":"rimraf coverage; npm run build","test":"prettier --check src/ tests/ && jest --verbose"},"directories":{},"devDependencies":{"@types/jest":"^26.0.14","jest":"^26.5.3","prettier":"2.1.2","rimraf":"^3.0.2","rollup":"^2.33.3","ts-jest":"^26.4.1","typescript":"^4.0.3"},"dependencies":{},"engines":{"node":">= 10.0.0"},"main":"lib/index.js","dist":{"shasum":"e5317d7a2ec22b470dcb54a29b25426c30bf39d8","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.1.2.tgz"},"types":"lib/index.d.ts","gitHead":"318d93cdac3e62cbc2f301b64e23506fa16cdeab","_nodeVersion":"12.13.1","_npmVersion":"7.5.2","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.1.2_1612688302714_0.02766178688795251"},"_hasShrinkwrap":false},"1.1.3":{"_id":"comment-parser@1.1.3","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.1.3","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.es6.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js","format":"prettier --write src/ tests/","pretest":"rimraf coverage; npm run build","test":"prettier --check src/ tests/ && jest --verbose"},"directories":{},"devDependencies":{"@types/jest":"^26.0.14","jest":"^26.5.3","prettier":"2.1.2","rimraf":"^3.0.2","rollup":"^2.33.3","ts-jest":"^26.4.1","typescript":"^4.0.3"},"dependencies":{},"engines":{"node":">= 10.0.0"},"main":"lib/index.js","dist":{"shasum":"727764a3631b74a7af743197976f74a6ca1c7e85","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.1.3.tgz"},"types":"lib/index.d.ts","gitHead":"23f2d6881a4d738defa9624cb056233b639d4dbe","_nodeVersion":"12.13.1","_npmVersion":"7.5.2","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.1.3_1616268331166_0.4428204991635283"},"_hasShrinkwrap":false},"1.1.4":{"_id":"comment-parser@1.1.4","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.1.4","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.es6.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js","format":"prettier --write src/ tests/","pretest":"rimraf coverage; npm run build","test":"prettier --check src/ tests/ && jest --verbose"},"directories":{},"devDependencies":{"@types/jest":"^26.0.14","jest":"^26.5.3","prettier":"2.1.2","rimraf":"^3.0.2","rollup":"^2.33.3","ts-jest":"^26.4.1","typescript":"^4.0.3"},"dependencies":{},"engines":{"node":">= 10.0.0"},"main":"lib/index.js","dist":{"shasum":"38ba3fb9293e29fa613a287f1fe184241dbd3755","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.1.4.tgz"},"types":"lib/index.d.ts","gitHead":"00cc57e269a8b64c9e11282bdaa32db829b1cf62","_nodeVersion":"12.13.1","_npmVersion":"7.5.2","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.1.4_1616480714865_0.3314281865891384"},"_hasShrinkwrap":false},"1.1.5":{"_id":"comment-parser@1.1.5","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.1.5","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js","format":"prettier --write src/ tests/","pretest":"rimraf coverage; npm run build","test":"prettier --check src/ tests/ && jest --verbose","preversion":"npm run build"},"directories":{},"devDependencies":{"@types/jest":"^26.0.14","jest":"^26.5.3","prettier":"2.1.2","rimraf":"^3.0.2","rollup":"^2.33.3","ts-jest":"^26.4.1","typescript":"^4.0.3"},"dependencies":{},"engines":{"node":">= 10.0.0"},"main":"lib/index.js","dist":{"shasum":"453627ef8f67dbcec44e79a9bd5baa37f0bce9b2","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.1.5.tgz"},"types":"lib/index.d.ts","gitHead":"14f2ab94d4e7a886be81027f51663b4a5e6412f7","_nodeVersion":"12.13.1","_npmVersion":"7.5.2","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.1.5_1619082957762_0.7180469019725695"},"_hasShrinkwrap":false},"1.1.6-beta.0":{"_id":"comment-parser@1.1.6-beta.0","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.1.6-beta.0","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js","format":"prettier --write src/ tests/","pretest":"rimraf coverage; npm run build","test":"prettier --check src/ tests/ && jest --verbose","preversion":"npm run build"},"directories":{},"devDependencies":{"@types/jest":"^26.0.14","jest":"^26.5.3","prettier":"2.1.2","rimraf":"^3.0.2","rollup":"^2.33.3","ts-jest":"^26.4.1","typescript":"^4.0.3"},"dependencies":{},"engines":{"node":">= 10.0.0"},"main":"lib/index.js","dist":{"shasum":"57e503b18d0a5bd008632dcc54b1f95c2fffe8f6","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.1.6-beta.0.tgz"},"readme":"# comment-parser\n\n`comment-parser` is a library helping to handle Generic JSDoc-style comments. It is\n\n- **language-agnostic** – no semantics enforced. You decide what tags are and what they mean. And it can be used with any language supporting `/** */` source comments.\n- **no dependencies** – it is compact and environment-agnostic, can be run on both the server and browser sides\n- **highly customizable** – with a little code you can deeply customize how comments are parsed\n- **bidirectional** - you can write comment blocks back to the source after updating or formatting\n- **strictly typed** - comes with generated `d.ts` data definitions since written in TypeScript\n\n```sh\nnpm install comment-parser\n```\n\n> 💡 Check out the [Playground](https://syavorsky.github.io/comment-parser)\n\n> 💡 Previous version lives in [0.x](https://github.com/syavorsky/comment-parser/tree/0.x) branch\n\nLib mainly provides two pieces [Parser](#Parser) and [Stringifier](#Stringifier).\n\n## Parser\n\nLet's go over string parsing:\n\n```js\nconst { parse } = require('comment-parser/lib')\n\nconst source = `\n/**\n * Description may go\n * over few lines followed by @tags\n * @param {string} name the name parameter\n * @param {any} value the value of any type\n */`\n\nconst parsed = parse(source)\n```\n\nLib source code is written in TypeScript and all data shapes are conveniently available for your IDE of choice. All types described below can be found in [primitives.ts](src/primitives.ts)\n\nThe input source is first parsed into lines, then lines split into tokens, and finally, tokens are processed into blocks of tags\n\n### Block\n\n```js\n/**\n * Description may go\n * over multiple lines followed by @tags\n * @param {string} name the name parameter\n * @param {any} value the value parameter\n */\n```\n\n### Description\n\n```js\n/**\n * Description may go\n * over multiple lines followed by @tags\n```\n\n### Tags\n\n```js\n * @param {string} name the name parameter\n```\n\n```js\n * @param {any} value the value parameter\n */\n```\n\n### Tokens\n\n```\n|line|start|delimiter|postDelimiter|tag   |postTag|name |postName|type    |postType|description                     |end|\n|----|-----|---------|-------------|------|-------|-----|--------|--------|--------|--------------------------------|---|\n|   0|{2}  |/**      |             |      |       |     |        |        |        |                                |   |\n|   1|{3}  |*        |{1}          |      |       |     |        |        |        |Description may go              |   |\n|   2|{3}  |*        |{1}          |      |       |     |        |        |        |over few lines followed by @tags|   |\n|   3|{3}  |*        |{1}          |@param|{1}    |name |{1}     |{string}|{1}     |the name parameter              |   |\n|   4|{3}  |*        |{1}          |@param|{1}    |value|{1}     |{any}   |{1}     |the value of any type           |   |\n|   5|{3}  |         |             |      |       |     |        |        |        |                                |*/ |\n```\n\n### Result\n\nThe result is an array of Block objects, see the full output on the [playground](https://syavorsky.github.io/comment-parser)\n\n```js\n[{\n  // uppper text of the comment, overall block description\n  description: 'Description may go over multiple lines followed by @tags',\n  // list of block tags: @param, @param\n  tags: [{\n    // tokens.tag without \"@\"\n    tag: 'param',\n    // unwrapped tokens.name\n    name: 'name',\n    // unwrapped tokens.type\n    type: 'string',\n    // true, if tokens.name is [optional]\n    optional: false,\n    // default value if optional [name=default] has one\n    default: undefined,\n    // tokens.description assembled from a siongle or multiple lines\n    description: 'the name parameter',\n    // problems occured while parsing this tag section, subset of ../problems array\n    problems: [],\n    // source lines processed for extracting this tag, \"slice\" of the ../source item reference\n    source: [ ... ],\n  }, ... ],\n  // source is an array of `Line` items having the source\n  // line number and `Tokens` that can be assembled back into\n  // the line string preserving original formatting\n  source: [{\n    // source line number\n    number: 1,\n    // source line string\n    source: \"/**\",\n    // source line tokens\n    tokens: {\n      // indentation\n      start: \"\",\n      // delimiter, either '/**', '*/', or ''. Mid lines may have no delimiters\n      delimiter: \"/**\",\n      // space between delimiter and tag\n      postDelimiter: \"\",\n      // tag starting with \"@\"\n      tag: \"\",\n      // space between tag and type\n      postTag: \"\",\n      // name with no whitespaces or \"multiple words\" wrapped into quotes. May occure in [name] and [name=default] forms\n      name: \"\",\n      // space between name and type\n      postName: \"\",\n      // type is has to be {wrapped} into curlies otherwise will be omitted\n      type: \"\",\n      // space between type and description\n      postType: \"\",\n      // description is basicaly rest of the line\n      description: \"\",\n      // closing */ marker if present\n      end: \"\"\n    }\n  }, ... ],\n  // problems occured while parsing the block\n  problems: [],\n}];\n```\n\nWhile `.source[].tokens` are not providing readable annotation information, they are essential for tracing data origins and assembling string blocks with `stringify`\n\n### options\n\n```ts\ninterface Options {\n  // start count for source line numbers\n  startLine: number;\n  // escaping chars sequence marking wrapped content literal for the parser\n  fence: string;\n  // block and comment description compaction strategy\n  spacing: 'compact' | 'preserve';\n  // tokenizer functions extracting name, type, and description out of tag, see Tokenizer\n  tokenizers: Tokenizer[];\n}\n```\n\nexamples\n- [default config](https://syavorsky.github.io/comment-parser/#parse-defaults)\n- [line numbers control](https://syavorsky.github.io/comment-parser/#parse-line-numbering)\n- [description spacing](https://syavorsky.github.io/comment-parser/#parse-spacing)\n- [escaping](https://syavorsky.github.io/comment-parser/#parse-escaping)\n- [explore the origin source](https://syavorsky.github.io/comment-parser/#parse-source-exploration)\n\n[suggest more examples](https://github.com/syavorsky/comment-parser/issues/new?title=example+suggestion%3A+...&labels=example,parser)\n\n## Stringifier\n\nThe stringifier is an important piece used by other tools updating the source code. It goes over `Block.source[].tokens` items and assembles them back to the string. It might be used with various transforms applied before stringifying.\n\n```js\nconst { parse, stringify, transforms: {flow, align, indent} } = require('comment-parser');\n\nconst source = `\n  /**\n   * Description may go\n   * over multiple lines followed by @tags\n   *\n* @my-tag {my.type} my-name description line 1\n      description line 2\n    * description line 3\n   */`;\n\nconst parsed = parse(source);\nconst transform = flow(align(), indent(0))\nconsole.log(stringify(transform(parsed[0])));\n```\n\n### Result\n\n```js\n/**\n * Description may go\n * over multiple lines followed by @tags\n *\n * @my-tag {my.type} my-name description line 1\n                             description line 2\n *                           description line 3\n */\n```\n\nexamples\n- [format comments](https://syavorsky.github.io/comment-parser/#stringify-formatting)\n\n[suggest more examples](https://github.com/syavorsky/comment-parser/issues/new?title=example+suggestion%3A+...&labels=example,stringifier)\n\n## Migrating from 0.x version\n\nCode of pre-1.0 version is forked into [0.x](https://github.com/syavorsky/comment-parser/tree/0.x) and will phase out eventually. Please file the issue if you find some previously existing functionality can't be achieved with 1.x API. Check out [migration notes](migrate-1.0.md).\n","types":"lib/index.d.ts","readmeFilename":"README.md","gitHead":"0c10a032c83a2a1c352adcbfaf33aa9c72782967","_nodeVersion":"12.13.1","_npmVersion":"7.5.2","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.1.6-beta.0_1625517510822_0.8822899759891352"},"_hasShrinkwrap":false},"1.1.6-beta.1":{"_id":"comment-parser@1.1.6-beta.1","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.1.6-beta.1","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js && cd es6 && replace \"from '(\\.[^']*)'\" \"from '\\$1.js'\" * -r","format":"prettier --write src tests","pretest":"rimraf coverage; npm run build","test":"prettier --check src tests && jest --verbose","preversion":"npm run build"},"directories":{},"devDependencies":{"@types/jest":"^26.0.23","jest":"^27.0.5","prettier":"2.3.1","replace":"^1.2.1","rimraf":"^3.0.2","rollup":"^2.52.2","ts-jest":"^27.0.3","typescript":"^4.3.4"},"dependencies":{},"engines":{"node":">= 12.0.0"},"main":"lib/index.js","dist":{"shasum":"17a698f1566b88db9991aa83f49f5a872713c0d1","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.1.6-beta.1.tgz"},"readme":"# comment-parser\n\n`comment-parser` is a library helping to handle Generic JSDoc-style comments. It is\n\n- **language-agnostic** – no semantics enforced. You decide what tags are and what they mean. And it can be used with any language supporting `/** */` source comments.\n- **no dependencies** – it is compact and environment-agnostic, can be run on both the server and browser sides\n- **highly customizable** – with a little code you can deeply customize how comments are parsed\n- **bidirectional** - you can write comment blocks back to the source after updating or formatting\n- **strictly typed** - comes with generated `d.ts` data definitions since written in TypeScript\n\n```sh\nnpm install comment-parser\n```\n\n> 💡 Check out the [Playground](https://syavorsky.github.io/comment-parser)\n\n> 💡 Previous version lives in [0.x](https://github.com/syavorsky/comment-parser/tree/0.x) branch\n\nLib mainly provides two pieces [Parser](#Parser) and [Stringifier](#Stringifier).\n\n## Parser\n\nLet's go over string parsing:\n\n```js\nconst { parse } = require('comment-parser/lib')\n\nconst source = `\n/**\n * Description may go\n * over few lines followed by @tags\n * @param {string} name the name parameter\n * @param {any} value the value of any type\n */`\n\nconst parsed = parse(source)\n```\n\nLib source code is written in TypeScript and all data shapes are conveniently available for your IDE of choice. All types described below can be found in [primitives.ts](src/primitives.ts)\n\nThe input source is first parsed into lines, then lines split into tokens, and finally, tokens are processed into blocks of tags\n\n### Block\n\n```js\n/**\n * Description may go\n * over multiple lines followed by @tags\n * @param {string} name the name parameter\n * @param {any} value the value parameter\n */\n```\n\n### Description\n\n```js\n/**\n * Description may go\n * over multiple lines followed by @tags\n```\n\n### Tags\n\n```js\n * @param {string} name the name parameter\n```\n\n```js\n * @param {any} value the value parameter\n */\n```\n\n### Tokens\n\n```\n|line|start|delimiter|postDelimiter|tag   |postTag|name |postName|type    |postType|description                     |end|\n|----|-----|---------|-------------|------|-------|-----|--------|--------|--------|--------------------------------|---|\n|   0|{2}  |/**      |             |      |       |     |        |        |        |                                |   |\n|   1|{3}  |*        |{1}          |      |       |     |        |        |        |Description may go              |   |\n|   2|{3}  |*        |{1}          |      |       |     |        |        |        |over few lines followed by @tags|   |\n|   3|{3}  |*        |{1}          |@param|{1}    |name |{1}     |{string}|{1}     |the name parameter              |   |\n|   4|{3}  |*        |{1}          |@param|{1}    |value|{1}     |{any}   |{1}     |the value of any type           |   |\n|   5|{3}  |         |             |      |       |     |        |        |        |                                |*/ |\n```\n\n### Result\n\nThe result is an array of Block objects, see the full output on the [playground](https://syavorsky.github.io/comment-parser)\n\n```js\n[{\n  // uppper text of the comment, overall block description\n  description: 'Description may go over multiple lines followed by @tags',\n  // list of block tags: @param, @param\n  tags: [{\n    // tokens.tag without \"@\"\n    tag: 'param',\n    // unwrapped tokens.name\n    name: 'name',\n    // unwrapped tokens.type\n    type: 'string',\n    // true, if tokens.name is [optional]\n    optional: false,\n    // default value if optional [name=default] has one\n    default: undefined,\n    // tokens.description assembled from a siongle or multiple lines\n    description: 'the name parameter',\n    // problems occured while parsing this tag section, subset of ../problems array\n    problems: [],\n    // source lines processed for extracting this tag, \"slice\" of the ../source item reference\n    source: [ ... ],\n  }, ... ],\n  // source is an array of `Line` items having the source\n  // line number and `Tokens` that can be assembled back into\n  // the line string preserving original formatting\n  source: [{\n    // source line number\n    number: 1,\n    // source line string\n    source: \"/**\",\n    // source line tokens\n    tokens: {\n      // indentation\n      start: \"\",\n      // delimiter, either '/**', '*/', '*', or ''. Mid lines may have no delimiters\n      delimiter: \"/**\",\n      // space between delimiter and tag\n      postDelimiter: \"\",\n      // tag starting with \"@\"\n      tag: \"\",\n      // space between tag and type\n      postTag: \"\",\n      // name with no whitespaces or \"multiple words\" wrapped into quotes. May occure in [name] and [name=default] forms\n      name: \"\",\n      // space between name and type\n      postName: \"\",\n      // type is has to be {wrapped} into curlies otherwise will be omitted\n      type: \"\",\n      // space between type and description\n      postType: \"\",\n      // description is basicaly rest of the line\n      description: \"\",\n      // closing */ marker if present\n      end: \"\"\n    }\n  }, ... ],\n  // problems occured while parsing the block\n  problems: [],\n}];\n```\n\nWhile `.source[].tokens` are not providing readable annotation information, they are essential for tracing data origins and assembling string blocks with `stringify`\n\n### options\n\n```ts\ninterface Options {\n  // start count for source line numbers\n  startLine: number;\n  // escaping chars sequence marking wrapped content literal for the parser\n  fence: string;\n  // block and comment description compaction strategy\n  spacing: 'compact' | 'preserve';\n  // tokenizer functions extracting name, type, and description out of tag, see Tokenizer\n  tokenizers: Tokenizer[];\n}\n```\n\nexamples\n- [default config](https://syavorsky.github.io/comment-parser/#parse-defaults)\n- [line numbers control](https://syavorsky.github.io/comment-parser/#parse-line-numbering)\n- [description spacing](https://syavorsky.github.io/comment-parser/#parse-spacing)\n- [escaping](https://syavorsky.github.io/comment-parser/#parse-escaping)\n- [explore the origin source](https://syavorsky.github.io/comment-parser/#parse-source-exploration)\n\n[suggest more examples](https://github.com/syavorsky/comment-parser/issues/new?title=example+suggestion%3A+...&labels=example,parser)\n\n## Stringifier\n\nThe stringifier is an important piece used by other tools updating the source code. It goes over `Block.source[].tokens` items and assembles them back to the string. It might be used with various transforms applied before stringifying.\n\n```js\nconst { parse, stringify, transforms: {flow, align, indent} } = require('comment-parser');\n\nconst source = `\n  /**\n   * Description may go\n   * over multiple lines followed by @tags\n   *\n* @my-tag {my.type} my-name description line 1\n      description line 2\n    * description line 3\n   */`;\n\nconst parsed = parse(source);\nconst transform = flow(align(), indent(0))\nconsole.log(stringify(transform(parsed[0])));\n```\n\n### Result\n\n```js\n/**\n * Description may go\n * over multiple lines followed by @tags\n *\n * @my-tag {my.type} my-name description line 1\n                             description line 2\n *                           description line 3\n */\n```\n\nexamples\n- [format comments](https://syavorsky.github.io/comment-parser/#stringify-formatting)\n\n[suggest more examples](https://github.com/syavorsky/comment-parser/issues/new?title=example+suggestion%3A+...&labels=example,stringifier)\n\n## Migrating from 0.x version\n\nCode of pre-1.0 version is forked into [0.x](https://github.com/syavorsky/comment-parser/tree/0.x) and will phase out eventually. Please file the issue if you find some previously existing functionality can't be achieved with 1.x API. Check out [migration notes](migrate-1.0.md).\n","type":"module","types":"lib/index.d.ts","readmeFilename":"README.md","gitHead":"3eb27c2a89c876711b482f6e77f4305032f1ea7a","_nodeVersion":"12.13.1","_npmVersion":"7.19.1","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.1.6-beta.1_1626933834442_0.600800945020864"},"_hasShrinkwrap":false},"1.1.6-beta.2":{"_id":"comment-parser@1.1.6-beta.2","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.1.6-beta.2","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js && convert-extension cjs lib/ && cd es6 && replace \"from '(\\.[^']*)'\" \"from '\\$1.js'\" * -r --include=\"*.js\"","format":"prettier --write src tests","pretest":"rimraf coverage; npm run build","test":"prettier --check src tests && jest --verbose","preversion":"npm run build"},"directories":{},"devDependencies":{"@types/jest":"^26.0.23","convert-extension":"^0.3.0","jest":"^27.0.5","prettier":"2.3.1","replace":"^1.2.1","rimraf":"^3.0.2","rollup":"^2.52.2","ts-jest":"^27.0.3","typescript":"^4.3.4"},"dependencies":{},"engines":{"node":">= 12.0.0"},"main":"lib/index.js","dist":{"shasum":"8ca94229af21ac5f1c4771121d1d545b7acba8f1","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.1.6-beta.2.tgz"},"readme":"# comment-parser\n\n`comment-parser` is a library helping to handle Generic JSDoc-style comments. It is\n\n- **language-agnostic** – no semantics enforced. You decide what tags are and what they mean. And it can be used with any language supporting `/** */` source comments.\n- **no dependencies** – it is compact and environment-agnostic, can be run on both the server and browser sides\n- **highly customizable** – with a little code you can deeply customize how comments are parsed\n- **bidirectional** - you can write comment blocks back to the source after updating or formatting\n- **strictly typed** - comes with generated `d.ts` data definitions since written in TypeScript\n\n```sh\nnpm install comment-parser\n```\n\n> 💡 Check out the [Playground](https://syavorsky.github.io/comment-parser)\n\n> 💡 Previous version lives in [0.x](https://github.com/syavorsky/comment-parser/tree/0.x) branch\n\nLib mainly provides two pieces [Parser](#Parser) and [Stringifier](#Stringifier).\n\n## Parser\n\nLet's go over string parsing:\n\n```js\nconst { parse } = require('comment-parser/lib')\n\nconst source = `\n/**\n * Description may go\n * over few lines followed by @tags\n * @param {string} name the name parameter\n * @param {any} value the value of any type\n */`\n\nconst parsed = parse(source)\n```\n\nLib source code is written in TypeScript and all data shapes are conveniently available for your IDE of choice. All types described below can be found in [primitives.ts](src/primitives.ts)\n\nThe input source is first parsed into lines, then lines split into tokens, and finally, tokens are processed into blocks of tags\n\n### Block\n\n```js\n/**\n * Description may go\n * over multiple lines followed by @tags\n * @param {string} name the name parameter\n * @param {any} value the value parameter\n */\n```\n\n### Description\n\n```js\n/**\n * Description may go\n * over multiple lines followed by @tags\n```\n\n### Tags\n\n```js\n * @param {string} name the name parameter\n```\n\n```js\n * @param {any} value the value parameter\n */\n```\n\n### Tokens\n\n```\n|line|start|delimiter|postDelimiter|tag   |postTag|name |postName|type    |postType|description                     |end|\n|----|-----|---------|-------------|------|-------|-----|--------|--------|--------|--------------------------------|---|\n|   0|{2}  |/**      |             |      |       |     |        |        |        |                                |   |\n|   1|{3}  |*        |{1}          |      |       |     |        |        |        |Description may go              |   |\n|   2|{3}  |*        |{1}          |      |       |     |        |        |        |over few lines followed by @tags|   |\n|   3|{3}  |*        |{1}          |@param|{1}    |name |{1}     |{string}|{1}     |the name parameter              |   |\n|   4|{3}  |*        |{1}          |@param|{1}    |value|{1}     |{any}   |{1}     |the value of any type           |   |\n|   5|{3}  |         |             |      |       |     |        |        |        |                                |*/ |\n```\n\n### Result\n\nThe result is an array of Block objects, see the full output on the [playground](https://syavorsky.github.io/comment-parser)\n\n```js\n[{\n  // uppper text of the comment, overall block description\n  description: 'Description may go over multiple lines followed by @tags',\n  // list of block tags: @param, @param\n  tags: [{\n    // tokens.tag without \"@\"\n    tag: 'param',\n    // unwrapped tokens.name\n    name: 'name',\n    // unwrapped tokens.type\n    type: 'string',\n    // true, if tokens.name is [optional]\n    optional: false,\n    // default value if optional [name=default] has one\n    default: undefined,\n    // tokens.description assembled from a siongle or multiple lines\n    description: 'the name parameter',\n    // problems occured while parsing this tag section, subset of ../problems array\n    problems: [],\n    // source lines processed for extracting this tag, \"slice\" of the ../source item reference\n    source: [ ... ],\n  }, ... ],\n  // source is an array of `Line` items having the source\n  // line number and `Tokens` that can be assembled back into\n  // the line string preserving original formatting\n  source: [{\n    // source line number\n    number: 1,\n    // source line string\n    source: \"/**\",\n    // source line tokens\n    tokens: {\n      // indentation\n      start: \"\",\n      // delimiter, either '/**', '*/', '*', or ''. Mid lines may have no delimiters\n      delimiter: \"/**\",\n      // space between delimiter and tag\n      postDelimiter: \"\",\n      // tag starting with \"@\"\n      tag: \"\",\n      // space between tag and type\n      postTag: \"\",\n      // name with no whitespaces or \"multiple words\" wrapped into quotes. May occure in [name] and [name=default] forms\n      name: \"\",\n      // space between name and type\n      postName: \"\",\n      // type is has to be {wrapped} into curlies otherwise will be omitted\n      type: \"\",\n      // space between type and description\n      postType: \"\",\n      // description is basicaly rest of the line\n      description: \"\",\n      // closing */ marker if present\n      end: \"\"\n    }\n  }, ... ],\n  // problems occured while parsing the block\n  problems: [],\n}];\n```\n\nWhile `.source[].tokens` are not providing readable annotation information, they are essential for tracing data origins and assembling string blocks with `stringify`\n\n### options\n\n```ts\ninterface Options {\n  // start count for source line numbers\n  startLine: number;\n  // escaping chars sequence marking wrapped content literal for the parser\n  fence: string;\n  // block and comment description compaction strategy\n  spacing: 'compact' | 'preserve';\n  // tokenizer functions extracting name, type, and description out of tag, see Tokenizer\n  tokenizers: Tokenizer[];\n}\n```\n\nexamples\n- [default config](https://syavorsky.github.io/comment-parser/#parse-defaults)\n- [line numbers control](https://syavorsky.github.io/comment-parser/#parse-line-numbering)\n- [description spacing](https://syavorsky.github.io/comment-parser/#parse-spacing)\n- [escaping](https://syavorsky.github.io/comment-parser/#parse-escaping)\n- [explore the origin source](https://syavorsky.github.io/comment-parser/#parse-source-exploration)\n\n[suggest more examples](https://github.com/syavorsky/comment-parser/issues/new?title=example+suggestion%3A+...&labels=example,parser)\n\n## Stringifier\n\nThe stringifier is an important piece used by other tools updating the source code. It goes over `Block.source[].tokens` items and assembles them back to the string. It might be used with various transforms applied before stringifying.\n\n```js\nconst { parse, stringify, transforms: {flow, align, indent} } = require('comment-parser');\n\nconst source = `\n  /**\n   * Description may go\n   * over multiple lines followed by @tags\n   *\n* @my-tag {my.type} my-name description line 1\n      description line 2\n    * description line 3\n   */`;\n\nconst parsed = parse(source);\nconst transform = flow(align(), indent(0))\nconsole.log(stringify(transform(parsed[0])));\n```\n\n### Result\n\n```js\n/**\n * Description may go\n * over multiple lines followed by @tags\n *\n * @my-tag {my.type} my-name description line 1\n                             description line 2\n *                           description line 3\n */\n```\n\nexamples\n- [format comments](https://syavorsky.github.io/comment-parser/#stringify-formatting)\n\n[suggest more examples](https://github.com/syavorsky/comment-parser/issues/new?title=example+suggestion%3A+...&labels=example,stringifier)\n\n## Migrating from 0.x version\n\nCode of pre-1.0 version is forked into [0.x](https://github.com/syavorsky/comment-parser/tree/0.x) and will phase out eventually. Please file the issue if you find some previously existing functionality can't be achieved with 1.x API. Check out [migration notes](migrate-1.0.md).\n","type":"module","types":"lib/index.d.ts","readmeFilename":"README.md","gitHead":"6db134ed57c30d9d057487ebefbdedea20ac0c4a","_nodeVersion":"12.13.1","_npmVersion":"7.19.1","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.1.6-beta.2_1627115521439_0.7341844988166415"},"_hasShrinkwrap":false},"1.1.6-beta.3":{"_id":"comment-parser@1.1.6-beta.3","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.1.6-beta.3","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js && convert-extension cjs lib/ && cd es6 && replace \"from '(\\.[^']*)'\" \"from '\\$1.js'\" * -r --include=\"*.js\"","format":"prettier --write src tests","pretest":"rimraf coverage; npm run build","test":"prettier --check src tests && jest --verbose","preversion":"npm run build"},"directories":{},"devDependencies":{"@types/jest":"^26.0.23","convert-extension":"^0.3.0","jest":"^27.0.5","prettier":"2.3.1","replace":"^1.2.1","rimraf":"^3.0.2","rollup":"^2.52.2","ts-jest":"^27.0.3","typescript":"^4.3.4"},"dependencies":{},"engines":{"node":">= 12.0.0"},"main":"lib/index.js","dist":{"shasum":"66df48fa6e8a10d9e31016613491b78075fe3065","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.1.6-beta.3.tgz"},"readme":"# comment-parser\n\n`comment-parser` is a library helping to handle Generic JSDoc-style comments. It is\n\n- **language-agnostic** – no semantics enforced. You decide what tags are and what they mean. And it can be used with any language supporting `/** */` source comments.\n- **no dependencies** – it is compact and environment-agnostic, can be run on both the server and browser sides\n- **highly customizable** – with a little code you can deeply customize how comments are parsed\n- **bidirectional** - you can write comment blocks back to the source after updating or formatting\n- **strictly typed** - comes with generated `d.ts` data definitions since written in TypeScript\n\n```sh\nnpm install comment-parser\n```\n\n> 💡 Check out the [Playground](https://syavorsky.github.io/comment-parser)\n\n> 💡 Previous version lives in [0.x](https://github.com/syavorsky/comment-parser/tree/0.x) branch\n\nLib mainly provides two pieces [Parser](#Parser) and [Stringifier](#Stringifier).\n\n## Parser\n\nLet's go over string parsing:\n\n```js\nconst { parse } = require('comment-parser/lib')\n\nconst source = `\n/**\n * Description may go\n * over few lines followed by @tags\n * @param {string} name the name parameter\n * @param {any} value the value of any type\n */`\n\nconst parsed = parse(source)\n```\n\nLib source code is written in TypeScript and all data shapes are conveniently available for your IDE of choice. All types described below can be found in [primitives.ts](src/primitives.ts)\n\nThe input source is first parsed into lines, then lines split into tokens, and finally, tokens are processed into blocks of tags\n\n### Block\n\n```js\n/**\n * Description may go\n * over multiple lines followed by @tags\n * @param {string} name the name parameter\n * @param {any} value the value parameter\n */\n```\n\n### Description\n\n```js\n/**\n * Description may go\n * over multiple lines followed by @tags\n```\n\n### Tags\n\n```js\n * @param {string} name the name parameter\n```\n\n```js\n * @param {any} value the value parameter\n */\n```\n\n### Tokens\n\n```\n|line|start|delimiter|postDelimiter|tag   |postTag|name |postName|type    |postType|description                     |end|\n|----|-----|---------|-------------|------|-------|-----|--------|--------|--------|--------------------------------|---|\n|   0|{2}  |/**      |             |      |       |     |        |        |        |                                |   |\n|   1|{3}  |*        |{1}          |      |       |     |        |        |        |Description may go              |   |\n|   2|{3}  |*        |{1}          |      |       |     |        |        |        |over few lines followed by @tags|   |\n|   3|{3}  |*        |{1}          |@param|{1}    |name |{1}     |{string}|{1}     |the name parameter              |   |\n|   4|{3}  |*        |{1}          |@param|{1}    |value|{1}     |{any}   |{1}     |the value of any type           |   |\n|   5|{3}  |         |             |      |       |     |        |        |        |                                |*/ |\n```\n\n### Result\n\nThe result is an array of Block objects, see the full output on the [playground](https://syavorsky.github.io/comment-parser)\n\n```js\n[{\n  // uppper text of the comment, overall block description\n  description: 'Description may go over multiple lines followed by @tags',\n  // list of block tags: @param, @param\n  tags: [{\n    // tokens.tag without \"@\"\n    tag: 'param',\n    // unwrapped tokens.name\n    name: 'name',\n    // unwrapped tokens.type\n    type: 'string',\n    // true, if tokens.name is [optional]\n    optional: false,\n    // default value if optional [name=default] has one\n    default: undefined,\n    // tokens.description assembled from a siongle or multiple lines\n    description: 'the name parameter',\n    // problems occured while parsing this tag section, subset of ../problems array\n    problems: [],\n    // source lines processed for extracting this tag, \"slice\" of the ../source item reference\n    source: [ ... ],\n  }, ... ],\n  // source is an array of `Line` items having the source\n  // line number and `Tokens` that can be assembled back into\n  // the line string preserving original formatting\n  source: [{\n    // source line number\n    number: 1,\n    // source line string\n    source: \"/**\",\n    // source line tokens\n    tokens: {\n      // indentation\n      start: \"\",\n      // delimiter, either '/**', '*/', '*', or ''. Mid lines may have no delimiters\n      delimiter: \"/**\",\n      // space between delimiter and tag\n      postDelimiter: \"\",\n      // tag starting with \"@\"\n      tag: \"\",\n      // space between tag and type\n      postTag: \"\",\n      // name with no whitespaces or \"multiple words\" wrapped into quotes. May occure in [name] and [name=default] forms\n      name: \"\",\n      // space between name and type\n      postName: \"\",\n      // type is has to be {wrapped} into curlies otherwise will be omitted\n      type: \"\",\n      // space between type and description\n      postType: \"\",\n      // description is basicaly rest of the line\n      description: \"\",\n      // closing */ marker if present\n      end: \"\"\n    }\n  }, ... ],\n  // problems occured while parsing the block\n  problems: [],\n}];\n```\n\nWhile `.source[].tokens` are not providing readable annotation information, they are essential for tracing data origins and assembling string blocks with `stringify`\n\n### options\n\n```ts\ninterface Options {\n  // start count for source line numbers\n  startLine: number;\n  // escaping chars sequence marking wrapped content literal for the parser\n  fence: string;\n  // block and comment description compaction strategy\n  spacing: 'compact' | 'preserve';\n  // tokenizer functions extracting name, type, and description out of tag, see Tokenizer\n  tokenizers: Tokenizer[];\n}\n```\n\nexamples\n- [default config](https://syavorsky.github.io/comment-parser/#parse-defaults)\n- [line numbers control](https://syavorsky.github.io/comment-parser/#parse-line-numbering)\n- [description spacing](https://syavorsky.github.io/comment-parser/#parse-spacing)\n- [escaping](https://syavorsky.github.io/comment-parser/#parse-escaping)\n- [explore the origin source](https://syavorsky.github.io/comment-parser/#parse-source-exploration)\n\n[suggest more examples](https://github.com/syavorsky/comment-parser/issues/new?title=example+suggestion%3A+...&labels=example,parser)\n\n## Stringifier\n\nThe stringifier is an important piece used by other tools updating the source code. It goes over `Block.source[].tokens` items and assembles them back to the string. It might be used with various transforms applied before stringifying.\n\n```js\nconst { parse, stringify, transforms: {flow, align, indent} } = require('comment-parser');\n\nconst source = `\n  /**\n   * Description may go\n   * over multiple lines followed by @tags\n   *\n* @my-tag {my.type} my-name description line 1\n      description line 2\n    * description line 3\n   */`;\n\nconst parsed = parse(source);\nconst transform = flow(align(), indent(0))\nconsole.log(stringify(transform(parsed[0])));\n```\n\n### Result\n\n```js\n/**\n * Description may go\n * over multiple lines followed by @tags\n *\n * @my-tag {my.type} my-name description line 1\n                             description line 2\n *                           description line 3\n */\n```\n\nexamples\n- [format comments](https://syavorsky.github.io/comment-parser/#stringify-formatting)\n\n[suggest more examples](https://github.com/syavorsky/comment-parser/issues/new?title=example+suggestion%3A+...&labels=example,stringifier)\n\n## Migrating from 0.x version\n\nCode of pre-1.0 version is forked into [0.x](https://github.com/syavorsky/comment-parser/tree/0.x) and will phase out eventually. Please file the issue if you find some previously existing functionality can't be achieved with 1.x API. Check out [migration notes](migrate-1.0.md).\n","type":"module","types":"lib/index.d.ts","readmeFilename":"README.md","gitHead":"b3c52c9be6c4270cdcc8b61e21f50ca4cd628581","_nodeVersion":"12.13.1","_npmVersion":"7.19.1","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.1.6-beta.3_1627121326263_0.3680319882591978"},"_hasShrinkwrap":false},"1.2.0":{"_id":"comment-parser@1.2.0","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.2.0","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js && convert-extension cjs lib/ && cd es6 && replace \"from '(\\.[^']*)'\" \"from '\\$1.js'\" * -r --include=\"*.js\"","format":"prettier --write src tests","pretest":"rimraf coverage; npm run build","test":"prettier --check src tests && jest --verbose","preversion":"npm run build"},"directories":{},"devDependencies":{"@types/jest":"^26.0.23","convert-extension":"^0.3.0","jest":"^27.0.5","prettier":"2.3.1","replace":"^1.2.1","rimraf":"^3.0.2","rollup":"^2.52.2","ts-jest":"^27.0.3","typescript":"^4.3.4"},"dependencies":{},"engines":{"node":">= 12.0.0"},"main":"lib/index.js","dist":{"shasum":"f8e8e3fe8decc571b1656f415b4d09e718cd14b0","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.2.0.tgz"},"type":"module","types":"lib/index.d.ts","gitHead":"5cf420a04b1b2a1ad81741ff11f0b01572408a91","_nodeVersion":"12.13.1","_npmVersion":"7.19.1","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.2.0_1627277612161_0.4625012150664618"},"_hasShrinkwrap":false},"1.2.1":{"_id":"comment-parser@1.2.1","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.2.1","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js && convert-extension cjs lib/ && cd es6 && replace \"from '(\\.[^']*)'\" \"from '\\$1.js'\" * -r --include=\"*.js\"","format":"prettier --write src tests","pretest":"rimraf coverage; npm run build","test":"prettier --check src tests && jest --verbose","preversion":"npm run build"},"directories":{},"devDependencies":{"@types/jest":"^26.0.23","convert-extension":"^0.3.0","jest":"^27.0.5","prettier":"2.3.1","replace":"^1.2.1","rimraf":"^3.0.2","rollup":"^2.52.2","ts-jest":"^27.0.3","typescript":"^4.3.4"},"dependencies":{},"engines":{"node":"^12.20 || ^14.14.0 || ^16"},"main":"lib/index.js","dist":{"shasum":"38778b5b2af825cc10099fd5923f8ac151274381","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.2.1.tgz"},"type":"module","types":"lib/index.d.ts","gitHead":"e17e9891264569e6998535ef6a62284cba5c7455","_nodeVersion":"12.13.1","_npmVersion":"7.19.1","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.2.1_1627279753344_0.5568231937760395"},"_hasShrinkwrap":false},"1.2.2":{"_id":"comment-parser@1.2.2","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.2.2","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js && convert-extension cjs lib/ && cd es6 && replace \"from '(\\.[^']*)'\" \"from '\\$1.js'\" * -r --include=\"*.js\"","format":"prettier --write src tests","pretest":"rimraf coverage; npm run build","test":"prettier --check src tests && jest --verbose","preversion":"npm run build"},"directories":{},"devDependencies":{"@types/jest":"^26.0.23","convert-extension":"^0.3.0","jest":"^27.0.5","prettier":"2.3.1","replace":"^1.2.1","rimraf":"^3.0.2","rollup":"^2.52.2","ts-jest":"^27.0.3","typescript":"^4.3.4"},"dependencies":{},"engines":{"node":"^12.20 || ^14.14.0 || ^16"},"main":"lib/index.js","dist":{"shasum":"6d6d6420b6f0f69e262dca413cb6b0c8eca95991","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.2.2.tgz"},"type":"module","types":"lib/index.d.ts","gitHead":"6c6f85eb197c95d3b0a5d2755d79ba4addd2f8f6","_nodeVersion":"12.13.1","_npmVersion":"7.19.1","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.2.2_1627452740568_0.12213964085276818"},"_hasShrinkwrap":false},"1.2.3":{"_id":"comment-parser@1.2.3","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.2.3","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js && convert-extension cjs lib/ && cd es6 && replace \"from '(\\.[^']*)'\" \"from '\\$1.js'\" * -r --include=\"*.js\"","format":"prettier --write src tests","pretest":"rimraf coverage; npm run build","test":"prettier --check src tests && jest --verbose","preversion":"npm run build"},"directories":{},"devDependencies":{"@types/jest":"^26.0.23","convert-extension":"^0.3.0","jest":"^27.0.5","prettier":"2.3.1","replace":"^1.2.1","rimraf":"^3.0.2","rollup":"^2.52.2","ts-jest":"^27.0.3","typescript":"^4.3.4"},"dependencies":{},"engines":{"node":"^12.20 || ^14.14.0 || ^16"},"main":"lib/index.cjs","dist":{"shasum":"303a7eb99c9b2632efd594e183ccbd32042caf69","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.2.3.tgz"},"type":"module","types":"lib/index.d.ts","gitHead":"bcb2c2fbb256b62741a6fc7933b4d5d8537ae4eb","_nodeVersion":"12.13.1","_npmVersion":"7.19.1","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.2.3_1627453429928_0.4302682213889608"},"_hasShrinkwrap":false},"1.2.4":{"_id":"comment-parser@1.2.4","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.2.4","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js && convert-extension cjs lib/ && cd es6 && replace \"from '(\\.[^']*)'\" \"from '\\$1.js'\" * -r --include=\"*.js\"","format":"prettier --write src tests","pretest":"rimraf coverage; npm run build","test":"prettier --check src tests && jest --verbose","preversion":"npm run build"},"directories":{},"devDependencies":{"@types/jest":"^26.0.23","convert-extension":"^0.3.0","jest":"^27.0.5","prettier":"2.3.1","replace":"^1.2.1","rimraf":"^3.0.2","rollup":"^2.52.2","ts-jest":"^27.0.3","typescript":"^4.3.4"},"dependencies":{},"engines":{"node":">= 12.0.0"},"main":"lib/index.cjs","dist":{"shasum":"489f3ee55dfd184a6e4bffb31baba284453cb760","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.2.4.tgz"},"type":"module","types":"lib/index.d.ts","gitHead":"b39ebd85810a41e3ccce111fea51c8abe9a89880","_nodeVersion":"12.13.1","_npmVersion":"7.19.1","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.2.4_1629665339591_0.7559463539589915"},"_hasShrinkwrap":false},"1.3.0":{"_id":"comment-parser@1.3.0","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.3.0","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alex Grozav","url":"https://github.com/alexgrozav"},{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js && convert-extension cjs lib/ && cd es6 && replace \"from '(\\.[^']*)'\" \"from '\\$1.js'\" * -r --include=\"*.js\"","format":"prettier --write src tests","pretest":"rimraf coverage; npm run build","test":"prettier --check src tests && jest --verbose","preversion":"npm run build"},"directories":{},"devDependencies":{"@types/jest":"^26.0.23","convert-extension":"^0.3.0","jest":"^27.0.5","prettier":"2.3.1","replace":"^1.2.1","rimraf":"^3.0.2","rollup":"^2.52.2","ts-jest":"^27.0.3","typescript":"^4.3.4"},"dependencies":{},"engines":{"node":">= 12.0.0"},"main":"lib/index.cjs","dist":{"shasum":"68beb7dbe0849295309b376406730cd16c719c44","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.3.0.tgz"},"type":"module","types":"lib/index.d.ts","gitHead":"9b7b865d7958e1c0d85f975c7c5e93f44fe34144","_nodeVersion":"12.13.1","_npmVersion":"7.19.1","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.3.0_1637131963071_0.8925834221805913"},"_hasShrinkwrap":false},"1.3.1":{"_id":"comment-parser@1.3.1","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.3.1","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alex Grozav","email":"","url":"https://github.com/alexgrozav"},{"name":"Alexej Yaroshevich","email":"","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","email":"","url":"https://github.com/blutorange"},{"name":"Brett Zamir","email":"","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","email":"","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","email":"","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","email":"","url":"https://github.com/jhm-ciberman"},{"name":"Jayden Seric","email":"","url":"https://github.com/jaydenseric"},{"name":"Jordan Harband","email":"","url":"https://github.com/ljharb"},{"name":"tengattack","email":"","url":"https://github.com/tengattack"}],"repository":{"type":"git","url":"git@github.com:yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js && convert-extension cjs lib/ && cd es6 && replace \"from '(\\.[^']*)'\" \"from '\\$1.js'\" * -r --include=\"*.js\"","format":"prettier --write src tests","pretest":"rimraf coverage; npm run build","test":"prettier --check src tests && jest --verbose","preversion":"npm run build"},"directories":{},"devDependencies":{"@types/jest":"^26.0.23","convert-extension":"^0.3.0","jest":"^27.0.5","prettier":"2.3.1","replace":"^1.2.1","rimraf":"^3.0.2","rollup":"^2.52.2","ts-jest":"^27.0.3","typescript":"^4.3.4"},"engines":{"node":">= 12.0.0"},"main":"lib/index.cjs","dist":{"shasum":"3d7ea3adaf9345594aedee6563f422348f165c1b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.3.1.tgz"},"type":"module","types":"lib/index.d.ts"},"1.4.0":{"_id":"comment-parser@1.4.0","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.4.0","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alex Grozav","url":"https://github.com/alexgrozav"},{"name":"Alexej Yaroshevich","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","url":"https://github.com/blutorange"},{"name":"Brett Zamir","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","url":"https://github.com/jhm-ciberman"},{"name":"Jayden Seric","url":"https://github.com/jaydenseric"},{"name":"Jordan Harband","url":"https://github.com/ljharb"},{"name":"tengattack","url":"https://github.com/tengattack"}],"repository":{"type":"git","url":"git+ssh://git@github.com/yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js && convert-extension cjs lib/","format":"prettier --write src tests","pretest":"rimraf coverage; npm run build","test":"prettier --check src tests && jest --verbose","preversion":"npm run build"},"directories":{},"devDependencies":{"@types/jest":"^26.0.23","convert-extension":"^0.3.0","jest":"^27.0.5","prettier":"2.3.1","rimraf":"^3.0.2","rollup":"^2.52.2","ts-jest":"^27.0.3","typescript":"^4.9.5"},"engines":{"node":">= 12.0.0"},"main":"lib/index.cjs","dist":{"shasum":"0f8c560f59698193854f12884c20c0e39a26d32c","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.4.0.tgz"},"type":"module","types":"lib/index.d.ts","gitHead":"dd8dc86253c530672b91da24ebe5e2d6fa76301b","_nodeVersion":"16.20.1","_npmVersion":"8.19.4","_npmUser":{"name":"yavorskiys","email":"sergiy@yavorsky.me"},"maintainers":[{"name":"yavorskiys","email":"sergiy@yavorsky.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/comment-parser_1.4.0_1690871338693_0.37743817007979885"},"_hasShrinkwrap":false},"1.4.1":{"_id":"comment-parser@1.4.1","name":"comment-parser","description":"Generic JSDoc-like comment parser","version":"1.4.1","keywords":["jsdoc","comments","parser"],"homepage":"https://github.com/syavorsky/comment-parser","author":{"name":"Sergiy Yavorsky","email":"sergiy@yavorsky.me","url":"https://github.com/syavorsky"},"contributors":[{"name":"Alex Grozav","email":"","url":"https://github.com/alexgrozav"},{"name":"Alexej Yaroshevich","email":"","url":"https://github.com/zxqfox"},{"name":"Andre Wachsmuth","email":"","url":"https://github.com/blutorange"},{"name":"Brett Zamir","email":"","url":"https://github.com/brettz9"},{"name":"Dieter Oberkofler","email":"","url":"https://github.com/doberkofler"},{"name":"Evgeny Reznichenko","email":"","url":"https://github.com/zxcabs"},{"name":"Javier \"Ciberma\" Mora","email":"","url":"https://github.com/jhm-ciberman"},{"name":"Jayden Seric","email":"","url":"https://github.com/jaydenseric"},{"name":"Jordan Harband","email":"","url":"https://github.com/ljharb"},{"name":"tengattack","email":"","url":"https://github.com/tengattack"}],"repository":{"type":"git","url":"git@github.com:yavorskiy/comment-parser.git"},"bugs":{"url":"https://github.com/syavorsky/comment-parser/issues"},"license":"MIT","scripts":{"build":"rimraf lib es6 browser; tsc -p tsconfig.json && tsc -p tsconfig.node.json && rollup -o browser/index.js -f iife --context window -n CommentParser es6/index.js && convert-extension cjs lib/","format":"prettier --write src tests","pretest":"rimraf coverage; npm run build","test":"prettier --check src tests && jest --verbose","preversion":"npm run build"},"directories":{},"devDependencies":{"@types/jest":"^26.0.23","convert-extension":"^0.3.0","jest":"^27.0.5","prettier":"2.3.1","rimraf":"^3.0.2","rollup":"^2.52.2","ts-jest":"^27.0.3","typescript":"^4.9.5"},"engines":{"node":">= 12.0.0"},"main":"lib/index.cjs","dist":{"shasum":"bdafead37961ac079be11eb7ec65c4d021eaf9cc","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/comment-parser/-/comment-parser-1.4.1.tgz"},"type":"module","types":"lib/index.d.ts"}},"time":{"created":"2022-09-07T20:06:03Z","modified":"2023-12-19T06:18:59Z","0.1.0":"2022-09-07T20:06:03Z","0.1.1":"2022-09-07T20:06:03Z","0.1.2":"2022-09-07T20:06:03Z","0.2.0":"2022-09-07T20:06:03Z","0.2.1":"2022-09-07T20:06:03Z","0.2.2":"2022-09-07T20:06:03Z","0.2.3":"2022-09-07T20:06:03Z","0.2.4":"2022-09-07T20:06:03Z","0.3.0":"2022-09-07T20:06:03Z","0.3.1":"2022-09-07T20:06:03Z","0.3.2":"2022-09-07T20:06:03Z","0.4.0":"2022-09-07T20:06:03Z","0.4.1":"2022-09-07T20:06:03Z","0.4.2":"2022-09-07T20:06:03Z","0.5.0":"2022-09-07T20:06:03Z","0.5.1":"2022-09-07T20:06:03Z","0.5.2":"2022-09-07T20:06:03Z","0.5.3":"2022-09-07T20:06:03Z","0.5.4":"2022-09-07T20:06:03Z","0.5.5":"2022-09-07T20:06:03Z","0.6.0":"2022-09-07T20:06:03Z","0.6.1":"2022-09-07T20:06:03Z","0.6.2":"2022-09-07T20:06:03Z","0.7.0":"2022-09-07T20:06:03Z","0.7.1":"2022-09-07T20:06:03Z","0.7.2":"2022-09-07T20:06:03Z","0.7.3":"2022-09-07T20:06:03Z","0.7.4":"2022-09-07T20:06:03Z","0.7.5":"2022-09-07T20:06:03Z","0.7.6":"2022-09-07T20:06:03Z","1.0.0-beta":"2022-09-07T20:06:03Z","1.0.0-beta.0":"2022-09-07T20:06:03Z","1.0.0-beta.1":"2022-09-07T20:06:03Z","1.0.0-beta.2":"2022-09-07T20:06:03Z","1.0.0":"2022-09-07T20:06:03Z","1.0.1":"2022-09-07T20:06:03Z","1.1.0":"2022-09-07T20:06:03Z","1.1.1":"2022-09-07T20:06:03Z","1.1.2":"2022-09-07T20:06:03Z","1.1.3":"2022-09-07T20:06:03Z","1.1.4":"2022-09-07T20:06:03Z","1.1.5":"2022-09-07T20:06:03Z","1.1.6-beta.0":"2022-09-07T20:06:03Z","1.1.6-beta.1":"2022-09-07T20:06:03Z","1.1.6-beta.2":"2022-09-07T20:06:03Z","1.1.6-beta.3":"2022-09-07T20:06:03Z","1.2.0":"2022-09-07T20:06:03Z","1.2.1":"2022-09-07T20:06:03Z","1.2.2":"2022-09-07T20:06:03Z","1.2.3":"2022-09-07T20:06:03Z","1.2.4":"2022-09-07T20:06:03Z","1.3.0":"2022-09-07T20:06:03Z","1.3.1":"2022-09-07T20:06:05Z","1.4.0":"2023-08-01T08:51:51Z","1.4.1":"2023-12-19T06:18:59Z"}}