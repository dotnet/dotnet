{"_id":"stack-utils","_rev":"d0032015-374b-42ee-942d-d49da196e768","name":"stack-utils","dist-tags":{"latest":"2.0.6","v1-legacy":"1.0.5"},"versions":{"0.0.1":{"_id":"stack-utils@0.0.1","name":"stack-utils","description":"Captures and cleans stack traces","version":"0.0.1","keywords":[],"homepage":"https://github.com/jamestalmage/stack-utils#readme","author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"repository":{"type":"git","url":"git+https://github.com/jamestalmage/stack-utils.git"},"bugs":{"url":"https://github.com/jamestalmage/stack-utils/issues"},"license":"MIT","scripts":{"test":"xo && nyc --reporter lcov --reporter text --cache ava --verbose"},"directories":{},"devDependencies":{"ava":"^0.8.0","coveralls":"^2.11.6","flatten":"0.0.1","nyc":"^5.2.0","xo":"^0.12.1"},"dependencies":{},"engines":{"node":">=0.10.0"},"files":["index.js"],"config":{"nyc":"{\r\n  \"exclude\": [\r\n    \"fixtures/*\"\r\n  ]\r\n}"},"dist":{"shasum":"5c7f358e79d45dedff43e8affb9fd905b33bd65c","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/stack-utils/-/stack-utils-0.0.1.tgz"},"gitHead":"f0d147cc28c5aacaf6712ea4cdbf8cccfe3ba79c","_from":".","_npmVersion":"3.3.12","_nodeVersion":"5.3.0","_npmUser":{"name":"jamestalmage","email":"james@talmage.io"},"maintainers":[{"name":"jamestalmage","email":"james@talmage.io"}]},"0.1.0":{"_id":"stack-utils@0.1.0","name":"stack-utils","description":"Captures and cleans stack traces","version":"0.1.0","keywords":[],"homepage":"https://github.com/jamestalmage/stack-utils#readme","author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"repository":{"type":"git","url":"git+https://github.com/jamestalmage/stack-utils.git"},"bugs":{"url":"https://github.com/jamestalmage/stack-utils/issues"},"license":"MIT","scripts":{"test":"xo && nyc --reporter lcov --reporter text --cache ava --verbose","test-win":"ava --verbose"},"directories":{},"devDependencies":{"ava":"^0.8.0","coveralls":"^2.11.6","flatten":"0.0.1","nyc":"^5.2.0","xo":"^0.12.1"},"dependencies":{},"engines":{"node":">=0.10.0"},"files":["index.js"],"config":{"nyc":"{\r\n  \"exclude\": [\r\n    \"fixtures/*\"\r\n  ]\r\n}"},"dist":{"shasum":"9b2de559f5d1940c3eb40b480ff8c6d9ff6a1b1b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/stack-utils/-/stack-utils-0.1.0.tgz"},"gitHead":"772ffe6894b42d450e7aef2fd9a379b822993572","_from":".","_npmVersion":"3.5.2","_nodeVersion":"0.12.7","_npmUser":{"name":"jamestalmage","email":"james@talmage.io"},"maintainers":[{"name":"jamestalmage","email":"james@talmage.io"}]},"0.2.0":{"_id":"stack-utils@0.2.0","name":"stack-utils","description":"Captures and cleans stack traces","version":"0.2.0","keywords":[],"homepage":"https://github.com/jamestalmage/stack-utils#readme","author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"repository":{"type":"git","url":"git+https://github.com/jamestalmage/stack-utils.git"},"bugs":{"url":"https://github.com/jamestalmage/stack-utils/issues"},"license":"MIT","scripts":{"test":"xo && nyc --reporter lcov --reporter text --cache ava --verbose","test-win":"ava --verbose"},"directories":{},"devDependencies":{"ava":"^0.8.0","coveralls":"^2.11.6","flatten":"0.0.1","nyc":"^5.2.0","xo":"^0.12.1"},"dependencies":{},"engines":{"node":">=0.10.0"},"files":["index.js"],"config":{"nyc":"{\r\n  \"exclude\": [\r\n    \"fixtures/*\"\r\n  ]\r\n}"},"dist":{"shasum":"2e7a45dc67131a0e7bcf472caef3ff1f394b091d","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/stack-utils/-/stack-utils-0.2.0.tgz"},"gitHead":"64fa2c1f51caaeec57fec4843e8a65a4ed41fd8e","_from":".","_npmVersion":"3.5.2","_nodeVersion":"0.12.7","_npmUser":{"name":"jamestalmage","email":"james@talmage.io"},"maintainers":[{"name":"jamestalmage","email":"james@talmage.io"}]},"0.3.0":{"_id":"stack-utils@0.3.0","name":"stack-utils","description":"Captures and cleans stack traces","version":"0.3.0","keywords":[],"homepage":"https://github.com/tapjs/stack-utils#readme","author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"repository":{"type":"git","url":"git+https://github.com/tapjs/stack-utils.git"},"bugs":{"url":"https://github.com/tapjs/stack-utils/issues"},"license":"MIT","scripts":{"test":"xo && nyc --reporter lcov --reporter text --cache ava --verbose","test-win":"ava --verbose"},"directories":{},"devDependencies":{"ava":"^0.8.0","bluebird":"^3.1.1","coveralls":"^2.11.6","flatten":"0.0.1","nested-error-stacks":"^1.0.2","nyc":"^5.2.0","pify":"^2.3.0","q":"^1.4.1","xo":"^0.12.1"},"dependencies":{},"engines":{"node":">=0.10.0"},"files":["index.js"],"dist":{"shasum":"cddc6cec2ed9a5ce65f1ac05c90243b7a0ce325d","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/stack-utils/-/stack-utils-0.3.0.tgz"},"gitHead":"cc2fe4c667ddd9e9f11c633e6ef6397d689016be","_from":".","_npmVersion":"3.5.3","_nodeVersion":"5.3.0","_npmUser":{"name":"jamestalmage","email":"james@talmage.io"},"maintainers":[{"name":"jamestalmage","email":"james@talmage.io"}]},"0.4.0":{"_id":"stack-utils@0.4.0","name":"stack-utils","description":"Captures and cleans stack traces","version":"0.4.0","keywords":[],"homepage":"https://github.com/tapjs/stack-utils#readme","author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"repository":{"type":"git","url":"git+https://github.com/tapjs/stack-utils.git"},"bugs":{"url":"https://github.com/tapjs/stack-utils/issues"},"license":"MIT","scripts":{"test":"xo && nyc --reporter lcov --reporter text --cache ava --verbose","test-win":"ava --verbose"},"directories":{},"devDependencies":{"ava":"^0.8.0","bluebird":"^3.1.1","coveralls":"^2.11.6","flatten":"0.0.1","nested-error-stacks":"^1.0.2","nyc":"^5.2.0","pify":"^2.3.0","q":"^1.4.1","xo":"^0.12.1"},"dependencies":{},"engines":{"node":">=0.10.0"},"files":["index.js"],"dist":{"shasum":"940cb82fccfa84e8ff2f3fdf293fe78016beccd1","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/stack-utils/-/stack-utils-0.4.0.tgz"},"gitHead":"8701171af041a235bae83a6da4ea516a815bb66a","_from":".","_npmVersion":"3.5.3","_nodeVersion":"5.4.1","_npmUser":{"name":"jamestalmage","email":"james@talmage.io"},"maintainers":[{"name":"jamestalmage","email":"james@talmage.io"}],"_npmOperationalInternal":{"host":"packages-6-west.internal.npmjs.com","tmp":"tmp/stack-utils-0.4.0.tgz_1454711753671_0.9951272297184914"}},"1.0.0":{"_id":"stack-utils@1.0.0","name":"stack-utils","description":"Captures and cleans stack traces","version":"1.0.0","keywords":[],"homepage":"https://github.com/tapjs/stack-utils#readme","author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"repository":{"type":"git","url":"git+https://github.com/tapjs/stack-utils.git"},"bugs":{"url":"https://github.com/tapjs/stack-utils/issues"},"license":"MIT","scripts":{"test":"tap test/*.js --cov"},"directories":{},"devDependencies":{"bluebird":"^3.1.1","coveralls":"^2.11.6","flatten":"0.0.1","nested-error-stacks":"^2.0.0","pify":"^2.3.0","q":"^1.4.1","tap":"^10.0.0"},"dependencies":{},"engines":{"node":">=0.10.0"},"files":["index.js"],"dist":{"shasum":"2392cd8ddbd222492ed6c047960f7414b46c0f83","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/stack-utils/-/stack-utils-1.0.0.tgz"},"gitHead":"faa81f19c8fd23cb5c9b13dfd7b26df6be7d7b1e","_from":".","_npmVersion":"3.10.9","_nodeVersion":"8.0.0-pre","_npmUser":{"name":"isaacs","email":"i@izs.me"},"maintainers":[{"name":"isaacs","email":"i@izs.me"},{"name":"jamestalmage","email":"james@talmage.io"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/stack-utils-1.0.0.tgz_1486016285424_0.8635052388999611"}},"1.0.1":{"_id":"stack-utils@1.0.1","name":"stack-utils","description":"Captures and cleans stack traces","version":"1.0.1","keywords":[],"homepage":"https://github.com/tapjs/stack-utils#readme","author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"repository":{"type":"git","url":"git+https://github.com/tapjs/stack-utils.git"},"bugs":{"url":"https://github.com/tapjs/stack-utils/issues"},"license":"MIT","scripts":{"test":"tap test/*.js --100 -J","preversion":"npm test","postversion":"npm publish","postpublish":"git push origin --all; git push origin --tags"},"directories":{},"devDependencies":{"bluebird":"^3.1.1","coveralls":"^2.11.6","flatten":"0.0.1","nested-error-stacks":"^2.0.0","pify":"^2.3.0","q":"^1.4.1","tap":"^10.3.2"},"dependencies":{},"engines":{"node":">=0.10.0"},"files":["index.js"],"dist":{"shasum":"d4f33ab54e8e38778b0ca5cfd3b3afb12db68620","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/stack-utils/-/stack-utils-1.0.1.tgz"},"gitHead":"f080bcb2ee9be20520cfb312837d6056011e9094","_from":".","_npmVersion":"4.5.0","_nodeVersion":"8.0.0-pre","_npmUser":{"name":"isaacs","email":"i@izs.me"},"maintainers":[{"name":"isaacs","email":"i@izs.me"},{"name":"jamestalmage","email":"james@talmage.io"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/stack-utils-1.0.1.tgz_1492979544062_0.2575548014137894"}},"1.0.2":{"_id":"stack-utils@1.0.2","name":"stack-utils","description":"Captures and cleans stack traces","version":"1.0.2","keywords":[],"homepage":"https://github.com/tapjs/stack-utils#readme","author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"repository":{"type":"git","url":"git+https://github.com/tapjs/stack-utils.git"},"bugs":{"url":"https://github.com/tapjs/stack-utils/issues"},"license":"MIT","scripts":{"test":"tap test/*.js --100 -J","preversion":"npm test","postversion":"npm publish","postpublish":"git push origin --all; git push origin --tags"},"directories":{},"devDependencies":{"bluebird":"^3.1.1","coveralls":"^2.11.6","flatten":"0.0.1","nested-error-stacks":"^2.0.0","pify":"^2.3.0","q":"^1.4.1","tap":"^10.3.2"},"dependencies":{},"engines":{"node":">=0.10.0"},"dist":{"shasum":"33eba3897788558bebfc2db059dc158ec36cebb8","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/stack-utils/-/stack-utils-1.0.2.tgz"},"gitHead":"2d238dfac8c39ab85997b90a1e48ca51c096adc0","_npmVersion":"6.4.1","_nodeVersion":"10.12.0","_npmUser":{"name":"isaacs","email":"i@izs.me"},"maintainers":[{"name":"isaacs","email":"i@izs.me"},{"name":"jamestalmage","email":"james@talmage.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/stack-utils_1.0.2_1542221844258_0.8869018687314081"},"_hasShrinkwrap":false},"1.0.3":{"_id":"stack-utils@1.0.3","name":"stack-utils","description":"Captures and cleans stack traces","version":"1.0.3","homepage":"https://github.com/tapjs/stack-utils#readme","author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"repository":{"type":"git","url":"git+https://github.com/tapjs/stack-utils.git"},"bugs":{"url":"https://github.com/tapjs/stack-utils/issues"},"license":"MIT","scripts":{"test":"tap --no-esm --100","preversion":"npm test","postversion":"npm publish","prepublishOnly":"git push origin --follow-tags"},"directories":{},"devDependencies":{"bluebird":"^3.7.2","coveralls":"^3.0.9","nested-error-stacks":"^2.1.0","pify":"^4.0.1","q":"^1.5.1","tap":"^14.10.8"},"dependencies":{"escape-string-regexp":"^2.0.0"},"engines":{"node":">=8"},"publishConfig":{"tag":"v1-legacy"},"dist":{"shasum":"db7a475733b5b8bf6521907b18891d29006f7751","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/stack-utils/-/stack-utils-1.0.3.tgz"},"readme":"# stack-utils \n\n> Captures and cleans stack traces.\n\n[![Linux Build](https://travis-ci.org/tapjs/stack-utils.svg?branch=master)](https://travis-ci.org/tapjs/stack-utils) [![Build status](https://ci.appveyor.com/api/projects/status/fb9i157knoixe3iq/branch/master?svg=true)](https://ci.appveyor.com/project/jamestalmage/stack-utils-oiw96/branch/master)  [![Coverage](https://coveralls.io/repos/tapjs/stack-utils/badge.svg?branch=master&service=github)](https://coveralls.io/github/tapjs/stack-utils?branch=master)\n\n\nExtracted from `lib/stack.js` in the [`node-tap` project](https://github.com/tapjs/node-tap)\n\n## Install\n\n```\n$ npm install --save stack-utils\n```\n\n\n## Usage\n\n```js\nconst StackUtils = require('stack-utils');\nconst stack = new StackUtils({cwd: process.cwd(), internals: StackUtils.nodeInternals()});\n\nconsole.log(stack.clean(new Error().stack));\n// outputs a beautified stack trace\n```\n\n\n## API\n\n\n### new StackUtils([options])\n\nCreates a new `stackUtils` instance.\n\n#### options\n\n##### internals\n\nType: `array` of `RegularExpression`s  \n\nA set of regular expressions that match internal stack stack trace lines which should be culled from the stack trace.\nThe default is `StackUtils.nodeInternals()`, this can be disabled by setting `[]` or appended using\n`StackUtils.nodeInternals().concat(additionalRegExp)`.  See also `ignoredPackages`.\n\n##### ignoredPackages\n\nType: `array` of `string`s\n\nAn array of npm modules to be culled from the stack trace.  This list will mapped to regular\nexpressions and merged with the `internals`.\n\nDefault `''`.\n\n##### cwd\n\nType: `string`\n\nThe path to the current working directory. File names in the stack trace will be shown relative to this directory.\n\n##### wrapCallSite\n\nType: `function(CallSite)`\n\nA mapping function for manipulating CallSites before processing. The first argument is a CallSite instance, and the function should return a modified CallSite. This is useful for providing source map support.\n\n\n### StackUtils.nodeInternals()\n\nReturns an array of regular expressions that be used to cull lines from the stack trace that reference common Node.js internal files.\n\n\n### stackUtils.clean(stack, indent = 0)\n\nCleans up a stack trace by deleting any lines that match the `internals` passed to the constructor, and shortening file names relative to `cwd`.\n\nReturns a `string` with the cleaned up stack (always terminated with a `\\n` newline character).\nSpaces at the start of each line are trimmed, indentation can be added by setting `indent` to the desired number of spaces.\n\n#### stack\n\n*Required*  \nType: `string` or an `array` of `string`s\n\n\n### stackUtils.capture([limit], [startStackFunction])\n\nCaptures the current stack trace, returning an array of `CallSite`s. There are good overviews of the available CallSite methods [here](https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces), and [here](https://github.com/sindresorhus/callsites#api).\n\n#### limit\n\nType: `number`\nDefault: `Infinity`\n\nLimits the number of lines returned by dropping all lines in excess of the limit. This removes lines from the stack trace.\n\n#### startStackFunction\n\nType: `function`\n\nThe function where the stack trace should start. The first line of the stack trace will be the function that called `startStackFunction`. This removes lines from the end of the stack trace.\n\n\n### stackUtils.captureString([limit], [startStackFunction])\n\nCaptures the current stack trace, cleans it using `stackUtils.clean(stack)`, and returns a string with the cleaned stack trace. It takes the same arguments as `stackUtils.capture`.\n\n\n### stackUtils.at([startStackFunction])\n\nCaptures the first line of the stack trace (or the first line after `startStackFunction` if supplied), and returns a `CallSite` like object that is serialization friendly (properties are actual values instead of getter functions). \n\nThe available properties are:\n\n - `line`: `number` \n - `column`: `number`\n - `file`: `string`\n - `constructor`: `boolean`\n - `evalOrigin`: `string`\n - `native`: `boolean`\n - `type`: `string`\n - `function`: `string`\n - `method`: `string`\n\n### stackUtils.parseLine(line)\n\nParses a `string` (which should be a single line from a stack trace), and generates an object with the following properties:\n\n - `line`: `number` \n - `column`: `number`\n - `file`: `string`\n - `constructor`: `boolean`\n - `evalOrigin`: `string`\n - `evalLine`: `number`\n - `evalColumn`: `number`\n - `evalFile`: `string`\n - `native`: `boolean`\n - `function`: `string`\n - `method`: `string`\n\n\n## License\n\nMIT © [Isaac Z. Schlueter](http://github.com/isaacs), [James Talmage](http://github.com/jamestalmage)\n","readmeFilename":"readme.md","gitHead":"85ad2ca7a6f2ca83588f4c0d6960db485534e442","_nodeVersion":"15.2.0","_npmVersion":"7.0.11","_npmUser":{"name":"isaacs","email":"i@izs.me"},"maintainers":[{"name":"jamestalmage","email":"james@talmage.io"},{"name":"isaacs","email":"i@izs.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/stack-utils_1.0.3_1605310327816_0.4557233752643852"},"_hasShrinkwrap":false},"1.0.4":{"_id":"stack-utils@1.0.4","name":"stack-utils","description":"Captures and cleans stack traces","version":"1.0.4","homepage":"https://github.com/tapjs/stack-utils#readme","author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"repository":{"type":"git","url":"git+https://github.com/tapjs/stack-utils.git"},"bugs":{"url":"https://github.com/tapjs/stack-utils/issues"},"license":"MIT","scripts":{"test":"tap --no-esm --100","preversion":"npm test","postversion":"npm publish","prepublishOnly":"git push origin --follow-tags"},"directories":{},"devDependencies":{"bluebird":"^3.7.2","coveralls":"^3.0.9","nested-error-stacks":"^2.1.0","pify":"^4.0.1","q":"^1.5.1","tap":"^14.10.8"},"dependencies":{"escape-string-regexp":"^2.0.0"},"engines":{"node":">=8"},"publishConfig":{"tag":"v1-legacy"},"dist":{"shasum":"4b600971dcfc6aed0cbdf2a8268177cc916c87c8","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/stack-utils/-/stack-utils-1.0.4.tgz"},"readme":"# stack-utils \n\n> Captures and cleans stack traces.\n\n[![Linux Build](https://travis-ci.org/tapjs/stack-utils.svg?branch=master)](https://travis-ci.org/tapjs/stack-utils) [![Build status](https://ci.appveyor.com/api/projects/status/fb9i157knoixe3iq/branch/master?svg=true)](https://ci.appveyor.com/project/jamestalmage/stack-utils-oiw96/branch/master)  [![Coverage](https://coveralls.io/repos/tapjs/stack-utils/badge.svg?branch=master&service=github)](https://coveralls.io/github/tapjs/stack-utils?branch=master)\n\n\nExtracted from `lib/stack.js` in the [`node-tap` project](https://github.com/tapjs/node-tap)\n\n## Install\n\n```\n$ npm install --save stack-utils\n```\n\n\n## Usage\n\n```js\nconst StackUtils = require('stack-utils');\nconst stack = new StackUtils({cwd: process.cwd(), internals: StackUtils.nodeInternals()});\n\nconsole.log(stack.clean(new Error().stack));\n// outputs a beautified stack trace\n```\n\n\n## API\n\n\n### new StackUtils([options])\n\nCreates a new `stackUtils` instance.\n\n#### options\n\n##### internals\n\nType: `array` of `RegularExpression`s  \n\nA set of regular expressions that match internal stack stack trace lines which should be culled from the stack trace.\nThe default is `StackUtils.nodeInternals()`, this can be disabled by setting `[]` or appended using\n`StackUtils.nodeInternals().concat(additionalRegExp)`.  See also `ignoredPackages`.\n\n##### ignoredPackages\n\nType: `array` of `string`s\n\nAn array of npm modules to be culled from the stack trace.  This list will mapped to regular\nexpressions and merged with the `internals`.\n\nDefault `''`.\n\n##### cwd\n\nType: `string`\n\nThe path to the current working directory. File names in the stack trace will be shown relative to this directory.\n\n##### wrapCallSite\n\nType: `function(CallSite)`\n\nA mapping function for manipulating CallSites before processing. The first argument is a CallSite instance, and the function should return a modified CallSite. This is useful for providing source map support.\n\n\n### StackUtils.nodeInternals()\n\nReturns an array of regular expressions that be used to cull lines from the stack trace that reference common Node.js internal files.\n\n\n### stackUtils.clean(stack, indent = 0)\n\nCleans up a stack trace by deleting any lines that match the `internals` passed to the constructor, and shortening file names relative to `cwd`.\n\nReturns a `string` with the cleaned up stack (always terminated with a `\\n` newline character).\nSpaces at the start of each line are trimmed, indentation can be added by setting `indent` to the desired number of spaces.\n\n#### stack\n\n*Required*  \nType: `string` or an `array` of `string`s\n\n\n### stackUtils.capture([limit], [startStackFunction])\n\nCaptures the current stack trace, returning an array of `CallSite`s. There are good overviews of the available CallSite methods [here](https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces), and [here](https://github.com/sindresorhus/callsites#api).\n\n#### limit\n\nType: `number`\nDefault: `Infinity`\n\nLimits the number of lines returned by dropping all lines in excess of the limit. This removes lines from the stack trace.\n\n#### startStackFunction\n\nType: `function`\n\nThe function where the stack trace should start. The first line of the stack trace will be the function that called `startStackFunction`. This removes lines from the end of the stack trace.\n\n\n### stackUtils.captureString([limit], [startStackFunction])\n\nCaptures the current stack trace, cleans it using `stackUtils.clean(stack)`, and returns a string with the cleaned stack trace. It takes the same arguments as `stackUtils.capture`.\n\n\n### stackUtils.at([startStackFunction])\n\nCaptures the first line of the stack trace (or the first line after `startStackFunction` if supplied), and returns a `CallSite` like object that is serialization friendly (properties are actual values instead of getter functions). \n\nThe available properties are:\n\n - `line`: `number` \n - `column`: `number`\n - `file`: `string`\n - `constructor`: `boolean`\n - `evalOrigin`: `string`\n - `native`: `boolean`\n - `type`: `string`\n - `function`: `string`\n - `method`: `string`\n\n### stackUtils.parseLine(line)\n\nParses a `string` (which should be a single line from a stack trace), and generates an object with the following properties:\n\n - `line`: `number` \n - `column`: `number`\n - `file`: `string`\n - `constructor`: `boolean`\n - `evalOrigin`: `string`\n - `evalLine`: `number`\n - `evalColumn`: `number`\n - `evalFile`: `string`\n - `native`: `boolean`\n - `function`: `string`\n - `method`: `string`\n\n\n## License\n\nMIT © [Isaac Z. Schlueter](http://github.com/isaacs), [James Talmage](http://github.com/jamestalmage)\n","readmeFilename":"readme.md","gitHead":"f64938000f55fa2f3aee0679e1e11f390b05c7f3","_nodeVersion":"15.3.0","_npmVersion":"7.0.12","_npmUser":{"name":"isaacs","email":"i@izs.me"},"maintainers":[{"name":"jamestalmage","email":"james@talmage.io"},{"name":"isaacs","email":"i@izs.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/stack-utils_1.0.4_1606351964773_0.6983359601082031"},"_hasShrinkwrap":false},"1.0.5":{"_id":"stack-utils@1.0.5","name":"stack-utils","description":"Captures and cleans stack traces","version":"1.0.5","homepage":"https://github.com/tapjs/stack-utils#readme","author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"repository":{"type":"git","url":"git+https://github.com/tapjs/stack-utils.git"},"bugs":{"url":"https://github.com/tapjs/stack-utils/issues"},"license":"MIT","scripts":{"test":"tap --no-esm --100","preversion":"npm test","postversion":"npm publish","prepublishOnly":"git push origin --follow-tags"},"directories":{},"devDependencies":{"bluebird":"^3.7.2","coveralls":"^3.0.9","nested-error-stacks":"^2.1.0","pify":"^4.0.1","q":"^1.5.1","tap":"^14.10.8"},"dependencies":{"escape-string-regexp":"^2.0.0"},"engines":{"node":">=8"},"publishConfig":{"tag":"v1-legacy"},"dist":{"shasum":"a19b0b01947e0029c8e451d5d61a498f5bb1471b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/stack-utils/-/stack-utils-1.0.5.tgz"},"readme":"# stack-utils \n\n> Captures and cleans stack traces.\n\n[![Linux Build](https://travis-ci.org/tapjs/stack-utils.svg?branch=master)](https://travis-ci.org/tapjs/stack-utils) [![Build status](https://ci.appveyor.com/api/projects/status/fb9i157knoixe3iq/branch/master?svg=true)](https://ci.appveyor.com/project/jamestalmage/stack-utils-oiw96/branch/master)  [![Coverage](https://coveralls.io/repos/tapjs/stack-utils/badge.svg?branch=master&service=github)](https://coveralls.io/github/tapjs/stack-utils?branch=master)\n\n\nExtracted from `lib/stack.js` in the [`node-tap` project](https://github.com/tapjs/node-tap)\n\n## Install\n\n```\n$ npm install --save stack-utils\n```\n\n\n## Usage\n\n```js\nconst StackUtils = require('stack-utils');\nconst stack = new StackUtils({cwd: process.cwd(), internals: StackUtils.nodeInternals()});\n\nconsole.log(stack.clean(new Error().stack));\n// outputs a beautified stack trace\n```\n\n\n## API\n\n\n### new StackUtils([options])\n\nCreates a new `stackUtils` instance.\n\n#### options\n\n##### internals\n\nType: `array` of `RegularExpression`s  \n\nA set of regular expressions that match internal stack stack trace lines which should be culled from the stack trace.\nThe default is `StackUtils.nodeInternals()`, this can be disabled by setting `[]` or appended using\n`StackUtils.nodeInternals().concat(additionalRegExp)`.  See also `ignoredPackages`.\n\n##### ignoredPackages\n\nType: `array` of `string`s\n\nAn array of npm modules to be culled from the stack trace.  This list will mapped to regular\nexpressions and merged with the `internals`.\n\nDefault `''`.\n\n##### cwd\n\nType: `string`\n\nThe path to the current working directory. File names in the stack trace will be shown relative to this directory.\n\n##### wrapCallSite\n\nType: `function(CallSite)`\n\nA mapping function for manipulating CallSites before processing. The first argument is a CallSite instance, and the function should return a modified CallSite. This is useful for providing source map support.\n\n\n### StackUtils.nodeInternals()\n\nReturns an array of regular expressions that be used to cull lines from the stack trace that reference common Node.js internal files.\n\n\n### stackUtils.clean(stack, indent = 0)\n\nCleans up a stack trace by deleting any lines that match the `internals` passed to the constructor, and shortening file names relative to `cwd`.\n\nReturns a `string` with the cleaned up stack (always terminated with a `\\n` newline character).\nSpaces at the start of each line are trimmed, indentation can be added by setting `indent` to the desired number of spaces.\n\n#### stack\n\n*Required*  \nType: `string` or an `array` of `string`s\n\n\n### stackUtils.capture([limit], [startStackFunction])\n\nCaptures the current stack trace, returning an array of `CallSite`s. There are good overviews of the available CallSite methods [here](https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces), and [here](https://github.com/sindresorhus/callsites#api).\n\n#### limit\n\nType: `number`\nDefault: `Infinity`\n\nLimits the number of lines returned by dropping all lines in excess of the limit. This removes lines from the stack trace.\n\n#### startStackFunction\n\nType: `function`\n\nThe function where the stack trace should start. The first line of the stack trace will be the function that called `startStackFunction`. This removes lines from the end of the stack trace.\n\n\n### stackUtils.captureString([limit], [startStackFunction])\n\nCaptures the current stack trace, cleans it using `stackUtils.clean(stack)`, and returns a string with the cleaned stack trace. It takes the same arguments as `stackUtils.capture`.\n\n\n### stackUtils.at([startStackFunction])\n\nCaptures the first line of the stack trace (or the first line after `startStackFunction` if supplied), and returns a `CallSite` like object that is serialization friendly (properties are actual values instead of getter functions). \n\nThe available properties are:\n\n - `line`: `number` \n - `column`: `number`\n - `file`: `string`\n - `constructor`: `boolean`\n - `evalOrigin`: `string`\n - `native`: `boolean`\n - `type`: `string`\n - `function`: `string`\n - `method`: `string`\n\n### stackUtils.parseLine(line)\n\nParses a `string` (which should be a single line from a stack trace), and generates an object with the following properties:\n\n - `line`: `number` \n - `column`: `number`\n - `file`: `string`\n - `constructor`: `boolean`\n - `evalOrigin`: `string`\n - `evalLine`: `number`\n - `evalColumn`: `number`\n - `evalFile`: `string`\n - `native`: `boolean`\n - `function`: `string`\n - `method`: `string`\n\n\n## License\n\nMIT © [Isaac Z. Schlueter](http://github.com/isaacs), [James Talmage](http://github.com/jamestalmage)\n","readmeFilename":"readme.md","gitHead":"3fedcb900446a4d47d764a98d91d8d989b7c2e2b","_nodeVersion":"15.3.0","_npmVersion":"7.7.6","_npmUser":{"name":"isaacs","email":"i@izs.me"},"maintainers":[{"name":"jamestalmage","email":"james@talmage.io"},{"name":"isaacs","email":"i@izs.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/stack-utils_1.0.5_1617646430240_0.610412032205589"},"_hasShrinkwrap":false},"2.0.0":{"_id":"stack-utils@2.0.0","name":"stack-utils","description":"Captures and cleans stack traces","version":"2.0.0","homepage":"https://github.com/tapjs/stack-utils#readme","author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"repository":{"type":"git","url":"git+https://github.com/tapjs/stack-utils.git"},"bugs":{"url":"https://github.com/tapjs/stack-utils/issues"},"license":"MIT","scripts":{"test":"tap --no-esm --100","preversion":"npm test","postversion":"npm publish","prepublish":"git push origin --follow-tags"},"directories":{},"devDependencies":{"bluebird":"^3.7.2","coveralls":"^3.0.9","nested-error-stacks":"^2.1.0","pify":"^4.0.1","q":"^1.5.1","tap":"=14.10.2-unbundled"},"dependencies":{"escape-string-regexp":"^2.0.0"},"engines":{"node":">=10"},"dist":{"shasum":"eeaf8bf4d0e343b98cf64781121b189570203ba0","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/stack-utils/-/stack-utils-2.0.0.tgz"},"gitHead":"27d78e9b237f959e51452459d97ab0b23c5dfc08","_nodeVersion":"13.3.0","_npmVersion":"6.13.4","maintainers":[{"name":"isaacs","email":"i@izs.me"},{"name":"jamestalmage","email":"james@talmage.io"}],"_npmUser":{"name":"isaacs","email":"i@izs.me"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/stack-utils_2.0.0_1576219748802_0.6404410148032522"},"_hasShrinkwrap":false},"2.0.1":{"_id":"stack-utils@2.0.1","name":"stack-utils","description":"Captures and cleans stack traces","version":"2.0.1","homepage":"https://github.com/tapjs/stack-utils#readme","author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"repository":{"type":"git","url":"git+https://github.com/tapjs/stack-utils.git"},"bugs":{"url":"https://github.com/tapjs/stack-utils/issues"},"license":"MIT","scripts":{"test":"tap --no-esm --100","preversion":"npm test","postversion":"npm publish","prepublishOnly":"git push origin --follow-tags"},"directories":{},"devDependencies":{"bluebird":"^3.7.2","coveralls":"^3.0.9","nested-error-stacks":"^2.1.0","pify":"^4.0.1","q":"^1.5.1","tap":"=14.10.2-unbundled"},"dependencies":{"escape-string-regexp":"^2.0.0"},"engines":{"node":">=10"},"dist":{"shasum":"3df48345a3b92adc06038f0e95782df61beff742","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/stack-utils/-/stack-utils-2.0.1.tgz"},"gitHead":"d3c7ee2a7d46744c271a36ce3acfd69465f36df5","_nodeVersion":"13.3.0","_npmVersion":"6.13.4","maintainers":[{"name":"isaacs","email":"i@izs.me"},{"name":"jamestalmage","email":"james@talmage.io"}],"_npmUser":{"name":"isaacs","email":"i@izs.me"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/stack-utils_2.0.1_1576219832040_0.7200474147237628"},"_hasShrinkwrap":false},"2.0.2":{"_id":"stack-utils@2.0.2","name":"stack-utils","description":"Captures and cleans stack traces","version":"2.0.2","homepage":"https://github.com/tapjs/stack-utils#readme","author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"repository":{"type":"git","url":"git+https://github.com/tapjs/stack-utils.git"},"bugs":{"url":"https://github.com/tapjs/stack-utils/issues"},"license":"MIT","scripts":{"test":"tap --no-esm --100","preversion":"npm test","postversion":"npm publish","prepublishOnly":"git push origin --follow-tags"},"directories":{},"devDependencies":{"bluebird":"^3.7.2","coveralls":"^3.0.9","nested-error-stacks":"^2.1.0","pify":"^4.0.1","q":"^1.5.1","tap":"=14.10.2-unbundled"},"dependencies":{"escape-string-regexp":"^2.0.0"},"engines":{"node":">=10"},"dist":{"shasum":"5cf48b4557becb4638d0bc4f21d23f5d19586593","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/stack-utils/-/stack-utils-2.0.2.tgz"},"gitHead":"b3c146e3f157aceebe830e858eb41f1df9387f79","_nodeVersion":"13.10.1","_npmVersion":"6.14.4","maintainers":[{"name":"isaacs","email":"i@izs.me"},{"name":"jamestalmage","email":"james@talmage.io"}],"_npmUser":{"name":"isaacs","email":"i@izs.me"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/stack-utils_2.0.2_1588086977285_0.5869045456973836"},"_hasShrinkwrap":false},"2.0.3":{"_id":"stack-utils@2.0.3","name":"stack-utils","description":"Captures and cleans stack traces","version":"2.0.3","homepage":"https://github.com/tapjs/stack-utils#readme","author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"repository":{"type":"git","url":"git+https://github.com/tapjs/stack-utils.git"},"bugs":{"url":"https://github.com/tapjs/stack-utils/issues"},"license":"MIT","scripts":{"test":"tap --no-esm --100","preversion":"npm test","postversion":"npm publish","prepublishOnly":"git push origin --follow-tags"},"directories":{},"devDependencies":{"bluebird":"^3.7.2","coveralls":"^3.0.9","nested-error-stacks":"^2.1.0","pify":"^4.0.1","q":"^1.5.1","tap":"^14.10.8"},"dependencies":{"escape-string-regexp":"^2.0.0"},"engines":{"node":">=10"},"dist":{"shasum":"cd5f030126ff116b78ccb3c027fe302713b61277","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/stack-utils/-/stack-utils-2.0.3.tgz"},"gitHead":"82097544610b7360e14c496b3eb23aedda53d3d0","_nodeVersion":"15.2.0","_npmVersion":"7.0.11","_npmUser":{"name":"isaacs","email":"i@izs.me"},"maintainers":[{"name":"jamestalmage","email":"james@talmage.io"},{"name":"isaacs","email":"i@izs.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/stack-utils_2.0.3_1605309010407_0.4168764025799361"},"_hasShrinkwrap":false},"2.0.4":{"_id":"stack-utils@2.0.4","name":"stack-utils","description":"Captures and cleans stack traces","version":"2.0.4","homepage":"https://github.com/tapjs/stack-utils#readme","author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"repository":{"type":"git","url":"git+https://github.com/tapjs/stack-utils.git"},"bugs":{"url":"https://github.com/tapjs/stack-utils/issues"},"license":"MIT","scripts":{"test":"tap","preversion":"npm test","postversion":"npm publish","prepublishOnly":"git push origin --follow-tags"},"directories":{},"devDependencies":{"bluebird":"^3.7.2","coveralls":"^3.0.9","nested-error-stacks":"^2.1.0","pify":"^4.0.1","q":"^1.5.1","tap":"^15.0.9"},"dependencies":{"escape-string-regexp":"^2.0.0","source-map-support":"^0.5.20"},"engines":{"node":">=10"},"dist":{"shasum":"bf967ae2813d3d2d1e1f59a4408676495c8112ab","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/stack-utils/-/stack-utils-2.0.4.tgz"},"tap":{"check-coverage":true},"gitHead":"0ec85bbb69c7aafae1398fde7f8a007db4fd1858","_nodeVersion":"16.5.0","_npmVersion":"7.23.0","_npmUser":{"name":"isaacs","email":"i@izs.me"},"maintainers":[{"name":"jamestalmage","email":"james@talmage.io"},{"name":"isaacs","email":"i@izs.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/stack-utils_2.0.4_1631632465223_0.8048252870081376"},"_hasShrinkwrap":false},"2.0.5":{"_id":"stack-utils@2.0.5","name":"stack-utils","description":"Captures and cleans stack traces","version":"2.0.5","homepage":"https://github.com/tapjs/stack-utils#readme","author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"repository":{"type":"git","url":"git+https://github.com/tapjs/stack-utils.git"},"bugs":{"url":"https://github.com/tapjs/stack-utils/issues"},"license":"MIT","scripts":{"test":"tap","preversion":"npm test","postversion":"npm publish","prepublishOnly":"git push origin --follow-tags"},"directories":{},"devDependencies":{"bluebird":"^3.7.2","coveralls":"^3.0.9","nested-error-stacks":"^2.1.0","pify":"^4.0.1","q":"^1.5.1","source-map-support":"^0.5.20","tap":"^15.0.9"},"dependencies":{"escape-string-regexp":"^2.0.0"},"engines":{"node":">=10"},"dist":{"shasum":"d25265fca995154659dbbfba3b49254778d2fdd5","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/stack-utils/-/stack-utils-2.0.5.tgz"},"tap":{"check-coverage":true},"gitHead":"536b9a263ab340a280b613277521b8cdafc46102","_nodeVersion":"16.5.0","_npmVersion":"7.23.0","_npmUser":{"name":"isaacs","email":"i@izs.me"},"maintainers":[{"name":"jamestalmage","email":"james@talmage.io"},{"name":"isaacs","email":"i@izs.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/stack-utils_2.0.5_1631896353329_0.14363275142004728"},"_hasShrinkwrap":false},"2.0.6":{"_id":"stack-utils@2.0.6","name":"stack-utils","description":"Captures and cleans stack traces","version":"2.0.6","author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"repository":{"ShortcutSyntax":"tapjs/stack-utils"},"license":"MIT","scripts":{"test":"tap","preversion":"npm test","postversion":"npm publish","prepublishOnly":"git push origin --follow-tags"},"directories":null,"devDependencies":{"bluebird":"^3.7.2","coveralls":"^3.0.9","nested-error-stacks":"^2.1.0","pify":"^4.0.1","q":"^1.5.1","source-map-support":"^0.5.20","tap":"^16.3.0"},"dependencies":{"escape-string-regexp":"^2.0.0"},"engines":{"node":">=10"},"files":["index.js"],"dist":{"shasum":"aaf0748169c02fc33c8232abccf933f54a1cc34f","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/stack-utils/-/stack-utils-2.0.6.tgz"},"tap":{"check-coverage":true}}},"time":{"created":"2022-11-21T18:11:43Z","modified":"2022-11-21T18:12:28Z","0.0.1":"2022-11-21T18:11:43Z","0.1.0":"2022-11-21T18:11:43Z","0.2.0":"2022-11-21T18:11:43Z","0.3.0":"2022-11-21T18:11:43Z","0.4.0":"2022-11-21T18:11:43Z","1.0.0":"2022-11-21T18:11:43Z","1.0.1":"2022-11-21T18:11:43Z","1.0.2":"2022-11-21T18:11:43Z","1.0.3":"2022-11-21T18:11:43Z","1.0.4":"2022-11-21T18:11:43Z","1.0.5":"2022-11-21T18:11:43Z","2.0.0":"2022-11-21T18:11:43Z","2.0.1":"2022-11-21T18:11:43Z","2.0.2":"2022-11-21T18:11:43Z","2.0.3":"2022-11-21T18:11:43Z","2.0.4":"2022-11-21T18:11:43Z","2.0.5":"2022-11-21T18:11:43Z","2.0.6":"2022-11-21T18:12:28Z"}}