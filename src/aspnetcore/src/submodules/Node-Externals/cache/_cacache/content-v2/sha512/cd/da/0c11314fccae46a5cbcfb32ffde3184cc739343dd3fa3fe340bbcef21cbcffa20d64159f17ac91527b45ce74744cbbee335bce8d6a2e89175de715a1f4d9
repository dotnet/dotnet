{"_id":"enhanced-resolve","_rev":"090db536-e986-42b2-bfc3-b07ea3baa54f","name":"enhanced-resolve","dist-tags":{"latest":"5.16.0","beta":"5.0.0-beta.12","enhanced-resolve-4":"4.5.0"},"versions":{"0.2.0":{"_id":"enhanced-resolve@0.2.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.2.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.8"},"main":"lib/resolve.js","dist":{"shasum":"dbc461a2bbc5f42d76331e83307504f88565822a","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.2.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.2.1":{"_id":"enhanced-resolve@0.2.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.2.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.8"},"main":"lib/resolve.js","dist":{"shasum":"c9c6765fac3255b2f767967d0d2f248fd3117a55","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.2.1.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.2.2":{"_id":"enhanced-resolve@0.2.2","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.2.2","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/resolve.js","dist":{"shasum":"23f6cdbb04c0e8b255e4615c0bdf9d117815a1ca","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.2.2.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.2.3":{"_id":"enhanced-resolve@0.2.3","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.2.3","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/resolve.js","dist":{"shasum":"cacc8455e1c41d8920b261480ee10ecd6ff2298b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.2.3.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.59","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.2.4":{"_id":"enhanced-resolve@0.2.4","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.2.4","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/resolve.js","dist":{"shasum":"6f5b8f4066021255f99b25be9cd34b0529ae4b94","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.2.4.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.59","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.2.5":{"_id":"enhanced-resolve@0.2.5","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.2.5","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/resolve.js","dist":{"shasum":"a2cc54e58cb0ff1b7981f88ee9b4fa58326e71c8","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.2.5.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.61","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.2.6":{"_id":"enhanced-resolve@0.2.6","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.2.6","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/resolve.js","dist":{"shasum":"22a7fe92ee77c377ea1859aeb739c3f90652e19b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.2.6.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.61","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.2.7":{"_id":"enhanced-resolve@0.2.7","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.2.7","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/resolve.js","dist":{"shasum":"31fbb95ecd774ecf2ac40074155b99fbe6774630","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.2.7.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.61","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.2.8":{"_id":"enhanced-resolve@0.2.8","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.2.8","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/resolve.js","dist":{"shasum":"0fe4018ce7b4a9cdd7a6b5e78c941dc62791f64b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.2.8.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.59","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.2.9":{"_id":"enhanced-resolve@0.2.9","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.2.9","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/resolve.js","dist":{"shasum":"23d0659f79963877932e265a415ea60d2f8e8e35","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.2.9.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.61","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.3.0":{"_id":"enhanced-resolve@0.3.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.3.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/resolve.js","dist":{"shasum":"395d3fc2fd43fd0565b160de718573f49533ee03","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.3.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.59","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.3.1":{"_id":"enhanced-resolve@0.3.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.3.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/resolve.js","dist":{"shasum":"56a15de2b7b05079c4067aae1a9987c5635b96b1","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.3.1.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.59","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.4.0":{"_id":"enhanced-resolve@0.4.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.4.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/cachedFsResolve.js","dist":{"shasum":"60c4300876bca576d2f62b6d96a9e28b67b95be5","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.4.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.62","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.4.1":{"_id":"enhanced-resolve@0.4.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.4.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/cachedFsResolve.js","dist":{"shasum":"c92f3572fd6c154fc70f1c18eef3c76fd0b4b6a1","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.4.1.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.59","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.4.2":{"_id":"enhanced-resolve@0.4.2","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.4.2","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/cachedFsResolve.js","dist":{"shasum":"dc84ec4c6561428140b15bcaa78203d93589175b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.4.2.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.59","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.4.4":{"_id":"enhanced-resolve@0.4.4","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.4.4","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/cachedFsResolve.js","dist":{"shasum":"5437898d3f9f8db366d3993ae1520e0f958d8902","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.4.4.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.59","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.4.5":{"_id":"enhanced-resolve@0.4.5","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.4.5","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/cachedFsResolve.js","dist":{"shasum":"5d38d78e6aa36e371cfefc17eec2c4c57064b6cf","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.4.5.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.59","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.4.6":{"_id":"enhanced-resolve@0.4.6","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.4.6","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/cachedFsResolve.js","dist":{"shasum":"9930f3329613bdbfeaca678d60f0eacea86b40ed","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.4.6.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.59","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.4.7":{"_id":"enhanced-resolve@0.4.7","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.4.7","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/cachedFsResolve.js","dist":{"shasum":"3b9c5ca73bb2635116e80c06e0a32bcd9ab0892e","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.4.7.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.59","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.4.8":{"_id":"enhanced-resolve@0.4.8","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.4.8","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/cachedFsResolve.js","dist":{"shasum":"9f84891004d770f9a88523aea6c87f8d9e3bf164","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.4.8.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.62","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.4.9":{"_id":"enhanced-resolve@0.4.9","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.4.9","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/cachedFsResolve.js","dist":{"shasum":"45c21996d049f5e7252bb0a453adce93d7cfcb36","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.4.9.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.59","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.4.10":{"_id":"enhanced-resolve@0.4.10","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.4.10","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/cachedFsResolve.js","dist":{"shasum":"7d3eca0e4c3832350e0ee7f864414a9f32a8a083","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.4.10.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.59","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.4.11":{"_id":"enhanced-resolve@0.4.11","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.4.11","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/cachedFsResolve.js","dist":{"shasum":"258094db1dc354754238f9029bde702e5b4ac329","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.4.11.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.59","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.4.12":{"_id":"enhanced-resolve@0.4.12","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.4.12","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"node node_modules/mocha/bin/_mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"*","should":"*"},"dependencies":{},"engines":{"node":">=0.6"},"main":"lib/cachedFsResolve.js","dist":{"shasum":"8d6747bf3a6dbbc595457cb21f9b99633d15c5a9","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.4.12.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.59","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.5.0":{"_id":"enhanced-resolve@0.5.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.5.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.3.x","should":"1.1.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"1f70c2d2fe50a410464b778afea27578475ee383","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.5.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.59","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.5.1":{"_id":"enhanced-resolve@0.5.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.5.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"license":"MIT","scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.3.x","should":"1.1.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"ffff62dad092d537693b57de333fa9f546f2d89f","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.5.1.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.65","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.5.2":{"_id":"enhanced-resolve@0.5.2","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.5.2","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.3.x","should":"1.1.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"5aaa12b74bce55602a62d11bc46d7779333d9d08","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.5.2.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.65","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.5.3":{"_id":"enhanced-resolve@0.5.3","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.5.3","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.3.x","should":"1.1.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"aee50a789809d9e6ee2dd48264f521148405e4cb","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.5.3.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.5.4":{"_id":"enhanced-resolve@0.5.4","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.5.4","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.3.x","should":"1.1.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"a34226713f44474bc3b9a9cccfe1f6358e3ef088","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.5.4.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.63","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.5.5":{"_id":"enhanced-resolve@0.5.5","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.5.5","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.3.x","should":"1.1.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"0f54fdffa4927bf6300973961c34d8acd7649099","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.5.5.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.59","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.5.6":{"_id":"enhanced-resolve@0.5.6","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.5.6","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.8.x","should":"1.1.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"c4731a1b8029ab43d2fb13106e412f3bc7f26569","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.5.6.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.59","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.5.7":{"_id":"enhanced-resolve@0.5.7","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.5.7","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.8.x","should":"1.1.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"4e5549931c02bf1f57b8864d18cda65294504fed","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.5.7.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.59","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.5.8":{"_id":"enhanced-resolve@0.5.8","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.5.8","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.8.x","should":"1.1.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"07b00738f629fa0ebe784b394f9840dc6eb25169","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.5.8.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_from":".","_npmVersion":"1.2.11","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.5.9":{"_id":"enhanced-resolve@0.5.9","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.5.9","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.8.x","should":"1.1.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"9977fd6ee9e4edc0b91705503a7ba87d7c83d799","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.5.9.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_from":".","_npmVersion":"1.2.11","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.5.10":{"_id":"enhanced-resolve@0.5.10","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.5.10","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.8.x","should":"1.1.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"7ec1ace1b77515bdc5365c94a09ce1898670afac","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.5.10.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_npmVersion":"1.1.61","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.5.11":{"_id":"enhanced-resolve@0.5.11","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.5.11","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.8.x","should":"1.1.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"9014f331727ebf83de4ee2d0fac2952eaf60fd04","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.5.11.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_from":".","_npmVersion":"1.2.11","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.5.12":{"_id":"enhanced-resolve@0.5.12","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.5.12","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.8.x","should":"1.1.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"9ffd5a2abb85acbf1e6f38944900d8830e290ea7","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.5.12.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_from":".","_npmVersion":"1.2.11","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.5.13":{"_id":"enhanced-resolve@0.5.13","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.5.13","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.8.x","should":"1.1.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"3a4cefa931a3ea37f29279dbfb231fbe5331c731","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.5.13.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_from":".","_npmVersion":"1.2.30","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.5.14":{"_id":"enhanced-resolve@0.5.14","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.5.14","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.8.x","should":"1.1.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"2528d28a45af1845d1afc8fa9686395f43de259a","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.5.14.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.5.15":{"_id":"enhanced-resolve@0.5.15","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.5.15","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.8.x","should":"2.0.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"48ae41ebd9157e3e81fc51726955db8045fef702","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.5.15.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_from":".","_npmVersion":"1.2.30","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.6.0":{"_id":"enhanced-resolve@0.6.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.6.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.8.x","should":"2.0.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"b01230c84e4b7c4124fc52b2a2206d7fe1fca9a8","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.6.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_from":".","_npmVersion":"1.3.17","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.6.1":{"_id":"enhanced-resolve@0.6.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.6.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.8.x","should":"2.0.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"3bdbb1e7e084d12b766502ee258bfea8ba05ff67","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.6.1.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_from":".","_npmVersion":"1.3.21","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.7.0":{"_id":"enhanced-resolve@0.7.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.7.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.8.x","should":"2.0.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"972ca2945da357947137abcde1d01750dcb94de4","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.7.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_from":".","_npmVersion":"1.3.17","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.7.1":{"_id":"enhanced-resolve@0.7.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.7.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.8.x","should":"2.0.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"d13bd9bb002cdab64b18225ebe1289c901be41fd","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.7.1.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_from":".","_npmVersion":"1.3.21","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.7.2":{"_id":"enhanced-resolve@0.7.2","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.7.2","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.8.x","should":"2.0.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"226ed39892520fd987f25cf0af7707211efacfb1","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.7.2.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.7.3":{"_id":"enhanced-resolve@0.7.3","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.7.3","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.8.x","should":"2.0.x"},"dependencies":{"tapable":"0.1.x"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"f283ff1607e36d96b7ca8433b5421d062b41c99b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.7.3.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.7.4":{"_id":"enhanced-resolve@0.7.4","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.7.4","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.8.x","should":"2.0.x"},"dependencies":{"tapable":"0.1.x","graceful-fs":"~2.0.3"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"830c240a464cd37da1c2d4c6ca4198cebe984698","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.7.4.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.7.5":{"_id":"enhanced-resolve@0.7.5","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.7.5","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.8.x","should":"2.0.x"},"dependencies":{"tapable":"0.1.x","graceful-fs":"~2.0.3"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"f6be9e189314ab308b023bb45e24eff8276aa628","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.7.5.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.7.6":{"_id":"enhanced-resolve@0.7.6","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.7.6","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"test":"mocha --reporter spec"},"directories":{},"devDependencies":{"mocha":"1.8.x","should":"2.0.x"},"dependencies":{"tapable":"0.1.x","memory-fs":"~0.1.0","graceful-fs":"~2.0.3"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"4a429f76133da8266098e54be820e165d37e5ccf","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.7.6.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.8.0":{"_id":"enhanced-resolve@0.8.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.8.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"test":"mocha --reporter spec","cover":"istanbul cover node_modules/mocha/bin/_mocha -- -R spec"},"directories":{},"devDependencies":{"istanbul":"^0.3.5","mocha":"1.8.x","should":"2.0.x"},"dependencies":{"tapable":"0.1.x","memory-fs":"~0.2.0","graceful-fs":"~2.0.3"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"94e8357912828997caf24be48d074a6a8310cbe9","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.8.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"b852d06c251fa5e7aa74fdc47deafd7c752e5716","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.8.1":{"_id":"enhanced-resolve@0.8.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.8.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"test":"mocha --reporter spec","cover":"istanbul cover node_modules/mocha/bin/_mocha -- -R spec"},"directories":{},"devDependencies":{"istanbul":"^0.3.5","mocha":"^2.1.0","should":"^4.6.0"},"dependencies":{"tapable":"^0.1.8","memory-fs":"^0.2.0","graceful-fs":"^3.0.5"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"2ba0ce61764c2e5bf7d40f7cc376bd8f14e3ac68","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.8.1.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"1cf14609f83b0359f8acca9e0830cce1e9dc16ee","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.8.2":{"_id":"enhanced-resolve@0.8.2","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.8.2","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"test":"mocha --reporter spec","cover":"istanbul cover node_modules/mocha/bin/_mocha -- -R spec"},"directories":{},"devDependencies":{"istanbul":"^0.3.5","mocha":"^2.1.0","should":"^4.6.0"},"dependencies":{"tapable":"^0.1.8","memory-fs":"^0.2.0","graceful-fs":"^3.0.5"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"57d007c18f0a97c369e81bc28a5992419466be5e","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.8.2.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"7e8bdbb2d7b8dfde9a73dde75e9b704f5bbed289","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.8.3":{"_id":"enhanced-resolve@0.8.3","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.8.3","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"test":"mocha --reporter spec","cover":"istanbul cover node_modules/mocha/bin/_mocha -- -R spec"},"directories":{},"devDependencies":{"istanbul":"^0.3.5","mocha":"^2.1.0","should":"^4.6.0"},"dependencies":{"tapable":"^0.1.8","memory-fs":"^0.2.0","graceful-fs":"^3.0.5"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"00e1a46a499379b2022c29516131d7246b8f60f1","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.8.3.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"15b03acff116507901286f06fead7d4865f45eb8","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.8.4":{"_id":"enhanced-resolve@0.8.4","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.8.4","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"test":"mocha --reporter spec","cover":"istanbul cover node_modules/mocha/bin/_mocha -- -R spec"},"directories":{},"devDependencies":{"istanbul":"^0.3.5","mocha":"^2.1.0","should":"^4.6.0"},"dependencies":{"tapable":"^0.1.8","memory-fs":"^0.2.0","graceful-fs":"^3.0.5"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"4dae8ed556e5312256a9dd317919478e904b5387","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.8.4.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"03eb8dbc4e95c010ba4e0c80484e40aa2408a33e","_from":".","_npmVersion":"1.4.23","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.8.5":{"_id":"enhanced-resolve@0.8.5","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.8.5","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"test":"mocha --reporter spec","cover":"istanbul cover node_modules/mocha/bin/_mocha -- -R spec"},"directories":{},"devDependencies":{"istanbul":"^0.3.5","mocha":"^2.1.0","should":"^4.6.0"},"dependencies":{"tapable":"^0.1.8","memory-fs":"^0.2.0","graceful-fs":"^3.0.5"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"cf0a05c2d186969e1681963e59593ffdd8a4362c","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.8.5.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"8a25d8830ceb0c86c26654a334d47a357f5173ed","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.2","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.8.6":{"_id":"enhanced-resolve@0.8.6","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.8.6","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"test":"mocha --reporter spec","cover":"istanbul cover node_modules/mocha/bin/_mocha -- -R spec"},"directories":{},"devDependencies":{"istanbul":"^0.3.5","mocha":"^2.1.0","should":"^4.6.0"},"dependencies":{"tapable":"^0.1.8","memory-fs":"^0.2.0","graceful-fs":"^3.0.5"},"engines":{"node":">=0.6"},"main":"lib/node.js","dist":{"shasum":"0806a6b643949aa79f879e5adc6db8bb2b77f35f","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.8.6.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"3b88905ad3cb6392f48f7bc57d351891774fd93b","_from":".","_npmVersion":"2.9.0","_nodeVersion":"0.12.2","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.9.0":{"_id":"enhanced-resolve@0.9.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.9.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"test":"mocha --reporter spec","cover":"istanbul cover node_modules/mocha/bin/_mocha -- -R spec"},"directories":{},"devDependencies":{"istanbul":"^0.3.5","mocha":"^2.1.0","should":"^4.6.0"},"dependencies":{"tapable":"^0.1.8","memory-fs":"^0.2.0","graceful-fs":"^3.0.5"},"engines":{"node":">=0.6"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"2354591f240649669f830e33ec5c3f2e5d80d400","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.9.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"c974fba5699ff287774408edd734a4029ed43050","_from":".","_npmVersion":"2.10.1","_nodeVersion":"0.12.4","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"0.9.1":{"_id":"enhanced-resolve@0.9.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"0.9.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"test":"mocha --reporter spec","cover":"istanbul cover node_modules/mocha/bin/_mocha -- -R spec"},"directories":{},"devDependencies":{"istanbul":"^0.3.5","mocha":"^2.1.0","should":"^4.6.0"},"dependencies":{"tapable":"^0.1.8","memory-fs":"^0.2.0","graceful-fs":"^4.1.2"},"engines":{"node":">=0.6"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"4d6e689b3725f86090927ccc86cd9f1635b89e2e","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-0.9.1.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"1d14a6debbe4054f84d7d7f870ca0a1cb963f75b","_from":".","_npmVersion":"3.3.3","_nodeVersion":"4.0.0","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"2.0.0":{"_id":"enhanced-resolve@2.0.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"2.0.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --reporter spec","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha -- -R spec"},"directories":{},"devDependencies":{"eslint":"^1.1.0","eslint-plugin-nodeca":"^1.0.3","beautify-lint":"^1.0.3","istanbul":"^0.3.5","js-beautify":"^1.5.10","mocha":"^2.1.0","should":"^4.6.0"},"dependencies":{"tapable":"^0.1.8","memory-fs":"^0.2.0","graceful-fs":"^4.1.2","object-assign":"^4.0.1"},"engines":{"node":">=0.6"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"5984076290a36df1f9d5f6dabd4fc425816c8436","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-2.0.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"41569fcaa1c5229c2949907f3ffef39746dfdc57","_from":".","_npmVersion":"2.10.1","_nodeVersion":"0.12.4","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"2.0.1":{"_id":"enhanced-resolve@2.0.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"2.0.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --reporter spec","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha -- -R spec"},"directories":{},"devDependencies":{"eslint":"^1.1.0","eslint-plugin-nodeca":"^1.0.3","beautify-lint":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"tapable":"^0.2.2","memory-fs":"^0.3.0","graceful-fs":"^4.1.2","object-assign":"^4.0.1"},"engines":{"node":">=0.6"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"b554140e14531448469b58260c518e7ec87b1c23","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-2.0.1.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"e24f2e31abd6352928a3e3a38f2e3e6ff831c4f1","_from":".","_npmVersion":"2.10.1","_nodeVersion":"0.12.4","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"2.0.2":{"_id":"enhanced-resolve@2.0.2","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"2.0.2","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^1.1.0","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"tapable":"^0.2.2","memory-fs":"^0.3.0","graceful-fs":"^4.1.2","object-assign":"^4.0.1"},"engines":{"node":">=0.6"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"dd6f715770123d55ea372eba5d4cd0af69757859","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-2.0.2.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"437211bebb54e18f0ccfbd9ef9db5106c40be96a","_from":".","_npmVersion":"2.10.1","_nodeVersion":"0.12.4","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"2.1.0":{"_id":"enhanced-resolve@2.1.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"2.1.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^1.1.0","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"tapable":"^0.2.3","memory-fs":"^0.3.0","graceful-fs":"^4.1.2","object-assign":"^4.0.1"},"engines":{"node":">=0.6"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"e630d78d969106f7a41b2c1f601ddf1550b1a5de","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-2.1.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"a576289820fadedfd2d96efd828dd7a781d8d0f9","_from":".","_npmVersion":"3.3.3","_nodeVersion":"5.4.1","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"2.2.0":{"_id":"enhanced-resolve@2.2.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"2.2.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^1.1.0","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"tapable":"^0.2.3","memory-fs":"^0.3.0","graceful-fs":"^4.1.2","object-assign":"^4.0.1"},"engines":{"node":">=0.6"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"569f117a0e28b1cd1273874d7d5f4b9a20357432","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-2.2.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"003577d5247fb9550d68efb79f6f492090603393","_from":".","_npmVersion":"3.3.3","_nodeVersion":"5.4.1","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"2.2.1":{"_id":"enhanced-resolve@2.2.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"2.2.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^1.1.0","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"tapable":"^0.2.3","memory-fs":"^0.3.0","graceful-fs":"^4.1.2","object-assign":"^4.0.1"},"engines":{"node":">=0.6"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"74fe93fe62b21a10d696886b1c3f0689e2db2277","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-2.2.1.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"b3e41d040387534049b87c5ca4d4826929efd5c1","_from":".","_npmVersion":"3.3.3","_nodeVersion":"5.4.1","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}]},"2.2.2":{"_id":"enhanced-resolve@2.2.2","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"2.2.2","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^1.1.0","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"tapable":"^0.2.3","memory-fs":"^0.3.0","graceful-fs":"^4.1.2","object-assign":"^4.0.1"},"engines":{"node":">=0.6"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"4da494d591183308bd46a95f5b40e255dc9d4a16","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-2.2.2.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"d154f01b6f74b90f3ac3c5ea6cca89abead5236c","_from":".","_npmVersion":"2.10.1","_nodeVersion":"0.12.4","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-6-west.internal.npmjs.com","tmp":"tmp/enhanced-resolve-2.2.2.tgz_1454625150655_0.08377046603709459"}},"2.3.0":{"_id":"enhanced-resolve@2.3.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"2.3.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^1.1.0","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"tapable":"^0.2.3","memory-fs":"^0.3.0","graceful-fs":"^4.1.2","object-assign":"^4.0.1"},"engines":{"node":">=0.6"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"a115c32504b6302e85a76269d7a57ccdd962e359","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-2.3.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"7df23d64da27cd76b09046f9b9ffd61480c0ddca","_from":".","_npmVersion":"3.3.3","_nodeVersion":"6.3.1","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/enhanced-resolve-2.3.0.tgz_1473264488493_0.4070103398989886"}},"3.0.0":{"_id":"enhanced-resolve@3.0.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"3.0.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^1.1.0","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"tapable":"^0.2.5","memory-fs":"^0.4.0","graceful-fs":"^4.1.2","object-assign":"^4.0.1"},"engines":{"node":">=0.6"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"cf30a6600bc236a4fcef627bb8e5adf072511a8e","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-3.0.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"9bc2f27eea8f638cfd647feb3204b4f62a8185a0","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/enhanced-resolve-3.0.0.tgz_1481045782427_0.4686593187507242"}},"3.0.1":{"_id":"enhanced-resolve@3.0.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"3.0.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^1.1.0","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"tapable":"^0.2.5","memory-fs":"^0.4.0","graceful-fs":"^4.1.2","object-assign":"^4.0.1"},"engines":{"node":">=0.6"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"4df07e42d444fd698876f0feae55f7b992012ea3","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-3.0.1.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"08ac17f39aced687bfd3c154e952076eb80003c3","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/enhanced-resolve-3.0.1.tgz_1481717808253_0.07748457370325923"}},"3.0.2":{"_id":"enhanced-resolve@3.0.2","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"3.0.2","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^1.1.0","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"tapable":"^0.2.5","memory-fs":"^0.4.0","graceful-fs":"^4.1.2","object-assign":"^4.0.1"},"engines":{"node":">=0.6"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"0fa709f29e59ee23e6bbcb070c85f992d6247cd1","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-3.0.2.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"3d112c831e1aba5c8fad4846df9a13e7a2df6ec7","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/enhanced-resolve-3.0.2.tgz_1481845643602_0.8817655239254236"}},"3.0.3":{"_id":"enhanced-resolve@3.0.3","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"3.0.3","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^1.1.0","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"tapable":"^0.2.5","memory-fs":"^0.4.0","graceful-fs":"^4.1.2","object-assign":"^4.0.1"},"engines":{"node":">=0.6"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"df14c06b5fc5eecade1094c9c5a12b4b3edc0b62","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-3.0.3.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"12ef0c4e8772f6787a5447bbddfaae58f83d39f2","_from":".","_npmVersion":"3.10.8","_nodeVersion":"6.9.1","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/enhanced-resolve-3.0.3.tgz_1484129345522_0.14447376737371087"}},"3.1.0":{"_id":"enhanced-resolve@3.1.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"3.1.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^3.14.1","eslint-plugin-node":"^3.0.5","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"graceful-fs":"^4.1.2","memory-fs":"^0.4.0","object-assign":"^4.0.1","tapable":"^0.2.5"},"engines":{"node":">=4.3.0 <5.0.0 || >=5.10"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"9f4b626f577245edcf4b2ad83d86e17f4f421dec","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-3.1.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"e9befd061078834e7d6a4fe4353ff4e45756039e","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/enhanced-resolve-3.1.0.tgz_1486122417999_0.9443127282429487"}},"3.2.0":{"_id":"enhanced-resolve@3.2.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"3.2.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^3.14.1","eslint-plugin-node":"^3.0.5","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"graceful-fs":"^4.1.2","memory-fs":"^0.4.0","object-assign":"^4.0.1","tapable":"^0.2.5"},"engines":{"node":">=4.3.0 <5.0.0 || >=5.10"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"7b60300c98e155a9caa06bf4550ec010bf74f6f8","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-3.2.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"311f4fe9db6ad43b57c6c62c2e25316c589d6c5c","_npmVersion":"5.0.4","_nodeVersion":"6.11.0","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve-3.2.0.tgz_1498911177672_0.4523597196675837"}},"3.3.0":{"_id":"enhanced-resolve@3.3.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"3.3.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^3.14.1","eslint-plugin-node":"^3.0.5","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"graceful-fs":"^4.1.2","memory-fs":"^0.4.0","object-assign":"^4.0.1","tapable":"^0.2.5"},"engines":{"node":">=4.3.0 <5.0.0 || >=5.10"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"950964ecc7f0332a42321b673b38dc8ff15535b3","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-3.3.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"87b7bbb4f17a3287c44ebc16f10552089e4d0383","_npmVersion":"5.0.4","_nodeVersion":"6.11.0","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve-3.3.0.tgz_1498921673457_0.8890228546224535"}},"3.4.0":{"_id":"enhanced-resolve@3.4.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"3.4.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^3.14.1","eslint-plugin-node":"^3.0.5","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"graceful-fs":"^4.1.2","memory-fs":"^0.4.0","object-assign":"^4.0.1","tapable":"^0.2.7"},"engines":{"node":">=4.3.0 <5.0.0 || >=5.10"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"039c09818871c86efcff7b4b69dbf6c9b18300a6","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-3.4.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"8cce0a4fc064730d380f39c697f2838953db24d2","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.11.1","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve-3.4.0.tgz_1500883380089_0.22926895576529205"}},"3.4.1":{"_id":"enhanced-resolve@3.4.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"3.4.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^3.14.1","eslint-plugin-node":"^3.0.5","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"graceful-fs":"^4.1.2","memory-fs":"^0.4.0","object-assign":"^4.0.1","tapable":"^0.2.7"},"engines":{"node":">=4.3.0 <5.0.0 || >=5.10"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"0421e339fd71419b3da13d129b3979040230476e","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-3.4.1.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"91752e92f0bb4c4384d2127a6d57d0dacb435bb3","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.11.1","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve-3.4.1.tgz_1500899671441_0.15842896839603782"}},"4.0.0-beta.1":{"_id":"enhanced-resolve@4.0.0-beta.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"4.0.0-beta.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^3.14.1","eslint-plugin-node":"^3.0.5","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"graceful-fs":"^4.1.2","memory-fs":"^0.4.0","tapable":"^1.0.0-beta.4"},"engines":{"node":">=4.3.0 <5.0.0 || >=5.10"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"f8257df604491e83eed7a3d20568fcd4c849c251","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-4.0.0-beta.1.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"46244b326bd61e53eca499d6bca9937731a568c7","_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve-4.0.0-beta.1.tgz_1511969350614_0.5967740998603404"}},"4.0.0-beta.2":{"_id":"enhanced-resolve@4.0.0-beta.2","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"4.0.0-beta.2","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^3.14.1","eslint-plugin-node":"^3.0.5","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"graceful-fs":"^4.1.2","memory-fs":"^0.4.0","tapable":"^1.0.0-beta.4"},"engines":{"node":">=4.3.0 <5.0.0 || >=5.10"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"a13a9da2340712c4f3dacf27e26717e2eae69c24","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-4.0.0-beta.2.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"ad472901c8c72de0e6f1af816bbddf42be94127d","_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve-4.0.0-beta.2.tgz_1512028387765_0.9725247025489807"}},"4.0.0-beta.3":{"_id":"enhanced-resolve@4.0.0-beta.3","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"4.0.0-beta.3","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^3.14.1","eslint-plugin-node":"^3.0.5","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"graceful-fs":"^4.1.2","memory-fs":"^0.4.0","tapable":"^1.0.0-beta.4"},"engines":{"node":">=4.3.0 <5.0.0 || >=5.10"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"e06b5964fc10e067370a7d7b2b52db64ccad607f","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-4.0.0-beta.3.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"685cfe7cc5551e688c4fc94ef3fe8a745d8abaa8","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve-4.0.0-beta.3.tgz_1515082378014_0.9996988002676517"}},"4.0.0-beta.4":{"_id":"enhanced-resolve@4.0.0-beta.4","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"4.0.0-beta.4","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^3.14.1","eslint-plugin-node":"^3.0.5","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"graceful-fs":"^4.1.2","memory-fs":"^0.4.0","tapable":"^1.0.0-beta.4"},"engines":{"node":">=4.3.0 <5.0.0 || >=5.10"},"files":["lib"],"main":"lib/node.js","dist":{"shasum":"17e14aea8ded4d6daa4a6bff67f2d38fcca76452","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-4.0.0-beta.4.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"a81e3c4ec734c0f02f71c456e6dbb3a9ff106032","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve-4.0.0-beta.4.tgz_1515095870877_0.8757257310207933"}},"4.0.0":{"_id":"enhanced-resolve@4.0.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"4.0.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":{},"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^3.14.1","eslint-plugin-node":"^3.0.5","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"graceful-fs":"^4.1.2","memory-fs":"^0.4.0","tapable":"^1.0.0"},"engines":{"node":">=6.11.5"},"files":["lib","LICENSE"],"main":"lib/node.js","dist":{"shasum":"e34a6eaa790f62fccd71d93959f56b2b432db10a","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-4.0.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"gitHead":"42ff594140582c3f8f86811f95dea7bf6774a1c8","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_4.0.0_1519286517726_0.40452979352109186"},"_hasShrinkwrap":false},"4.1.0":{"_id":"enhanced-resolve@4.1.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"4.1.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra","email":"","url":""},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"scripts":{"beautify-lint":"beautify-lint lib/**.js test/*.js","beautify":"beautify-rewrite lib/**.js test/*.js","lint":"eslint lib test","pretest":"npm run lint && npm run beautify-lint","test":"mocha --full-trace --check-leaks","precover":"npm run lint && npm run beautify-lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"directories":null,"devDependencies":{"beautify-lint":"^1.0.3","codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^3.14.1","eslint-plugin-node":"^3.0.5","eslint-plugin-nodeca":"^1.0.3","istanbul":"^0.4.1","js-beautify":"^1.5.10","mocha":"^2.3.4","should":"^8.0.2"},"dependencies":{"graceful-fs":"^4.1.2","memory-fs":"^0.4.0","tapable":"^1.0.0"},"engines":{"node":">=6.9.0"},"files":["lib","LICENSE"],"main":"lib/node.js","dist":{"shasum":"41c7e0bfdfe74ac1ffe1e57ad6a5c6c9f3742a7f","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-4.1.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}]},"4.1.1":{"_id":"enhanced-resolve@4.1.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"4.1.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"lint":"eslint lib test","pretty":"prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"yarn cover --report lcovonly"},"directories":{},"devDependencies":{"codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^5.9.0","eslint-config-prettier":"^3.3.0","eslint-plugin-node":"^8.0.0","eslint-plugin-prettier":"^3.0.0","husky":"^1.2.0","istanbul":"^0.4.1","lint-staged":"^8.1.0","mocha":"^2.3.4","prettier":"^1.15.2","should":"^8.0.2"},"dependencies":{"graceful-fs":"^4.1.2","memory-fs":"^0.5.0","tapable":"^1.0.0"},"engines":{"node":">=6.9.0"},"main":"lib/node.js","dist":{"shasum":"2937e2b8066cd0fe7ce0990a98f0d71a35189f66","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-4.1.1.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"gitHead":"98825ba306fd3f31ffaca63d6bb2ad001007cad2","_nodeVersion":"12.4.0","_npmVersion":"6.9.0","maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_4.1.1_1570538094357_0.7941006267070527"},"_hasShrinkwrap":false},"4.2.0":{"_id":"enhanced-resolve@4.2.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"4.2.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"lint":"eslint lib test","pretty":"prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"yarn cover --report lcovonly"},"directories":{},"devDependencies":{"codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^5.9.0","eslint-config-prettier":"^3.3.0","eslint-plugin-node":"^8.0.0","eslint-plugin-prettier":"^3.0.0","husky":"^1.2.0","istanbul":"^0.4.1","lint-staged":"^8.1.0","mocha":"^2.3.4","prettier":"^1.15.2","should":"^8.0.2"},"dependencies":{"graceful-fs":"^4.1.2","memory-fs":"^0.5.0","tapable":"^1.0.0"},"engines":{"node":">=6.9.0"},"main":"lib/node.js","dist":{"shasum":"5d43bda4a0fd447cb0ebbe71bef8deff8805ad0d","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-4.2.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"gitHead":"00a347d8bcf60ea296c1245e23052f1987c3687d","_nodeVersion":"14.3.0","_npmVersion":"6.14.5","maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_4.2.0_1592259496227_0.17945711883834026"},"_hasShrinkwrap":false},"4.3.0":{"_id":"enhanced-resolve@4.3.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"4.3.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"lint":"eslint lib test","pretty":"prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"yarn cover --report lcovonly"},"directories":{},"devDependencies":{"codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^5.9.0","eslint-config-prettier":"^3.3.0","eslint-plugin-node":"^8.0.0","eslint-plugin-prettier":"^3.0.0","husky":"^1.2.0","istanbul":"^0.4.1","lint-staged":"^8.1.0","mocha":"^2.3.4","prettier":"^1.15.2","should":"^8.0.2"},"dependencies":{"graceful-fs":"^4.1.2","memory-fs":"^0.5.0","tapable":"^1.0.0"},"engines":{"node":">=6.9.0"},"main":"lib/node.js","dist":{"shasum":"3b806f3bfafc1ec7de69551ef93cca46c1704126","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-4.3.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"gitHead":"e08f93671c59faca76ab2726faf0ca1e4bddbfa5","_nodeVersion":"12.18.2","_npmVersion":"6.14.5","maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_4.3.0_1594805486254_0.06428024845041014"},"_hasShrinkwrap":false},"4.4.0":{"_id":"enhanced-resolve@4.4.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"4.4.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"lint":"eslint lib test","pretty":"prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"yarn cover --report lcovonly"},"directories":{},"devDependencies":{"codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^5.9.0","eslint-config-prettier":"^3.3.0","eslint-plugin-node":"^8.0.0","eslint-plugin-prettier":"^3.0.0","husky":"^1.2.0","istanbul":"^0.4.1","lint-staged":"^8.1.0","mocha":"^2.3.4","prettier":"^1.15.2","should":"^8.0.2"},"dependencies":{"graceful-fs":"^4.1.2","memory-fs":"^0.5.0","tapable":"^1.0.0"},"engines":{"node":">=6.9.0"},"main":"lib/node.js","dist":{"shasum":"0bcd254f2042d18ab61e937f8ae849b76961c5ec","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-4.4.0.tgz"},"readme":"# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n* plugin system\n* provide a custom filesystem\n* sync and async node.js filesystems included\n\n\n## Getting Started\n### Install\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Creating a Resolver\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n```js\nconst {\n  NodeJsInputFileSystem,\n  CachedInputFileSystem,\n  ResolverFactory\n} = require('enhanced-resolve');\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n  // Typical usage will consume the `NodeJsInputFileSystem` + `CachedInputFileSystem`, which wraps the Node.js `fs` wrapper to add resilience + caching.\n  fileSystem: new CachedInputFileSystem(new NodeJsInputFileSystem(), 4000),\n  extensions: ['.js', '.json']\n  /* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = '/Users/webpack/some/root/dir';\nconst request = './path/to-look-up.js';\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (err/*Error*/, filepath/*string*/) => {\n  // Do something with the path\n});\n```\n\nFor more examples creating different types resolvers (sync/async, context, etc) see `lib/node.js`.\n#### Resolver Options\n| Field                    | Default                     | Description                                                                        |\n| ------------------------ | --------------------------- | ---------------------------------------------------------------------------------- |\n| alias                    | []                          | A list of module alias configurations or an object which maps key to value |\n| aliasFields              | []                          | A list of alias fields in description files |\n| cacheWithContext         | true                        | If unsafe cache is enabled, includes `request.context` in the cache key  |\n| descriptionFiles         | [\"package.json\"]            | A list of description files to read from |\n| enforceExtension         | false                       | Enforce that a extension from extensions must be used |\n| enforceModuleExtension   | false                       | Enforce that a extension from moduleExtensions must be used |\n| extensions               | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files |\n| mainFields               | [\"main\"]                    | A list of main fields in description files |\n| mainFiles                | [\"index\"]                   | A list of main files in directories |\n| modules                  | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name |\n| roots                    | []                          | A list of directories to resolve request starting with `/` from |\n| ignoreRootsErrors        | false                       | Ignore fatal errors happening during handling of `roots` (allows to add `roots` without a breaking change) |\n| unsafeCache              | false                       | Use this cache object to unsafely cache the successful requests |\n| plugins                  | []                          | A list of additional resolve plugins which should be applied |\n| symlinks                 | true                        | Whether to resolve symlinks to their symlinked location |\n| cachePredicate           | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties. |\n| moduleExtensions         | []                          | A list of module extensions which should be tried for modules |\n| resolveToContext         | false                       | Resolve to a context instead of a file |\n| restrictions             | []                          | A list of resolve restrictions |\n| fileSystem               |                             | The file system which should be used |\n| resolver                 | undefined                   | A prepared Resolver to which the plugins are attached |\n\n## Plugins\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`Tapable`](https://github.com/webpack/tapable). These plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n```js\nclass MyResolverPlugin {\n  constructor(source, target) {\n    this.source = source;\n    this.target = target;\n  }\n\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n      // Any logic you need to create a new `request` can go here\n      resolver.doResolve(target, request, null, resolveContext, callback);\n    });\n  }\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n``` javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n\n## Passing options from webpack\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['', '.js', '.jsx'],\n  modules: ['src', 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2016 Tobias Koppers\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"readmeFilename":"README.md","gitHead":"d2bd61ac1d890db19d98d39c390d2db14652c4b3","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_4.4.0_1610365611616_0.22429020674159994"},"_hasShrinkwrap":false},"4.5.0":{"_id":"enhanced-resolve@4.5.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"4.5.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra","email":"","url":""},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"scripts":{"lint":"eslint lib test","pretty":"prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"yarn cover --report lcovonly"},"directories":null,"devDependencies":{"codecov.io":"^0.1.6","coveralls":"^2.11.6","eslint":"^5.9.0","eslint-config-prettier":"^3.3.0","eslint-plugin-node":"^8.0.0","eslint-plugin-prettier":"^3.0.0","husky":"^1.2.0","istanbul":"^0.4.1","lint-staged":"^8.1.0","mocha":"^2.3.4","prettier":"^1.15.2","should":"^8.0.2"},"dependencies":{"graceful-fs":"^4.1.2","memory-fs":"^0.5.0","tapable":"^1.0.0"},"engines":{"node":">=6.9.0"},"files":["lib","LICENSE"],"main":"lib/node.js","dist":{"shasum":"2f3cfd84dbe3b487f18f2db2ef1e064a571ca5ec","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-4.5.0.tgz"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]}},"5.0.0-beta.0":{"_id":"enhanced-resolve@5.0.0-beta.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.0.0-beta.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"lint":"eslint lib test","pretty":"prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"eslint":"^5.9.0","eslint-config-prettier":"^3.3.0","eslint-plugin-node":"^8.0.0","eslint-plugin-prettier":"^3.0.0","husky":"^1.2.0","lint-staged":"^8.1.0","memfs":"^2.15.4","mocha":"^6.1.4","nyc":"^14.1.1","prettier":"^1.15.2","should":"^8.0.2"},"dependencies":{"graceful-fs":"^4.2.0","tapable":"^2.0.0-beta"},"engines":{"node":">=8.9.0"},"main":"lib/node.js","dist":{"shasum":"7635594f4f38a515ba3a5a93498556828964d3ac","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.0.tgz"},"readme":"# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                   |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                    |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                   |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                       |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                      |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                         |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                          |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                    |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                           |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                            |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                               |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                  |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                       |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties. |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                        |\n| fileSystem       |                             | The file system which should be used                                                                                                          |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                         |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"readmeFilename":"README.md","gitHead":"322963c8b6cff96594d2b057180016fd89b1af35","_nodeVersion":"12.4.0","_npmVersion":"6.9.0","maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.0.0-beta.0_1562273291778_0.9235238103780381"},"_hasShrinkwrap":false},"5.0.0-beta.1":{"_id":"enhanced-resolve@5.0.0-beta.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.0.0-beta.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"lint":"eslint lib test","pretty":"prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"eslint":"^5.9.0","eslint-config-prettier":"^3.3.0","eslint-plugin-node":"^8.0.0","eslint-plugin-prettier":"^3.0.0","husky":"^1.2.0","lint-staged":"^8.1.0","memfs":"^2.15.4","mocha":"^6.1.4","nyc":"^14.1.1","prettier":"^1.15.2","should":"^8.0.2"},"dependencies":{"graceful-fs":"^4.2.0","tapable":"^2.0.0-beta"},"engines":{"node":">=8.9.0"},"main":"lib/node.js","dist":{"shasum":"600c242ec84a31f7198e165ea08143eef2cc3a04","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.1.tgz"},"readme":"# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                   |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                    |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                   |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                       |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                      |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                         |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                          |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                    |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                           |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                            |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                               |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                  |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                       |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties. |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                        |\n| fileSystem       |                             | The file system which should be used                                                                                                          |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                         |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"readmeFilename":"README.md","gitHead":"c3eb2fceee546470df436eff8b726a0601f1706a","_nodeVersion":"12.4.0","_npmVersion":"6.9.0","maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.0.0-beta.1_1562595555512_0.11159144361801832"},"_hasShrinkwrap":false},"5.0.0-beta.2":{"_id":"enhanced-resolve@5.0.0-beta.2","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.0.0-beta.2","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"lint":"eslint lib test && tsc","pretty":"prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"@types/mocha":"^5.2.7","@types/node":"^10.12.21","eslint":"^5.9.0","eslint-config-prettier":"^3.3.0","eslint-plugin-jsdoc":"^15.2.0","eslint-plugin-node":"^8.0.0","eslint-plugin-prettier":"^3.0.0","husky":"^1.2.0","lint-staged":"^8.1.0","memfs":"^2.15.4","mocha":"^6.1.4","nyc":"^14.1.1","prettier":"^1.15.2","should":"^13.2.3","typescript":"^3.5.2"},"dependencies":{"graceful-fs":"^4.2.0","tapable":"^2.0.0-beta.8"},"engines":{"node":">=8.9.0"},"main":"lib/node.js","dist":{"shasum":"9dfd00b7d73e7d6e0acab9e1f54241a557edbe8d","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.2.tgz"},"readme":"# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                   |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                    |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                   |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                       |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                      |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                         |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                          |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                    |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                           |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                            |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                               |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                  |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                       |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties. |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                        |\n| fileSystem       |                             | The file system which should be used                                                                                                          |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                         |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"readmeFilename":"README.md","gitHead":"1b63dfb4e912d326afa5a3fffafcec71a6ea7afb","_nodeVersion":"12.4.0","_npmVersion":"6.9.0","maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.0.0-beta.2_1562690163013_0.04001123090124614"},"_hasShrinkwrap":false},"5.0.0-beta.3":{"_id":"enhanced-resolve@5.0.0-beta.3","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.0.0-beta.3","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"lint":"eslint lib test && tsc","pretty":"prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"@types/mocha":"^5.2.7","@types/node":"^10.12.21","eslint":"^5.9.0","eslint-config-prettier":"^3.3.0","eslint-plugin-jsdoc":"^15.2.0","eslint-plugin-node":"^8.0.0","eslint-plugin-prettier":"^3.0.0","husky":"^1.2.0","lint-staged":"^8.1.0","memfs":"^2.15.4","mocha":"^6.1.4","nyc":"^14.1.1","prettier":"^1.15.2","should":"^13.2.3","typescript":"^3.5.2"},"dependencies":{"graceful-fs":"^4.2.0","tapable":"^2.0.0-beta.8"},"engines":{"node":">=8.9.0"},"main":"lib/node.js","dist":{"shasum":"1f5b24d223db90a2e86235c365e337fcbf28a68b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.3.tgz"},"readme":"# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                   |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                    |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                   |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                       |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                      |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                         |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                          |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                    |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                           |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                            |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                               |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                  |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                       |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties. |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                        |\n| fileSystem       |                             | The file system which should be used                                                                                                          |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                         |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"readmeFilename":"README.md","gitHead":"c01f7497df5caa898dde36b89ec1a7fb3cca31d1","_nodeVersion":"12.8.0","_npmVersion":"6.10.2","maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.0.0-beta.3_1565948564447_0.7563140388639931"},"_hasShrinkwrap":false},"5.0.0-beta.4":{"_id":"enhanced-resolve@5.0.0-beta.4","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.0.0-beta.4","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"scripts":{"lint":"eslint lib test && tsc","pretty":"prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"@types/mocha":"^5.2.7","@types/node":"^10.12.21","eslint":"^5.9.0","eslint-config-prettier":"^3.3.0","eslint-plugin-jsdoc":"^15.2.0","eslint-plugin-node":"^8.0.0","eslint-plugin-prettier":"^3.0.0","husky":"^1.2.0","lint-staged":"^8.1.0","memfs":"^2.15.4","mocha":"^6.1.4","nyc":"^14.1.1","prettier":"^1.15.2","should":"^13.2.3","typescript":"^3.5.2"},"dependencies":{"graceful-fs":"^4.2.0","tapable":"^2.0.0-beta.8"},"engines":{"node":">=8.9.0"},"main":"lib/node.js","dist":{"shasum":"a14a799c098c2c43ec2cd0b718b14a2eadec7301","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.4.tgz"},"readme":"# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                   |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                    |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                   |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                       |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                      |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                         |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                          |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                    |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                           |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                            |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                               |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                  |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                       |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties. |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                        |\n| fileSystem       |                             | The file system which should be used                                                                                                          |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                         |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"readmeFilename":"README.md","gitHead":"95a59e3facb5b1f0e5f72a2d19e4fb6e7cf8816c","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.0.0-beta.4_1572991206242_0.1531285229102135"},"_hasShrinkwrap":false},"5.0.0-beta.5":{"_id":"enhanced-resolve@5.0.0-beta.5","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.0.0-beta.5","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"@types/mocha":"^7.0.2","@types/node":"^13.7.7","eslint":"^6.8.0","eslint-config-prettier":"^6.10.0","eslint-plugin-jsdoc":"^22.0.0","eslint-plugin-node":"^11.0.0","eslint-plugin-prettier":"^3.1.2","husky":"^1.2.0","lint-staged":"^8.1.0","memfs":"^2.15.4","mocha":"^7.1.0","nyc":"^14.1.1","prettier":"^1.15.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.6.0","typescript":"^3.8.3"},"dependencies":{"graceful-fs":"^4.2.0","tapable":"^2.0.0-beta.10"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"f0747982711bc2d823e768d68f00e421ea5f86ae","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.5.tgz"},"readme":"# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                   |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                    |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                   |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                       |\n| conditionNames   | [\"node\"]                    | A list of exports field condition names                                                                                                       |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                      |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                         |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                          |\n| exportsFields    | [\"exports\"]                 | A list of exports fields in description files                                                                                                 |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                    |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                           |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                            |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                               |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                  |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                       |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties. |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                        |\n| fileSystem       |                             | The file system which should be used                                                                                                          |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                         |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n","types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"readmeFilename":"README.md","gitHead":"3ad1fd02760bae692ea510d0f23f7696d5bf02d1","_nodeVersion":"14.0.0","_npmVersion":"6.14.4","maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.0.0-beta.5_1590177621166_0.9760911263407595"},"_hasShrinkwrap":false},"5.0.0-beta.6":{"_id":"enhanced-resolve@5.0.0-beta.6","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.0.0-beta.6","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"@types/mocha":"^7.0.2","@types/node":"^13.7.7","eslint":"^6.8.0","eslint-config-prettier":"^6.10.0","eslint-plugin-jsdoc":"^22.0.0","eslint-plugin-node":"^11.0.0","eslint-plugin-prettier":"^3.1.2","husky":"^1.2.0","lint-staged":"^8.1.0","memfs":"^2.15.4","mocha":"^7.1.0","nyc":"^14.1.1","prettier":"^1.15.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.6.0","typescript":"^3.8.3"},"dependencies":{"graceful-fs":"^4.2.0","tapable":"^2.0.0-beta.10"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"1606b86002f34e4eb82e5299df06722efafa6fb4","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.6.tgz"},"readme":"# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                   |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                    |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                   |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                       |\n| conditionNames   | [\"node\"]                    | A list of exports field condition names                                                                                                       |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                      |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                         |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                          |\n| exportsFields    | [\"exports\"]                 | A list of exports fields in description files                                                                                                 |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                    |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                           |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                            |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                               |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                  |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                       |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties. |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                        |\n| restrictions     | []                          | A list of resolve restrictions                                                                                                                |\n| fileSystem       |                             | The file system which should be used                                                                                                          |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                         |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n","types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"readmeFilename":"README.md","gitHead":"cf930fea3f3c95792e55b206e1477a8bb15fbaa1","_npmVersion":"6.4.1","_nodeVersion":"10.13.0","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.0.0-beta.6_1591173270674_0.1414362806402807"},"_hasShrinkwrap":false},"5.0.0-beta.7":{"_id":"enhanced-resolve@5.0.0-beta.7","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.0.0-beta.7","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"@types/mocha":"^7.0.2","@types/node":"^13.7.7","eslint":"^6.8.0","eslint-config-prettier":"^6.10.0","eslint-plugin-jsdoc":"^22.0.0","eslint-plugin-node":"^11.0.0","eslint-plugin-prettier":"^3.1.2","husky":"^1.2.0","lint-staged":"^8.1.0","memfs":"^2.15.4","mocha":"^7.1.0","nyc":"^14.1.1","prettier":"^1.15.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.6.0","typescript":"^3.8.3"},"dependencies":{"graceful-fs":"^4.2.0","tapable":"^2.0.0-beta.10"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"174f085396ac8edc734253f5b6aa9a05cb0d73b2","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.7.tgz"},"readme":"# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                   |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                    |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                   |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                       |\n| conditionNames   | [\"node\"]                    | A list of exports field condition names                                                                                                       |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                      |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                         |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                          |\n| exportsFields    | [\"exports\"]                 | A list of exports fields in description files                                                                                                 |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                    |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                           |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                            |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                               |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                  |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                       |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties. |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                        |\n| restrictions     | []                          | A list of resolve restrictions                                                                                                                |\n| fileSystem       |                             | The file system which should be used                                                                                                          |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                         |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n","types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"readmeFilename":"README.md","gitHead":"9b54561c64378c5e992cfea00832fa59295129ae","_nodeVersion":"14.3.0","_npmVersion":"6.14.5","maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.0.0-beta.7_1592388927101_0.7378176644804126"},"_hasShrinkwrap":false},"5.0.0-beta.8":{"_id":"enhanced-resolve@5.0.0-beta.8","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.0.0-beta.8","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"@types/mocha":"^7.0.2","@types/node":"^13.7.7","eslint":"^6.8.0","eslint-config-prettier":"^6.10.0","eslint-plugin-jsdoc":"^22.0.0","eslint-plugin-node":"^11.0.0","eslint-plugin-prettier":"^3.1.2","husky":"^1.2.0","lint-staged":"^8.1.0","memfs":"^2.15.4","mocha":"^7.1.0","nyc":"^14.1.1","prettier":"^1.15.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.6.0","typescript":"^3.8.3"},"dependencies":{"graceful-fs":"^4.2.0","tapable":"^2.0.0-beta.10"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"f399920cb9f73350e61ab10bf2c7f36c37dbf032","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.8.tgz"},"readme":"# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                   |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                    |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                   |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                       |\n| conditionNames   | [\"node\"]                    | A list of exports field condition names                                                                                                       |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                      |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                         |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                          |\n| exportsFields    | [\"exports\"]                 | A list of exports fields in description files                                                                                                 |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                    |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                           |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                            |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                               |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                  |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                       |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties. |\n| roots            | []                          | A list of root paths                                                                                                                          |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                        |\n| restrictions     | []                          | A list of resolve restrictions                                                                                                                |\n| fileSystem       |                             | The file system which should be used                                                                                                          |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                         |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n","types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"readmeFilename":"README.md","gitHead":"501df1b16181b2eb39d61a98d4574d3e49f1c4fc","_nodeVersion":"14.3.0","_npmVersion":"6.14.5","maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.0.0-beta.8_1594069250791_0.6200962266428656"},"_hasShrinkwrap":false},"5.0.0-beta.9":{"_id":"enhanced-resolve@5.0.0-beta.9","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.0.0-beta.9","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"@types/mocha":"^7.0.2","@types/node":"^13.7.7","eslint":"^6.8.0","eslint-config-prettier":"^6.10.0","eslint-plugin-jsdoc":"^22.0.0","eslint-plugin-node":"^11.0.0","eslint-plugin-prettier":"^3.1.2","husky":"^1.2.0","lint-staged":"^8.1.0","memfs":"^2.15.4","mocha":"^7.1.0","nyc":"^14.1.1","prettier":"^1.15.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.6.0","typescript":"^3.8.3"},"dependencies":{"graceful-fs":"^4.2.0","tapable":"^2.0.0-beta.10"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"a44e9ad9a0cf47591cc996daf0a30d83aaf54c2f","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.9.tgz"},"readme":"# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                               |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                                |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                               |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties.             |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                                   |\n| conditionNames   | [\"node\"]                    | A list of exports field condition names                                                                                                                   |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                                  |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                                     |\n| exportsFields    | [\"exports\"]                 | A list of exports fields in description files                                                                                                             |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                                      |\n| fileSystem       |                             | The file system which should be used                                                                                                                      |\n| fullySpecified   | false                       | Request passed to resolve is already fully specified and extensions or main files are not resolved for it (they are still resolved for internal requests) |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                                |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                                       |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                                        |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                              |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                                     |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                                    |\n| restrictions     | []                          | A list of resolve restrictions                                                                                                                            |\n| roots            | []                          | A list of root paths                                                                                                                                      |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                                   |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                                           |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n","types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"readmeFilename":"README.md","gitHead":"8992d74a288729cd74c758d337a0dff421d82fc7","_nodeVersion":"14.5.0","_npmVersion":"6.14.5","maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.0.0-beta.9_1594968267435_0.8357300358848814"},"_hasShrinkwrap":false},"5.0.0-beta.10":{"_id":"enhanced-resolve@5.0.0-beta.10","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.0.0-beta.10","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"@types/mocha":"^7.0.2","@types/node":"^13.7.7","eslint":"^6.8.0","eslint-config-prettier":"^6.10.0","eslint-plugin-jsdoc":"^22.0.0","eslint-plugin-node":"^11.0.0","eslint-plugin-prettier":"^3.1.2","husky":"^1.2.0","lint-staged":"^8.1.0","memfs":"^2.15.4","mocha":"^7.1.0","nyc":"^14.1.1","prettier":"^1.15.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.6.0","typescript":"^3.8.3"},"dependencies":{"graceful-fs":"^4.2.0","tapable":"^2.0.0-beta.10"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"3907c034f8e59446dfa5a89a1fd73db29aa0f246","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.10.tgz"},"readme":"# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                               |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                                |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                               |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties.             |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                                   |\n| conditionNames   | [\"node\"]                    | A list of exports field condition names                                                                                                                   |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                                  |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                                     |\n| exportsFields    | [\"exports\"]                 | A list of exports fields in description files                                                                                                             |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                                      |\n| fileSystem       |                             | The file system which should be used                                                                                                                      |\n| fullySpecified   | false                       | Request passed to resolve is already fully specified and extensions or main files are not resolved for it (they are still resolved for internal requests) |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                                |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                                       |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                                        |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                              |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                                     |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                                    |\n| restrictions     | []                          | A list of resolve restrictions                                                                                                                            |\n| roots            | []                          | A list of root paths                                                                                                                                      |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                                   |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                                           |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n","types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"readmeFilename":"README.md","gitHead":"84761ba8806fe7fb26e82f6b3b953f91045a79ef","_nodeVersion":"14.5.0","_npmVersion":"6.14.5","maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.0.0-beta.10_1594972169673_0.5855339080638984"},"_hasShrinkwrap":false},"5.0.0-beta.11":{"_id":"enhanced-resolve@5.0.0-beta.11","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.0.0-beta.11","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"@types/mocha":"^7.0.2","@types/node":"^13.7.7","eslint":"^6.8.0","eslint-config-prettier":"^6.10.0","eslint-plugin-jsdoc":"^22.0.0","eslint-plugin-node":"^11.0.0","eslint-plugin-prettier":"^3.1.2","husky":"^1.2.0","lint-staged":"^8.1.0","memfs":"^2.15.4","mocha":"^7.1.0","nyc":"^14.1.1","prettier":"^1.15.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.6.0","typescript":"^3.8.3"},"dependencies":{"graceful-fs":"^4.2.0","tapable":"^2.0.0-beta.10"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"f5885b17bca8e04feb42e7f22e8706cae3827e54","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.11.tgz"},"readme":"# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                               |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                                |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                               |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties.             |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                                   |\n| conditionNames   | [\"node\"]                    | A list of exports field condition names                                                                                                                   |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                                  |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                                     |\n| exportsFields    | [\"exports\"]                 | A list of exports fields in description files                                                                                                             |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                                      |\n| fileSystem       |                             | The file system which should be used                                                                                                                      |\n| fullySpecified   | false                       | Request passed to resolve is already fully specified and extensions or main files are not resolved for it (they are still resolved for internal requests) |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                                |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                                       |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                                        |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                              |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                                     |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                                    |\n| restrictions     | []                          | A list of resolve restrictions                                                                                                                            |\n| roots            | []                          | A list of root paths                                                                                                                                      |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                                   |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                                           |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n","types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"readmeFilename":"README.md","gitHead":"151150fb5a9e9f4a212794951c38bb9194830874","_nodeVersion":"14.9.0","_npmVersion":"6.14.8","maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.0.0-beta.11_1600184504774_0.5664054140777495"},"_hasShrinkwrap":false},"5.0.0-beta.12":{"_id":"enhanced-resolve@5.0.0-beta.12","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.0.0-beta.12","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"{lib,test}/**/*.{js,json}\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"@types/mocha":"^7.0.2","@types/node":"^13.7.7","eslint":"^6.8.0","eslint-config-prettier":"^6.10.0","eslint-plugin-jsdoc":"^22.0.0","eslint-plugin-node":"^11.0.0","eslint-plugin-prettier":"^3.1.2","husky":"^1.2.0","lint-staged":"^8.1.0","memfs":"^2.15.4","mocha":"^7.1.0","nyc":"^14.1.1","prettier":"^1.15.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.6.0","typescript":"^3.8.3"},"dependencies":{"graceful-fs":"^4.2.0","tapable":"^2.0.0-beta.10"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"ddc2eab710a5f973e1350fd3c0f721df550ec59b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.0.0-beta.12.tgz"},"readme":"# enhanced-resolve\n\nOffers an async require.resolve function. It's highly configurable.\n\n## Features\n\n- plugin system\n- provide a custom filesystem\n- sync and async node.js filesystems included\n\n## Getting Started\n\n### Install\n\n```sh\n# npm\nnpm install enhanced-resolve\n# or Yarn\nyarn add enhanced-resolve\n```\n\n### Resolve\n\nThere is a Node.js API which allows to resolve requests according to the Node.js resolving rules.\nSync and async APIs are offered. A `create` method allows to create a custom resolve function.\n\n```js\nconst resolve = require(\"enhanced-resolve\");\n\nresolve(\"/some/path/to/folder\", \"module/dir\", (err, result) => {\n\tresult; // === \"/some/path/node_modules/module/dir/index.js\"\n});\n\nresolve.sync(\"/some/path/to/folder\", \"../../dir\");\n// === \"/some/path/dir/index.js\"\n\nconst myResolve = resolve.create({\n\t// or resolve.create.sync\n\textensions: [\".ts\", \".js\"]\n\t// see more options below\n});\n\nmyResolve(\"/some/path/to/folder\", \"ts-module\", (err, result) => {\n\tresult; // === \"/some/node_modules/ts-module/index.ts\"\n});\n```\n\n### Creating a Resolver\n\nThe easiest way to create a resolver is to use the `createResolver` function on `ResolveFactory`, along with one of the supplied File System implementations.\n\n```js\nconst fs = require(\"fs\");\nconst { CachedInputFileSystem, ResolverFactory } = require(\"enhanced-resolve\");\n\n// create a resolver\nconst myResolver = ResolverFactory.createResolver({\n\t// Typical usage will consume the `fs` + `CachedInputFileSystem`, which wraps Node.js `fs` to add caching.\n\tfileSystem: new CachedInputFileSystem(fs, 4000),\n\textensions: [\".js\", \".json\"]\n\t/* any other resolver options here. Options/defaults can be seen below */\n});\n\n// resolve a file with the new resolver\nconst context = {};\nconst resolveContext = {};\nconst lookupStartPath = \"/Users/webpack/some/root/dir\";\nconst request = \"./path/to-look-up.js\";\nmyResolver.resolve({}, lookupStartPath, request, resolveContext, (\n\terr /*Error*/,\n\tfilepath /*string*/\n) => {\n\t// Do something with the path\n});\n```\n\n#### Resolver Options\n\n| Field            | Default                     | Description                                                                                                                                               |\n| ---------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| alias            | []                          | A list of module alias configurations or an object which maps key to value                                                                                |\n| aliasFields      | []                          | A list of alias fields in description files                                                                                                               |\n| cachePredicate   | function() { return true }; | A function which decides whether a request should be cached or not. An object is passed to the function with `path` and `request` properties.             |\n| cacheWithContext | true                        | If unsafe cache is enabled, includes `request.context` in the cache key                                                                                   |\n| conditionNames   | [\"node\"]                    | A list of exports field condition names                                                                                                                   |\n| descriptionFiles | [\"package.json\"]            | A list of description files to read from                                                                                                                  |\n| enforceExtension | false                       | Enforce that a extension from extensions must be used                                                                                                     |\n| exportsFields    | [\"exports\"]                 | A list of exports fields in description files                                                                                                             |\n| extensions       | [\".js\", \".json\", \".node\"]   | A list of extensions which should be tried for files                                                                                                      |\n| fileSystem       |                             | The file system which should be used                                                                                                                      |\n| fullySpecified   | false                       | Request passed to resolve is already fully specified and extensions or main files are not resolved for it (they are still resolved for internal requests) |\n| mainFields       | [\"main\"]                    | A list of main fields in description files                                                                                                                |\n| mainFiles        | [\"index\"]                   | A list of main files in directories                                                                                                                       |\n| modules          | [\"node_modules\"]            | A list of directories to resolve modules from, can be absolute path or folder name                                                                        |\n| plugins          | []                          | A list of additional resolve plugins which should be applied                                                                                              |\n| resolver         | undefined                   | A prepared Resolver to which the plugins are attached                                                                                                     |\n| resolveToContext | false                       | Resolve to a context instead of a file                                                                                                                    |\n| restrictions     | []                          | A list of resolve restrictions                                                                                                                            |\n| roots            | []                          | A list of root paths                                                                                                                                      |\n| symlinks         | true                        | Whether to resolve symlinks to their symlinked location                                                                                                   |\n| unsafeCache      | false                       | Use this cache object to unsafely cache the successful requests                                                                                           |\n\n## Plugins\n\nSimilar to `webpack`, the core of `enhanced-resolve` functionality is implemented as individual plugins that are executed using [`tapable`](https://github.com/webpack/tapable).\nThese plugins can extend the functionality of the library, adding other ways for files/contexts to be resolved.\n\nA plugin should be a `class` (or its ES5 equivalent) with an `apply` method. The `apply` method will receive a `resolver` instance, that can be used to hook in to the event system.\n\n### Plugin Boilerplate\n\n```js\nclass MyResolverPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MyResolverPlugin\", (request, resolveContext, callback) => {\n\t\t\t\t// Any logic you need to create a new `request` can go here\n\t\t\t\tresolver.doResolve(target, request, null, resolveContext, callback);\n\t\t\t});\n\t}\n}\n```\n\nPlugins are executed in a pipeline, and register which event they should be executed before/after. In the example above, `source` is the name of the event that starts the pipeline, and `target` is what event this plugin should fire, which is what continues the execution of the pipeline. For an example of how these different plugin events create a chain, see `lib/ResolverFactory.js`, in the `//// pipeline ////` section.\n\n## Tests\n\n```javascript\nnpm test\n```\n\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\n\n## Passing options from webpack\n\nIf you are using `webpack`, and you want to pass custom options to `enhanced-resolve`, the options are passed from the `resolve` key of your webpack configuration e.g.:\n\n```\nresolve: {\n  extensions: ['.js', '.jsx'],\n  modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n  plugins: [new DirectoryNamedWebpackPlugin()]\n  ...\n},\n```\n\n## License\n\nCopyright (c) 2012-2019 JS Foundation and other contributors\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n","types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"readmeFilename":"README.md","gitHead":"c200a08a18e700c4d7d8fecdf460b8b1930c75fc","_nodeVersion":"14.9.0","_npmVersion":"6.14.8","maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.0.0-beta.12_1600233756621_0.6228417100461019"},"_hasShrinkwrap":false},"5.0.0":{"_id":"enhanced-resolve@5.0.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.0.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^4.3.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.8.0","typescript":"^4.0.2"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.0.0"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"4737e6ebd4f2fd13fe23f4cec9d02146afc2c527","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.0.0.tgz"},"types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"gitHead":"adfbc74e4122d0b736d47b13ad3a824e0ce0a913","_nodeVersion":"14.9.0","_npmVersion":"6.14.8","maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.0.0_1600386686325_0.027036706647099562"},"_hasShrinkwrap":false},"5.1.0":{"_id":"enhanced-resolve@5.1.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.1.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^4.3.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.8.0","typescript":"^4.0.2"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.0.0"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"44cbf2242876ae9044dc32f7207c23c0dd3acdc1","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.1.0.tgz"},"types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"gitHead":"4a3cc76a067dce2125889b06d8d9624076cb3726","_nodeVersion":"14.9.0","_npmVersion":"6.14.8","maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.1.0_1601317135070_0.8873573261225931"},"_hasShrinkwrap":false},"5.2.0":{"_id":"enhanced-resolve@5.2.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.2.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^4.3.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.8.0","typescript":"^4.0.2"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.0.0"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"3db3307a608f236f33aeea79303d32915792cbab","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.2.0.tgz"},"types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"gitHead":"0001f80dacf033ac4a0e690b2766e0965c458266","_nodeVersion":"14.9.0","_npmVersion":"6.14.8","maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.2.0_1601451621238_0.03636911020761091"},"_hasShrinkwrap":false},"5.3.0":{"_id":"enhanced-resolve@5.3.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.3.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^4.3.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.8.0","typescript":"^4.0.2"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.0.0"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"14be504e14ad58e9821a311ea6a9037c716786d9","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.3.0.tgz"},"types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"gitHead":"0f51a8cf62b47cde4f57977cf4a205d832f8da69","_nodeVersion":"14.9.0","_npmVersion":"6.14.8","maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.3.0_1603194729989_0.27200953940662154"},"_hasShrinkwrap":false},"5.3.1":{"_id":"enhanced-resolve@5.3.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.3.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^4.3.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.8.0","typescript":"^4.0.2"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.0.0"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"3f988d0d7775bdc2d96ede321dc81f8249492f57","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.3.1.tgz"},"types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"gitHead":"d6807b553dc7e3157746b57a82cb238cd5e58cee","_nodeVersion":"14.9.0","_npmVersion":"6.14.8","maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.3.1_1603457272857_0.6095943612012926"},"_hasShrinkwrap":false},"5.3.2":{"_id":"enhanced-resolve@5.3.2","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.3.2","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^4.3.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.8.0","typescript":"^4.0.2"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.0.0"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"142295dda51aaaff049cf256459dc9a82a0b67f3","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.3.2.tgz"},"types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"gitHead":"ddb55c05ce00041c22dd954aca5aa53dfab96bdf","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.3.2_1605888786897_0.45688215895785844"},"_hasShrinkwrap":false},"5.4.0":{"_id":"enhanced-resolve@5.4.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.4.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^4.3.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.8.0","typescript":"^4.0.2"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.0.0"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"a8bcf23b00affac9455cf71efd80844f4054f4dc","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.4.0.tgz"},"types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"gitHead":"bca70659838a7d025122b4f99b8136c66ecaf7b2","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.4.0_1606947536918_0.7451747800668713"},"_hasShrinkwrap":false},"5.4.1":{"_id":"enhanced-resolve@5.4.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.4.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha","pretravis":"yarn lint","travis":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha"},"directories":{},"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^4.3.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.11.0","typescript":"^4.0.2"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"c89b0c34f17f931902ef2913a125d4b825b49b6f","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.4.1.tgz"},"browser":{"pnpapi":false,"process":"./lib/util/process-browser.js"},"types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"gitHead":"349a50633aa1a8f6cc0ec8a27fbb7793243393a6","_nodeVersion":"15.4.0","_npmVersion":"7.0.15","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.4.1_1608559281135_0.7265489113036929"},"_hasShrinkwrap":false},"5.5.0":{"_id":"enhanced-resolve@5.5.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.5.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","test:only":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha --full-trace --check-leaks","cover:ci":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha --full-trace --check-leaks"},"directories":{},"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^4.3.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.11.0","typescript":"^4.0.2"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"5f2ca7d511076541e2a30dc364a40c4f6c027bcd","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.5.0.tgz"},"browser":{"pnpapi":false,"process":"./lib/util/process-browser.js"},"types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"gitHead":"4960d772e12f02f17cabf26038ec2d4fd18f54d7","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.5.0_1610371174457_0.7402597834213769"},"_hasShrinkwrap":false},"5.6.0":{"_id":"enhanced-resolve@5.6.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.6.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","test:only":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha --full-trace --check-leaks","cover:ci":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha --full-trace --check-leaks"},"directories":{},"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^4.3.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.11.0","typescript":"^4.0.2"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"ad19a1665f230a6e384724a30acf3f7332b2b3f0","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.6.0.tgz"},"browser":{"pnpapi":false,"process":"./lib/util/process-browser.js"},"types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"gitHead":"68cae5281c69d563256d0c95cc193e7017743ee5","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.6.0_1610398454943_0.9865378214556435"},"_hasShrinkwrap":false},"5.7.0":{"_id":"enhanced-resolve@5.7.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.7.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","test:only":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha --full-trace --check-leaks","cover:ci":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha --full-trace --check-leaks"},"directories":{},"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^4.3.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.14.0","typescript":"^4.2.0-beta"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"525c5d856680fbd5052de453ac83e32049958b5c","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.7.0.tgz"},"browser":{"pnpapi":false,"process":"./lib/util/process-browser.js"},"types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"gitHead":"ff16fc2854f0960093142297af376c67777bb2f4","_nodeVersion":"14.15.1","_npmVersion":"6.14.8","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.7.0_1610570309902_0.5186261763149338"},"_hasShrinkwrap":false},"5.8.0":{"_id":"enhanced-resolve@5.8.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.8.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","test:only":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha --full-trace --check-leaks","cover:ci":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha --full-trace --check-leaks"},"directories":{},"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^4.3.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.14.0","typescript":"^4.2.0-beta"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"d9deae58f9d3773b6a111a5a46831da5be5c9ac0","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.8.0.tgz"},"browser":{"pnpapi":false,"process":"./lib/util/process-browser.js"},"types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"gitHead":"c4aa24d665ba4169d423588e39e050bc434f580d","_nodeVersion":"14.16.0","_npmVersion":"6.14.11","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.8.0_1618825430454_0.4448028133022046"},"_hasShrinkwrap":false},"5.8.1":{"_id":"enhanced-resolve@5.8.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.8.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","test:only":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha --full-trace --check-leaks","cover:ci":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha --full-trace --check-leaks"},"directories":{},"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^4.3.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.14.0","typescript":"^4.2.0-beta"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"3b375599be390e48573138385b9a89a3e316328e","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.8.1.tgz"},"browser":{"pnpapi":false,"process":"./lib/util/process-browser.js"},"types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]},"gitHead":"58b325c969f49cca514929c0ce8e53c3b7fab610","_nodeVersion":"14.16.0","_npmVersion":"6.14.11","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"bebraw","email":"bebraw@gmail.com"},{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"thelarkinn","email":"sean.larkin@cuw.edu"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.8.1_1620656700494_0.5328876374426237"},"_hasShrinkwrap":false},"5.8.2":{"_id":"enhanced-resolve@5.8.2","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.8.2","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra","email":"","url":""},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","test:only":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha --full-trace --check-leaks","cover:ci":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha --full-trace --check-leaks"},"directories":null,"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^4.3.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"webpack/tooling#v1.14.0","typescript":"^4.2.0-beta"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"files":["lib","types.d.ts","LICENSE"],"main":"lib/index.js","dist":{"shasum":"15ddc779345cbb73e97c611cd00c01c1e7bf4d8b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.8.2.tgz"},"browser":{"pnpapi":false,"process":"./lib/util/process-browser.js"},"types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]}},"5.8.3":{"_id":"enhanced-resolve@5.8.3","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.8.3","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra","email":"","url":""},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","test":"mocha --full-trace --check-leaks","test:only":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha --full-trace --check-leaks","cover:ci":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha --full-trace --check-leaks"},"directories":null,"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^4.3.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"webpack/tooling#v1.14.0","typescript":"^4.2.0-beta"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"files":["lib","types.d.ts","LICENSE"],"main":"lib/index.js","dist":{"shasum":"6d552d465cce0423f5b3d718511ea53826a7b2f0","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.8.3.tgz"},"browser":{"pnpapi":false,"process":"./lib/util/process-browser.js"},"types":"types.d.ts","husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.js":["eslint --cache"]}},"5.9.0":{"_id":"enhanced-resolve@5.9.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.9.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint && yarn run spelling","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","spelling":"cspell \"**/*.*\"","test":"mocha --full-trace --check-leaks","test:only":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha --full-trace --check-leaks","cover:ci":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha --full-trace --check-leaks","prepare":"husky install"},"directories":{},"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","cspell":"4.2.8","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^6.0.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.14.0","typescript":"^4.2.0-beta"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"49ac24953ac8452ed8fed2ef1340fc8e043667ee","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.9.0.tgz"},"browser":{"pnpapi":false,"process":"./lib/util/process-browser.js"},"types":"types.d.ts","lint-staged":{"*.js":"eslint --cache"},"gitHead":"b6468e041ddd63b964e70871d0f23ddc2eeb8690","_nodeVersion":"16.13.0","_npmVersion":"7.22.0","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.9.0_1644306501231_0.8203349799358328"},"_hasShrinkwrap":false},"5.9.1":{"_id":"enhanced-resolve@5.9.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.9.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint && yarn run spelling","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","spelling":"cspell \"**/*.*\"","test":"mocha --full-trace --check-leaks","test:only":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha --full-trace --check-leaks","cover:ci":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha --full-trace --check-leaks","prepare":"husky install"},"directories":{},"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","cspell":"4.2.8","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^6.0.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.14.0","typescript":"^4.2.0-beta"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"e898cea44d9199fd92137496cff5691b910fb43e","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.9.1.tgz"},"browser":{"pnpapi":false,"process":"./lib/util/process-browser.js"},"types":"types.d.ts","lint-staged":{"*.js":"eslint --cache"},"gitHead":"26001c4ad2e1d54985dda93c887e879614128e82","_nodeVersion":"16.14.0","_npmVersion":"7.22.0","_npmUser":{"name":"sokra","email":"tobias.koppers@googlemail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.9.1_1645779306857_0.6511258933176305"},"_hasShrinkwrap":false},"5.9.2":{"_id":"enhanced-resolve@5.9.2","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.9.2","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra","email":"","url":""},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint && yarn run spelling","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","spelling":"cspell \"**/*.*\"","test":"mocha --full-trace --check-leaks","test:only":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha --full-trace --check-leaks","cover:ci":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha --full-trace --check-leaks","prepare":"husky install"},"directories":null,"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","cspell":"4.2.8","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^6.0.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"webpack/tooling#v1.14.0","typescript":"^4.2.0-beta"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"files":["lib","types.d.ts","LICENSE"],"main":"lib/index.js","dist":{"shasum":"0224dcd6a43389ebfb2d55efee517e5466772dd9","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.9.2.tgz"},"browser":{"pnpapi":false,"process":"./lib/util/process-browser.js"},"types":"types.d.ts","lint-staged":{"*.js":"eslint --cache"}},"5.9.3":{"_id":"enhanced-resolve@5.9.3","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.9.3","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra","email":"","url":""},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint && yarn run spelling","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","spelling":"cspell \"**/*.*\"","test":"mocha --full-trace --check-leaks","test:only":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha --full-trace --check-leaks","cover:ci":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha --full-trace --check-leaks","prepare":"husky install"},"directories":null,"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","cspell":"4.2.8","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^6.0.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"webpack/tooling#v1.14.0","typescript":"^4.2.0-beta"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"files":["lib","types.d.ts","LICENSE"],"main":"lib/index.js","dist":{"shasum":"44a342c012cbc473254af5cc6ae20ebd0aae5d88","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.9.3.tgz"},"browser":{"pnpapi":false,"process":"./lib/util/process-browser.js"},"types":"types.d.ts","lint-staged":{"*.js":"eslint --cache"}},"5.10.0":{"_id":"enhanced-resolve@5.10.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.10.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra","email":"","url":""},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint && yarn run spelling","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","spelling":"cspell \"**/*.*\"","test":"mocha --full-trace --check-leaks","test:only":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha --full-trace --check-leaks","cover:ci":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha --full-trace --check-leaks","prepare":"husky install"},"directories":null,"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","cspell":"4.2.8","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^6.0.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"webpack/tooling#v1.14.0","typescript":"^4.2.0-beta"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"files":["lib","types.d.ts","LICENSE"],"main":"lib/index.js","dist":{"shasum":"0dc579c3bb2a1032e357ac45b8f3a6f3ad4fb1e6","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.10.0.tgz"},"browser":{"pnpapi":false,"process":"./lib/util/process-browser.js"},"types":"types.d.ts","lint-staged":{"*.js":"eslint --cache"}},"5.11.0":{"_id":"enhanced-resolve@5.11.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.11.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra","email":"","url":""},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint && yarn run spelling","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","spelling":"cspell \"**/*.*\"","test":"mocha --full-trace --check-leaks","test:only":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha --full-trace --check-leaks","cover:ci":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha --full-trace --check-leaks","prepare":"husky install"},"directories":null,"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","cspell":"4.2.8","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^6.0.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"webpack/tooling#v1.14.0","typescript":"^4.2.0-beta"},"dependencies":{"graceful-fs":"^4.2.9","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"files":["lib","types.d.ts","LICENSE"],"main":"lib/index.js","dist":{"shasum":"543cf6c847a85adba0c4a5e2170bded4d493919a","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.11.0.tgz"},"browser":{"pnpapi":false,"process":"./lib/util/process-browser.js"},"types":"types.d.ts","lint-staged":{"*.js":"eslint --cache"}},"5.12.0":{"_id":"enhanced-resolve@5.12.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.12.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra","email":"","url":""},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint && yarn run spelling","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","spelling":"cspell \"**/*.*\"","test":"mocha --full-trace --check-leaks","test:only":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha --full-trace --check-leaks","cover:ci":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha --full-trace --check-leaks","prepare":"husky install"},"directories":null,"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","cspell":"4.2.8","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^6.0.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"webpack/tooling#v1.14.0","typescript":"^4.2.0-beta"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"files":["lib","types.d.ts","LICENSE"],"main":"lib/index.js","dist":{"shasum":"300e1c90228f5b570c4d35babf263f6da7155634","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.12.0.tgz"},"browser":{"pnpapi":false,"process":"./lib/util/process-browser.js"},"types":"types.d.ts","lint-staged":{"*.js":"eslint --cache"}},"5.13.0":{"_id":"enhanced-resolve@5.13.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.13.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint && yarn run spelling","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","spelling":"cspell \"**/*.*\"","test":"mocha --full-trace --check-leaks","test:only":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha --full-trace --check-leaks","cover:ci":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha --full-trace --check-leaks","prepare":"husky install"},"directories":{},"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","cspell":"4.2.8","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^6.0.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"github:webpack/tooling#v1.14.0","typescript":"^4.2.0-beta"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"26d1ecc448c02de997133217b5c1053f34a0a275","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.13.0.tgz"},"browser":{"pnpapi":false,"process":"./lib/util/process-browser.js"},"types":"types.d.ts","lint-staged":{"*.js":"eslint --cache"},"gitHead":"a359876ce1e24749ce3c6f220588124ce838a017","_nodeVersion":"19.8.1","_npmVersion":"9.5.1","_npmUser":{"name":"thelarkinn","email":"sean.larkin1@gmail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"thelarkinn","email":"sean.larkin1@gmail.com"},{"name":"evilebottnawi","email":"sheo13666q@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.13.0_1681916520470_0.5905566518900711"},"_hasShrinkwrap":false},"5.14.0":{"_id":"enhanced-resolve@5.14.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.14.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra","email":"","url":""},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn run special-lint && yarn run spelling","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","spelling":"cspell \"**/*.*\"","test":"mocha --full-trace --check-leaks","test:only":"mocha --full-trace --check-leaks","precover":"yarn lint","cover":"nyc --reporter=html node node_modules/mocha/bin/_mocha --full-trace --check-leaks","cover:ci":"nyc --reporter=lcovonly node node_modules/mocha/bin/_mocha --full-trace --check-leaks","prepare":"husky install"},"directories":null,"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^14.11.1","cspell":"4.2.8","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^6.0.0","lint-staged":"^10.4.0","memfs":"^3.2.0","mocha":"^8.1.3","nyc":"^15.1.0","prettier":"^2.1.2","should":"^13.2.3","tooling":"webpack/tooling#v1.14.0","typescript":"^4.2.0-beta"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"files":["lib","types.d.ts","LICENSE"],"main":"lib/index.js","dist":{"shasum":"0b6c676c8a3266c99fa281e4433a706f5c0c61c4","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.14.0.tgz"},"browser":{"pnpapi":false,"process":"./lib/util/process-browser.js"},"types":"types.d.ts","lint-staged":{"*.js":"eslint --cache"}},"5.14.1":{"_id":"enhanced-resolve@5.14.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.14.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra"},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"bugs":{"url":"https://github.com/webpack/enhanced-resolve/issues"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn typings-test && yarn run special-lint && yarn run spelling","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","typings-test":"tsc -p tsconfig.types.test.json","type-report":"rimraf coverage && yarn cover:types && yarn cover:report && open-cli coverage/lcov-report/index.html","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","spelling":"cspell \"**/*.*\"","test:only":"jest","test:watch":"yarn test:only -- --watch","test:coverage":"yarn test:only -- --collectCoverageFrom=\"lib/**/*.js\" --coverage","test":"yarn test:coverage","precover":"yarn lint","prepare":"husky install"},"directories":{},"devDependencies":{"@types/graceful-fs":"^4.1.6","@types/jest":"^27.5.1","@types/node":"^14.11.1","cspell":"4.2.8","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^6.0.0","jest":"^27.5.1","lint-staged":"^10.4.0","memfs":"^3.2.0","prettier":"^2.1.2","tooling":"github:webpack/tooling#v1.14.0","typescript":"^5.0.4"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"main":"lib/index.js","dist":{"shasum":"de684b6803724477a4af5d74ccae5de52c25f6b3","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.14.1.tgz"},"browser":{"pnpapi":false,"process":"./lib/util/process-browser.js"},"types":"types.d.ts","lint-staged":{"*.js":"eslint --cache"},"gitHead":"4aa24c0dfe266ff3608222d8ad8e40935c604dd4","_nodeVersion":"19.8.1","_npmVersion":"9.5.1","_npmUser":{"name":"thelarkinn","email":"sean.larkin1@gmail.com"},"maintainers":[{"name":"sokra","email":"tobias.koppers@googlemail.com"},{"name":"jhnns","email":"mail@johannesewald.de"},{"name":"thelarkinn","email":"sean.larkin1@gmail.com"},{"name":"evilebottnawi","email":"sheo13666q@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/enhanced-resolve_5.14.1_1684937668986_0.8110060397908985"},"_hasShrinkwrap":false},"5.15.0":{"_id":"enhanced-resolve@5.15.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.15.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra","email":"","url":""},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn typings-test && yarn run special-lint && yarn run spelling","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","typings-test":"tsc -p tsconfig.types.test.json","type-report":"rimraf coverage && yarn cover:types && yarn cover:report && open-cli coverage/lcov-report/index.html","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","spelling":"cspell \"**\"","test:only":"jest","test:watch":"yarn test:only -- --watch","test:coverage":"yarn test:only -- --collectCoverageFrom=\"lib/**/*.js\" --coverage","test":"yarn test:coverage","precover":"yarn lint","prepare":"husky install"},"directories":null,"devDependencies":{"@types/graceful-fs":"^4.1.6","@types/jest":"^27.5.1","@types/node":"^14.11.1","cspell":"4.2.8","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^6.0.0","jest":"^27.5.1","lint-staged":"^10.4.0","memfs":"^3.2.0","prettier":"^2.1.2","tooling":"webpack/tooling#v1.14.0","typescript":"^5.0.4"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"files":["lib","types.d.ts","LICENSE"],"main":"lib/index.js","dist":{"shasum":"1af946c7d93603eb88e9896cee4904dc012e9c35","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.15.0.tgz"},"browser":{"pnpapi":false,"process":"./lib/util/process-browser.js"},"types":"types.d.ts","lint-staged":{"*":"cspell --no-must-find-files","*.js":"eslint --cache"}},"5.15.1":{"_id":"enhanced-resolve@5.15.1","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.15.1","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra","email":"","url":""},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn typings-test && yarn run special-lint && yarn run spelling","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","typings-test":"tsc -p tsconfig.types.test.json","type-report":"rimraf coverage && yarn cover:types && yarn cover:report && open-cli coverage/lcov-report/index.html","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","spelling":"cspell \"**\"","test:only":"jest","test:watch":"yarn test:only -- --watch","test:coverage":"yarn test:only -- --collectCoverageFrom=\"lib/**/*.js\" --coverage","test":"yarn test:coverage","precover":"yarn lint","prepare":"husky install"},"directories":null,"devDependencies":{"@types/graceful-fs":"^4.1.6","@types/jest":"^27.5.1","@types/node":"^14.11.1","cspell":"4.2.8","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^6.0.0","jest":"^27.5.1","lint-staged":"^10.4.0","memfs":"^3.2.0","prettier":"^2.1.2","tooling":"webpack/tooling#v1.14.0","typescript":"^5.0.4"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"files":["lib","types.d.ts","LICENSE"],"main":"lib/index.js","dist":{"shasum":"384391e025f099e67b4b00bfd7f0906a408214e1","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.15.1.tgz"},"browser":{"process":"./lib/util/process-browser.js","module":"./lib/util/module-browser.js"},"types":"types.d.ts","lint-staged":{"*":"cspell --no-must-find-files","*.js":"eslint --cache"}},"5.16.0":{"_id":"enhanced-resolve@5.16.0","name":"enhanced-resolve","description":"Offers a async require.resolve function. It's highly configurable.","version":"5.16.0","homepage":"http://github.com/webpack/enhanced-resolve","author":{"name":"Tobias Koppers @sokra","email":"","url":""},"repository":{"type":"git","url":"git://github.com/webpack/enhanced-resolve.git"},"license":"MIT","scripts":{"lint":"yarn run code-lint && yarn run type-lint && yarn typings-test && yarn run special-lint && yarn run spelling","fix":"yarn run code-lint-fix && yarn run special-lint-fix","code-lint":"eslint --cache lib test","code-lint-fix":"eslint --cache lib test --fix","type-lint":"tsc","typings-test":"tsc -p tsconfig.types.test.json","type-report":"rimraf coverage && yarn cover:types && yarn cover:report && open-cli coverage/lcov-report/index.html","special-lint":"node node_modules/tooling/lockfile-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-file-header && node node_modules/tooling/generate-types","special-lint-fix":"node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/generate-types --write","pretty":"prettier --loglevel warn --write \"lib/**/*.{js,json}\" \"test/*.js\"","pretest":"yarn lint","spelling":"cspell \"**\"","test:only":"jest","test:watch":"yarn test:only -- --watch","test:coverage":"yarn test:only -- --collectCoverageFrom=\"lib/**/*.js\" --coverage","test":"yarn test:coverage","precover":"yarn lint","prepare":"husky install"},"directories":null,"devDependencies":{"@types/graceful-fs":"^4.1.6","@types/jest":"^27.5.1","@types/node":"20.9.5","cspell":"4.2.8","eslint":"^7.9.0","eslint-config-prettier":"^6.11.0","eslint-plugin-jsdoc":"^30.5.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.1.4","husky":"^6.0.0","jest":"^27.5.1","lint-staged":"^10.4.0","memfs":"^3.2.0","prettier":"^2.1.2","tooling":"webpack/tooling#v1.23.1","typescript":"^5.3.3"},"dependencies":{"graceful-fs":"^4.2.4","tapable":"^2.2.0"},"engines":{"node":">=10.13.0"},"files":["lib","types.d.ts","LICENSE"],"main":"lib/index.js","dist":{"shasum":"65ec88778083056cb32487faa9aef82ed0864787","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/enhanced-resolve/-/enhanced-resolve-5.16.0.tgz"},"browser":{"process":"./lib/util/process-browser.js","module":"./lib/util/module-browser.js"},"types":"types.d.ts","lint-staged":{"*":"cspell --no-must-find-files","*.js":"eslint --cache"}}},"time":{"created":"2022-06-15T16:24:41Z","modified":"2024-03-11T23:32:29Z","0.2.0":"2022-06-15T16:24:41Z","0.2.1":"2022-06-15T16:24:41Z","0.2.2":"2022-06-15T16:24:41Z","0.2.3":"2022-06-15T16:24:41Z","0.2.4":"2022-06-15T16:24:41Z","0.2.5":"2022-06-15T16:24:41Z","0.2.6":"2022-06-15T16:24:41Z","0.2.7":"2022-06-15T16:24:41Z","0.2.8":"2022-06-15T16:24:41Z","0.2.9":"2022-06-15T16:24:41Z","0.3.0":"2022-06-15T16:24:41Z","0.3.1":"2022-06-15T16:24:41Z","0.4.0":"2022-06-15T16:24:41Z","0.4.1":"2022-06-15T16:24:41Z","0.4.2":"2022-06-15T16:24:41Z","0.4.4":"2022-06-15T16:24:41Z","0.4.5":"2022-06-15T16:24:41Z","0.4.6":"2022-06-15T16:24:41Z","0.4.7":"2022-06-15T16:24:41Z","0.4.8":"2022-06-15T16:24:41Z","0.4.9":"2022-06-15T16:24:41Z","0.4.10":"2022-06-15T16:24:41Z","0.4.11":"2022-06-15T16:24:41Z","0.4.12":"2022-06-15T16:24:41Z","0.5.0":"2022-06-15T16:24:41Z","0.5.1":"2022-06-15T16:24:41Z","0.5.2":"2022-06-15T16:24:41Z","0.5.3":"2022-06-15T16:24:41Z","0.5.4":"2022-06-15T16:24:41Z","0.5.5":"2022-06-15T16:24:41Z","0.5.6":"2022-06-15T16:24:41Z","0.5.7":"2022-06-15T16:24:41Z","0.5.8":"2022-06-15T16:24:41Z","0.5.9":"2022-06-15T16:24:41Z","0.5.10":"2022-06-15T16:24:41Z","0.5.11":"2022-06-15T16:24:41Z","0.5.12":"2022-06-15T16:24:41Z","0.5.13":"2022-06-15T16:24:41Z","0.5.14":"2022-06-15T16:24:41Z","0.5.15":"2022-06-15T16:24:41Z","0.6.0":"2022-06-15T16:24:41Z","0.6.1":"2022-06-15T16:24:41Z","0.7.0":"2022-06-15T16:24:41Z","0.7.1":"2022-06-15T16:24:41Z","0.7.2":"2022-06-15T16:24:41Z","0.7.3":"2022-06-15T16:24:41Z","0.7.4":"2022-06-15T16:24:41Z","0.7.5":"2022-06-15T16:24:41Z","0.7.6":"2022-06-15T16:24:41Z","0.8.0":"2022-06-15T16:24:41Z","0.8.1":"2022-06-15T16:24:41Z","0.8.2":"2022-06-15T16:24:41Z","0.8.3":"2022-06-15T16:24:41Z","0.8.4":"2022-06-15T16:24:41Z","0.8.5":"2022-06-15T16:24:41Z","0.8.6":"2022-06-15T16:24:41Z","0.9.0":"2022-06-15T16:24:41Z","0.9.1":"2022-06-15T16:24:41Z","2.0.0":"2022-06-15T16:24:41Z","2.0.1":"2022-06-15T16:24:41Z","2.0.2":"2022-06-15T16:24:41Z","2.1.0":"2022-06-15T16:24:41Z","2.2.0":"2022-06-15T16:24:41Z","2.2.1":"2022-06-15T16:24:41Z","2.2.2":"2022-06-15T16:24:41Z","2.3.0":"2022-06-15T16:24:41Z","3.0.0":"2022-06-15T16:24:41Z","3.0.1":"2022-06-15T16:24:41Z","3.0.2":"2022-06-15T16:24:41Z","3.0.3":"2022-06-15T16:24:41Z","3.1.0":"2022-06-15T16:24:41Z","3.2.0":"2022-06-15T16:24:41Z","3.3.0":"2022-06-15T16:24:41Z","3.4.0":"2022-06-15T16:24:41Z","3.4.1":"2022-06-15T16:24:41Z","4.0.0-beta.1":"2022-06-15T16:24:41Z","4.0.0-beta.2":"2022-06-15T16:24:41Z","4.0.0-beta.3":"2022-06-15T16:24:41Z","4.0.0-beta.4":"2022-06-15T16:24:41Z","4.0.0":"2022-06-15T16:24:41Z","4.1.0":"2022-06-15T16:34:25Z","4.1.1":"2022-06-15T16:24:41Z","4.2.0":"2022-06-15T16:24:41Z","4.3.0":"2022-06-15T16:24:41Z","4.4.0":"2022-06-15T16:24:41Z","4.5.0":"2022-11-21T18:12:51Z","5.0.0-beta.0":"2022-06-15T16:24:41Z","5.0.0-beta.1":"2022-06-15T16:24:41Z","5.0.0-beta.2":"2022-06-15T16:24:41Z","5.0.0-beta.3":"2022-06-15T16:24:41Z","5.0.0-beta.4":"2022-06-15T16:24:41Z","5.0.0-beta.5":"2022-06-15T16:24:41Z","5.0.0-beta.6":"2022-06-15T16:24:41Z","5.0.0-beta.7":"2022-06-15T16:24:41Z","5.0.0-beta.8":"2022-06-15T16:24:41Z","5.0.0-beta.9":"2022-06-15T16:24:41Z","5.0.0-beta.10":"2022-06-15T16:24:41Z","5.0.0-beta.11":"2022-06-15T16:24:41Z","5.0.0-beta.12":"2022-06-15T16:24:41Z","5.0.0":"2022-06-15T16:24:41Z","5.1.0":"2022-06-15T16:24:41Z","5.2.0":"2022-06-15T16:24:41Z","5.3.0":"2022-06-15T16:24:41Z","5.3.1":"2022-06-15T16:24:41Z","5.3.2":"2022-06-15T16:24:41Z","5.4.0":"2022-06-15T16:24:41Z","5.4.1":"2022-06-15T16:24:41Z","5.5.0":"2022-06-15T16:24:41Z","5.6.0":"2022-06-15T16:24:41Z","5.7.0":"2022-06-15T16:24:41Z","5.8.0":"2022-06-15T16:24:41Z","5.8.1":"2022-06-15T16:24:41Z","5.8.2":"2022-08-17T01:12:43Z","5.8.3":"2022-06-29T18:21:40Z","5.9.0":"2022-06-15T16:24:41Z","5.9.1":"2022-06-15T16:24:41Z","5.9.2":"2022-09-07T20:06:03Z","5.9.3":"2022-08-24T20:47:31Z","5.10.0":"2022-06-28T23:23:57Z","5.11.0":"2022-11-22T19:35:26Z","5.12.0":"2022-11-24T00:06:18Z","5.13.0":"2023-04-19T17:43:39Z","5.14.0":"2023-05-16T12:42:49Z","5.14.1":"2023-05-24T14:56:14Z","5.15.0":"2023-07-14T11:12:50Z","5.15.1":"2024-02-28T10:41:04Z","5.16.0":"2024-03-11T23:32:29Z"}}