{"_id":"jest-docblock","_rev":"12c725ea-aa06-4d36-ac4b-7dfefa684cf6","name":"jest-docblock","dist-tags":{"latest":"29.7.0","next":"30.0.0-alpha.3"},"versions":{"0.0.0":{"_id":"jest-docblock@0.0.0","name":"jest-docblock","version":"0.0.0","scripts":{},"directories":{},"dist":{"shasum":"cf51e191d00ae5f8a62e61cd326bd0493e9f6a26","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-0.0.0.tgz"},"_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.1","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"name":"cpojer","email":"christoph.pojer@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/jest-docblock-0.0.0.tgz_1488553847307_0.10164580773562193"}},"19.1.0-alpha.eed82034":{"_id":"jest-docblock@19.1.0-alpha.eed82034","name":"jest-docblock","version":"19.1.0-alpha.eed82034","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","scripts":{},"directories":{},"main":"build/index.js","dist":{"shasum":"bf8718e1df92865c90d4ed33fd0546ccb8159986","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-19.1.0-alpha.eed82034.tgz"},"_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.2","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"name":"cpojer","email":"christoph.pojer@gmail.com"},{"name":"dmitriiabramov","email":"dmitrii@rheia.us"},{"name":"fb","email":"opensource+npm@fb.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/jest-docblock-19.1.0-alpha.eed82034.tgz_1489711276532_0.8164251870475709"}},"19.2.0-alpha.993e64af":{"_id":"jest-docblock@19.2.0-alpha.993e64af","name":"jest-docblock","version":"19.2.0-alpha.993e64af","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","scripts":{},"directories":{},"main":"build/index.js","dist":{"shasum":"da45e7c552578bc39d00083d9d5ae8d7eeb13f78","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-19.2.0-alpha.993e64af.tgz"},"_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.9.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"name":"cpojer","email":"christoph.pojer@gmail.com"},{"name":"dmitriiabramov","email":"dmitrii@rheia.us"},{"name":"fb","email":"opensource+npm@fb.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/jest-docblock-19.2.0-alpha.993e64af.tgz_1493912252477_0.9218532545492053"}},"19.3.0-alpha.85402254":{"_id":"jest-docblock@19.3.0-alpha.85402254","name":"jest-docblock","version":"19.3.0-alpha.85402254","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","scripts":{},"directories":{},"main":"build/index.js","dist":{"shasum":"4e585a2f9a2f40e94c898a0e746e8c72b098cb9d","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-19.3.0-alpha.85402254.tgz"},"_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.9.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"name":"cpojer","email":"christoph.pojer@gmail.com"},{"name":"dmitriiabramov","email":"dmitrii@rheia.us"},{"name":"fb","email":"opensource+npm@fb.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/jest-docblock-19.3.0-alpha.85402254.tgz_1493984896480_0.8813271548133343"}},"20.0.0":{"_id":"jest-docblock@20.0.0","name":"jest-docblock","version":"20.0.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","scripts":{},"directories":{},"main":"build/index.js","dist":{"shasum":"5b647c4af36f52dae74df1949a8cb418d146ad3a","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-20.0.0.tgz"},"_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.9.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"name":"cpojer","email":"christoph.pojer@gmail.com"},{"name":"dmitriiabramov","email":"dmitrii@rheia.us"},{"name":"fb","email":"opensource+npm@fb.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/jest-docblock-20.0.0.tgz_1494073947148_0.10115733626298606"}},"20.0.1":{"_id":"jest-docblock@20.0.1","name":"jest-docblock","version":"20.0.1","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","scripts":{},"directories":{},"main":"build/index.js","dist":{"shasum":"055e0bbcb76798198479901f92d2733bf619f854","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-20.0.1.tgz"},"_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.9.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"name":"cpojer","email":"christoph.pojer@gmail.com"},{"name":"dmitriiabramov","email":"dmitrii@rheia.us"},{"name":"fb","email":"opensource+npm@fb.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/jest-docblock-20.0.1.tgz_1494499800519_0.6817271162290126"}},"20.0.2":{"_id":"jest-docblock@20.0.2","name":"jest-docblock","version":"20.0.2","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","scripts":{},"directories":{},"main":"build/index.js","dist":{"shasum":"82d1e79b79bab0b92c40dd5033e3ce9bbdcceeea","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-20.0.2.tgz"},"_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.10.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"name":"cpojer","email":"christoph.pojer@gmail.com"},{"name":"dmitriiabramov","email":"dmitrii@rheia.us"},{"name":"fb","email":"opensource+npm@fb.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/jest-docblock-20.0.2.tgz_1495018213993_0.17744637560099363"}},"20.0.3":{"_id":"jest-docblock@20.0.3","name":"jest-docblock","version":"20.0.3","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","scripts":{},"directories":{},"main":"build/index.js","dist":{"shasum":"17bea984342cc33d83c50fbe1545ea0efaa44712","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-20.0.3.tgz"},"_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.10.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"name":"cpojer","email":"christoph.pojer@gmail.com"},{"name":"dmitriiabramov","email":"dmitrii@rheia.us"},{"name":"fb","email":"opensource+npm@fb.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/jest-docblock-20.0.3.tgz_1495018624029_0.17387354606762528"}},"20.1.0-alpha.1":{"_id":"jest-docblock@20.1.0-alpha.1","name":"jest-docblock","version":"20.1.0-alpha.1","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","directories":{},"main":"build/index.js","dist":{"shasum":"f486a065478325b4cbf55bd0bf9504b19e7727d1","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-20.1.0-alpha.1.tgz"},"_npmVersion":"5.0.3","_nodeVersion":"8.1.2","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-20.1.0-alpha.1.tgz_1498644973885_0.9771023667417467"}},"20.1.0-alpha.2":{"_id":"jest-docblock@20.1.0-alpha.2","name":"jest-docblock","version":"20.1.0-alpha.2","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","directories":{},"main":"build/index.js","dist":{"shasum":"a4678fc3b6545d4b589053275ff90ae5f0e99c4a","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-20.1.0-alpha.2.tgz"},"_npmVersion":"5.0.3","_nodeVersion":"8.1.2","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-20.1.0-alpha.2.tgz_1498754200435_0.5517149523366243"}},"20.1.0-alpha.3":{"_id":"jest-docblock@20.1.0-alpha.3","name":"jest-docblock","version":"20.1.0-alpha.3","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","directories":{},"main":"build/index.js","dist":{"shasum":"d35995bb58fd7603fc04551bb2a5f3220a92e98b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-20.1.0-alpha.3.tgz"},"_npmVersion":"5.0.3","_nodeVersion":"8.1.2","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-20.1.0-alpha.3.tgz_1498832446559_0.9763716456945986"}},"20.1.0-beta.1":{"_id":"jest-docblock@20.1.0-beta.1","name":"jest-docblock","version":"20.1.0-beta.1","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","directories":{},"main":"build/index.js","dist":{"shasum":"157ee768b42f6e2531b5988bea450d27df1dab4f","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-20.1.0-beta.1.tgz"},"_npmVersion":"5.0.3","_nodeVersion":"8.1.4","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-20.1.0-beta.1.tgz_1499942013781_0.5235937121324241"}},"20.1.0-chi.1":{"_id":"jest-docblock@20.1.0-chi.1","name":"jest-docblock","version":"20.1.0-chi.1","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","directories":{},"main":"build/index.js","dist":{"shasum":"06981ab0e59498a2492333b0c5502a82e4603207","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-20.1.0-chi.1.tgz"},"_npmVersion":"5.0.3","_nodeVersion":"8.1.4","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-20.1.0-chi.1.tgz_1500027895912_0.9102754853665829"}},"20.1.0-delta.1":{"_id":"jest-docblock@20.1.0-delta.1","name":"jest-docblock","version":"20.1.0-delta.1","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","directories":{},"main":"build/index.js","dist":{"shasum":"6789873ddf3f7e90480dbcaab18386a5f17bde6c","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-20.1.0-delta.1.tgz"},"_npmVersion":"5.0.3","_nodeVersion":"8.1.4","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-20.1.0-delta.1.tgz_1500367606830_0.2219448215328157"}},"20.1.0-delta.2":{"_id":"jest-docblock@20.1.0-delta.2","name":"jest-docblock","version":"20.1.0-delta.2","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","directories":{},"main":"build/index.js","dist":{"shasum":"3987e9bcfd53a8436054d85ca321b599ceb89060","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-20.1.0-delta.2.tgz"},"_npmVersion":"5.0.3","_nodeVersion":"8.1.4","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-20.1.0-delta.2.tgz_1500468996258_0.12748813279904425"}},"20.1.0-delta.3":{"_id":"jest-docblock@20.1.0-delta.3","name":"jest-docblock","version":"20.1.0-delta.3","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","directories":{},"main":"build/index.js","dist":{"shasum":"0eb622ecf1f40b355df17b3a42c5864d9667f2e6","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-20.1.0-delta.3.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.2.1","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-20.1.0-delta.3.tgz_1501020742207_0.43313767039217055"}},"20.1.0-delta.4":{"_id":"jest-docblock@20.1.0-delta.4","name":"jest-docblock","version":"20.1.0-delta.4","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","directories":{},"main":"build/index.js","dist":{"shasum":"360d4f5fb702730c4136c4e71e5706188a694682","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-20.1.0-delta.4.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.2.1","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-20.1.0-delta.4.tgz_1501175946128_0.7562121015507728"}},"20.1.0-delta.5":{"_id":"jest-docblock@20.1.0-delta.5","name":"jest-docblock","version":"20.1.0-delta.5","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","directories":{},"main":"build/index.js","dist":{"shasum":"a3699e999a4be26beee576a41988bd9c782cb469","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-20.1.0-delta.5.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.0.0","_npmUser":{"name":"aaronabramov","email":"aaron@abramov.io"},"maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-20.1.0-delta.5.tgz_1501605215134_0.7177239707671106"}},"20.1.0-echo.1":{"_id":"jest-docblock@20.1.0-echo.1","name":"jest-docblock","version":"20.1.0-echo.1","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","directories":{},"main":"build/index.js","dist":{"shasum":"be02f43ee019f97e6b83267c746ac7b40d290fe8","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-20.1.0-echo.1.tgz"},"_npmVersion":"5.0.3","_nodeVersion":"8.1.4","_npmUser":{"name":"mjesun","email":"mjesun@hotmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-20.1.0-echo.1.tgz_1502210988609_0.5525328819639981"}},"21.0.0-alpha.1":{"_id":"jest-docblock@21.0.0-alpha.1","name":"jest-docblock","version":"21.0.0-alpha.1","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","directories":{},"main":"build/index.js","dist":{"shasum":"1adeadf2a70a0bdee1cf78544903d15c7ae3bd30","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.0.0-alpha.1.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.2.1","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.0.0-alpha.1.tgz_1502446440620_0.01505434955470264"}},"21.0.0-alpha.2":{"_id":"jest-docblock@21.0.0-alpha.2","name":"jest-docblock","version":"21.0.0-alpha.2","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","directories":{},"main":"build/index.js","dist":{"shasum":"d00743f146ce86766eb5c80a62527d8698416524","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.0.0-alpha.2.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.0.0","_npmUser":{"name":"aaronabramov","email":"aaron@abramov.io"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.0.0-alpha.2.tgz_1503353207309_0.011611000169068575"}},"21.0.0-beta.1":{"_id":"jest-docblock@21.0.0-beta.1","name":"jest-docblock","version":"21.0.0-beta.1","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","directories":{},"main":"build/index.js","dist":{"shasum":"320297db527fddb1824495632b0f6c8181ac864d","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.0.0-beta.1.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.0.0-beta.1.tgz_1503610002247_0.1043091716710478"}},"21.0.0":{"_id":"jest-docblock@21.0.0","name":"jest-docblock","version":"21.0.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","directories":{},"main":"build/index.js","dist":{"shasum":"7dd57568543aec98910f749540afc15fab53a27f","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.0.0.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.0.0.tgz_1504537305612_0.6095965071581304"}},"21.0.2":{"_id":"jest-docblock@21.0.2","name":"jest-docblock","version":"21.0.2","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","directories":{},"main":"build/index.js","dist":{"shasum":"66f69ddb440799fc32f91d0ac3d8d35e99e2032f","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.0.2.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.0.2.tgz_1504880346628_0.9147820915095508"}},"21.1.0":{"_id":"jest-docblock@21.1.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"21.1.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"BSD-3-Clause","directories":{},"main":"build/index.js","dist":{"shasum":"43154be2441fb91403e36bb35cb791a5017cea81","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.1.0.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.1.0.tgz_1505353805417_0.8864955636672676"}},"21.2.0":{"_id":"jest-docblock@21.2.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"21.2.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"main":"build/index.js","dist":{"shasum":"51529c3b30d5fd159da60c27ceedc195faf8d414","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.2.0.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.2.0.tgz_1506457327910_0.6499524489045143"}},"21.3.0-alpha.1e3ee68e":{"_id":"jest-docblock@21.3.0-alpha.1e3ee68e","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"21.3.0-alpha.1e3ee68e","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"d0c685e39c270579ae85dd78a184a1b6ea248e90","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.3.0-alpha.1e3ee68e.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.3.0-alpha.1e3ee68e.tgz_1506608430580_0.412857647286728"}},"21.3.0-alpha.eff7a1cf":{"_id":"jest-docblock@21.3.0-alpha.eff7a1cf","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"21.3.0-alpha.eff7a1cf","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"53a614b3ed53ad2704dfc92598cb1d4b90cd8520","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.3.0-alpha.eff7a1cf.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.3.0-alpha.eff7a1cf.tgz_1506876403785_0.7188720540143549"}},"21.3.0-beta.1":{"_id":"jest-docblock@21.3.0-beta.1","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"21.3.0-beta.1","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"f264d50ba1fc93cda8ef3ffcd530cef86b332c3d","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.3.0-beta.1.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.3.0-beta.1.tgz_1507114114474_0.45631175907328725"}},"21.3.0-beta.2":{"_id":"jest-docblock@21.3.0-beta.2","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"21.3.0-beta.2","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"ac5b84090472b3270fcb2a3ac799c745d8d0fba2","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.3.0-beta.2.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.3.0-beta.2.tgz_1507888440131_0.5182440597563982"}},"21.3.0-beta.3":{"_id":"jest-docblock@21.3.0-beta.3","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"21.3.0-beta.3","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"f4db6404ceceb82bdb165928344bcb95d8f45a52","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.3.0-beta.3.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.3.0-beta.3.tgz_1508960035056_0.763864847831428"}},"21.3.0-beta.4":{"_id":"jest-docblock@21.3.0-beta.4","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"21.3.0-beta.4","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"11c3121cccc39d826d484e0951cb2faad1fe1ebd","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.3.0-beta.4.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.3.0-beta.4.tgz_1509024406826_0.259315715637058"}},"21.3.0-beta.5":{"_id":"jest-docblock@21.3.0-beta.5","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"21.3.0-beta.5","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"e5b532612bf849c9de490d4eb9cd95f85cfa6429","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.3.0-beta.5.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.3.0-beta.5.tgz_1509628641505_0.8513718999456614"}},"21.3.0-beta.6":{"_id":"jest-docblock@21.3.0-beta.6","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"21.3.0-beta.6","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"f76a01f0ba33456e98298858dddc5033cad3da36","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.3.0-beta.6.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.3.0-beta.6.tgz_1509726081023_0.5937596587464213"}},"21.3.0-beta.7":{"_id":"jest-docblock@21.3.0-beta.7","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"21.3.0-beta.7","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"5a3cef8238fb3aedecac88a392dcfbd911ff540c","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.3.0-beta.7.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.3.0-beta.7.tgz_1509961179283_0.55156319309026"}},"21.3.0-beta.8":{"_id":"jest-docblock@21.3.0-beta.8","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"21.3.0-beta.8","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"60b533e42e95ae607704d7f2d131c76dc1ffbe2e","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.3.0-beta.8.tgz"},"_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.3.0-beta.8.tgz_1510076607902_0.626753281801939"}},"21.3.0-beta.9":{"_id":"jest-docblock@21.3.0-beta.9","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"21.3.0-beta.9","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"ee4880b58e15a39a1247b6c5c15e32ea8bf73abb","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.3.0-beta.9.tgz"},"_npmVersion":"5.5.1","_nodeVersion":"8.4.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.3.0-beta.9.tgz_1511356640732_0.3116088923998177"}},"21.3.0-beta.10":{"_id":"jest-docblock@21.3.0-beta.10","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"21.3.0-beta.10","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"f8e17eef12b584af9abea4271c070d29c54ddbe4","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.3.0-beta.10.tgz"},"_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.3.0-beta.10.tgz_1511613557472_0.2681349983904511"}},"21.3.0-beta.11":{"_id":"jest-docblock@21.3.0-beta.11","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"21.3.0-beta.11","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"feb4de87c55a2f563ac24c5f4861f61921550896","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.3.0-beta.11.tgz"},"_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.3.0-beta.11.tgz_1511965873730_0.47444835444912314"}},"21.3.0-beta.12":{"_id":"jest-docblock@21.3.0-beta.12","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"21.3.0-beta.12","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"37f3f57bcc59d0f24d6c7f61d16faff1e8460746","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.3.0-beta.12.tgz"},"_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.3.0-beta.12.tgz_1512499707657_0.7274779328145087"}},"21.3.0-beta.13":{"_id":"jest-docblock@21.3.0-beta.13","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"21.3.0-beta.13","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"a6fc6534ee1cc73eb6c8693bc99b12135ab7cca4","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.3.0-beta.13.tgz"},"_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.3.0-beta.13.tgz_1512571020144_0.17039366182871163"}},"21.3.0-beta.14":{"_id":"jest-docblock@21.3.0-beta.14","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"21.3.0-beta.14","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"ef6bfa766effc2f35cf651197200d79a22700926","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.3.0-beta.14.tgz"},"_npmVersion":"5.6.0","_nodeVersion":"9.2.1","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.3.0-beta.14.tgz_1513075944324_0.2790728679392487"}},"21.3.0-beta.15":{"_id":"jest-docblock@21.3.0-beta.15","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"21.3.0-beta.15","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"9145c6768c520e9edc52abd64797de4001a9486e","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-21.3.0-beta.15.tgz"},"_npmVersion":"5.6.0","_nodeVersion":"9.2.1","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-21.3.0-beta.15.tgz_1513344448870_0.6184771347325295"}},"22.0.0":{"_id":"jest-docblock@22.0.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"22.0.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"2e6a79360172b90bd2cd235a4832e38388b3b658","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-22.0.0.tgz"},"_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"mjesun","email":"mjesun@hotmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-22.0.0.tgz_1513594997284_0.6416785083711147"}},"22.0.1":{"_id":"jest-docblock@22.0.1","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"22.0.1","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"ad1128eca5ff621b939001dfea4de3c2cca0af8c","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-22.0.1.tgz"},"_npmVersion":"5.6.0","_nodeVersion":"9.2.1","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-22.0.1.tgz_1513628956359_0.27760394220240414"}},"22.0.2":{"_id":"jest-docblock@22.0.2","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"22.0.2","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"b72e0a826a36956b6e7bb241b10779a934cbdf7e","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-22.0.2.tgz"},"_npmVersion":"5.6.0","_nodeVersion":"9.2.1","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-22.0.2.tgz_1513691576397_0.7355734503362328"}},"22.0.3":{"_id":"jest-docblock@22.0.3","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"22.0.3","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"c33aa22682b9fc68a5373f5f82994428a2ded601","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-22.0.3.tgz"},"_npmVersion":"5.6.0","_nodeVersion":"9.2.1","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-22.0.3.tgz_1513695524178_0.6391702564433217"}},"22.0.6":{"_id":"jest-docblock@22.0.6","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"22.0.6","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"f187fb2c67eec0999e569d563092125283084f9e","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-22.0.6.tgz"},"_npmVersion":"5.6.0","_nodeVersion":"9.3.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-22.0.6.tgz_1515663996232_0.8973526188638061"}},"22.1.0":{"_id":"jest-docblock@22.1.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"22.1.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"3fe5986d5444cbcb149746eb4b07c57c5a464dfd","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-22.1.0.tgz"},"_npmVersion":"5.6.0","_nodeVersion":"9.4.0","_npmUser":{"name":"cpojer","email":"christoph.pojer@gmail.com"},"maintainers":[{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock-22.1.0.tgz_1516017420961_0.029495719820261"}},"22.2.0":{"_id":"jest-docblock@22.2.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"22.2.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"4d054eac354751e94a43a0ea2e2fe5c04cc61bbb","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-22.2.0.tgz"},"_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"mjesun","email":"mjesun@hotmail.com"},"maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_22.2.0_1517999152027_0.8231660513929444"},"_hasShrinkwrap":false},"22.2.2":{"_id":"jest-docblock@22.2.2","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"22.2.2","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"617f13edb16ec64202002b3c336cd14ae36c0631","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-22.2.2.tgz"},"_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"mjesun","email":"mjesun@hotmail.com"},"maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_22.2.2_1518193689132_0.6380831148092194"},"_hasShrinkwrap":false},"22.4.0":{"_id":"jest-docblock@22.4.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"22.4.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"dbf1877e2550070cfc4d9b07a55775a0483159b8","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-22.4.0.tgz"},"_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"mjesun","email":"mjesun@hotmail.com"},"maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_22.4.0_1519128207301_0.8008459783765294"},"_hasShrinkwrap":false},"22.4.3":{"_id":"jest-docblock@22.4.3","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"22.4.3","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"50886f132b42b280c903c592373bb6e93bb68b19","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-22.4.3.tgz"},"_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"mjesun","email":"mjesun@hotmail.com"},"maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_22.4.3_1521648480969_0.14578182581500454"},"_hasShrinkwrap":false},"23.0.1":{"_id":"jest-docblock@23.0.1","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"23.0.1","repository":{"type":"git","url":"https://github.com/facebook/jest.git"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"deddd18333be5dc2415260a04ef3fce9276b5725","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-23.0.1.tgz"},"maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmUser":{"name":"mjesun","email":"mjesun@hotmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_23.0.1_1527435037660_0.4043132189291583"},"_hasShrinkwrap":false},"23.2.0":{"_id":"jest-docblock@23.2.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"23.2.0","repository":{"type":"git","url":"https://github.com/facebook/jest.git"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"f085e1f18548d99fdd69b20207e6fd55d91383a7","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-23.2.0.tgz"},"maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmUser":{"name":"mjesun","email":"mjesun@hotmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_23.2.0_1529935509595_0.6208300856403208"},"_hasShrinkwrap":false},"24.0.0-alpha.0":{"_id":"jest-docblock@24.0.0-alpha.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"24.0.0-alpha.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"197b97929a9bce01b36119d2e813be8bfe93b17b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-24.0.0-alpha.0.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","gitHead":"22f67d49ffcce7a5b6d6891438b837b3b26ba9db","readmeFilename":"README.md","_npmVersion":"5.6.0","_nodeVersion":"8.10.0","_npmUser":{"name":"mjesun","email":"mjesun@hotmail.com"},"maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_24.0.0-alpha.0_1539951148680_0.3296039645782811"},"_hasShrinkwrap":false},"24.0.0-alpha.1":{"_id":"jest-docblock@24.0.0-alpha.1","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"24.0.0-alpha.1","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"345f64288e39f63ed778ad4321dbe20dc1b0cda1","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-24.0.0-alpha.1.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","gitHead":"4954f46708415174c48a58f296a605fbe1244a31","readmeFilename":"README.md","_npmVersion":"5.6.0","_nodeVersion":"8.10.0","_npmUser":{"name":"mjesun","email":"mjesun@hotmail.com"},"maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_24.0.0-alpha.1_1540222534717_0.7120926626666033"},"_hasShrinkwrap":false},"24.0.0-alpha.2":{"_id":"jest-docblock@24.0.0-alpha.2","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"24.0.0-alpha.2","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"engines":{"node":">= 6"},"main":"build/index.js","dist":{"shasum":"d2a6b14f5e325af4c1e79cb401e538dc32bd195f","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-24.0.0-alpha.2.tgz"},"gitHead":"c5e36835cff4b241327db9cf58c8f6f7227ed1f7","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"rubennorte","email":"rubennorte@gmail.com"},"maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_24.0.0-alpha.2_1540464661346_0.15722314261225634"},"_hasShrinkwrap":false},"24.0.0-alpha.4":{"_id":"jest-docblock@24.0.0-alpha.4","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"24.0.0-alpha.4","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"engines":{"node":">= 6"},"main":"build/index.js","dist":{"shasum":"883264370210bbd4dfadf9ea0bc5f89baca926c1","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-24.0.0-alpha.4.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","gitHead":"e41f0bb257c6652c3100b97a1087f9f812fbea0d","readmeFilename":"README.md","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"rubennorte","email":"rubennorte@gmail.com"},"maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_24.0.0-alpha.4_1540571582192_0.8865722974611645"},"_hasShrinkwrap":false},"24.0.0-alpha.5":{"_id":"jest-docblock@24.0.0-alpha.5","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"24.0.0-alpha.5","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"engines":{"node":">= 6"},"main":"build/index.js","dist":{"shasum":"4d41cde48074c15a9167838ce36b122c05b311a9","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-24.0.0-alpha.5.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","gitHead":"2c18a53e8ff2437bba5fcb8076b754ac5f79f9f8","readmeFilename":"README.md","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"rubennorte","email":"rubennorte@gmail.com"},"maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_24.0.0-alpha.5_1541769152913_0.9105132681885253"},"_hasShrinkwrap":false},"24.0.0-alpha.6":{"_id":"jest-docblock@24.0.0-alpha.6","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"24.0.0-alpha.6","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"engines":{"node":">= 6"},"main":"build/index.js","dist":{"shasum":"abb38d04afd624cbfb34e13fa9e0c1053388a333","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-24.0.0-alpha.6.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","gitHead":"49d08403a941e596eda1279c07a1eaf4d4a73dad","readmeFilename":"README.md","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"rubennorte","email":"rubennorte@gmail.com"},"maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_24.0.0-alpha.6_1541785769853_0.47281973253350307"},"_hasShrinkwrap":false},"24.0.0-alpha.7":{"_id":"jest-docblock@24.0.0-alpha.7","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"24.0.0-alpha.7","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"main":"build/index.js","dist":{"shasum":"164d010faed479acbbfe7152b3464a5958b5ba81","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-24.0.0-alpha.7.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","gitHead":"4954f46708415174c48a58f296a605fbe1244a31","readmeFilename":"README.md","_npmVersion":"5.6.0","_nodeVersion":"8.10.0","_npmUser":{"name":"mjesun","email":"mjesun@hotmail.com"},"maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_24.0.0-alpha.7_1544544457231_0.3453023814818903"},"_hasShrinkwrap":false},"24.0.0-alpha.9":{"_id":"jest-docblock@24.0.0-alpha.9","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"24.0.0-alpha.9","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"engines":{"node":">= 6"},"main":"build/index.js","dist":{"shasum":"b7539fef9db284970c744144a951881378009bb8","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-24.0.0-alpha.9.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","gitHead":"c7caa7ba5904d0c61e586694cde5f536639e4afc","readmeFilename":"README.md","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"rubennorte","email":"rubennorte@gmail.com"},"maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_24.0.0-alpha.9_1545229408973_0.4128103925836979"},"_hasShrinkwrap":false},"24.0.0-alpha.10":{"_id":"jest-docblock@24.0.0-alpha.10","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"24.0.0-alpha.10","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"engines":{"node":">= 6"},"main":"build/index.js","dist":{"shasum":"e8806f327f80928f96133627289b974d28da38f8","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-24.0.0-alpha.10.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","gitHead":"722049ccd66947d48296dcb666bc99fccab86065","readmeFilename":"README.md","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"rubennorte","email":"rubennorte@gmail.com"},"maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_24.0.0-alpha.10_1547053333443_0.041063396613413294"},"_hasShrinkwrap":false},"24.0.0-alpha.11":{"_id":"jest-docblock@24.0.0-alpha.11","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"24.0.0-alpha.11","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"engines":{"node":">= 6"},"main":"build/index.js","dist":{"shasum":"c8077b5e4228ace6ed5560a4727003ae5b6d5d70","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-24.0.0-alpha.11.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","gitHead":"6a066c6afe2ae08669a27d3b703a6cf0d898e7b7","readmeFilename":"README.md","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"rubennorte","email":"rubennorte@gmail.com"},"maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_24.0.0-alpha.11_1547145155582_0.8969480659216598"},"_hasShrinkwrap":false},"24.0.0-alpha.12":{"_id":"jest-docblock@24.0.0-alpha.12","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"24.0.0-alpha.12","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"engines":{"node":">= 6"},"main":"build/index.js","dist":{"shasum":"ae9290bd09e6e24477b7bc270b4590cc84900771","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-24.0.0-alpha.12.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","gitHead":"4f2bcb861d1f0fb150c05970362e52a38c31f67e","readmeFilename":"README.md","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"rubennorte","email":"rubennorte@gmail.com"},"maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_24.0.0-alpha.12_1547218716747_0.5186678314296307"},"_hasShrinkwrap":false},"24.0.0-alpha.13":{"_id":"jest-docblock@24.0.0-alpha.13","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"24.0.0-alpha.13","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"engines":{"node":">= 6"},"main":"build/index.js","dist":{"shasum":"93d440c94a4aad4d1b8ae88ca9bfb58d10290201","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-24.0.0-alpha.13.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","gitHead":"6de22dde9a10f775adc7b6f80080bdd224f6ae31","readmeFilename":"README.md","_nodeVersion":"8.11.3","_npmVersion":"lerna/3.10.5/node@v8.11.3+x64 (darwin)","maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmUser":{"name":"rubennorte","email":"rubennorte@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_24.0.0-alpha.13_1548256519103_0.5241171205593838"},"_hasShrinkwrap":false},"24.0.0-alpha.15":{"_id":"jest-docblock@24.0.0-alpha.15","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"24.0.0-alpha.15","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"engines":{"node":">= 6"},"main":"build/index.js","dist":{"shasum":"7b448ec158c4535cd1aa544849d6c77cf4299390","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-24.0.0-alpha.15.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","gitHead":"28971c5f794330e8acc6861288e6daafcd32238e","readmeFilename":"README.md","_nodeVersion":"8.11.3","_npmVersion":"lerna/3.10.5/node@v8.11.3+x64 (darwin)","maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmUser":{"name":"rubennorte","email":"rubennorte@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_24.0.0-alpha.15_1548352341297_0.2274360779980149"},"_hasShrinkwrap":false},"24.0.0-alpha.16":{"_id":"jest-docblock@24.0.0-alpha.16","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"24.0.0-alpha.16","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"engines":{"node":">= 6"},"main":"build/index.js","dist":{"shasum":"3d99268216b3b7722849263816573c976e9f5fcc","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-24.0.0-alpha.16.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","gitHead":"634e5a54f46b2a62d1dc81a170562e6f4e55ad60","readmeFilename":"README.md","_nodeVersion":"8.11.3","_npmVersion":"lerna/3.10.5/node@v8.11.3+x64 (darwin)","maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmUser":{"name":"rubennorte","email":"rubennorte@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_24.0.0-alpha.16_1548423712163_0.6475145078117917"},"_hasShrinkwrap":false},"24.0.0":{"_id":"jest-docblock@24.0.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"24.0.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^2.1.0"},"engines":{"node":">= 6"},"main":"build/index.js","dist":{"shasum":"54d77a188743e37f62181a91a01eb9222289f94e","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-24.0.0.tgz"},"gitHead":"634e5a54f46b2a62d1dc81a170562e6f4e55ad60","_nodeVersion":"8.11.3","_npmVersion":"lerna/3.10.5/node@v8.11.3+x64 (darwin)","maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmUser":{"name":"rubennorte","email":"rubennorte@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_24.0.0_1548428685554_0.34466242541931136"},"_hasShrinkwrap":false},"24.2.0-alpha.0":{"_id":"jest-docblock@24.2.0-alpha.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"24.2.0-alpha.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/detect-newline":"^2.1.0"},"dependencies":{"detect-newline":"^2.1.0"},"engines":{"node":">= 6"},"main":"build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"a727b4194cd8393f6fd66a057a0bba1f9f55a400","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-24.2.0-alpha.0.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","gitHead":"800f2f803d01c8ae194d71b251e4965dd70e5bf2","readmeFilename":"README.md","_nodeVersion":"8.11.3","_npmVersion":"lerna/3.13.1/node@v8.11.3+x64 (darwin)","maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmUser":{"name":"rubennorte","email":"rubennorte@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_24.2.0-alpha.0_1551797182368_0.42438801429020945"},"_hasShrinkwrap":false},"24.2.0":{"_id":"jest-docblock@24.2.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"24.2.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/detect-newline":"^2.1.0"},"dependencies":{"detect-newline":"^2.1.0"},"engines":{"node":">= 6"},"main":"build/index.js","dist":{"shasum":"7fe1d22f7636db4f4f66d07052a3d08f63748a72","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-24.2.0.tgz"},"gitHead":"d23f1ef18567763ab0133372e376ae5026a23d4b","_nodeVersion":"8.10.0","_npmVersion":"lerna/3.13.1/node@v8.10.0+x64 (darwin)","maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"}],"_npmUser":{"name":"mjesun","email":"mjesun@hotmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_24.2.0_1551784963707_0.7523664125503529"},"_hasShrinkwrap":false},"24.3.0":{"_id":"jest-docblock@24.3.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"24.3.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/detect-newline":"^2.1.0"},"dependencies":{"detect-newline":"^2.1.0"},"engines":{"node":">= 6"},"main":"build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"b9c32dac70f72e4464520d2ba4aec02ab14db5dd","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-24.3.0.tgz"},"gitHead":"3a7a4f3a3f5489ac8e07dcddf76bb949c482ec87","_nodeVersion":"8.11.3","_npmVersion":"lerna/3.13.1/node@v8.11.3+x64 (darwin)","maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"mjesun@hotmail.com","name":"mjesun"},{"email":"rubennorte@gmail.com","name":"rubennorte"}],"_npmUser":{"name":"rubennorte","email":"rubennorte@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_24.3.0_1551963559067_0.5589869587355765"},"_hasShrinkwrap":false},"24.9.0":{"_id":"jest-docblock@24.9.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"24.9.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/detect-newline":"^2.1.0"},"dependencies":{"detect-newline":"^2.1.0"},"engines":{"node":">= 6"},"main":"build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"7970201802ba560e1c4092cc25cbedf5af5a8ce2","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-24.9.0.tgz"},"gitHead":"9ad0f4bc6b8bdd94989804226c28c9960d9da7d1","_nodeVersion":"11.12.0","_npmVersion":"lerna/3.15.0/node@v11.12.0+x64 (darwin)","maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"rubennorte@gmail.com","name":"rubennorte"},{"email":"scott.hovestadt@gmail.com","name":"scotthovestadt"}],"_npmUser":{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_24.9.0_1565934946555_0.7586727128820485"},"_hasShrinkwrap":false},"25.0.0":{"_id":"jest-docblock@25.0.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"25.0.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":">= 8"},"main":"build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"9a59fa463d2725737fc1dce2893048e6dc58d97b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-25.0.0.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","gitHead":"ff9269be05fd8316e95232198fce3463bf2f270e","readmeFilename":"README.md","_nodeVersion":"11.12.0","_npmVersion":"lerna/3.16.4/node@v11.12.0+x64 (darwin)","maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"jean@lauliac.com","name":"jeanlauliac"},{"email":"rubennorte@gmail.com","name":"rubennorte"},{"email":"scott.hovestadt@gmail.com","name":"scotthovestadt"}],"_npmUser":{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_25.0.0_1566444224394_0.6340661382094768"},"_hasShrinkwrap":false},"25.1.0":{"_id":"jest-docblock@25.1.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"25.1.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":">= 8.3"},"main":"build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"0f44bea3d6ca6dfc38373d465b347c8818eccb64","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-25.1.0.tgz"},"gitHead":"170eee11d03b0ed5c60077982fdbc3bafd403638","_nodeVersion":"10.16.0","_npmVersion":"lerna/3.20.2/node@v10.16.0+x64 (darwin)","maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"davidzilburg@gmail.com","name":"davidzilburg"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"rubennorte@gmail.com","name":"rubennorte"},{"email":"scott.hovestadt@gmail.com","name":"scotthovestadt"}],"_npmUser":{"name":"davidzilburg","email":"davidzilburg@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_25.1.0_1579654784461_0.3751168580733437"},"_hasShrinkwrap":false},"25.2.0-alpha.86":{"_id":"jest-docblock@25.2.0-alpha.86","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"25.2.0-alpha.86","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":">= 8.3"},"main":"build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"c3b3ea96dfa422ecd47f3991f7244626d1be2913","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-25.2.0-alpha.86.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","gitHead":"cd98198c9397d8b69c55155d7b224d62ef117a90","readmeFilename":"README.md","_nodeVersion":"12.14.1","_npmVersion":"lerna/3.20.2/node@v12.14.1+x64 (darwin)","maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"davidzilburg@gmail.com","name":"davidzilburg"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"rubennorte@gmail.com","name":"rubennorte"},{"email":"scott.hovestadt@gmail.com","name":"scotthovestadt"},{"email":"sbekkhus91@gmail.com","name":"simenb"}],"_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_25.2.0-alpha.86_1585156570953_0.054631581519205774"},"_hasShrinkwrap":false},"25.2.0":{"_id":"jest-docblock@25.2.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"25.2.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":">= 8.3"},"main":"build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"b1b78e275131bcaa9a5722e663545ed949c278ee","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-25.2.0.tgz"},"gitHead":"9f0339c1c762e39f869f7df63e88470287728b93","_nodeVersion":"12.14.1","_npmVersion":"lerna/3.20.2/node@v12.14.1+x64 (darwin)","maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"davidzilburg@gmail.com","name":"davidzilburg"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"rubennorte@gmail.com","name":"rubennorte"},{"email":"scott.hovestadt@gmail.com","name":"scotthovestadt"},{"email":"sbekkhus91@gmail.com","name":"simenb"}],"_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_25.2.0_1585159074840_0.2619149853091376"},"_hasShrinkwrap":false},"25.2.1-alpha.1":{"_id":"jest-docblock@25.2.1-alpha.1","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"25.2.1-alpha.1","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":">= 8.3"},"main":"build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"bd79bf58e166615f7e5ccec33dce0feb4a52faaa","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-25.2.1-alpha.1.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","gitHead":"5cc2ccdacb1b2433581222252e43cb5a1f6861a9","readmeFilename":"README.md","_nodeVersion":"12.14.1","_npmVersion":"lerna/3.20.2/node@v12.14.1+x64 (darwin)","maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"davidzilburg@gmail.com","name":"davidzilburg"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"rubennorte@gmail.com","name":"rubennorte"},{"email":"scott.hovestadt@gmail.com","name":"scotthovestadt"},{"email":"sbekkhus91@gmail.com","name":"simenb"}],"_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_25.2.1-alpha.1_1585209252761_0.7433017390459422"},"_hasShrinkwrap":false},"25.2.1-alpha.2":{"_id":"jest-docblock@25.2.1-alpha.2","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"25.2.1-alpha.2","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":">= 8.3"},"main":"build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"0ef5ac870f0263d6b66301d07d8fb1a5a05fd763","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-25.2.1-alpha.2.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","gitHead":"79b7ab67c63d3708f9689e25fbc0e8b0094bd019","readmeFilename":"README.md","_nodeVersion":"12.14.1","_npmVersion":"lerna/3.20.2/node@v12.14.1+x64 (darwin)","maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"davidzilburg@gmail.com","name":"davidzilburg"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"rubennorte@gmail.com","name":"rubennorte"},{"email":"scott.hovestadt@gmail.com","name":"scotthovestadt"},{"email":"sbekkhus91@gmail.com","name":"simenb"}],"_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_25.2.1-alpha.2_1585210221539_0.6964604766967781"},"_hasShrinkwrap":false},"25.2.3":{"_id":"jest-docblock@25.2.3","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"25.2.3","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":">= 8.3"},"main":"build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"ac45280c43d59e7139f9fbe5896c6e0320c01ebb","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-25.2.3.tgz"},"types":"build/index.d.ts","typesVersions":{"<3.8":{"build/*":["build/ts3.4/*"]}},"gitHead":"6f8bf80c38567ba076ae979af2dedb42b285b2d5","_nodeVersion":"12.14.1","_npmVersion":"lerna/3.20.2/node@v12.14.1+x64 (darwin)","maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"davidzilburg@gmail.com","name":"davidzilburg"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"rubennorte@gmail.com","name":"rubennorte"},{"email":"scott.hovestadt@gmail.com","name":"scotthovestadt"},{"email":"sbekkhus91@gmail.com","name":"simenb"}],"_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_25.2.3_1585254281171_0.9900240777528733"},"_hasShrinkwrap":false},"25.2.6":{"_id":"jest-docblock@25.2.6","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"25.2.6","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":">= 8.3"},"main":"build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"4b09f1e7b7d6b3f39242ef3647ac7106770f722b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-25.2.6.tgz"},"types":"build/index.d.ts","typesVersions":{"<3.8":{"build/*":["build/ts3.4/*"]}},"gitHead":"43207b743df164e9e58bd483dd9167b9084da18b","_nodeVersion":"12.14.1","_npmVersion":"lerna/3.20.2/node@v12.14.1+x64 (darwin)","maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"davidzilburg@gmail.com","name":"davidzilburg"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"rubennorte@gmail.com","name":"rubennorte"},{"email":"scott.hovestadt@gmail.com","name":"scotthovestadt"},{"email":"sbekkhus91@gmail.com","name":"simenb"}],"_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_25.2.6_1585823348030_0.3284774691536134"},"_hasShrinkwrap":false},"25.3.0":{"_id":"jest-docblock@25.3.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"25.3.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":">= 8.3"},"main":"build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"8b777a27e3477cd77a168c05290c471a575623ef","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-25.3.0.tgz"},"types":"build/index.d.ts","typesVersions":{"<3.8":{"build/*":["build/ts3.4/*"]}},"gitHead":"45a4936d96d74cdee6b91122a51a556e3ebe6dc8","_nodeVersion":"12.16.1","_npmVersion":"lerna/3.20.2/node@v12.16.1+x64 (darwin)","maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"davidzilburg@gmail.com","name":"davidzilburg"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"rubennorte@gmail.com","name":"rubennorte"},{"email":"scott.hovestadt@gmail.com","name":"scotthovestadt"},{"email":"sbekkhus91@gmail.com","name":"simenb"}],"_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_25.3.0_1586352057773_0.31066290370675054"},"_hasShrinkwrap":false},"26.0.0-alpha.0":{"_id":"jest-docblock@26.0.0-alpha.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"26.0.0-alpha.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":">= 10.14.2"},"main":"build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"40156b80323c0c6bc662c4b5d8546d77080000b7","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-26.0.0-alpha.0.tgz"},"types":"build/index.d.ts","gitHead":"ba962e7e9669a4a2f723c2536c97462c8ddfff2d","_nodeVersion":"12.16.3","_npmVersion":"lerna/3.20.2/node@v12.16.3+x64 (darwin)","maintainers":[{"email":"aaron@abramov.io","name":"aaronabramov"},{"email":"christoph.pojer@gmail.com","name":"cpojer"},{"email":"davidzilburg@gmail.com","name":"davidzilburg"},{"email":"opensource+npm@fb.com","name":"fb"},{"email":"rubennorte@gmail.com","name":"rubennorte"},{"email":"scott.hovestadt@gmail.com","name":"scotthovestadt"},{"email":"sbekkhus91@gmail.com","name":"simenb"}],"_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_26.0.0-alpha.0_1588421571896_0.8862767760268666"},"_hasShrinkwrap":false},"26.0.0":{"_id":"jest-docblock@26.0.0","name":"jest-docblock","version":"26.0.0","repository":{"type":"git","url":"https://github.com/facebook/jest.git"},"license":"MIT","directories":null,"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":">= 10.14.2"},"main":"build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"3e2fa20899fc928cb13bd0ff68bd3711a36889b5","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-26.0.0.tgz"},"types":"build/index.d.ts","gitHead":"343532a21f640ac2709c4076eef57e52279542e1"},"27.0.0-next.0":{"_id":"jest-docblock@27.0.0-next.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"27.0.0-next.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"c65a5d914d2108c70541ea195dc6fba8a32d28b4","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-27.0.0-next.0.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","types":"./build/index.d.ts","gitHead":"4f77c70602cab8419794f10fa39510f13baafef8","readmeFilename":"README.md","_nodeVersion":"14.15.0","_npmVersion":"lerna/3.22.1/node@v14.15.0+x64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"cpojer","email":"christoph.pojer@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_27.0.0-next.0_1607189107497_0.5339460398334825"},"_hasShrinkwrap":false},"27.0.0-next.10":{"_id":"jest-docblock@27.0.0-next.10","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"27.0.0-next.10","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"690fad00076503c4339386b7de8a6745a95327d9","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-27.0.0-next.10.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","types":"./build/index.d.ts","gitHead":"6f44529270310b7dbdf9a0b72b21b5cd50fda4b1","readmeFilename":"README.md","_nodeVersion":"14.17.0","_npmVersion":"lerna/4.0.0/node@v14.17.0+x64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_27.0.0-next.10_1621519872133_0.8513620512657898"},"_hasShrinkwrap":false},"27.0.1":{"_id":"jest-docblock@27.0.1","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"27.0.1","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"bd9752819b49fa4fab1a50b73eb58c653b962e8b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-27.0.1.tgz"},"types":"./build/index.d.ts","gitHead":"2cb20e945a26b2c9867b30b787e81f6317e59aa1","_nodeVersion":"14.17.0","_npmVersion":"lerna/4.0.0/node@v14.17.0+x64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_27.0.1_1621937183784_0.6576070457212186"},"_hasShrinkwrap":false},"27.0.6":{"_id":"jest-docblock@27.0.6","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"27.0.6","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"cc78266acf7fe693ca462cbbda0ea4e639e4e5f3","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-27.0.6.tgz"},"types":"./build/index.d.ts","gitHead":"d257d1c44ba62079bd4307ae78ba226d47c56ac9","_nodeVersion":"14.17.1","_npmVersion":"lerna/4.0.0/node@v14.17.1+x64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_27.0.6_1624899931213_0.9796901051384657"},"_hasShrinkwrap":false},"27.4.0":{"_id":"jest-docblock@27.4.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"27.4.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"06c78035ca93cbbb84faf8fce64deae79a59f69f","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-27.4.0.tgz"},"types":"./build/index.d.ts","gitHead":"0dc6dde296550370ade2574d6665748fed37f9c9","_nodeVersion":"16.13.0","_npmVersion":"lerna/4.0.0/node@v16.13.0+x64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_27.4.0_1638193014661_0.48127315781708724"},"_hasShrinkwrap":false},"27.5.0":{"_id":"jest-docblock@27.5.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"27.5.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"096fa3a8b55d019a954ef7cc205c791bf94b2352","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-27.5.0.tgz"},"types":"./build/index.d.ts","gitHead":"247cbe6026a590deaf0d23edecc7b2779a4aace9","_nodeVersion":"16.13.2","_npmVersion":"lerna/4.0.0/node@v16.13.2+x64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_27.5.0_1644055157741_0.44295075307886855"},"_hasShrinkwrap":false},"27.5.1":{"_id":"jest-docblock@27.5.1","name":"jest-docblock","version":"27.5.1","repository":{"type":"git","url":"https://github.com/facebook/jest.git"},"license":"MIT","directories":null,"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"14092f364a42c6108d42c33c8cf30e058e25f6c0","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-27.5.1.tgz"},"types":"./build/index.d.ts","gitHead":"67c1aa20c5fec31366d733e901fee2b981cb1850"},"28.0.0-alpha.0":{"_id":"jest-docblock@28.0.0-alpha.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"28.0.0-alpha.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^12.13.0 || ^14.15.0 || ^16.13.0 || >=17.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"8432f49b4375ee504388329d32f27e6fe9e4b259","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-28.0.0-alpha.0.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","types":"./build/index.d.ts","gitHead":"89275b08977065d98e42ad71fcf223f4ad169f09","readmeFilename":"README.md","_nodeVersion":"16.14.0","_npmVersion":"lerna/4.0.0/node@v16.14.0+x64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_28.0.0-alpha.0_1644517046361_0.14727135094447363"},"_hasShrinkwrap":false},"28.0.0-alpha.3":{"_id":"jest-docblock@28.0.0-alpha.3","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"28.0.0-alpha.3","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^12.13.0 || ^14.15.0 || ^16.13.0 || >=17.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"48ce331e559dd06514150c73196a46d4a4bec018","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-28.0.0-alpha.3.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","types":"./build/index.d.ts","gitHead":"fc30b27bd94bb7ebeaadc72626ebbdba535150d2","readmeFilename":"README.md","_nodeVersion":"16.14.0","_npmVersion":"lerna/4.0.0/node@v16.14.0+x64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_28.0.0-alpha.3_1645112539978_0.7928016773689945"},"_hasShrinkwrap":false},"28.0.0-alpha.6":{"_id":"jest-docblock@28.0.0-alpha.6","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"28.0.0-alpha.6","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^12.13.0 || ^14.15.0 || ^16.13.0 || >=17.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"d03b691efadfe25844281671bae13d97b7d7ea34","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-28.0.0-alpha.6.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","types":"./build/index.d.ts","gitHead":"6284ada4adb7008f5f8673b1a7b1c789d2e508fb","readmeFilename":"README.md","_nodeVersion":"16.14.0","_npmVersion":"lerna/4.0.0/node@v16.14.0+x64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_28.0.0-alpha.6_1646123542300_0.7334649617780589"},"_hasShrinkwrap":false},"28.0.0":{"_id":"jest-docblock@28.0.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"28.0.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^12.13.0 || ^14.15.0 || ^16.13.0 || >=17.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"7f39dc998da47dac243157fbe7fbc1e993ab0eb8","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-28.0.0.tgz"},"types":"./build/index.d.ts","gitHead":"8f9b812faf8e4d241d560a8574f0c6ed20a89365","_nodeVersion":"16.14.2","_npmVersion":"lerna/4.0.0/node@v16.14.2+x64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_28.0.0_1650888483010_0.4671647473750611"},"_hasShrinkwrap":false},"28.0.2":{"_id":"jest-docblock@28.0.2","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"28.0.2","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"3cab8abea53275c9d670cdca814fc89fba1298c2","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-28.0.2.tgz"},"types":"./build/index.d.ts","gitHead":"279ee6658d763f024d51f340fab6a37c17d94502","_nodeVersion":"16.15.0","_npmVersion":"lerna/4.0.0/node@v16.15.0+x64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_28.0.2_1651045440008_0.8569264813941531"},"_hasShrinkwrap":false},"28.1.1":{"_id":"jest-docblock@28.1.1","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"28.1.1","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"6f515c3bf841516d82ecd57a62eed9204c2f42a8","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-28.1.1.tgz"},"types":"./build/index.d.ts","gitHead":"eb954f8874960920ac50a8f976bb333fbb06ada9","_nodeVersion":"16.15.1","_npmVersion":"lerna/4.0.0/node@v16.15.1+x64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_28.1.1_1654582175377_0.6119411582261309"},"_hasShrinkwrap":false},"29.0.0-alpha.0":{"_id":"jest-docblock@29.0.0-alpha.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"29.0.0-alpha.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^14.15.0 || ^16.10.0 || >=18.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"6182cf89756cf43f722d9bdc7b0a5b16b0fef03e","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-29.0.0-alpha.0.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","types":"./build/index.d.ts","gitHead":"6862afb00307b52f32eedee977a9b3041355f184","readmeFilename":"README.md","_nodeVersion":"16.15.1","_npmVersion":"lerna/4.0.0/node@v16.15.1+x64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_29.0.0-alpha.0_1658095625746_0.057603445851248436"},"_hasShrinkwrap":false},"29.0.0-alpha.2":{"_id":"jest-docblock@29.0.0-alpha.2","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"29.0.0-alpha.2","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^14.15.0 || ^16.10.0 || >=18.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"f71bb4c5c739e56978a2be09c1b0bc4f1c5e2868","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-29.0.0-alpha.2.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","types":"./build/index.d.ts","gitHead":"53c11a22213dfde9901678a3fdeb438dc039066a","readmeFilename":"README.md","_nodeVersion":"16.15.1","_npmVersion":"lerna/1.9.1/node@v16.15.1+x64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_29.0.0-alpha.2_1659742345192_0.9810309997029609"},"_hasShrinkwrap":false},"29.0.0-alpha.3":{"_id":"jest-docblock@29.0.0-alpha.3","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"29.0.0-alpha.3","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^14.15.0 || ^16.10.0 || >=18.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"6fec7deb660713e446bf99946bfbf70ce710a8ab","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-29.0.0-alpha.3.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","types":"./build/index.d.ts","gitHead":"09981873c55442e5e494d42012f518b7d3d41fbd","readmeFilename":"README.md","_nodeVersion":"16.15.1","_npmVersion":"lerna/1.10.0/node@v16.15.1+x64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_29.0.0-alpha.3_1659879691855_0.7028515028105788"},"_hasShrinkwrap":false},"29.0.0":{"_id":"jest-docblock@29.0.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"29.0.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^14.15.0 || ^16.10.0 || >=18.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"3151bcc45ed7f5a8af4884dcc049aee699b4ceae","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-29.0.0.tgz"},"types":"./build/index.d.ts","gitHead":"75006e46c76f6fda14bbc0548f86edb2ba087cd2","_nodeVersion":"16.17.0","_npmVersion":"lerna/1.10.0/node@v16.17.0+x64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_29.0.0_1661430804846_0.7351543802847218"},"_hasShrinkwrap":false},"29.2.0":{"_id":"jest-docblock@29.2.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"29.2.0","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^14.15.0 || ^16.10.0 || >=18.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"307203e20b637d97cee04809efc1d43afc641e82","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-29.2.0.tgz"},"types":"./build/index.d.ts","gitHead":"ee5b37a4f4433afcfffb0356cea47739d8092287","_nodeVersion":"16.17.0","_npmVersion":"lerna/1.11.3/node@v16.17.0+x64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_29.2.0_1665738821701_0.31167763142662896"},"_hasShrinkwrap":false},"29.4.2":{"_id":"jest-docblock@29.4.2","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"29.4.2","homepage":"https://github.com/facebook/jest#readme","repository":{"type":"git","url":"git+https://github.com/facebook/jest.git"},"bugs":{"url":"https://github.com/facebook/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^14.15.0 || ^16.10.0 || >=18.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"c78a95eedf9a24c0a6cc16cf2abdc4b8b0f2531b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-29.4.2.tgz"},"types":"./build/index.d.ts","gitHead":"f0fc92e8443f09546c7ec0472bf9bce44fe5898f","_nodeVersion":"16.19.0","_npmVersion":"lerna/1.13.0/node@v16.19.0+arm64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_29.4.2_1675777521709_0.5384985501314281"},"_hasShrinkwrap":false},"29.4.3":{"_id":"jest-docblock@29.4.3","name":"jest-docblock","version":"29.4.3","repository":{"type":"git","url":"https://github.com/facebook/jest.git"},"license":"MIT","directories":null,"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^14.15.0 || ^16.10.0 || >=18.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"90505aa89514a1c7dceeac1123df79e414636ea8","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-29.4.3.tgz"},"types":"./build/index.d.ts","gitHead":"a49c88610e49a3242576160740a32a2fe11161e1"},"29.6.3":{"_id":"jest-docblock@29.6.3","name":"jest-docblock","version":"29.6.3","repository":{"type":"git","url":"https://github.com/jestjs/jest.git"},"license":"MIT","directories":null,"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^14.15.0 || ^16.10.0 || >=18.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"293dca5188846c9f7c0c2b1bb33e5b11f21645f2","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-29.6.3.tgz"},"types":"./build/index.d.ts","gitHead":"fb7d95c8af6e0d65a8b65348433d8a0ea0725b5b"},"29.7.0":{"_id":"jest-docblock@29.7.0","name":"jest-docblock","version":"29.7.0","repository":{"type":"git","url":"https://github.com/jestjs/jest.git"},"license":"MIT","directories":null,"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^14.15.0 || ^16.10.0 || >=18.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"8fddb6adc3cdc955c93e2a87f61cfd350d5d119a","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-29.7.0.tgz"},"types":"./build/index.d.ts","gitHead":"4e56991693da7cd4c3730dc3579a1dd1403ee630"},"30.0.0-alpha.0":{"_id":"jest-docblock@30.0.0-alpha.0","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"30.0.0-alpha.0","homepage":"https://github.com/jestjs/jest#readme","repository":{"type":"git","url":"git+https://github.com/jestjs/jest.git"},"bugs":{"url":"https://github.com/jestjs/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^16.10.0 || ^18.12.0 || >=20.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"3d398a0e88a8c4ef0855e25fdec7ef98fc5a8336","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-30.0.0-alpha.0.tgz"},"types":"./build/index.d.ts","gitHead":"780ae28333df4d188b2ef78bd19d4ed5bc53562d","_nodeVersion":"20.9.0","_npmVersion":"lerna/1.13.0/node@v20.9.0+arm64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_30.0.0-alpha.0_1698671619560_0.9495151058754323"},"_hasShrinkwrap":false},"30.0.0-alpha.1":{"_id":"jest-docblock@30.0.0-alpha.1","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"30.0.0-alpha.1","homepage":"https://github.com/jestjs/jest#readme","repository":{"type":"git","url":"git+https://github.com/jestjs/jest.git"},"bugs":{"url":"https://github.com/jestjs/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^16.10.0 || ^18.12.0 || >=20.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"b6d28d89db3ffebe1c9f74eb683d4d0034f718ba","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-30.0.0-alpha.1.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","types":"./build/index.d.ts","gitHead":"d005cb2505c041583e0c5636d006e08666a54b63","readmeFilename":"README.md","_nodeVersion":"20.9.0","_npmVersion":"lerna/1.13.0/node@v20.9.0+arm64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_30.0.0-alpha.1_1698672765997_0.5566293353350371"},"_hasShrinkwrap":false},"30.0.0-alpha.2":{"_id":"jest-docblock@30.0.0-alpha.2","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"30.0.0-alpha.2","homepage":"https://github.com/jestjs/jest#readme","repository":{"type":"git","url":"git+https://github.com/jestjs/jest.git"},"bugs":{"url":"https://github.com/jestjs/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^16.10.0 || ^18.12.0 || >=20.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"f3d194506b1a0a0352dea4fa045ecc98742a3f98","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-30.0.0-alpha.2.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","types":"./build/index.d.ts","gitHead":"c04d13d7abd22e47b0997f6027886aed225c9ce4","readmeFilename":"README.md","_nodeVersion":"20.9.0","_npmVersion":"lerna/2.7.0/node@v20.9.0+arm64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_30.0.0-alpha.2_1700126894578_0.9266329609663679"},"_hasShrinkwrap":false},"30.0.0-alpha.3":{"_id":"jest-docblock@30.0.0-alpha.3","name":"jest-docblock","description":"`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.","version":"30.0.0-alpha.3","homepage":"https://github.com/jestjs/jest#readme","repository":{"type":"git","url":"git+https://github.com/jestjs/jest.git"},"bugs":{"url":"https://github.com/jestjs/jest/issues"},"license":"MIT","directories":{},"devDependencies":{"@types/node":"*"},"dependencies":{"detect-newline":"^3.0.0"},"engines":{"node":"^16.10.0 || ^18.12.0 || >=20.0.0"},"main":"./build/index.js","publishConfig":{"access":"public"},"dist":{"shasum":"67342d249766d5d354f983e303de6e053a814d23","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/jest-docblock/-/jest-docblock-30.0.0-alpha.3.tgz"},"readme":"# jest-docblock\n\n`jest-docblock` is a package that can extract and parse a specially-formatted comment called a \"docblock\" at the top of a file.\n\nA docblock looks like this:\n\n```js\n/**\n * Stuff goes here!\n */\n```\n\nDocblocks can contain pragmas, which are words prefixed by `@`:\n\n```js\n/**\n * Pragma incoming!\n *\n * @flow\n */\n```\n\nPragmas can also take arguments:\n\n```js\n/**\n * Check this out:\n *\n * @myPragma it is so cool\n */\n```\n\n`jest-docblock` can:\n\n- extract the docblock from some code as a string\n- parse a docblock string's pragmas into an object\n- print an object and some comments back to a string\n\n## Installation\n\n```sh\n# with yarn\n$ yarn add jest-docblock\n# with npm\n$ npm install jest-docblock\n```\n\n## Usage\n\n```js\nconst code = `\n/**\n * Everything is awesome!\n *\n * @everything is:awesome\n * @flow\n */\n\n export const everything = Object.create(null);\n export default function isAwesome(something) {\n   return something === everything;\n }\n`;\n\nconst {\n  extract,\n  strip,\n  parse,\n  parseWithComments,\n  print,\n} = require('jest-docblock');\n\nconst docblock = extract(code);\nconsole.log(docblock); // \"/**\\n * Everything is awesome!\\n * \\n * @everything is:awesome\\n * @flow\\n */\"\n\nconst stripped = strip(code);\nconsole.log(stripped); // \"export const everything = Object.create(null);\\n export default function isAwesome(something) {\\n return something === everything;\\n }\"\n\nconst pragmas = parse(docblock);\nconsole.log(pragmas); // { everything: \"is:awesome\", flow: \"\" }\n\nconst parsed = parseWithComments(docblock);\nconsole.log(parsed); // { comments: \"Everything is awesome!\", pragmas: { everything: \"is:awesome\", flow: \"\" } }\n\nconsole.log(print({pragmas, comments: 'hi!'})); // /**\\n * hi!\\n *\\n * @everything is:awesome\\n * @flow\\n */;\n```\n\n## API Documentation\n\n### `extract(contents: string): string`\n\nExtracts a docblock from some file contents. Returns the docblock contained in `contents`. If `contents` did not contain a docblock, it will return the empty string (`\"\"`).\n\n### `strip(contents: string): string`\n\nStrips the top docblock from a file and return the result. If a file does not have a docblock at the top, then return the file unchanged.\n\n### `parse(docblock: string): {[key: string]: string | string[] }`\n\nParses the pragmas in a docblock string into an object whose keys are the pragma tags and whose values are the arguments to those pragmas.\n\n### `parseWithComments(docblock: string): { comments: string, pragmas: {[key: string]: string | string[]} }`\n\nSimilar to `parse` except this method also returns the comments from the docblock. Useful when used with `print()`.\n\n### `print({ comments?: string, pragmas?: {[key: string]: string | string[]} }): string`\n\nPrints an object of key-value pairs back into a docblock. If `comments` are provided, they will be positioned on the top of the docblock.\n","types":"./build/index.d.ts","gitHead":"e267aff33d105399f2134bad7c8f82285104f3da","readmeFilename":"README.md","_nodeVersion":"20.11.1","_npmVersion":"lerna/3.2.1/node@v20.11.1+arm64 (darwin)","_npmUser":{"name":"simenb","email":"sbekkhus91@gmail.com"},"maintainers":[{"name":"scotthovestadt","email":"scott.hovestadt@gmail.com"},{"name":"rubennorte","email":"rubennorte@gmail.com"},{"name":"simenb","email":"sbekkhus91@gmail.com"},{"name":"fb","email":"opensource+npm@fb.com"},{"name":"aaronabramov","email":"aaron@abramov.io"},{"name":"davidzilburg","email":"davidzilburg@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/jest-docblock_30.0.0-alpha.3_1708427327883_0.4722443502366409"},"_hasShrinkwrap":false}},"time":{"created":"2022-11-21T18:11:45Z","modified":"2024-02-20T14:44:35Z","0.0.0":"2022-11-21T18:11:45Z","19.1.0-alpha.eed82034":"2022-11-21T18:11:45Z","19.2.0-alpha.993e64af":"2022-11-21T18:11:45Z","19.3.0-alpha.85402254":"2022-11-21T18:11:45Z","20.0.0":"2022-11-21T18:11:45Z","20.0.1":"2022-11-21T18:11:45Z","20.0.2":"2022-11-21T18:11:45Z","20.0.3":"2022-11-21T18:11:45Z","20.1.0-alpha.1":"2022-11-21T18:11:45Z","20.1.0-alpha.2":"2022-11-21T18:11:45Z","20.1.0-alpha.3":"2022-11-21T18:11:45Z","20.1.0-beta.1":"2022-11-21T18:11:45Z","20.1.0-chi.1":"2022-11-21T18:11:45Z","20.1.0-delta.1":"2022-11-21T18:11:45Z","20.1.0-delta.2":"2022-11-21T18:11:45Z","20.1.0-delta.3":"2022-11-21T18:11:45Z","20.1.0-delta.4":"2022-11-21T18:11:45Z","20.1.0-delta.5":"2022-11-21T18:11:45Z","20.1.0-echo.1":"2022-11-21T18:11:45Z","21.0.0-alpha.1":"2022-11-21T18:11:45Z","21.0.0-alpha.2":"2022-11-21T18:11:45Z","21.0.0-beta.1":"2022-11-21T18:11:45Z","21.0.0":"2022-11-21T18:11:45Z","21.0.2":"2022-11-21T18:11:45Z","21.1.0":"2022-11-21T18:11:45Z","21.2.0":"2022-11-21T18:11:45Z","21.3.0-alpha.1e3ee68e":"2022-11-21T18:11:45Z","21.3.0-alpha.eff7a1cf":"2022-11-21T18:11:45Z","21.3.0-beta.1":"2022-11-21T18:11:45Z","21.3.0-beta.2":"2022-11-21T18:11:45Z","21.3.0-beta.3":"2022-11-21T18:11:45Z","21.3.0-beta.4":"2022-11-21T18:11:45Z","21.3.0-beta.5":"2022-11-21T18:11:45Z","21.3.0-beta.6":"2022-11-21T18:11:45Z","21.3.0-beta.7":"2022-11-21T18:11:45Z","21.3.0-beta.8":"2022-11-21T18:11:45Z","21.3.0-beta.9":"2022-11-21T18:11:45Z","21.3.0-beta.10":"2022-11-21T18:11:45Z","21.3.0-beta.11":"2022-11-21T18:11:45Z","21.3.0-beta.12":"2022-11-21T18:11:45Z","21.3.0-beta.13":"2022-11-21T18:11:45Z","21.3.0-beta.14":"2022-11-21T18:11:45Z","21.3.0-beta.15":"2022-11-21T18:11:45Z","22.0.0":"2022-11-21T18:11:45Z","22.0.1":"2022-11-21T18:11:45Z","22.0.2":"2022-11-21T18:11:45Z","22.0.3":"2022-11-21T18:11:45Z","22.0.6":"2022-11-21T18:11:45Z","22.1.0":"2022-11-21T18:11:45Z","22.2.0":"2022-11-21T18:11:45Z","22.2.2":"2022-11-21T18:11:45Z","22.4.0":"2022-11-21T18:11:45Z","22.4.3":"2022-11-21T18:11:45Z","23.0.1":"2022-11-21T18:11:45Z","23.2.0":"2022-11-21T18:11:45Z","24.0.0-alpha.0":"2022-11-21T18:11:45Z","24.0.0-alpha.1":"2022-11-21T18:11:45Z","24.0.0-alpha.2":"2022-11-21T18:11:45Z","24.0.0-alpha.4":"2022-11-21T18:11:45Z","24.0.0-alpha.5":"2022-11-21T18:11:45Z","24.0.0-alpha.6":"2022-11-21T18:11:45Z","24.0.0-alpha.7":"2022-11-21T18:11:45Z","24.0.0-alpha.9":"2022-11-21T18:11:45Z","24.0.0-alpha.10":"2022-11-21T18:11:45Z","24.0.0-alpha.11":"2022-11-21T18:11:45Z","24.0.0-alpha.12":"2022-11-21T18:11:45Z","24.0.0-alpha.13":"2022-11-21T18:11:45Z","24.0.0-alpha.15":"2022-11-21T18:11:45Z","24.0.0-alpha.16":"2022-11-21T18:11:45Z","24.0.0":"2022-11-21T18:11:45Z","24.2.0-alpha.0":"2022-11-21T18:11:45Z","24.2.0":"2022-11-21T18:11:45Z","24.3.0":"2022-11-21T18:11:45Z","24.9.0":"2022-11-21T18:11:45Z","25.0.0":"2022-11-21T18:11:45Z","25.1.0":"2022-11-21T18:11:45Z","25.2.0-alpha.86":"2022-11-21T18:11:45Z","25.2.0":"2022-11-21T18:11:45Z","25.2.1-alpha.1":"2022-11-21T18:11:45Z","25.2.1-alpha.2":"2022-11-21T18:11:45Z","25.2.3":"2022-11-21T18:11:45Z","25.2.6":"2022-11-21T18:11:45Z","25.3.0":"2022-11-21T18:11:45Z","26.0.0-alpha.0":"2022-11-21T18:11:45Z","26.0.0":"2022-11-21T18:12:31Z","27.0.0-next.0":"2022-11-21T18:11:45Z","27.0.0-next.10":"2022-11-21T18:11:45Z","27.0.1":"2022-11-21T18:11:45Z","27.0.6":"2022-11-21T18:11:45Z","27.4.0":"2022-11-21T18:11:45Z","27.5.0":"2022-11-21T18:11:45Z","27.5.1":"2023-01-13T12:59:25Z","28.0.0-alpha.0":"2022-11-21T18:11:45Z","28.0.0-alpha.3":"2022-11-21T18:11:45Z","28.0.0-alpha.6":"2022-11-21T18:11:45Z","28.0.0":"2022-11-21T18:11:45Z","28.0.2":"2022-11-21T18:11:45Z","28.1.1":"2022-11-21T18:11:45Z","29.0.0-alpha.0":"2022-11-21T18:11:45Z","29.0.0-alpha.2":"2022-11-21T18:11:45Z","29.0.0-alpha.3":"2022-11-21T18:11:45Z","29.0.0":"2022-11-21T18:11:45Z","29.2.0":"2022-11-21T18:11:45Z","29.4.2":"2023-02-07T14:40:57Z","29.4.3":"2023-03-24T16:54:55Z","29.6.3":"2023-08-22T22:36:52Z","29.7.0":"2023-12-19T06:18:55Z","30.0.0-alpha.0":"2023-10-30T17:42:09Z","30.0.0-alpha.1":"2023-10-30T17:42:09Z","30.0.0-alpha.2":"2023-11-16T14:43:15Z","30.0.0-alpha.3":"2024-02-20T14:44:35Z"}}