{"_id":"body-parser","_rev":"f353a4b6-e939-45d5-badc-dcd5f0e3a3e4","name":"body-parser","dist-tags":{"latest":"1.20.2","next":"2.0.0-beta.2"},"versions":{"1.0.0":{"_id":"body-parser@1.0.0","name":"body-parser","description":"Connect's body parsing middleware","version":"1.0.0","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"repository":{"type":"git","url":"https://github.com/expressjs/body-parser.git"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"make test"},"directories":{},"devDependencies":{"connect":"*","mocha":"*","should":"*","supertest":"*"},"dependencies":{"raw-body":"~1.1.2","qs":"~0.6.6"},"dist":{"shasum":"95c8a2861cd150dc195d50840ea4614149455e80","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.0.0.tgz"},"_from":".","_npmVersion":"1.3.21","_npmUser":{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"}]},"1.0.1":{"_id":"body-parser@1.0.1","name":"body-parser","description":"Connect's body parsing middleware","version":"1.0.1","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"repository":{"type":"git","url":"https://github.com/expressjs/body-parser.git"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"make test"},"directories":{},"devDependencies":{"connect":"*","mocha":"*","should":"*","supertest":"*"},"dependencies":{"raw-body":"~1.1.2","qs":"~0.6.6"},"dist":{"shasum":"08a2d025ea286f982d5107ea8a2ba953708620e3","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.0.1.tgz"},"_from":".","_npmVersion":"1.4.4","_npmUser":{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"}]},"1.0.2":{"_id":"body-parser@1.0.2","name":"body-parser","description":"Connect's body parsing middleware","version":"1.0.2","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"repository":{"type":"git","url":"git://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"make test"},"directories":{},"devDependencies":{"connect":"*","mocha":"*","should":"*","supertest":"*"},"dependencies":{"type-is":"~1.1.0","raw-body":"~1.1.2","qs":"~0.6.6"},"dist":{"shasum":"3461479a3278fe00fcaebec3314bb54fc4f7b47c","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.0.2.tgz"},"_from":".","_npmVersion":"1.4.6","_npmUser":{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"}]},"1.1.0":{"_id":"body-parser@1.1.0","name":"body-parser","description":"Connect's body parsing middleware","version":"1.1.0","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"repository":{"type":"git","url":"git://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --reporter spec --bail"},"directories":{},"devDependencies":{"mocha":"~1.18.2","should":"~3.3.1","supertest":"~0.12.1"},"dependencies":{"type-is":"1.1.0","raw-body":"1.1.4","qs":"0.6.6"},"engines":{"node":">= 0.8"},"dist":{"shasum":"e6a3c46063b329dab0eb7a31bdc1dca3b3185ab9","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.1.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.1.1":{"_id":"body-parser@1.1.1","name":"body-parser","description":"Node.js body parsing middleware","version":"1.1.1","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"git://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --reporter spec --bail"},"directories":{},"devDependencies":{"mocha":"~1.18.2","should":"~3.3.1","supertest":"~0.12.1"},"dependencies":{"bytes":"1.0.0","type-is":"1.1.0","raw-body":"1.1.4","qs":"0.6.6"},"engines":{"node":">= 0.8"},"dist":{"shasum":"cf3cc10d885e91fc0ffa35a47ecad858238fb880","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.1.1.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.1.2":{"_id":"body-parser@1.1.2","name":"body-parser","description":"Node.js body parsing middleware","version":"1.1.2","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"git://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --reporter spec --bail"},"directories":{},"devDependencies":{"mocha":"~1.18.2","should":"~3.3.1","supertest":"~0.12.1"},"dependencies":{"bytes":"1.0.0","type-is":"1.1.0","raw-body":"1.1.4","qs":"0.6.6"},"engines":{"node":">= 0.8"},"dist":{"shasum":"c943b64c4cd3c44dc96a4681b02cd54ff29e8cd7","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.1.2.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.2.0":{"_id":"body-parser@1.2.0","name":"body-parser","description":"Node.js body parsing middleware","version":"1.2.0","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"git://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --reporter spec --bail"},"directories":{},"devDependencies":{"mocha":"~1.18.2","should":"~3.3.1","supertest":"~0.12.1"},"dependencies":{"bytes":"1.0.0","type-is":"1.2.0","raw-body":"1.1.4","qs":"0.6.6"},"engines":{"node":">= 0.8"},"dist":{"shasum":"f6247cc88d4c673c30a926d74fe36c177b9846e0","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.2.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.2.1":{"_id":"body-parser@1.2.1","name":"body-parser","description":"Node.js body parsing middleware","version":"1.2.1","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"git://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --reporter spec --bail"},"directories":{},"devDependencies":{"mocha":"~1.18.2","should":"~3.3.1","supertest":"~0.12.1"},"dependencies":{"bytes":"1.0.0","type-is":"1.2.0","raw-body":"1.1.4","qs":"0.6.6"},"engines":{"node":">= 0.8"},"dist":{"shasum":"917beee35a88e9f6893728bf1a542111d7d1eb28","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.2.1.tgz"},"_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.2.2":{"_id":"body-parser@1.2.2","name":"body-parser","description":"Node.js body parsing middleware","version":"1.2.2","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"git://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --reporter spec --bail"},"directories":{},"devDependencies":{"mocha":"~1.18.2","should":"~3.3.1","supertest":"~0.12.1"},"dependencies":{"bytes":"1.0.0","qs":"0.6.6","raw-body":"1.1.6","type-is":"1.2.0"},"engines":{"node":">= 0.8"},"dist":{"shasum":"6106373cc1d34d559ebcfdb582e4e37d4312acfb","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.2.2.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.3.0":{"_id":"body-parser@1.3.0","name":"body-parser","description":"Node.js body parsing middleware","version":"1.3.0","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"git://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --reporter dot","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec"},"directories":{},"devDependencies":{"istanbul":"0.2.10","mocha":"~1.18.2","should":"~3.3.1","supertest":"~0.12.1"},"dependencies":{"bytes":"1.0.0","qs":"0.6.6","raw-body":"1.1.6","type-is":"1.2.0"},"engines":{"node":">= 0.8"},"dist":{"shasum":"1a651cb9993a01a65531ae38395ceb0199dd7e3c","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.3.0.tgz"},"_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.3.1":{"_id":"body-parser@1.3.1","name":"body-parser","description":"Node.js body parsing middleware","version":"1.3.1","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"git://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --reporter dot","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec"},"directories":{},"devDependencies":{"istanbul":"0.2.10","mocha":"~1.20.1","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","qs":"0.6.6","raw-body":"1.1.6","type-is":"1.2.1"},"engines":{"node":">= 0.8"},"dist":{"shasum":"1a74513fc7897d70db56589e0d03f0a13f1bfa94","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.3.1.tgz"},"gitHead":"6c0a1dc628d98bfa586a424f93a45f431e3c6641","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.4.0":{"_id":"body-parser@1.4.0","name":"body-parser","description":"Node.js body parsing middleware","version":"1.4.0","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"git://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --bail","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec"},"directories":{},"devDependencies":{"istanbul":"0.2.10","mocha":"~1.20.1","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.3.0","iconv-lite":"0.4.3","media-typer":"0.2.0","qs":"0.6.6","raw-body":"1.2.2","type-is":"1.2.1"},"engines":{"node":">= 0.8"},"dist":{"shasum":"31274668441c2b00bab6ca50a173442d8bac1382","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.4.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.4.1":{"_id":"body-parser@1.4.1","name":"body-parser","description":"Node.js body parsing middleware","version":"1.4.1","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"git://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --bail","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec"},"directories":{},"devDependencies":{"istanbul":"0.2.10","mocha":"~1.20.1","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.3.0","iconv-lite":"0.4.3","media-typer":"0.2.0","qs":"0.6.6","raw-body":"1.2.2","type-is":"1.2.1"},"engines":{"node":">= 0.8"},"dist":{"shasum":"29146acc104a353e8cb07b7b3666d2d829bed6b0","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.4.1.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.4.2":{"_id":"body-parser@1.4.2","name":"body-parser","description":"Node.js body parsing middleware","version":"1.4.2","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"git://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --bail","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec"},"directories":{},"devDependencies":{"istanbul":"0.2.10","mocha":"~1.20.1","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.3.0","iconv-lite":"0.4.3","media-typer":"0.2.0","qs":"0.6.6","raw-body":"1.2.2","type-is":"1.3.0"},"engines":{"node":">= 0.8"},"dist":{"shasum":"e748603c5f79eb06bd75434e219258986328aae7","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.4.2.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.4.3":{"_id":"body-parser@1.4.3","name":"body-parser","description":"Node.js body parsing middleware","version":"1.4.3","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"git://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.2.10","mocha":"~1.20.1","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.3.0","iconv-lite":"0.4.3","media-typer":"0.2.0","qs":"0.6.6","raw-body":"1.2.2","type-is":"1.3.1"},"engines":{"node":">= 0.8"},"dist":{"shasum":"4727952cff4af0773eefa4b226c2f4122f5e234d","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.4.3.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.5.0":{"_id":"body-parser@1.5.0","name":"body-parser","description":"Node.js body parsing middleware","version":"1.5.0","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"git://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.0","mocha":"~1.20.1","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.4.2","iconv-lite":"0.4.4","media-typer":"0.2.0","qs":"0.6.6","raw-body":"1.3.0","type-is":"~1.3.2"},"engines":{"node":">= 0.8"},"dist":{"shasum":"c6fce2483c9eeb49ab349ff25a92d336d91055b9","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.5.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.5.1":{"_id":"body-parser@1.5.1","name":"body-parser","description":"Node.js body parsing middleware","version":"1.5.1","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"git://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.0","mocha":"~1.21.0","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.4.3","iconv-lite":"0.4.4","media-typer":"0.2.0","qs":"0.6.6","raw-body":"1.3.0","type-is":"~1.3.2"},"engines":{"node":">= 0.8"},"dist":{"shasum":"8d2eb95e987d274ef02fcf56567b3f3a31749c51","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.5.1.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.5.2":{"_id":"body-parser@1.5.2","name":"body-parser","description":"Node.js body parsing middleware","version":"1.5.2","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"git://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.0","mocha":"~1.21.0","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.4.4","iconv-lite":"0.4.4","media-typer":"0.2.0","qs":"0.6.6","raw-body":"1.3.0","type-is":"~1.3.2"},"engines":{"node":">= 0.8"},"dist":{"shasum":"beebacac741b83f62c9137d5685196e1a44304ab","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.5.2.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.6.0":{"_id":"body-parser@1.6.0","name":"body-parser","description":"Node.js body parsing middleware","version":"1.6.0","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.0","mocha":"~1.21.0","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.4.4","iconv-lite":"0.4.4","media-typer":"0.2.0","qs":"1.0.2","raw-body":"1.3.0","type-is":"~1.3.2"},"engines":{"node":">= 0.8"},"dist":{"shasum":"d02a9d373c7349c281a8b76b41d6bbf60ef2d3f6","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.6.0.tgz"},"gitHead":"0a96b14ae61fd579b23c8abd2e88f265dcd48098","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.6.1":{"_id":"body-parser@1.6.1","name":"body-parser","description":"Node.js body parsing middleware","version":"1.6.1","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.0","mocha":"~1.21.4","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.4.4","iconv-lite":"0.4.4","media-typer":"0.2.0","qs":"1.1.0","raw-body":"1.3.0","type-is":"~1.3.2"},"engines":{"node":">= 0.8"},"dist":{"shasum":"3894580ab743e2c2611fec695bae60a883ea6f3b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.6.1.tgz"},"gitHead":"ac01f78038549e16588ee24eec9e47891e9c5a09","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.6.2":{"_id":"body-parser@1.6.2","name":"body-parser","description":"Node.js body parsing middleware","version":"1.6.2","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.0","mocha":"~1.21.4","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.4.4","iconv-lite":"0.4.4","media-typer":"0.2.0","qs":"1.2.0","raw-body":"1.3.0","type-is":"~1.3.2"},"engines":{"node":">= 0.8"},"dist":{"shasum":"38952b4fd534395ab3034e9bb40bbdf3dd99c4ce","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.6.2.tgz"},"gitHead":"2be2282144cf5c6aa7698186a764eedfe3a71ee9","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.6.3":{"_id":"body-parser@1.6.3","name":"body-parser","description":"Node.js body parsing middleware","version":"1.6.3","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.0","mocha":"~1.21.4","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.4.4","iconv-lite":"0.4.4","media-typer":"0.2.0","qs":"1.2.1","raw-body":"1.3.0","type-is":"~1.3.2"},"engines":{"node":">= 0.8"},"dist":{"shasum":"db3b270bd3ebce5da4d2d2021653454b24861a79","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.6.3.tgz"},"gitHead":"bb7c924c6d700da0218188f9a3358f98804a9752","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.6.4":{"_id":"body-parser@1.6.4","name":"body-parser","description":"Node.js body parsing middleware","version":"1.6.4","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.0","mocha":"~1.21.4","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.4.4","iconv-lite":"0.4.4","media-typer":"0.2.0","qs":"1.2.2","raw-body":"1.3.0","type-is":"~1.3.2"},"engines":{"node":">= 0.8"},"dist":{"shasum":"befd799cc361a46d34e181f5f881f421a1f3b4c1","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.6.4.tgz"},"gitHead":"44abd9a37b89700469b6ecf550d81f34e5cdde99","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.6.5":{"_id":"body-parser@1.6.5","name":"body-parser","description":"Node.js body parsing middleware","version":"1.6.5","homepage":"https://github.com/expressjs/body-parser","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.0","mocha":"~1.21.4","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.4.4","iconv-lite":"0.4.4","media-typer":"0.2.0","on-finished":"2.1.0","qs":"1.2.2","raw-body":"1.3.0","type-is":"~1.3.2"},"engines":{"node":">= 0.8"},"dist":{"shasum":"536f01e08ee2b6df6a941d6c8c9647ee99ee4de7","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.6.5.tgz"},"gitHead":"0d42013b30a6784a7e86dd387a2aa5d17b5b01cb","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.6.6":{"_id":"body-parser@1.6.6","name":"body-parser","description":"Node.js body parsing middleware","version":"1.6.6","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.0","mocha":"~1.21.4","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.4.4","iconv-lite":"0.4.4","media-typer":"0.2.0","on-finished":"2.1.0","qs":"2.2.0","raw-body":"1.3.0","type-is":"~1.3.2"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"abfead725f1983631ce94b8e3e9a297d1ab703fb","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.6.6.tgz"},"gitHead":"a9cea305c30ca08e45492a9627ae9849ff28e6f2","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.6.7":{"_id":"body-parser@1.6.7","name":"body-parser","description":"Node.js body parsing middleware","version":"1.6.7","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.0","mocha":"~1.21.4","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.4.4","iconv-lite":"0.4.4","media-typer":"0.2.0","on-finished":"2.1.0","qs":"2.2.2","raw-body":"1.3.0","type-is":"~1.3.2"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"82306becadf44543e826b3907eae93f0237c4e5c","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.6.7.tgz"},"gitHead":"30a08ab015555171985e7a047ddfc21178f02e30","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.7.0":{"_id":"body-parser@1.7.0","name":"body-parser","description":"Node.js body parsing middleware","version":"1.7.0","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.0","mocha":"~1.21.4","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.4.4","iconv-lite":"0.4.4","media-typer":"0.2.0","on-finished":"2.1.0","qs":"2.2.2","raw-body":"1.3.0","type-is":"~1.3.2"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"6a245ea5b32d8e1e0d43bec8344b264ba4b36541","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.7.0.tgz"},"gitHead":"9e3906d7fd3ac0d0d01d828774051ae28a64f17a","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.8.0":{"_id":"body-parser@1.8.0","name":"body-parser","description":"Node.js body parsing middleware","version":"1.8.0","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.2","mocha":"~1.21.4","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.4.4","iconv-lite":"0.4.4","media-typer":"0.2.0","on-finished":"2.1.0","qs":"2.2.3","raw-body":"1.3.0","type-is":"~1.5.0"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"20b3a3d3553a6835d7373456dd9da8720759b306","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.8.0.tgz"},"gitHead":"17d73ae0ec6fc1f21f932849fa7103f37c67c718","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.8.1":{"_id":"body-parser@1.8.1","name":"body-parser","description":"Node.js body parsing middleware","version":"1.8.1","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.2","mocha":"~1.21.4","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.4.4","iconv-lite":"0.4.4","media-typer":"0.3.0","on-finished":"2.1.0","qs":"2.2.3","raw-body":"1.3.0","type-is":"~1.5.1"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"f9f96d221c435c95d18aeaad2bcdea1371902aad","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.8.1.tgz"},"gitHead":"df508da4f4c37ae6553638f95333b0ac1e8365cf","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.8.2":{"_id":"body-parser@1.8.2","name":"body-parser","description":"Node.js body parsing middleware","version":"1.8.2","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.2","mocha":"~1.21.4","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.4.5","iconv-lite":"0.4.4","media-typer":"0.3.0","on-finished":"2.1.0","qs":"2.2.3","raw-body":"1.3.0","type-is":"~1.5.1"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"cb55519e748f2ac89bd3c8e34cb759d391c4d67d","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.8.2.tgz"},"gitHead":"caf6e06cf7b4e3d31717e75e31dc2efc873a1047","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.8.3":{"_id":"body-parser@1.8.3","name":"body-parser","description":"Node.js body parsing middleware","version":"1.8.3","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.2","mocha":"~1.21.4","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.4.5","iconv-lite":"0.4.4","media-typer":"0.3.0","on-finished":"2.1.0","qs":"2.2.4","raw-body":"1.3.0","type-is":"~1.5.1"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"922b82e6448d654f2f5197574ceacefc04a6a8af","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.8.3.tgz"},"gitHead":"b4131a69a898ec4238679bc8bad7aa5359a7ecc7","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.8.4":{"_id":"body-parser@1.8.4","name":"body-parser","description":"Node.js body parsing middleware","version":"1.8.4","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.2","mocha":"~1.21.4","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"0.4.5","iconv-lite":"0.4.4","media-typer":"0.3.0","on-finished":"2.1.0","qs":"2.2.4","raw-body":"1.3.0","type-is":"~1.5.1"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"d497e04bc13b3f9a8bd8c70bb0cdc16f2e028898","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.8.4.tgz"},"gitHead":"e12078f4b7cf2cf3925304b16c6fd66522f72c40","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.9.0":{"_id":"body-parser@1.9.0","name":"body-parser","description":"Node.js body parsing middleware","version":"1.9.0","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.2","mocha":"~1.21.4","should":"~4.0.4","supertest":"~0.13.0"},"dependencies":{"bytes":"1.0.0","depd":"~1.0.0","iconv-lite":"0.4.4","media-typer":"0.3.0","on-finished":"2.1.0","qs":"2.2.4","raw-body":"1.3.0","type-is":"~1.5.1"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"95d72943b1a4f67f56bbac9e0dcc837b68703605","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.9.0.tgz"},"gitHead":"263f602e6ae34add6332c1eb4caa808893b0b711","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.9.1":{"_id":"body-parser@1.9.1","name":"body-parser","description":"Node.js body parsing middleware","version":"1.9.1","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.2","mocha":"~2.0.0","should":"~4.1.0","supertest":"~0.14.0"},"dependencies":{"bytes":"1.0.0","depd":"~1.0.0","iconv-lite":"0.4.4","media-typer":"0.3.0","on-finished":"~2.1.1","qs":"2.3.0","raw-body":"1.3.0","type-is":"~1.5.2"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"650a3047591fa9bb3cec191cb53933a468aa57aa","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.9.1.tgz"},"gitHead":"ebabe092af34b6995d43662654d9de1f2bf2ab86","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.9.2":{"_id":"body-parser@1.9.2","name":"body-parser","description":"Node.js body parsing middleware","version":"1.9.2","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require should --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.2","mocha":"~2.0.0","should":"~4.1.0","supertest":"~0.14.0"},"dependencies":{"bytes":"1.0.0","depd":"~1.0.0","iconv-lite":"0.4.4","media-typer":"0.3.0","on-finished":"~2.1.1","qs":"2.3.2","raw-body":"1.3.0","type-is":"~1.5.2"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"07f52cf104939118bedcba689002017271ef3c0e","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.9.2.tgz"},"gitHead":"efb1e7d1749a743515ca0f191ee214e8c2902bac","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.9.3":{"_id":"body-parser@1.9.3","name":"body-parser","description":"Node.js body parsing middleware","version":"1.9.3","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.2","mocha":"~2.0.0","supertest":"~0.15.0"},"dependencies":{"bytes":"1.0.0","depd":"~1.0.0","iconv-lite":"0.4.5","media-typer":"0.3.0","on-finished":"~2.1.1","qs":"2.3.3","raw-body":"1.3.1","type-is":"~1.5.3"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"edfacd4fcfad87dfe74f861a5cc712900aef2623","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.9.3.tgz"},"gitHead":"810c089057c004eeb1f54d638bdb8a15acc09d06","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.10.0":{"_id":"body-parser@1.10.0","name":"body-parser","description":"Node.js body parsing middleware","version":"1.10.0","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.2","methods":"~1.1.0","mocha":"~2.0.0","supertest":"~0.15.0"},"dependencies":{"bytes":"1.0.0","depd":"~1.0.0","iconv-lite":"0.4.5","media-typer":"0.3.0","on-finished":"~2.1.1","qs":"2.3.3","raw-body":"1.3.1","type-is":"~1.5.3"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"f884d11839af09e3c61e5011059e29cbfe452085","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.10.0.tgz"},"gitHead":"bdee22aed4f516580c791b1fb1112f6cbc6bcffb","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.10.1":{"_id":"body-parser@1.10.1","name":"body-parser","description":"Node.js body parsing middleware","version":"1.10.1","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.5","methods":"~1.1.1","mocha":"~2.1.0","supertest":"~0.15.0"},"dependencies":{"bytes":"1.0.0","depd":"~1.0.0","iconv-lite":"0.4.5","media-typer":"0.3.0","on-finished":"~2.2.0","qs":"2.3.3","raw-body":"1.3.1","type-is":"~1.5.5"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"af0c7156b128d946f3c43f5fe0364da00cfa7391","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.10.1.tgz"},"gitHead":"2dae9e45447108c7280538878c3f59c656f30bd9","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.10.2":{"_id":"body-parser@1.10.2","name":"body-parser","description":"Node.js body parsing middleware","version":"1.10.2","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.5","methods":"~1.1.1","mocha":"~2.1.0","supertest":"~0.15.0"},"dependencies":{"bytes":"1.0.0","depd":"~1.0.0","iconv-lite":"0.4.6","media-typer":"0.3.0","on-finished":"~2.2.0","qs":"2.3.3","raw-body":"1.3.2","type-is":"~1.5.5"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"405d465fcd3ccf0ea8a35adbf1055f6e98316bd1","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.10.2.tgz"},"gitHead":"1fbb94d61e3435865db6092e7f6685436aecb858","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.11.0":{"_id":"body-parser@1.11.0","name":"body-parser","description":"Node.js body parsing middleware","version":"1.11.0","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.5","methods":"~1.1.1","mocha":"~2.1.0","supertest":"~0.15.0"},"dependencies":{"bytes":"1.0.0","depd":"~1.0.0","iconv-lite":"0.4.6","media-typer":"0.3.0","on-finished":"~2.2.0","qs":"2.3.3","raw-body":"1.3.2","type-is":"~1.5.6"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"29f876cb608efa54e9b2185fe8105efc9219a7f3","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.11.0.tgz"},"gitHead":"bc783dd7aade9a40ba3cd1ec4c65439b8e99d66e","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.12.0":{"_id":"body-parser@1.12.0","name":"body-parser","description":"Node.js body parsing middleware","version":"1.12.0","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.5","methods":"~1.1.1","mocha":"~2.1.0","supertest":"~0.15.0"},"dependencies":{"bytes":"1.0.0","content-type":"~1.0.1","debug":"~2.1.1","depd":"~1.0.0","iconv-lite":"0.4.7","on-finished":"~2.2.0","qs":"2.3.3","raw-body":"1.3.3","type-is":"~1.6.0"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"9750fc3cc1080b34a13d18c79840cd559979fce5","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.12.0.tgz"},"gitHead":"9ec4d920fc0fbfc8351ff528d19b24d80612e3e0","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.12.1":{"_id":"body-parser@1.12.1","name":"body-parser","description":"Node.js body parsing middleware","version":"1.12.1","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.8","methods":"~1.1.1","mocha":"~2.2.1","supertest":"~0.15.0"},"dependencies":{"bytes":"1.0.0","content-type":"~1.0.1","debug":"~2.1.3","depd":"~1.0.0","iconv-lite":"0.4.7","on-finished":"~2.2.0","qs":"2.3.3","raw-body":"1.3.3","type-is":"~1.6.1"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"4b9b4c67e8eb5ccac7c9eef3fbd6694e721ae002","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.12.1.tgz"},"gitHead":"b500848a82da89c0810859c2b86a4bd33a7a9983","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.12.2":{"_id":"body-parser@1.12.2","name":"body-parser","description":"Node.js body parsing middleware","version":"1.12.2","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.8","methods":"~1.1.1","mocha":"~2.2.1","supertest":"~0.15.0"},"dependencies":{"bytes":"1.0.0","content-type":"~1.0.1","debug":"~2.1.3","depd":"~1.0.0","iconv-lite":"0.4.7","on-finished":"~2.2.0","qs":"2.4.1","raw-body":"1.3.3","type-is":"~1.6.1"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"698368fb4dfc57a05bff1ddb1bebeba3bd2c0e87","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.12.2.tgz"},"gitHead":"ec92683bbb469f63da8b584c37e7708ed76b09e2","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.12.3":{"_id":"body-parser@1.12.3","name":"body-parser","description":"Node.js body parsing middleware","version":"1.12.3","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.9","methods":"~1.1.1","mocha":"~2.2.4","supertest":"~0.15.0"},"dependencies":{"bytes":"1.0.0","content-type":"~1.0.1","debug":"~2.1.3","depd":"~1.0.1","iconv-lite":"0.4.8","on-finished":"~2.2.0","qs":"2.4.1","raw-body":"1.3.4","type-is":"~1.6.1"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"5f40bf17e7823be6895d4d35582752e36cf97f71","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.12.3.tgz"},"gitHead":"5addd8e18e0a72795f9ab93e867d3e50f3429910","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"shtylman","email":"shtylman@gmail.com"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"}]},"1.12.4":{"_id":"body-parser@1.12.4","name":"body-parser","description":"Node.js body parsing middleware","version":"1.12.4","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.9","methods":"~1.1.1","mocha":"~2.2.4","supertest":"~0.15.0"},"dependencies":{"bytes":"1.0.0","content-type":"~1.0.1","debug":"~2.2.0","depd":"~1.0.1","iconv-lite":"0.4.8","on-finished":"~2.2.1","qs":"2.4.2","raw-body":"~2.0.1","type-is":"~1.6.2"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"090700c4ba28862a8520ef378395fdee5f61c229","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.12.4.tgz"},"gitHead":"faba6ae19686d82133e188707b9b77649f45d3b0","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"},{"name":"defunctzombie","email":"shtylman@gmail.com"}]},"1.13.0":{"_id":"body-parser@1.13.0","name":"body-parser","description":"Node.js body parsing middleware","version":"1.13.0","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.9","methods":"~1.1.1","mocha":"2.2.5","supertest":"1.0.1"},"dependencies":{"bytes":"2.1.0","content-type":"~1.0.1","debug":"~2.2.0","depd":"~1.0.1","http-errors":"~1.3.1","iconv-lite":"0.4.10","on-finished":"~2.3.0","qs":"3.1.0","raw-body":"~2.1.1","type-is":"~1.6.3"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"b6dca73da8c4a9f68b0e64d29acac39dd3ad9a9e","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.13.0.tgz"},"gitHead":"aa8617b3893300ad52cb19d279ef62ccc99c1394","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"},{"name":"defunctzombie","email":"shtylman@gmail.com"}]},"1.13.1":{"_id":"body-parser@1.13.1","name":"body-parser","description":"Node.js body parsing middleware","version":"1.13.1","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.9","methods":"~1.1.1","mocha":"2.2.5","supertest":"1.0.1"},"dependencies":{"bytes":"2.1.0","content-type":"~1.0.1","debug":"~2.2.0","depd":"~1.0.1","http-errors":"~1.3.1","iconv-lite":"0.4.10","on-finished":"~2.3.0","qs":"2.4.2","raw-body":"~2.1.1","type-is":"~1.6.3"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"f07218bc2c4b5e36ca261557c9465481b29ecdcd","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.13.1.tgz"},"gitHead":"bf6c1465fe9e36e04668d8129c0fbb8a9b375060","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"},{"name":"defunctzombie","email":"shtylman@gmail.com"}]},"1.13.2":{"_id":"body-parser@1.13.2","name":"body-parser","description":"Node.js body parsing middleware","version":"1.13.2","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.17","methods":"~1.1.1","mocha":"2.2.5","supertest":"1.0.1"},"dependencies":{"bytes":"2.1.0","content-type":"~1.0.1","debug":"~2.2.0","depd":"~1.0.1","http-errors":"~1.3.1","iconv-lite":"0.4.11","on-finished":"~2.3.0","qs":"4.0.0","raw-body":"~2.1.2","type-is":"~1.6.4"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"229262a4fd2e402dfb88d99bc27d8be31307e7e9","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.13.2.tgz"},"gitHead":"b31df3e7550c6fadef6823a020f527ab73bfec33","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"},{"name":"defunctzombie","email":"shtylman@gmail.com"}]},"1.13.3":{"_id":"body-parser@1.13.3","name":"body-parser","description":"Node.js body parsing middleware","version":"1.13.3","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.17","methods":"~1.1.1","mocha":"2.2.5","supertest":"1.0.1"},"dependencies":{"bytes":"2.1.0","content-type":"~1.0.1","debug":"~2.2.0","depd":"~1.0.1","http-errors":"~1.3.1","iconv-lite":"0.4.11","on-finished":"~2.3.0","qs":"4.0.0","raw-body":"~2.1.2","type-is":"~1.6.6"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"c08cf330c3358e151016a05746f13f029c97fa97","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.13.3.tgz"},"gitHead":"79d0972bd18247071326105bfb36539830b61b76","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"},{"name":"defunctzombie","email":"shtylman@gmail.com"}]},"1.14.0":{"_id":"body-parser@1.14.0","name":"body-parser","description":"Node.js body parsing middleware","version":"1.14.0","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.20","methods":"~1.1.1","mocha":"2.2.5","supertest":"1.1.0"},"dependencies":{"bytes":"2.1.0","content-type":"~1.0.1","debug":"~2.2.0","depd":"~1.1.0","http-errors":"~1.3.1","iconv-lite":"0.4.11","on-finished":"~2.3.0","qs":"5.1.0","raw-body":"~2.1.3","type-is":"~1.6.8"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"a7a10138547a75bfcacc20472404630c2fa6b0ff","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.14.0.tgz"},"gitHead":"a438bed510877e36724b1716bd6f55a15a1155d2","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"},{"name":"defunctzombie","email":"shtylman@gmail.com"}]},"1.14.1":{"_id":"body-parser@1.14.1","name":"body-parser","description":"Node.js body parsing middleware","version":"1.14.1","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.3.21","methods":"~1.1.1","mocha":"2.2.5","supertest":"1.1.0"},"dependencies":{"bytes":"2.1.0","content-type":"~1.0.1","debug":"~2.2.0","depd":"~1.1.0","http-errors":"~1.3.1","iconv-lite":"0.4.12","on-finished":"~2.3.0","qs":"5.1.0","raw-body":"~2.1.4","type-is":"~1.6.9"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"ffe921eba3ce8f191e2a8a8803844bd025f3c6dc","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.14.1.tgz"},"gitHead":"7847af6e5a36129eea0e0becfbcc521b839313ae","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"},{"name":"defunctzombie","email":"shtylman@gmail.com"}]},"1.14.2":{"_id":"body-parser@1.14.2","name":"body-parser","description":"Node.js body parsing middleware","version":"1.14.2","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.4.1","methods":"~1.1.1","mocha":"2.3.4","supertest":"1.1.0"},"dependencies":{"bytes":"2.2.0","content-type":"~1.0.1","debug":"~2.2.0","depd":"~1.1.0","http-errors":"~1.3.1","iconv-lite":"0.4.13","on-finished":"~2.3.0","qs":"5.2.0","raw-body":"~2.1.5","type-is":"~1.6.10"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"1015cb1fe2c443858259581db53332f8d0cf50f9","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.14.2.tgz"},"gitHead":"ef5d85d8344f08b21f70a7d90082e7eea3ccdf99","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"jongleberry","email":"jonathanrichardong@gmail.com"},{"name":"dougwilson","email":"doug@somethingdoug.com"},{"name":"tjholowaychuk","email":"tj@vision-media.ca"},{"name":"mscdex","email":"mscdex@mscdex.net"},{"name":"fishrock123","email":"fishrock123@rocketmail.com"},{"name":"defunctzombie","email":"shtylman@gmail.com"}]},"1.15.0":{"_id":"body-parser@1.15.0","name":"body-parser","description":"Node.js body parsing middleware","version":"1.15.0","homepage":"https://github.com/expressjs/body-parser","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"https://github.com/expressjs/body-parser"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.4.2","methods":"1.1.2","mocha":"2.4.5","supertest":"1.1.0"},"dependencies":{"bytes":"2.2.0","content-type":"~1.0.1","debug":"~2.2.0","depd":"~1.1.0","http-errors":"~1.4.0","iconv-lite":"0.4.13","on-finished":"~2.3.0","qs":"6.1.0","raw-body":"~2.1.5","type-is":"~1.6.11"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"8168abaeaf9e77e300f7b3aef4df4b46e9b21b35","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.15.0.tgz"},"gitHead":"5b4fabe344e5b3df9e9157c7e9b9e6f5706b1cec","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"dougwilson","email":"doug@somethingdoug.com"}],"_npmOperationalInternal":{"host":"packages-9-west.internal.npmjs.com","tmp":"tmp/body-parser-1.15.0.tgz_1455156407766_0.14806043729186058"}},"1.15.1":{"_id":"body-parser@1.15.1","name":"body-parser","description":"Node.js body parsing middleware","version":"1.15.1","homepage":"https://github.com/expressjs/body-parser#readme","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"git+https://github.com/expressjs/body-parser.git"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"istanbul":"0.4.3","methods":"1.1.2","mocha":"2.4.5","supertest":"1.1.0"},"dependencies":{"bytes":"2.3.0","content-type":"~1.0.1","debug":"~2.2.0","depd":"~1.1.0","http-errors":"~1.4.0","iconv-lite":"0.4.13","on-finished":"~2.3.0","qs":"6.1.0","raw-body":"~2.1.6","type-is":"~1.6.12"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"9bceef0669b8f8b943f0ad8ce5d95716bd740fd2","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.15.1.tgz"},"gitHead":"e701380ab9b862bbf2223e4df4835a15e4e1ff66","_from":".","_npmVersion":"2.15.1","_nodeVersion":"4.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"dougwilson","email":"doug@somethingdoug.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/body-parser-1.15.1.tgz_1462512908287_0.2557021768298"}},"1.15.2":{"_id":"body-parser@1.15.2","name":"body-parser","description":"Node.js body parsing middleware","version":"1.15.2","homepage":"https://github.com/expressjs/body-parser#readme","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"git+https://github.com/expressjs/body-parser.git"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"lint":"eslint **/*.js","test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"eslint":"2.13.0","eslint-config-standard":"5.3.1","eslint-plugin-promise":"1.3.2","eslint-plugin-standard":"1.3.2","istanbul":"0.4.3","methods":"1.1.2","mocha":"2.5.3","supertest":"1.1.0"},"dependencies":{"bytes":"2.4.0","content-type":"~1.0.2","debug":"~2.2.0","depd":"~1.1.0","http-errors":"~1.5.0","iconv-lite":"0.4.13","on-finished":"~2.3.0","qs":"6.2.0","raw-body":"~2.1.7","type-is":"~1.6.13"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"d7578cf4f1d11d5f6ea804cef35dc7a7ff6dae67","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.15.2.tgz"},"gitHead":"3c8218446d919a5e87fa696971fb7f69b10afc1c","_from":".","_npmVersion":"2.15.1","_nodeVersion":"4.4.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"dougwilson","email":"doug@somethingdoug.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/body-parser-1.15.2.tgz_1466393694089_0.7908455491997302"}},"1.16.0":{"_id":"body-parser@1.16.0","name":"body-parser","description":"Node.js body parsing middleware","version":"1.16.0","homepage":"https://github.com/expressjs/body-parser#readme","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"git+https://github.com/expressjs/body-parser.git"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"lint":"eslint --plugin markdown --ext js,md .","test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"eslint":"3.13.1","eslint-config-standard":"6.2.1","eslint-plugin-markdown":"1.0.0-beta.3","eslint-plugin-promise":"3.4.0","eslint-plugin-standard":"2.0.1","istanbul":"0.4.5","methods":"1.1.2","mocha":"2.5.3","supertest":"1.1.0"},"dependencies":{"bytes":"2.4.0","content-type":"~1.0.2","debug":"2.6.0","depd":"~1.1.0","http-errors":"~1.5.1","iconv-lite":"0.4.15","on-finished":"~2.3.0","qs":"6.2.1","raw-body":"~2.2.0","type-is":"~1.6.14"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"924a5e472c6229fb9d69b85a20d5f2532dec788b","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.16.0.tgz"},"gitHead":"c5a73d51483310f8443043d3927c2557993f3416","_from":".","_npmVersion":"2.15.9","_nodeVersion":"4.6.1","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"dougwilson","email":"doug@somethingdoug.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/body-parser-1.16.0.tgz_1484710891328_0.08588228072039783"}},"1.16.1":{"_id":"body-parser@1.16.1","name":"body-parser","description":"Node.js body parsing middleware","version":"1.16.1","homepage":"https://github.com/expressjs/body-parser#readme","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"git+https://github.com/expressjs/body-parser.git"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"lint":"eslint --plugin markdown --ext js,md .","test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"eslint":"3.15.0","eslint-config-standard":"6.2.1","eslint-plugin-markdown":"1.0.0-beta.3","eslint-plugin-promise":"3.4.0","eslint-plugin-standard":"2.0.1","istanbul":"0.4.5","methods":"1.1.2","mocha":"2.5.3","supertest":"1.1.0"},"dependencies":{"bytes":"2.4.0","content-type":"~1.0.2","debug":"2.6.1","depd":"~1.1.0","http-errors":"~1.5.1","iconv-lite":"0.4.15","on-finished":"~2.3.0","qs":"6.2.1","raw-body":"~2.2.0","type-is":"~1.6.14"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"51540d045adfa7a0c6995a014bb6b1ed9b802329","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.16.1.tgz"},"gitHead":"7b630f701d084267a8b9883b27f627014e003d47","_from":".","_npmVersion":"2.15.9","_nodeVersion":"4.6.1","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"dougwilson","email":"doug@somethingdoug.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/body-parser-1.16.1.tgz_1486777002177_0.4995518890209496"}},"1.17.0":{"_id":"body-parser@1.17.0","name":"body-parser","description":"Node.js body parsing middleware","version":"1.17.0","homepage":"https://github.com/expressjs/body-parser#readme","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"git+https://github.com/expressjs/body-parser.git"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"lint":"eslint --plugin markdown --ext js,md .","test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"eslint":"3.16.1","eslint-config-standard":"6.2.1","eslint-plugin-markdown":"1.0.0-beta.3","eslint-plugin-promise":"3.4.0","eslint-plugin-standard":"2.0.1","istanbul":"0.4.5","methods":"1.1.2","mocha":"2.5.3","supertest":"1.1.0"},"dependencies":{"bytes":"2.4.0","content-type":"~1.0.2","debug":"2.6.1","depd":"~1.1.0","http-errors":"~1.6.1","iconv-lite":"0.4.15","on-finished":"~2.3.0","qs":"6.3.1","raw-body":"~2.2.0","type-is":"~1.6.14"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"d956ae2d756ae10bb784187725ea5a249430febd","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.17.0.tgz"},"gitHead":"79bc93911501b0d048dea39a13ab7384b2cb43f1","_from":".","_npmVersion":"2.15.11","_nodeVersion":"4.7.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"dougwilson","email":"doug@somethingdoug.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/body-parser-1.17.0.tgz_1488406215099_0.9978320009540766"}},"1.17.1":{"_id":"body-parser@1.17.1","name":"body-parser","description":"Node.js body parsing middleware","version":"1.17.1","homepage":"https://github.com/expressjs/body-parser#readme","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"git+https://github.com/expressjs/body-parser.git"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"lint":"eslint --plugin markdown --ext js,md .","test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"eslint":"3.17.0","eslint-config-standard":"7.0.0","eslint-plugin-markdown":"1.0.0-beta.4","eslint-plugin-promise":"3.5.0","eslint-plugin-standard":"2.1.1","istanbul":"0.4.5","methods":"1.1.2","mocha":"2.5.3","supertest":"1.1.0"},"dependencies":{"bytes":"2.4.0","content-type":"~1.0.2","debug":"2.6.1","depd":"~1.1.0","http-errors":"~1.6.1","iconv-lite":"0.4.15","on-finished":"~2.3.0","qs":"6.4.0","raw-body":"~2.2.0","type-is":"~1.6.14"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"75b3bc98ddd6e7e0d8ffe750dfaca5c66993fa47","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.17.1.tgz"},"gitHead":"0f1bed0543d34c8de07385157b8183509d1100aa","_from":".","_npmVersion":"2.15.11","_nodeVersion":"4.7.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"dougwilson","email":"doug@somethingdoug.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/body-parser-1.17.1.tgz_1488807088817_0.47385501372627914"}},"1.17.2":{"_id":"body-parser@1.17.2","name":"body-parser","description":"Node.js body parsing middleware","version":"1.17.2","homepage":"https://github.com/expressjs/body-parser#readme","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"git+https://github.com/expressjs/body-parser.git"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"lint":"eslint --plugin markdown --ext js,md .","test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"eslint":"3.19.0","eslint-config-standard":"10.2.1","eslint-plugin-import":"2.2.0","eslint-plugin-markdown":"1.0.0-beta.6","eslint-plugin-node":"4.2.2","eslint-plugin-promise":"3.5.0","eslint-plugin-standard":"3.0.1","istanbul":"0.4.5","methods":"1.1.2","mocha":"2.5.3","safe-buffer":"5.0.1","supertest":"1.1.0"},"dependencies":{"bytes":"2.4.0","content-type":"~1.0.2","debug":"2.6.7","depd":"~1.1.0","http-errors":"~1.6.1","iconv-lite":"0.4.15","on-finished":"~2.3.0","qs":"6.4.0","raw-body":"~2.2.0","type-is":"~1.6.15"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"f8892abc8f9e627d42aedafbca66bf5ab99104ee","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.17.2.tgz"},"gitHead":"77b74312edb46b2e8d8df0c8436aaba396a721e9","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.10.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"dougwilson","email":"doug@somethingdoug.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/body-parser-1.17.2.tgz_1495083464528_0.912320519099012"}},"1.18.0":{"_id":"body-parser@1.18.0","name":"body-parser","description":"Node.js body parsing middleware","version":"1.18.0","homepage":"https://github.com/expressjs/body-parser#readme","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"git+https://github.com/expressjs/body-parser.git"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"lint":"eslint --plugin markdown --ext js,md .","test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"eslint":"3.19.0","eslint-config-standard":"10.2.1","eslint-plugin-import":"2.7.0","eslint-plugin-markdown":"1.0.0-beta.6","eslint-plugin-node":"5.1.1","eslint-plugin-promise":"3.5.0","eslint-plugin-standard":"3.0.1","istanbul":"0.4.5","methods":"1.1.2","mocha":"2.5.3","safe-buffer":"5.1.1","supertest":"1.1.0"},"dependencies":{"bytes":"3.0.0","content-type":"~1.0.2","debug":"2.6.8","depd":"~1.1.1","http-errors":"~1.6.2","iconv-lite":"0.4.18","on-finished":"~2.3.0","qs":"6.5.0","raw-body":"2.3.1","type-is":"~1.6.15"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"d3b224d467fa2ce8d43589c0245043267c093634","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.18.0.tgz"},"gitHead":"adfa01c1c58102292e353fe4ee7558a4581fb539","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.11.1","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"dougwilson","email":"doug@somethingdoug.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/body-parser-1.18.0.tgz_1504930645505_0.6018156714271754"}},"1.18.1":{"_id":"body-parser@1.18.1","name":"body-parser","description":"Node.js body parsing middleware","version":"1.18.1","homepage":"https://github.com/expressjs/body-parser#readme","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"git+https://github.com/expressjs/body-parser.git"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"lint":"eslint --plugin markdown --ext js,md .","test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"eslint":"3.19.0","eslint-config-standard":"10.2.1","eslint-plugin-import":"2.7.0","eslint-plugin-markdown":"1.0.0-beta.6","eslint-plugin-node":"5.1.1","eslint-plugin-promise":"3.5.0","eslint-plugin-standard":"3.0.1","istanbul":"0.4.5","methods":"1.1.2","mocha":"2.5.3","safe-buffer":"5.1.1","supertest":"1.1.0"},"dependencies":{"bytes":"3.0.0","content-type":"~1.0.4","debug":"2.6.8","depd":"~1.1.1","http-errors":"~1.6.2","iconv-lite":"0.4.19","on-finished":"~2.3.0","qs":"6.5.1","raw-body":"2.3.2","type-is":"~1.6.15"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"9c1629370bcfd42917f30641a2dcbe2ec50d4c26","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.18.1.tgz"},"gitHead":"d041563376670707cc693968995ff731adefe4cf","_npmVersion":"5.3.0","_nodeVersion":"6.11.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"dougwilson","email":"doug@somethingdoug.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/body-parser-1.18.1.tgz_1505230250261_0.44409058685414493"}},"1.18.2":{"_id":"body-parser@1.18.2","name":"body-parser","description":"Node.js body parsing middleware","version":"1.18.2","homepage":"https://github.com/expressjs/body-parser#readme","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"git+https://github.com/expressjs/body-parser.git"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"lint":"eslint --plugin markdown --ext js,md .","test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"eslint":"3.19.0","eslint-config-standard":"10.2.1","eslint-plugin-import":"2.7.0","eslint-plugin-markdown":"1.0.0-beta.6","eslint-plugin-node":"5.1.1","eslint-plugin-promise":"3.5.0","eslint-plugin-standard":"3.0.1","istanbul":"0.4.5","methods":"1.1.2","mocha":"2.5.3","safe-buffer":"5.1.1","supertest":"1.1.0"},"dependencies":{"bytes":"3.0.0","content-type":"~1.0.4","debug":"2.6.9","depd":"~1.1.1","http-errors":"~1.6.2","iconv-lite":"0.4.19","on-finished":"~2.3.0","qs":"6.5.1","raw-body":"2.3.2","type-is":"~1.6.15"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"87678a19d84b47d859b83199bd59bce222b10454","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.18.2.tgz"},"gitHead":"b2659a7af3b413a2d1df274bef409fe6cdcf6b8f","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.11.1","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"dougwilson","email":"doug@somethingdoug.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/body-parser-1.18.2.tgz_1506099009907_0.5088193896226585"}},"1.18.3":{"_id":"body-parser@1.18.3","name":"body-parser","description":"Node.js body parsing middleware","version":"1.18.3","homepage":"https://github.com/expressjs/body-parser#readme","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"git+https://github.com/expressjs/body-parser.git"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"lint":"eslint --plugin markdown --ext js,md .","test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":{},"devDependencies":{"eslint":"4.19.1","eslint-config-standard":"11.0.0","eslint-plugin-import":"2.11.0","eslint-plugin-markdown":"1.0.0-beta.6","eslint-plugin-node":"6.0.1","eslint-plugin-promise":"3.7.0","eslint-plugin-standard":"3.1.0","istanbul":"0.4.5","methods":"1.1.2","mocha":"2.5.3","safe-buffer":"5.1.2","supertest":"1.1.0"},"dependencies":{"bytes":"3.0.0","content-type":"~1.0.4","debug":"2.6.9","depd":"~1.1.2","http-errors":"~1.6.3","iconv-lite":"0.4.23","on-finished":"~2.3.0","qs":"6.5.2","raw-body":"2.3.3","type-is":"~1.6.16"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"5b292198ffdd553b3a0f20ded0592b956955c8b4","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.18.3.tgz"},"gitHead":"e6ccf98015fece0851c0c673fc2776c30ad79e5d","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.14.2","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"dougwilson","email":"doug@somethingdoug.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/body-parser_1.18.3_1526318192390_0.5591283803389704"},"_hasShrinkwrap":false},"1.19.0":{"_id":"body-parser@1.19.0","name":"body-parser","description":"Node.js body parsing middleware","version":"1.19.0","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com","url":""},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"ShortcutSyntax":"expressjs/body-parser"},"license":"MIT","scripts":{"lint":"eslint --plugin markdown --ext js,md .","test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"},"directories":null,"devDependencies":{"eslint":"5.16.0","eslint-config-standard":"12.0.0","eslint-plugin-import":"2.17.2","eslint-plugin-markdown":"1.0.0","eslint-plugin-node":"8.0.1","eslint-plugin-promise":"4.1.1","eslint-plugin-standard":"4.0.0","istanbul":"0.4.5","methods":"1.1.2","mocha":"6.1.4","safe-buffer":"5.1.2","supertest":"4.0.2"},"dependencies":{"bytes":"3.1.0","content-type":"~1.0.4","debug":"2.6.9","depd":"~1.1.2","http-errors":"1.7.2","iconv-lite":"0.4.24","on-finished":"~2.3.0","qs":"6.7.0","raw-body":"2.4.0","type-is":"~1.6.17"},"engines":{"node":">= 0.8"},"files":["lib/","LICENSE","HISTORY.md","index.js"],"dist":{"shasum":"96b2709e57c9c4e09a6fd66a8fd979844f69f08a","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.19.0.tgz"}},"1.19.1":{"_id":"body-parser@1.19.1","name":"body-parser","description":"Node.js body parsing middleware","version":"1.19.1","homepage":"https://github.com/expressjs/body-parser#readme","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"git+https://github.com/expressjs/body-parser.git"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"lint":"eslint .","test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-ci":"nyc --reporter=lcov --reporter=text npm test","test-cov":"nyc --reporter=html --reporter=text npm test"},"directories":{},"devDependencies":{"eslint":"7.32.0","eslint-config-standard":"14.1.1","eslint-plugin-import":"2.25.3","eslint-plugin-markdown":"2.2.1","eslint-plugin-node":"11.1.0","eslint-plugin-promise":"5.2.0","eslint-plugin-standard":"4.1.0","methods":"1.1.2","mocha":"9.1.3","nyc":"15.1.0","safe-buffer":"5.2.1","supertest":"6.1.6"},"dependencies":{"bytes":"3.1.1","content-type":"~1.0.4","debug":"2.6.9","depd":"~1.1.2","http-errors":"1.8.1","iconv-lite":"0.4.24","on-finished":"~2.3.0","qs":"6.9.6","raw-body":"2.4.2","type-is":"~1.6.18"},"engines":{"node":">= 0.8"},"dist":{"shasum":"1499abbaa9274af3ecc9f6f10396c995943e31d4","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.19.1.tgz"},"gitHead":"d0a214b3beded8a9cd2dcb51d355f92c9ead81d4","_nodeVersion":"16.7.0","_npmVersion":"7.20.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"dougwilson","email":"doug@somethingdoug.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/body-parser_1.19.1_1639165922347_0.6576872442213721"},"_hasShrinkwrap":false},"1.19.2":{"_id":"body-parser@1.19.2","name":"body-parser","description":"Node.js body parsing middleware","version":"1.19.2","homepage":"https://github.com/expressjs/body-parser#readme","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"git+https://github.com/expressjs/body-parser.git"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"lint":"eslint .","test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-ci":"nyc --reporter=lcov --reporter=text npm test","test-cov":"nyc --reporter=html --reporter=text npm test"},"directories":{},"devDependencies":{"eslint":"7.32.0","eslint-config-standard":"14.1.1","eslint-plugin-import":"2.25.4","eslint-plugin-markdown":"2.2.1","eslint-plugin-node":"11.1.0","eslint-plugin-promise":"5.2.0","eslint-plugin-standard":"4.1.0","methods":"1.1.2","mocha":"9.2.0","nyc":"15.1.0","safe-buffer":"5.2.1","supertest":"6.2.2"},"dependencies":{"bytes":"3.1.2","content-type":"~1.0.4","debug":"2.6.9","depd":"~1.1.2","http-errors":"1.8.1","iconv-lite":"0.4.24","on-finished":"~2.3.0","qs":"6.9.7","raw-body":"2.4.3","type-is":"~1.6.18"},"engines":{"node":">= 0.8"},"dist":{"shasum":"4714ccd9c157d44797b8b5607d72c0b89952f26e","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.19.2.tgz"},"gitHead":"424dadd312f519bdb320c6ee9463d6672782420c","_nodeVersion":"16.13.1","_npmVersion":"8.1.2","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"dougwilson","email":"doug@somethingdoug.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/body-parser_1.19.2_1644983069606_0.9492122708441992"},"_hasShrinkwrap":false},"1.20.0":{"_id":"body-parser@1.20.0","name":"body-parser","description":"Node.js body parsing middleware","version":"1.20.0","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com","url":""},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"ShortcutSyntax":"expressjs/body-parser"},"license":"MIT","scripts":{"lint":"eslint .","test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-ci":"nyc --reporter=lcov --reporter=text npm test","test-cov":"nyc --reporter=html --reporter=text npm test"},"directories":null,"devDependencies":{"eslint":"7.32.0","eslint-config-standard":"14.1.1","eslint-plugin-import":"2.25.4","eslint-plugin-markdown":"2.2.1","eslint-plugin-node":"11.1.0","eslint-plugin-promise":"5.2.0","eslint-plugin-standard":"4.1.0","methods":"1.1.2","mocha":"9.2.2","nyc":"15.1.0","safe-buffer":"5.2.1","supertest":"6.2.2"},"dependencies":{"bytes":"3.1.2","content-type":"~1.0.4","debug":"2.6.9","depd":"2.0.0","destroy":"1.2.0","http-errors":"2.0.0","iconv-lite":"0.4.24","on-finished":"2.4.1","qs":"6.10.3","raw-body":"2.5.1","type-is":"~1.6.18","unpipe":"1.0.0"},"engines":{"node":">= 0.8","npm":"1.2.8000 || >= 1.4.16"},"files":["lib/","LICENSE","HISTORY.md","SECURITY.md","index.js"],"dist":{"shasum":"3de69bd89011c11573d7bfee6a64f11b6bd27cc5","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.20.0.tgz"}},"1.20.1":{"_id":"body-parser@1.20.1","name":"body-parser","description":"Node.js body parsing middleware","version":"1.20.1","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com","url":""},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"ShortcutSyntax":"expressjs/body-parser"},"license":"MIT","scripts":{"lint":"eslint .","test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-ci":"nyc --reporter=lcov --reporter=text npm test","test-cov":"nyc --reporter=html --reporter=text npm test"},"directories":null,"devDependencies":{"eslint":"8.24.0","eslint-config-standard":"14.1.1","eslint-plugin-import":"2.26.0","eslint-plugin-markdown":"3.0.0","eslint-plugin-node":"11.1.0","eslint-plugin-promise":"6.0.1","eslint-plugin-standard":"4.1.0","methods":"1.1.2","mocha":"10.0.0","nyc":"15.1.0","safe-buffer":"5.2.1","supertest":"6.3.0"},"dependencies":{"bytes":"3.1.2","content-type":"~1.0.4","debug":"2.6.9","depd":"2.0.0","destroy":"1.2.0","http-errors":"2.0.0","iconv-lite":"0.4.24","on-finished":"2.4.1","qs":"6.11.0","raw-body":"2.5.1","type-is":"~1.6.18","unpipe":"1.0.0"},"engines":{"node":">= 0.8","npm":"1.2.8000 || >= 1.4.16"},"files":["lib/","LICENSE","HISTORY.md","SECURITY.md","index.js"],"dist":{"shasum":"b1812a8912c195cd371a3ee5e66faa2338a5c668","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.20.1.tgz"}},"1.20.2":{"_id":"body-parser@1.20.2","name":"body-parser","description":"Node.js body parsing middleware","version":"1.20.2","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com","url":""},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"ShortcutSyntax":"expressjs/body-parser"},"license":"MIT","scripts":{"lint":"eslint .","test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-ci":"nyc --reporter=lcov --reporter=text npm test","test-cov":"nyc --reporter=html --reporter=text npm test"},"directories":null,"devDependencies":{"eslint":"8.34.0","eslint-config-standard":"14.1.1","eslint-plugin-import":"2.27.5","eslint-plugin-markdown":"3.0.0","eslint-plugin-node":"11.1.0","eslint-plugin-promise":"6.1.1","eslint-plugin-standard":"4.1.0","methods":"1.1.2","mocha":"10.2.0","nyc":"15.1.0","safe-buffer":"5.2.1","supertest":"6.3.3"},"dependencies":{"bytes":"3.1.2","content-type":"~1.0.5","debug":"2.6.9","depd":"2.0.0","destroy":"1.2.0","http-errors":"2.0.0","iconv-lite":"0.4.24","on-finished":"2.4.1","qs":"6.11.0","raw-body":"2.5.2","type-is":"~1.6.18","unpipe":"1.0.0"},"engines":{"node":">= 0.8","npm":"1.2.8000 || >= 1.4.16"},"files":["lib/","LICENSE","HISTORY.md","SECURITY.md","index.js"],"dist":{"shasum":"6feb0e21c4724d06de7ff38da36dad4f57a747fd","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-1.20.2.tgz"}},"2.0.0-beta.1":{"_id":"body-parser@2.0.0-beta.1","name":"body-parser","description":"Node.js body parsing middleware","version":"2.0.0-beta.1","homepage":"https://github.com/expressjs/body-parser#readme","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"git+https://github.com/expressjs/body-parser.git"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"lint":"eslint .","test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-ci":"nyc --reporter=lcov --reporter=text npm test","test-cov":"nyc --reporter=html --reporter=text npm test"},"directories":{},"devDependencies":{"eslint":"7.32.0","eslint-config-standard":"14.1.1","eslint-plugin-import":"2.25.3","eslint-plugin-markdown":"2.2.1","eslint-plugin-node":"11.1.0","eslint-plugin-promise":"5.2.0","eslint-plugin-standard":"4.1.0","methods":"1.1.2","mocha":"9.1.3","nyc":"15.1.0","safe-buffer":"5.2.1","supertest":"6.1.6"},"dependencies":{"bytes":"3.1.1","content-type":"~1.0.4","debug":"2.6.9","depd":"~1.1.2","http-errors":"1.8.1","iconv-lite":"0.4.24","on-finished":"~2.3.0","qs":"6.9.6","raw-body":"2.4.2","type-is":"~1.6.18"},"engines":{"node":">= 0.10"},"dist":{"shasum":"d4ed97d6ed51f6040b967db0db2252a0b235a661","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-2.0.0-beta.1.tgz"},"readme":"# body-parser\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Build Status][github-actions-ci-image]][github-actions-ci-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nNode.js body parsing middleware.\n\nParse incoming request bodies in a middleware before your handlers, available\nunder the `req.body` property.\n\n**Note** As `req.body`'s shape is based on user-controlled input, all\nproperties and values in this object are untrusted and should be validated\nbefore trusting. For example, `req.body.foo.toString()` may fail in multiple\nways, for example the `foo` property may not be there or may not be a string,\nand `toString` may not be a function and instead a string or other user input.\n\n[Learn about the anatomy of an HTTP transaction in Node.js](https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/).\n\n_This does not handle multipart bodies_, due to their complex and typically\nlarge nature. For multipart bodies, you may be interested in the following\nmodules:\n\n  * [busboy](https://www.npmjs.org/package/busboy#readme) and\n    [connect-busboy](https://www.npmjs.org/package/connect-busboy#readme)\n  * [multiparty](https://www.npmjs.org/package/multiparty#readme) and\n    [connect-multiparty](https://www.npmjs.org/package/connect-multiparty#readme)\n  * [formidable](https://www.npmjs.org/package/formidable#readme)\n  * [multer](https://www.npmjs.org/package/multer#readme)\n\nThis module provides the following parsers:\n\n  * [JSON body parser](#bodyparserjsonoptions)\n  * [Raw body parser](#bodyparserrawoptions)\n  * [Text body parser](#bodyparsertextoptions)\n  * [URL-encoded form body parser](#bodyparserurlencodedoptions)\n\nOther body parsers you might be interested in:\n\n- [body](https://www.npmjs.org/package/body#readme)\n- [co-body](https://www.npmjs.org/package/co-body#readme)\n\n## Installation\n\n```sh\n$ npm install body-parser\n```\n\n## API\n\n```js\nvar bodyParser = require('body-parser')\n```\n\nThe `bodyParser` object exposes various factories to create middlewares. All\nmiddlewares will populate the `req.body` property with the parsed body when\nthe `Content-Type` request header matches the `type` option, or an empty\nobject (`{}`) if there was no body to parse, the `Content-Type` was not matched,\nor an error occurred.\n\nThe various errors returned by this module are described in the\n[errors section](#errors).\n\n### bodyParser.json([options])\n\nReturns middleware that only parses `json` and only looks at requests where\nthe `Content-Type` header matches the `type` option. This parser accepts any\nUnicode encoding of the body and supports automatic inflation of `gzip` and\n`deflate` encodings.\n\nA new `body` object containing the parsed data is populated on the `request`\nobject after the middleware (i.e. `req.body`).\n\n#### Options\n\nThe `json` function takes an optional `options` object that may contain any of\nthe following keys:\n\n##### inflate\n\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\n`false`, deflated bodies are rejected. Defaults to `true`.\n\n##### limit\n\nControls the maximum request body size. If this is a number, then the value\nspecifies the number of bytes; if it is a string, the value is passed to the\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\nto `'100kb'`.\n\n##### reviver\n\nThe `reviver` option is passed directly to `JSON.parse` as the second\nargument. You can find more information on this argument\n[in the MDN documentation about JSON.parse](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Example.3A_Using_the_reviver_parameter).\n\n##### strict\n\nWhen set to `true`, will only accept arrays and objects; when `false` will\naccept anything `JSON.parse` accepts. Defaults to `true`.\n\n##### type\n\nThe `type` option is used to determine what media type the middleware will\nparse. This option can be a string, array of strings, or a function. If not a\nfunction, `type` option is passed directly to the\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\nbe an extension name (like `json`), a mime type (like `application/json`), or\na mime type with a wildcard (like `*/*` or `*/json`). If a function, the `type`\noption is called as `fn(req)` and the request is parsed if it returns a truthy\nvalue. Defaults to `application/json`.\n\n##### verify\n\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\nencoding of the request. The parsing can be aborted by throwing an error.\n\n### bodyParser.raw([options])\n\nReturns middleware that parses all bodies as a `Buffer` and only looks at\nrequests where the `Content-Type` header matches the `type` option. This\nparser supports automatic inflation of `gzip` and `deflate` encodings.\n\nA new `body` object containing the parsed data is populated on the `request`\nobject after the middleware (i.e. `req.body`). This will be a `Buffer` object\nof the body.\n\n#### Options\n\nThe `raw` function takes an optional `options` object that may contain any of\nthe following keys:\n\n##### inflate\n\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\n`false`, deflated bodies are rejected. Defaults to `true`.\n\n##### limit\n\nControls the maximum request body size. If this is a number, then the value\nspecifies the number of bytes; if it is a string, the value is passed to the\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\nto `'100kb'`.\n\n##### type\n\nThe `type` option is used to determine what media type the middleware will\nparse. This option can be a string, array of strings, or a function.\nIf not a function, `type` option is passed directly to the\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this\ncan be an extension name (like `bin`), a mime type (like\n`application/octet-stream`), or a mime type with a wildcard (like `*/*` or\n`application/*`). If a function, the `type` option is called as `fn(req)`\nand the request is parsed if it returns a truthy value. Defaults to\n`application/octet-stream`.\n\n##### verify\n\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\nencoding of the request. The parsing can be aborted by throwing an error.\n\n### bodyParser.text([options])\n\nReturns middleware that parses all bodies as a string and only looks at\nrequests where the `Content-Type` header matches the `type` option. This\nparser supports automatic inflation of `gzip` and `deflate` encodings.\n\nA new `body` string containing the parsed data is populated on the `request`\nobject after the middleware (i.e. `req.body`). This will be a string of the\nbody.\n\n#### Options\n\nThe `text` function takes an optional `options` object that may contain any of\nthe following keys:\n\n##### defaultCharset\n\nSpecify the default character set for the text content if the charset is not\nspecified in the `Content-Type` header of the request. Defaults to `utf-8`.\n\n##### inflate\n\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\n`false`, deflated bodies are rejected. Defaults to `true`.\n\n##### limit\n\nControls the maximum request body size. If this is a number, then the value\nspecifies the number of bytes; if it is a string, the value is passed to the\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\nto `'100kb'`.\n\n##### type\n\nThe `type` option is used to determine what media type the middleware will\nparse. This option can be a string, array of strings, or a function. If not\na function, `type` option is passed directly to the\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\nbe an extension name (like `txt`), a mime type (like `text/plain`), or a mime\ntype with a wildcard (like `*/*` or `text/*`). If a function, the `type`\noption is called as `fn(req)` and the request is parsed if it returns a\ntruthy value. Defaults to `text/plain`.\n\n##### verify\n\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\nencoding of the request. The parsing can be aborted by throwing an error.\n\n### bodyParser.urlencoded([options])\n\nReturns middleware that only parses `urlencoded` bodies and only looks at\nrequests where the `Content-Type` header matches the `type` option. This\nparser accepts only UTF-8 encoding of the body and supports automatic\ninflation of `gzip` and `deflate` encodings.\n\nA new `body` object containing the parsed data is populated on the `request`\nobject after the middleware (i.e. `req.body`). This object will contain\nkey-value pairs, where the value can be a string or array (when `extended` is\n`false`), or any type (when `extended` is `true`).\n\n#### Options\n\nThe `urlencoded` function takes an optional `options` object that may contain\nany of the following keys:\n\n##### extended\n\nThe `extended` option allows to choose between parsing the URL-encoded data\nwith the `querystring` library (when `false`) or the `qs` library (when\n`true`). The \"extended\" syntax allows for rich objects and arrays to be\nencoded into the URL-encoded format, allowing for a JSON-like experience\nwith URL-encoded. For more information, please\n[see the qs library](https://www.npmjs.org/package/qs#readme).\n\nDefaults to `false`.\n\n##### inflate\n\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\n`false`, deflated bodies are rejected. Defaults to `true`.\n\n##### limit\n\nControls the maximum request body size. If this is a number, then the value\nspecifies the number of bytes; if it is a string, the value is passed to the\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\nto `'100kb'`.\n\n##### parameterLimit\n\nThe `parameterLimit` option controls the maximum number of parameters that\nare allowed in the URL-encoded data. If a request contains more parameters\nthan this value, a 413 will be returned to the client. Defaults to `1000`.\n\n##### type\n\nThe `type` option is used to determine what media type the middleware will\nparse. This option can be a string, array of strings, or a function. If not\na function, `type` option is passed directly to the\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\nbe an extension name (like `urlencoded`), a mime type (like\n`application/x-www-form-urlencoded`), or a mime type with a wildcard (like\n`*/x-www-form-urlencoded`). If a function, the `type` option is called as\n`fn(req)` and the request is parsed if it returns a truthy value. Defaults\nto `application/x-www-form-urlencoded`.\n\n##### verify\n\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\nencoding of the request. The parsing can be aborted by throwing an error.\n\n## Errors\n\nThe middlewares provided by this module create errors using the\n[`http-errors` module](https://www.npmjs.com/package/http-errors). The errors\nwill typically have a `status`/`statusCode` property that contains the suggested\nHTTP response code, an `expose` property to determine if the `message` property\nshould be displayed to the client, a `type` property to determine the type of\nerror without matching against the `message`, and a `body` property containing\nthe read body, if available.\n\nThe following are the common errors created, though any error can come through\nfor various reasons.\n\n### content encoding unsupported\n\nThis error will occur when the request had a `Content-Encoding` header that\ncontained an encoding but the \"inflation\" option was set to `false`. The\n`status` property is set to `415`, the `type` property is set to\n`'encoding.unsupported'`, and the `charset` property will be set to the\nencoding that is unsupported.\n\n### entity parse failed\n\nThis error will occur when the request contained an entity that could not be\nparsed by the middleware. The `status` property is set to `400`, the `type`\nproperty is set to `'entity.parse.failed'`, and the `body` property is set to\nthe entity value that failed parsing.\n\n### entity verify failed\n\nThis error will occur when the request contained an entity that could not be\nfailed verification by the defined `verify` option. The `status` property is\nset to `403`, the `type` property is set to `'entity.verify.failed'`, and the\n`body` property is set to the entity value that failed verification.\n\n### request aborted\n\nThis error will occur when the request is aborted by the client before reading\nthe body has finished. The `received` property will be set to the number of\nbytes received before the request was aborted and the `expected` property is\nset to the number of expected bytes. The `status` property is set to `400`\nand `type` property is set to `'request.aborted'`.\n\n### request entity too large\n\nThis error will occur when the request body's size is larger than the \"limit\"\noption. The `limit` property will be set to the byte limit and the `length`\nproperty will be set to the request body's length. The `status` property is\nset to `413` and the `type` property is set to `'entity.too.large'`.\n\n### request size did not match content length\n\nThis error will occur when the request's length did not match the length from\nthe `Content-Length` header. This typically occurs when the request is malformed,\ntypically when the `Content-Length` header was calculated based on characters\ninstead of bytes. The `status` property is set to `400` and the `type` property\nis set to `'request.size.invalid'`.\n\n### stream encoding should not be set\n\nThis error will occur when something called the `req.setEncoding` method prior\nto this middleware. This module operates directly on bytes only and you cannot\ncall `req.setEncoding` when using this module. The `status` property is set to\n`500` and the `type` property is set to `'stream.encoding.set'`.\n\n### too many parameters\n\nThis error will occur when the content of the request exceeds the configured\n`parameterLimit` for the `urlencoded` parser. The `status` property is set to\n`413` and the `type` property is set to `'parameters.too.many'`.\n\n### unsupported charset \"BOGUS\"\n\nThis error will occur when the request had a charset parameter in the\n`Content-Type` header, but the `iconv-lite` module does not support it OR the\nparser does not support it. The charset is contained in the message as well\nas in the `charset` property. The `status` property is set to `415`, the\n`type` property is set to `'charset.unsupported'`, and the `charset` property\nis set to the charset that is unsupported.\n\n### unsupported content encoding \"bogus\"\n\nThis error will occur when the request had a `Content-Encoding` header that\ncontained an unsupported encoding. The encoding is contained in the message\nas well as in the `encoding` property. The `status` property is set to `415`,\nthe `type` property is set to `'encoding.unsupported'`, and the `encoding`\nproperty is set to the encoding that is unsupported.\n\n## Examples\n\n### Express/Connect top-level generic\n\nThis example demonstrates adding a generic JSON and URL-encoded parser as a\ntop-level middleware, which will parse the bodies of all incoming requests.\nThis is the simplest setup.\n\n```js\nvar express = require('express')\nvar bodyParser = require('body-parser')\n\nvar app = express()\n\n// parse application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded())\n\n// parse application/json\napp.use(bodyParser.json())\n\napp.use(function (req, res) {\n  res.setHeader('Content-Type', 'text/plain')\n  res.write('you posted:\\n')\n  res.end(String(JSON.stringify(req.body, null, 2)))\n})\n```\n\n### Express route-specific\n\nThis example demonstrates adding body parsers specifically to the routes that\nneed them. In general, this is the most recommended way to use body-parser with\nExpress.\n\n```js\nvar express = require('express')\nvar bodyParser = require('body-parser')\n\nvar app = express()\n\n// create application/json parser\nvar jsonParser = bodyParser.json()\n\n// create application/x-www-form-urlencoded parser\nvar urlencodedParser = bodyParser.urlencoded()\n\n// POST /login gets urlencoded bodies\napp.post('/login', urlencodedParser, function (req, res) {\n  if (!req.body || !req.body.username) res.sendStatus(400)\n  res.send('welcome, ' + req.body.username)\n})\n\n// POST /api/users gets JSON bodies\napp.post('/api/users', jsonParser, function (req, res) {\n  if (!req.body) res.sendStatus(400)\n  // create user in req.body\n})\n```\n\n### Change accepted type for parsers\n\nAll the parsers accept a `type` option which allows you to change the\n`Content-Type` that the middleware will parse.\n\n```js\nvar express = require('express')\nvar bodyParser = require('body-parser')\n\nvar app = express()\n\n// parse various different custom JSON types as JSON\napp.use(bodyParser.json({ type: 'application/*+json' }))\n\n// parse some custom thing into a Buffer\napp.use(bodyParser.raw({ type: 'application/vnd.custom-type' }))\n\n// parse an HTML body into a string\napp.use(bodyParser.text({ type: 'text/html' }))\n```\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/body-parser.svg\n[npm-url]: https://npmjs.org/package/body-parser\n[coveralls-image]: https://img.shields.io/coveralls/expressjs/body-parser/master.svg\n[coveralls-url]: https://coveralls.io/r/expressjs/body-parser?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/body-parser.svg\n[downloads-url]: https://npmjs.org/package/body-parser\n[github-actions-ci-image]: https://img.shields.io/github/workflow/status/expressjs/body-parser/ci/master?label=ci\n[github-actions-ci-url]: https://github.com/expressjs/body-parser?query=workflow%3Aci\n","readmeFilename":"README.md","gitHead":"fbd9664f3d6f41f02a05177215b1b2263ffd94d2","_nodeVersion":"16.7.0","_npmVersion":"7.20.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"dougwilson","email":"doug@somethingdoug.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/body-parser_2.0.0-beta.1_1639799534299_0.9288060234967992"},"_hasShrinkwrap":false},"2.0.0-beta.2":{"_id":"body-parser@2.0.0-beta.2","name":"body-parser","description":"Node.js body parsing middleware","version":"2.0.0-beta.2","homepage":"https://github.com/expressjs/body-parser#readme","contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"repository":{"type":"git","url":"git+https://github.com/expressjs/body-parser.git"},"bugs":{"url":"https://github.com/expressjs/body-parser/issues"},"license":"MIT","scripts":{"lint":"eslint .","test":"mocha --require test/support/env --reporter spec --check-leaks --bail test/","test-ci":"nyc --reporter=lcov --reporter=text npm test","test-cov":"nyc --reporter=html --reporter=text npm test"},"directories":{},"devDependencies":{"eslint":"8.34.0","eslint-config-standard":"14.1.1","eslint-plugin-import":"2.27.5","eslint-plugin-markdown":"3.0.0","eslint-plugin-node":"11.1.0","eslint-plugin-promise":"6.1.1","eslint-plugin-standard":"4.1.0","methods":"1.1.2","mocha":"10.2.0","nyc":"15.1.0","safe-buffer":"5.2.1","supertest":"6.3.3"},"dependencies":{"bytes":"3.1.2","content-type":"~1.0.5","debug":"3.1.0","destroy":"1.2.0","http-errors":"2.0.0","iconv-lite":"0.5.2","on-finished":"2.4.1","qs":"6.11.0","raw-body":"3.0.0-beta.1","type-is":"~1.6.18","unpipe":"1.0.0"},"engines":{"node":">= 0.10"},"dist":{"shasum":"46081eb83ab83e436c2bce8fa71464b2385d61fb","tarball":"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public-npm/npm/registry/body-parser/-/body-parser-2.0.0-beta.2.tgz"},"readme":"# body-parser\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Build Status][ci-image]][ci-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nNode.js body parsing middleware.\n\nParse incoming request bodies in a middleware before your handlers, available\nunder the `req.body` property.\n\n**Note** As `req.body`'s shape is based on user-controlled input, all\nproperties and values in this object are untrusted and should be validated\nbefore trusting. For example, `req.body.foo.toString()` may fail in multiple\nways, for example the `foo` property may not be there or may not be a string,\nand `toString` may not be a function and instead a string or other user input.\n\n[Learn about the anatomy of an HTTP transaction in Node.js](https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/).\n\n_This does not handle multipart bodies_, due to their complex and typically\nlarge nature. For multipart bodies, you may be interested in the following\nmodules:\n\n  * [busboy](https://www.npmjs.org/package/busboy#readme) and\n    [connect-busboy](https://www.npmjs.org/package/connect-busboy#readme)\n  * [multiparty](https://www.npmjs.org/package/multiparty#readme) and\n    [connect-multiparty](https://www.npmjs.org/package/connect-multiparty#readme)\n  * [formidable](https://www.npmjs.org/package/formidable#readme)\n  * [multer](https://www.npmjs.org/package/multer#readme)\n\nThis module provides the following parsers:\n\n  * [JSON body parser](#bodyparserjsonoptions)\n  * [Raw body parser](#bodyparserrawoptions)\n  * [Text body parser](#bodyparsertextoptions)\n  * [URL-encoded form body parser](#bodyparserurlencodedoptions)\n\nOther body parsers you might be interested in:\n\n- [body](https://www.npmjs.org/package/body#readme)\n- [co-body](https://www.npmjs.org/package/co-body#readme)\n\n## Installation\n\n```sh\n$ npm install body-parser\n```\n\n## API\n\n```js\nvar bodyParser = require('body-parser')\n```\n\nThe `bodyParser` object exposes various factories to create middlewares. All\nmiddlewares will populate the `req.body` property with the parsed body when\nthe `Content-Type` request header matches the `type` option.\n\nThe various errors returned by this module are described in the\n[errors section](#errors).\n\n### bodyParser.json([options])\n\nReturns middleware that only parses `json` and only looks at requests where\nthe `Content-Type` header matches the `type` option. This parser accepts any\nUnicode encoding of the body and supports automatic inflation of `gzip` and\n`deflate` encodings.\n\nA new `body` object containing the parsed data is populated on the `request`\nobject after the middleware (i.e. `req.body`).\n\n#### Options\n\nThe `json` function takes an optional `options` object that may contain any of\nthe following keys:\n\n##### inflate\n\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\n`false`, deflated bodies are rejected. Defaults to `true`.\n\n##### limit\n\nControls the maximum request body size. If this is a number, then the value\nspecifies the number of bytes; if it is a string, the value is passed to the\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\nto `'100kb'`.\n\n##### reviver\n\nThe `reviver` option is passed directly to `JSON.parse` as the second\nargument. You can find more information on this argument\n[in the MDN documentation about JSON.parse](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Example.3A_Using_the_reviver_parameter).\n\n##### strict\n\nWhen set to `true`, will only accept arrays and objects; when `false` will\naccept anything `JSON.parse` accepts. Defaults to `true`.\n\n##### type\n\nThe `type` option is used to determine what media type the middleware will\nparse. This option can be a string, array of strings, or a function. If not a\nfunction, `type` option is passed directly to the\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\nbe an extension name (like `json`), a mime type (like `application/json`), or\na mime type with a wildcard (like `*/*` or `*/json`). If a function, the `type`\noption is called as `fn(req)` and the request is parsed if it returns a truthy\nvalue. Defaults to `application/json`.\n\n##### verify\n\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\nencoding of the request. The parsing can be aborted by throwing an error.\n\n### bodyParser.raw([options])\n\nReturns middleware that parses all bodies as a `Buffer` and only looks at\nrequests where the `Content-Type` header matches the `type` option. This\nparser supports automatic inflation of `gzip` and `deflate` encodings.\n\nA new `body` object containing the parsed data is populated on the `request`\nobject after the middleware (i.e. `req.body`). This will be a `Buffer` object\nof the body.\n\n#### Options\n\nThe `raw` function takes an optional `options` object that may contain any of\nthe following keys:\n\n##### inflate\n\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\n`false`, deflated bodies are rejected. Defaults to `true`.\n\n##### limit\n\nControls the maximum request body size. If this is a number, then the value\nspecifies the number of bytes; if it is a string, the value is passed to the\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\nto `'100kb'`.\n\n##### type\n\nThe `type` option is used to determine what media type the middleware will\nparse. This option can be a string, array of strings, or a function.\nIf not a function, `type` option is passed directly to the\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this\ncan be an extension name (like `bin`), a mime type (like\n`application/octet-stream`), or a mime type with a wildcard (like `*/*` or\n`application/*`). If a function, the `type` option is called as `fn(req)`\nand the request is parsed if it returns a truthy value. Defaults to\n`application/octet-stream`.\n\n##### verify\n\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\nencoding of the request. The parsing can be aborted by throwing an error.\n\n### bodyParser.text([options])\n\nReturns middleware that parses all bodies as a string and only looks at\nrequests where the `Content-Type` header matches the `type` option. This\nparser supports automatic inflation of `gzip` and `deflate` encodings.\n\nA new `body` string containing the parsed data is populated on the `request`\nobject after the middleware (i.e. `req.body`). This will be a string of the\nbody.\n\n#### Options\n\nThe `text` function takes an optional `options` object that may contain any of\nthe following keys:\n\n##### defaultCharset\n\nSpecify the default character set for the text content if the charset is not\nspecified in the `Content-Type` header of the request. Defaults to `utf-8`.\n\n##### inflate\n\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\n`false`, deflated bodies are rejected. Defaults to `true`.\n\n##### limit\n\nControls the maximum request body size. If this is a number, then the value\nspecifies the number of bytes; if it is a string, the value is passed to the\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\nto `'100kb'`.\n\n##### type\n\nThe `type` option is used to determine what media type the middleware will\nparse. This option can be a string, array of strings, or a function. If not\na function, `type` option is passed directly to the\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\nbe an extension name (like `txt`), a mime type (like `text/plain`), or a mime\ntype with a wildcard (like `*/*` or `text/*`). If a function, the `type`\noption is called as `fn(req)` and the request is parsed if it returns a\ntruthy value. Defaults to `text/plain`.\n\n##### verify\n\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\nencoding of the request. The parsing can be aborted by throwing an error.\n\n### bodyParser.urlencoded([options])\n\nReturns middleware that only parses `urlencoded` bodies and only looks at\nrequests where the `Content-Type` header matches the `type` option. This\nparser accepts only UTF-8 encoding of the body and supports automatic\ninflation of `gzip` and `deflate` encodings.\n\nA new `body` object containing the parsed data is populated on the `request`\nobject after the middleware (i.e. `req.body`). This object will contain\nkey-value pairs, where the value can be a string or array (when `extended` is\n`false`), or any type (when `extended` is `true`).\n\n#### Options\n\nThe `urlencoded` function takes an optional `options` object that may contain\nany of the following keys:\n\n##### extended\n\nThe `extended` option allows to choose between parsing the URL-encoded data\nwith the `querystring` library (when `false`) or the `qs` library (when\n`true`). The \"extended\" syntax allows for rich objects and arrays to be\nencoded into the URL-encoded format, allowing for a JSON-like experience\nwith URL-encoded. For more information, please\n[see the qs library](https://www.npmjs.org/package/qs#readme).\n\nDefaults to `false`.\n\n##### inflate\n\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\n`false`, deflated bodies are rejected. Defaults to `true`.\n\n##### limit\n\nControls the maximum request body size. If this is a number, then the value\nspecifies the number of bytes; if it is a string, the value is passed to the\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\nto `'100kb'`.\n\n##### parameterLimit\n\nThe `parameterLimit` option controls the maximum number of parameters that\nare allowed in the URL-encoded data. If a request contains more parameters\nthan this value, a 413 will be returned to the client. Defaults to `1000`.\n\n##### type\n\nThe `type` option is used to determine what media type the middleware will\nparse. This option can be a string, array of strings, or a function. If not\na function, `type` option is passed directly to the\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\nbe an extension name (like `urlencoded`), a mime type (like\n`application/x-www-form-urlencoded`), or a mime type with a wildcard (like\n`*/x-www-form-urlencoded`). If a function, the `type` option is called as\n`fn(req)` and the request is parsed if it returns a truthy value. Defaults\nto `application/x-www-form-urlencoded`.\n\n##### verify\n\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\nencoding of the request. The parsing can be aborted by throwing an error.\n\n## Errors\n\nThe middlewares provided by this module create errors using the\n[`http-errors` module](https://www.npmjs.com/package/http-errors). The errors\nwill typically have a `status`/`statusCode` property that contains the suggested\nHTTP response code, an `expose` property to determine if the `message` property\nshould be displayed to the client, a `type` property to determine the type of\nerror without matching against the `message`, and a `body` property containing\nthe read body, if available.\n\nThe following are the common errors created, though any error can come through\nfor various reasons.\n\n### content encoding unsupported\n\nThis error will occur when the request had a `Content-Encoding` header that\ncontained an encoding but the \"inflation\" option was set to `false`. The\n`status` property is set to `415`, the `type` property is set to\n`'encoding.unsupported'`, and the `charset` property will be set to the\nencoding that is unsupported.\n\n### entity parse failed\n\nThis error will occur when the request contained an entity that could not be\nparsed by the middleware. The `status` property is set to `400`, the `type`\nproperty is set to `'entity.parse.failed'`, and the `body` property is set to\nthe entity value that failed parsing.\n\n### entity verify failed\n\nThis error will occur when the request contained an entity that could not be\nfailed verification by the defined `verify` option. The `status` property is\nset to `403`, the `type` property is set to `'entity.verify.failed'`, and the\n`body` property is set to the entity value that failed verification.\n\n### request aborted\n\nThis error will occur when the request is aborted by the client before reading\nthe body has finished. The `received` property will be set to the number of\nbytes received before the request was aborted and the `expected` property is\nset to the number of expected bytes. The `status` property is set to `400`\nand `type` property is set to `'request.aborted'`.\n\n### request entity too large\n\nThis error will occur when the request body's size is larger than the \"limit\"\noption. The `limit` property will be set to the byte limit and the `length`\nproperty will be set to the request body's length. The `status` property is\nset to `413` and the `type` property is set to `'entity.too.large'`.\n\n### request size did not match content length\n\nThis error will occur when the request's length did not match the length from\nthe `Content-Length` header. This typically occurs when the request is malformed,\ntypically when the `Content-Length` header was calculated based on characters\ninstead of bytes. The `status` property is set to `400` and the `type` property\nis set to `'request.size.invalid'`.\n\n### stream encoding should not be set\n\nThis error will occur when something called the `req.setEncoding` method prior\nto this middleware. This module operates directly on bytes only and you cannot\ncall `req.setEncoding` when using this module. The `status` property is set to\n`500` and the `type` property is set to `'stream.encoding.set'`.\n\n### stream is not readable\n\nThis error will occur when the request is no longer readable when this middleware\nattempts to read it. This typically means something other than a middleware from\nthis module read the request body already and the middleware was also configured to\nread the same request. The `status` property is set to `500` and the `type`\nproperty is set to `'stream.not.readable'`.\n\n### too many parameters\n\nThis error will occur when the content of the request exceeds the configured\n`parameterLimit` for the `urlencoded` parser. The `status` property is set to\n`413` and the `type` property is set to `'parameters.too.many'`.\n\n### unsupported charset \"BOGUS\"\n\nThis error will occur when the request had a charset parameter in the\n`Content-Type` header, but the `iconv-lite` module does not support it OR the\nparser does not support it. The charset is contained in the message as well\nas in the `charset` property. The `status` property is set to `415`, the\n`type` property is set to `'charset.unsupported'`, and the `charset` property\nis set to the charset that is unsupported.\n\n### unsupported content encoding \"bogus\"\n\nThis error will occur when the request had a `Content-Encoding` header that\ncontained an unsupported encoding. The encoding is contained in the message\nas well as in the `encoding` property. The `status` property is set to `415`,\nthe `type` property is set to `'encoding.unsupported'`, and the `encoding`\nproperty is set to the encoding that is unsupported.\n\n## Examples\n\n### Express/Connect top-level generic\n\nThis example demonstrates adding a generic JSON and URL-encoded parser as a\ntop-level middleware, which will parse the bodies of all incoming requests.\nThis is the simplest setup.\n\n```js\nvar express = require('express')\nvar bodyParser = require('body-parser')\n\nvar app = express()\n\n// parse application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded())\n\n// parse application/json\napp.use(bodyParser.json())\n\napp.use(function (req, res) {\n  res.setHeader('Content-Type', 'text/plain')\n  res.write('you posted:\\n')\n  res.end(String(JSON.stringify(req.body, null, 2)))\n})\n```\n\n### Express route-specific\n\nThis example demonstrates adding body parsers specifically to the routes that\nneed them. In general, this is the most recommended way to use body-parser with\nExpress.\n\n```js\nvar express = require('express')\nvar bodyParser = require('body-parser')\n\nvar app = express()\n\n// create application/json parser\nvar jsonParser = bodyParser.json()\n\n// create application/x-www-form-urlencoded parser\nvar urlencodedParser = bodyParser.urlencoded()\n\n// POST /login gets urlencoded bodies\napp.post('/login', urlencodedParser, function (req, res) {\n  if (!req.body || !req.body.username) res.sendStatus(400)\n  res.send('welcome, ' + req.body.username)\n})\n\n// POST /api/users gets JSON bodies\napp.post('/api/users', jsonParser, function (req, res) {\n  if (!req.body) res.sendStatus(400)\n  // create user in req.body\n})\n```\n\n### Change accepted type for parsers\n\nAll the parsers accept a `type` option which allows you to change the\n`Content-Type` that the middleware will parse.\n\n```js\nvar express = require('express')\nvar bodyParser = require('body-parser')\n\nvar app = express()\n\n// parse various different custom JSON types as JSON\napp.use(bodyParser.json({ type: 'application/*+json' }))\n\n// parse some custom thing into a Buffer\napp.use(bodyParser.raw({ type: 'application/vnd.custom-type' }))\n\n// parse an HTML body into a string\napp.use(bodyParser.text({ type: 'text/html' }))\n```\n\n## License\n\n[MIT](LICENSE)\n\n[ci-image]: https://badgen.net/github/checks/expressjs/body-parser/master?label=ci\n[ci-url]: https://github.com/expressjs/body-parser/actions/workflows/ci.yml\n[coveralls-image]: https://badgen.net/coveralls/c/github/expressjs/body-parser/master\n[coveralls-url]: https://coveralls.io/r/expressjs/body-parser?branch=master\n[node-version-image]: https://badgen.net/npm/node/body-parser\n[node-version-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/body-parser\n[npm-url]: https://npmjs.org/package/body-parser\n[npm-version-image]: https://badgen.net/npm/v/body-parser\n","readmeFilename":"README.md","gitHead":"fccaf4879e960d5e8b105759d39d4fc5ecf2f4e4","_nodeVersion":"18.13.0","_npmVersion":"8.19.3","_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"maintainers":[{"name":"dougwilson","email":"doug@somethingdoug.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/body-parser_2.0.0-beta.2_1677189675892_0.06835011315207273"},"_hasShrinkwrap":false}},"time":{"created":"2022-06-15T16:24:29Z","modified":"2023-08-07T20:29:33Z","1.0.0":"2022-06-15T16:24:29Z","1.0.1":"2022-06-15T16:24:29Z","1.0.2":"2022-06-15T16:24:29Z","1.1.0":"2022-06-15T16:24:29Z","1.1.1":"2022-06-15T16:24:29Z","1.1.2":"2022-06-15T16:24:29Z","1.2.0":"2022-06-15T16:24:29Z","1.2.1":"2022-06-15T16:24:29Z","1.2.2":"2022-06-15T16:24:29Z","1.3.0":"2022-06-15T16:24:29Z","1.3.1":"2022-06-15T16:24:29Z","1.4.0":"2022-06-15T16:24:29Z","1.4.1":"2022-06-15T16:24:29Z","1.4.2":"2022-06-15T16:24:29Z","1.4.3":"2022-06-15T16:24:29Z","1.5.0":"2022-06-15T16:24:29Z","1.5.1":"2022-06-15T16:24:29Z","1.5.2":"2022-06-15T16:24:29Z","1.6.0":"2022-06-15T16:24:29Z","1.6.1":"2022-06-15T16:24:29Z","1.6.2":"2022-06-15T16:24:29Z","1.6.3":"2022-06-15T16:24:29Z","1.6.4":"2022-06-15T16:24:29Z","1.6.5":"2022-06-15T16:24:29Z","1.6.6":"2022-06-15T16:24:29Z","1.6.7":"2022-06-15T16:24:29Z","1.7.0":"2022-06-15T16:24:29Z","1.8.0":"2022-06-15T16:24:29Z","1.8.1":"2022-06-15T16:24:29Z","1.8.2":"2022-06-15T16:24:29Z","1.8.3":"2022-06-15T16:24:29Z","1.8.4":"2022-06-15T16:24:29Z","1.9.0":"2022-06-15T16:24:29Z","1.9.1":"2022-06-15T16:24:29Z","1.9.2":"2022-06-15T16:24:29Z","1.9.3":"2022-06-15T16:24:29Z","1.10.0":"2022-06-15T16:24:29Z","1.10.1":"2022-06-15T16:24:29Z","1.10.2":"2022-06-15T16:24:29Z","1.11.0":"2022-06-15T16:24:29Z","1.12.0":"2022-06-15T16:24:29Z","1.12.1":"2022-06-15T16:24:29Z","1.12.2":"2022-06-15T16:24:29Z","1.12.3":"2022-06-15T16:24:29Z","1.12.4":"2022-06-15T16:24:29Z","1.13.0":"2022-06-15T16:24:29Z","1.13.1":"2022-06-15T16:24:29Z","1.13.2":"2022-06-15T16:24:29Z","1.13.3":"2022-06-15T16:24:29Z","1.14.0":"2022-06-15T16:24:29Z","1.14.1":"2022-06-15T16:24:29Z","1.14.2":"2022-06-15T16:24:29Z","1.15.0":"2022-06-15T16:24:29Z","1.15.1":"2022-06-15T16:24:29Z","1.15.2":"2022-06-15T16:24:29Z","1.16.0":"2022-06-15T16:24:29Z","1.16.1":"2022-06-15T16:24:29Z","1.17.0":"2022-06-15T16:24:29Z","1.17.1":"2022-06-15T16:24:29Z","1.17.2":"2022-06-15T16:24:29Z","1.18.0":"2022-06-15T16:24:29Z","1.18.1":"2022-06-15T16:24:29Z","1.18.2":"2022-06-15T16:24:29Z","1.18.3":"2022-06-15T16:24:29Z","1.19.0":"2022-06-15T16:34:27Z","1.19.1":"2022-06-15T16:24:29Z","1.19.2":"2022-06-15T16:24:29Z","1.20.0":"2022-08-22T21:31:09Z","1.20.1":"2022-11-22T19:35:40Z","1.20.2":"2023-08-07T20:29:33Z","2.0.0-beta.1":"2022-06-15T16:24:29Z","2.0.0-beta.2":"2023-02-23T23:54:40Z"}}