#nullable enable
Microsoft.AspNetCore.Identity.Data.ForgotPasswordRequest
Microsoft.AspNetCore.Identity.Data.ForgotPasswordRequest.Email.get -> string!
Microsoft.AspNetCore.Identity.Data.ForgotPasswordRequest.Email.init -> void
Microsoft.AspNetCore.Identity.Data.ForgotPasswordRequest.ForgotPasswordRequest() -> void
Microsoft.AspNetCore.Identity.Data.InfoRequest
Microsoft.AspNetCore.Identity.Data.InfoRequest.InfoRequest() -> void
Microsoft.AspNetCore.Identity.Data.InfoRequest.NewEmail.get -> string?
Microsoft.AspNetCore.Identity.Data.InfoRequest.NewEmail.init -> void
Microsoft.AspNetCore.Identity.Data.InfoRequest.NewPassword.get -> string?
Microsoft.AspNetCore.Identity.Data.InfoRequest.NewPassword.init -> void
Microsoft.AspNetCore.Identity.Data.InfoRequest.OldPassword.get -> string?
Microsoft.AspNetCore.Identity.Data.InfoRequest.OldPassword.init -> void
Microsoft.AspNetCore.Identity.Data.InfoResponse
Microsoft.AspNetCore.Identity.Data.InfoResponse.Email.get -> string!
Microsoft.AspNetCore.Identity.Data.InfoResponse.Email.init -> void
Microsoft.AspNetCore.Identity.Data.InfoResponse.InfoResponse() -> void
Microsoft.AspNetCore.Identity.Data.InfoResponse.IsEmailConfirmed.get -> bool
Microsoft.AspNetCore.Identity.Data.InfoResponse.IsEmailConfirmed.init -> void
Microsoft.AspNetCore.Identity.Data.LoginRequest
Microsoft.AspNetCore.Identity.Data.LoginRequest.Email.get -> string!
Microsoft.AspNetCore.Identity.Data.LoginRequest.Email.init -> void
Microsoft.AspNetCore.Identity.Data.LoginRequest.LoginRequest() -> void
Microsoft.AspNetCore.Identity.Data.LoginRequest.Password.get -> string!
Microsoft.AspNetCore.Identity.Data.LoginRequest.Password.init -> void
Microsoft.AspNetCore.Identity.Data.LoginRequest.TwoFactorCode.get -> string?
Microsoft.AspNetCore.Identity.Data.LoginRequest.TwoFactorCode.init -> void
Microsoft.AspNetCore.Identity.Data.LoginRequest.TwoFactorRecoveryCode.get -> string?
Microsoft.AspNetCore.Identity.Data.LoginRequest.TwoFactorRecoveryCode.init -> void
Microsoft.AspNetCore.Identity.Data.RefreshRequest
Microsoft.AspNetCore.Identity.Data.RefreshRequest.RefreshRequest() -> void
Microsoft.AspNetCore.Identity.Data.RefreshRequest.RefreshToken.get -> string!
Microsoft.AspNetCore.Identity.Data.RefreshRequest.RefreshToken.init -> void
Microsoft.AspNetCore.Identity.Data.RegisterRequest
Microsoft.AspNetCore.Identity.Data.RegisterRequest.Email.get -> string!
Microsoft.AspNetCore.Identity.Data.RegisterRequest.Email.init -> void
Microsoft.AspNetCore.Identity.Data.RegisterRequest.Password.get -> string!
Microsoft.AspNetCore.Identity.Data.RegisterRequest.Password.init -> void
Microsoft.AspNetCore.Identity.Data.RegisterRequest.RegisterRequest() -> void
Microsoft.AspNetCore.Identity.Data.ResendConfirmationEmailRequest
Microsoft.AspNetCore.Identity.Data.ResendConfirmationEmailRequest.Email.get -> string!
Microsoft.AspNetCore.Identity.Data.ResendConfirmationEmailRequest.Email.init -> void
Microsoft.AspNetCore.Identity.Data.ResendConfirmationEmailRequest.ResendConfirmationEmailRequest() -> void
Microsoft.AspNetCore.Identity.Data.ResetPasswordRequest
Microsoft.AspNetCore.Identity.Data.ResetPasswordRequest.Email.get -> string!
Microsoft.AspNetCore.Identity.Data.ResetPasswordRequest.Email.init -> void
Microsoft.AspNetCore.Identity.Data.ResetPasswordRequest.NewPassword.get -> string!
Microsoft.AspNetCore.Identity.Data.ResetPasswordRequest.NewPassword.init -> void
Microsoft.AspNetCore.Identity.Data.ResetPasswordRequest.ResetCode.get -> string!
Microsoft.AspNetCore.Identity.Data.ResetPasswordRequest.ResetCode.init -> void
Microsoft.AspNetCore.Identity.Data.ResetPasswordRequest.ResetPasswordRequest() -> void
Microsoft.AspNetCore.Identity.Data.TwoFactorRequest
Microsoft.AspNetCore.Identity.Data.TwoFactorRequest.Enable.get -> bool?
Microsoft.AspNetCore.Identity.Data.TwoFactorRequest.Enable.init -> void
Microsoft.AspNetCore.Identity.Data.TwoFactorRequest.ForgetMachine.get -> bool
Microsoft.AspNetCore.Identity.Data.TwoFactorRequest.ForgetMachine.init -> void
Microsoft.AspNetCore.Identity.Data.TwoFactorRequest.ResetRecoveryCodes.get -> bool
Microsoft.AspNetCore.Identity.Data.TwoFactorRequest.ResetRecoveryCodes.init -> void
Microsoft.AspNetCore.Identity.Data.TwoFactorRequest.ResetSharedKey.get -> bool
Microsoft.AspNetCore.Identity.Data.TwoFactorRequest.ResetSharedKey.init -> void
Microsoft.AspNetCore.Identity.Data.TwoFactorRequest.TwoFactorCode.get -> string?
Microsoft.AspNetCore.Identity.Data.TwoFactorRequest.TwoFactorCode.init -> void
Microsoft.AspNetCore.Identity.Data.TwoFactorRequest.TwoFactorRequest() -> void
Microsoft.AspNetCore.Identity.Data.TwoFactorResponse
Microsoft.AspNetCore.Identity.Data.TwoFactorResponse.IsMachineRemembered.get -> bool
Microsoft.AspNetCore.Identity.Data.TwoFactorResponse.IsMachineRemembered.init -> void
Microsoft.AspNetCore.Identity.Data.TwoFactorResponse.IsTwoFactorEnabled.get -> bool
Microsoft.AspNetCore.Identity.Data.TwoFactorResponse.IsTwoFactorEnabled.init -> void
Microsoft.AspNetCore.Identity.Data.TwoFactorResponse.RecoveryCodes.get -> string![]?
Microsoft.AspNetCore.Identity.Data.TwoFactorResponse.RecoveryCodes.init -> void
Microsoft.AspNetCore.Identity.Data.TwoFactorResponse.RecoveryCodesLeft.get -> int
Microsoft.AspNetCore.Identity.Data.TwoFactorResponse.RecoveryCodesLeft.init -> void
Microsoft.AspNetCore.Identity.Data.TwoFactorResponse.SharedKey.get -> string!
Microsoft.AspNetCore.Identity.Data.TwoFactorResponse.SharedKey.init -> void
Microsoft.AspNetCore.Identity.Data.TwoFactorResponse.TwoFactorResponse() -> void
Microsoft.AspNetCore.Identity.IEmailSender<TUser>
Microsoft.AspNetCore.Identity.IEmailSender<TUser>.SendConfirmationLinkAsync(TUser! user, string! email, string! confirmationLink) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Identity.IEmailSender<TUser>.SendPasswordResetCodeAsync(TUser! user, string! email, string! resetCode) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Identity.IEmailSender<TUser>.SendPasswordResetLinkAsync(TUser! user, string! email, string! resetLink) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Identity.SecurityStampValidator<TUser>.SecurityStampValidator(Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Identity.SecurityStampValidatorOptions!>! options, Microsoft.AspNetCore.Identity.SignInManager<TUser!>! signInManager, Microsoft.Extensions.Logging.ILoggerFactory! logger) -> void
Microsoft.AspNetCore.Identity.SecurityStampValidator<TUser>.TimeProvider.get -> System.TimeProvider!
Microsoft.AspNetCore.Identity.SecurityStampValidatorOptions.TimeProvider.get -> System.TimeProvider?
Microsoft.AspNetCore.Identity.SecurityStampValidatorOptions.TimeProvider.set -> void
Microsoft.AspNetCore.Identity.SignInManager<TUser>.AuthenticationScheme.get -> string!
Microsoft.AspNetCore.Identity.SignInManager<TUser>.AuthenticationScheme.set -> void
Microsoft.AspNetCore.Identity.TwoFactorSecurityStampValidator<TUser>.TwoFactorSecurityStampValidator(Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Identity.SecurityStampValidatorOptions!>! options, Microsoft.AspNetCore.Identity.SignInManager<TUser!>! signInManager, Microsoft.Extensions.Logging.ILoggerFactory! logger) -> void
Microsoft.AspNetCore.Identity.UI.Services.IEmailSender
Microsoft.AspNetCore.Identity.UI.Services.IEmailSender.SendEmailAsync(string! email, string! subject, string! htmlMessage) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Identity.UI.Services.NoOpEmailSender
Microsoft.AspNetCore.Identity.UI.Services.NoOpEmailSender.NoOpEmailSender() -> void
Microsoft.AspNetCore.Identity.UI.Services.NoOpEmailSender.SendEmailAsync(string! email, string! subject, string! htmlMessage) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions
static Microsoft.AspNetCore.Identity.IdentityBuilderExtensions.AddApiEndpoints(this Microsoft.AspNetCore.Identity.IdentityBuilder! builder) -> Microsoft.AspNetCore.Identity.IdentityBuilder!
static Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions.MapIdentityApi<TUser>(this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder! endpoints) -> Microsoft.AspNetCore.Builder.IEndpointConventionBuilder!
static Microsoft.Extensions.DependencyInjection.IdentityServiceCollectionExtensions.AddIdentityApiEndpoints<TUser>(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services) -> Microsoft.AspNetCore.Identity.IdentityBuilder!
static Microsoft.Extensions.DependencyInjection.IdentityServiceCollectionExtensions.AddIdentityApiEndpoints<TUser>(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, System.Action<Microsoft.AspNetCore.Identity.IdentityOptions!>! configure) -> Microsoft.AspNetCore.Identity.IdentityBuilder!
static readonly Microsoft.AspNetCore.Identity.IdentityConstants.BearerScheme -> string!
virtual Microsoft.AspNetCore.Identity.SignInManager<TUser>.IsTwoFactorEnabledAsync(TUser! user) -> System.Threading.Tasks.Task<bool>!
