@page "/forms/default-form-bound-complextype-parameter"
@using Microsoft.AspNetCore.Components.Forms

<h2>Default form with bound complex type parameter</h2>

<EditForm Model="Model" method="POST" OnValidSubmit="DisplayCustomer" FormName="someform">
    <ValidationSummary />
    <div>
        <label for="Model.Name">
            Name:
            <InputText @bind-Value="Model.Name" />
        </label>
        <ValidationMessage For="() => Model.Name" />
    </div>
    <div>
        <label for="Model.Email">
            Email:
            <InputText @bind-Value="Model.Email" />
        </label>
        <ValidationMessage For="() => Model.Email" />
    </div>
    <div>
        <label for="Model.IsPreferred">
            Preferred:
            <InputCheckbox @bind-Value="Model.IsPreferred" />
        </label>
        <ValidationMessage For="() => Model.IsPreferred" />
    </div>
    <input id="send" type="submit" value="Send" />
</EditForm>

@if (_shouldDisplayCustomer)
{
    <p id="name">Customer: @Model.Name</p>
    <p id="email">Email: @Model.Email</p>
    <p id="preferred">Preferred: @Model.IsPreferred</p>
}

@code {

    bool _shouldDisplayCustomer = false;

    public void DisplayCustomer() => _shouldDisplayCustomer = true;

    [SupplyParameterFromForm] public Customer Model { get; set; }

    [CascadingParameter] public FormMappingContext Context { get; set; }

    protected override void OnInitialized() => Model ??= new Customer();

    public class Customer
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Email { get; set; }
        public bool IsPreferred { get; set; }
    }
}
