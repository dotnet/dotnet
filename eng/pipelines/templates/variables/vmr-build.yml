parameters:
- name: buildSourceOnly
  type: boolean
  default: false

- name: desiredSigning
  displayName: Signed/unsigned/default signing parameters
  type: string
  default: ''

- name: desiredIBC
  displayName: IBC on/IBC off/default IBC parameters
  type: string
  default: ''

- name: desiredFinalVersionKind
  displayName: Final version kind
  type: string
  default: ''

- name: isScoutingJob
  type: boolean
  default: false

# This is the official production build
- name: isOfficialBuild
  type: boolean
  default: false

variables:
- name: _TeamName
  value: DotNetCore

- name: defaultContainerOptions
  value: --privileged

- ${{ if eq(parameters.desiredIBC, 'Enabled') }}:
  - name: ibcEnabled
    value: true
- ${{ elseif eq(parameters.desiredIBC, 'Disabled') }}:
  - name: ibcEnabled
    value: false
- ${{ elseif or(startsWith(parameters.desiredIBC, 'Default'), eq(parameters.desiredIBC, '')) }}:
  # Enable IBC on the internal project if the, branch is a release branch
  - ${{ if and(eq(parameters.isOfficialBuild, true), or(startsWith(variables['Build.SourceBranch'], 'refs/heads/internal/release/'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))) }}:
    - name: ibcEnabled
      value: true
  # No IBC otherwise.
  - ${{ else }}:
    - name: ibcEnabled
      value: false
- ${{ else }}:
  - name: ibcEnabled
    value: false

- ${{ if eq(parameters.desiredFinalVersionKind, 'Default (repo specifies)') }}:
  - name: brandingType
    value: 'default'
- ${{ elseif eq(parameters.desiredFinalVersionKind, 'Stable Preview') }}:
  - name: brandingType
    value: 'preview'
- ${{ elseif eq(parameters.desiredFinalVersionKind, 'Stable Final') }}:
  - name: brandingType
    value: 'rtm'
- ${{ else }}:
  - name: brandingType
    value: 'default'

## Do not set this when building source only to avoid including telemetry in the bootstrap artifacts
## handed off to distro partners.
- ${{ if and(ne(parameters.buildSourceOnly, true), eq(parameters.isOfficialBuild, true)) }}:
  - name: officialBuildProperties
    value: '/p:OfficialBuilder=Microsoft'
- ${{ else }}:
  - name: officialBuildProperties
    value: ''

- ${{ if eq(parameters.buildSourceOnly, true) }}:
  - name: signEnabled
    value: false
- ${{ elseif eq(parameters.desiredSigning, 'Signed (Real)') }}:
  - name: signEnabled
    value: true
  - name: signType
    value: Real
  - ${{ if and(eq(parameters.isOfficialBuild, true), or(startsWith(variables['Build.SourceBranch'], 'refs/heads/internal/release/'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))) }}:
    - name: signDacEnabled
      value: true
- ${{ elseif eq(parameters.desiredSigning, 'Signed (Test)') }}:
  - name: signEnabled
    value: true
  - name: signType
    value: Test
  - name: signDacEnabled
    value: false
- ${{ elseif eq(parameters.desiredSigning, 'Signed (Dry Run)') }}:
  - name: signEnabled
    value: true
  - name: signType
    value: DryRun
  - name: signDacEnabled
    value: false
- ${{ elseif eq(parameters.desiredSigning, 'Unsigned') }}:
  - name: signEnabled
    value: false
  - name: signDacEnabled
    value: false
- ${{ elseif or(startsWith(parameters.desiredSigning, 'Default'), eq(parameters.desiredSigning, '')) }}:
  # Always dry-run sign on the public project or pull requests (will be dry-run signing).
  - ${{ if or(eq(variables['System.TeamProject'], 'public'), eq(variables['Build.Reason'], 'PullRequest')) }}:
    - name: signEnabled
      value: true
    - name: signType
      value: DryRun
    - name: signDacEnabled
      value: false
  # Sign on official builds of release branches.
  - ${{ elseif and(eq(parameters.isOfficialBuild, true), or(startsWith(variables['Build.SourceBranch'], 'refs/heads/internal/release/'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))) }}:
    - name: signEnabled
      value: true
    - name: signType
      value: real
    - name: signDacEnabled
      value: true
  # Do not sign otherwise.
  - ${{ else }}:
    - name: signEnabled
      value: false
    - name: signDacEnabled
      value: false
- ${{ else }}:
  - name: signEnabled
    value: false
  - name: signDacEnabled
    value: false

- name: almaLinuxContainerName
  value: almaLinuxContainer
- name: almaLinuxContainerImage
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:almalinux-8-source-build

- name: alpineContainerName
  value: alpineContainer
- name: alpineContainerImage
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:alpine-3.21-amd64

- name: centOSStreamContainerName
  value: centOSStreamContainer
- name: centOSStreamContainerImage
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-stream-10-amd64

- name: fedoraContainerName
  value: fedoraContainer
- name: fedoraContainerImage
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-41

- name: ubuntuContainerName
  value: ubuntuContainer
- name: ubuntuContainerImage
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-24.04

- name: ubuntuArmContainerName
  value: ubuntuArmContainer
- name: ubuntuArmContainerImage
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-24.04-arm64

- name: azurelinuxX64CrossContainerName
  value: azurelinuxX64CrossContainer
- name: azurelinuxX64CrossContainerImage
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:azurelinux-3.0-net10.0-cross-amd64

- name: azurelinuxArmCrossContainerName
  value: azurelinuxArmCrossContainer
- name: azurelinuxArmCrossContainerImage
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:azurelinux-3.0-net10.0-cross-arm

- name: azurelinuxArm64CrossContainerName
  value: azurelinuxArm64CrossContainer
- name: azurelinuxArm64CrossContainerImage
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:azurelinux-3.0-net10.0-cross-arm64

- name: azurelinuxX64MuslCrossContainerName
  value: azurelinuxX64MuslCrossContainer
- name: azurelinuxX64MuslCrossContainerImage
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:azurelinux-3.0-net10.0-cross-amd64-musl

- name: azurelinuxArmMuslCrossContainerName
  value: azurelinuxArmMuslCrossContainer
- name: azurelinuxArmMuslCrossContainerImage
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:azurelinux-3.0-net10.0-cross-arm-musl

- name: azurelinuxArm64MuslCrossContainerName
  value: azurelinuxArm64MuslCrossContainer
- name: azurelinuxArm64MuslCrossContainerImage
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:azurelinux-3.0-net10.0-cross-arm64-musl

- name: androidCrossContainerName
  value: androidCrossContainer
- name: androidCrossContainerImage
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:azurelinux-3.0-net10.0-cross-android-amd64

- name: linuxBionicCrossContainerName
  value: linuxBionicCrossContainer
- name: linuxBionicCrossContainerImage
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:azurelinux-3.0-net10.0-cross-android-openssl-amd64

- name: browserCrossContainerName
  value: browserCrossContainer
- name: browserCrossContainerImage
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:azurelinux-3.0-net10.0-webassembly-amd64

- name: wasiCrossContainerName
  value: wasiCrossContainer
- name: wasiCrossContainerImage
  value: mcr.microsoft.com/dotnet-buildtools/prereqs:azurelinux-3.0-net10.0-webassembly-amd64

- name: almaLinuxName
  value: AlmaLinux8
- name: alpineName
  value: Alpine321
- name: centOSStreamName
  value: CentOSStream10
- name: fedoraName
  value: Fedora41
- name: ubuntuName
  value: Ubuntu2404

- name: almaLinuxX64Rid
  value: almalinux.8-x64
- name: linuxX64Rid
  value: linux-x64
- name: linuxArm64Rid
  value: linux-arm64
- name: linuxMuslX64Rid
  value: linux-musl-x64
- name: linuxMuslArmRid
  value: linux-musl-arm
- name: linuxMuslArm64Rid
  value: linux-musl-arm64
- name: alpineX64Rid
  value: alpine.3.21-x64
- name: centOSStreamX64Rid
  value: centos.10-x64
- name: fedoraX64Rid
  value: fedora.41-x64
- name: ubuntux64Rid
  value: ubuntu.24.04-x64
- name: ubuntuArm64Rid
  value: ubuntu.24.04-arm64

- ${{ if eq(variables['System.TeamProject'], 'public') }}:
  - name: defaultPoolName
    value: NetCore-Public-XL
  - name: shortStackPoolName
    value: NetCore-Public
  - name: poolImage_Linux
    value: build.ubuntu.2204.amd64.open
  - name: poolImage_LinuxArm64
    value: Mariner-2-Docker-ARM64
  - name: poolName_LinuxArm64
    value: Docker-Linux-Arm-Public
  - name: poolImage_Mac
    value: macos-13
  - ${{ if eq(parameters.isScoutingJob, true) }}:
    - name: poolImage_Windows
      value: windows.vs2022preview.scout.amd64.open
  - ${{ else }}:
    - name: poolImage_Windows
      value: windows.vs2022preview.amd64.open
- ${{ else }}:
  - name: defaultPoolName
    value: NetCore1ESPool-Internal
  - name: shortStackPoolName
    value: NetCore1ESPool-Internal
  - name: poolImage_Linux
    value: build.ubuntu.2204.amd64
  - name: poolImage_LinuxArm64
    value: Mariner-2-Docker-ARM64
  - name: poolName_LinuxArm64
    value: Docker-Linux-Arm-Internal
  - name: poolImage_Mac
    value: macos-latest-internal
  - name: poolImage_Windows
    value: windows.vs2022preview.amd64
